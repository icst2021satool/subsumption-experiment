{
"Class" : "com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser", 
"Methods" : [{ "Name" : "deserialize" ,
"Duas" : 37,
"0" :  "(335,344, this)",
"1" :  "(335,336, this)",
"2" :  "(335,(335,336), jp)",
"3" :  "(335,(335,338), jp)",
"4" :  "(335,(342,344), jp)",
"5" :  "(335,(342,351), jp)",
"6" :  "(335,344, jp)",
"7" :  "(335,336, jp)",
"8" :  "(335,338, ctxt)",
"9" :  "(335,344, ctxt)",
"10" :  "(335,336, ctxt)",
"11" :  "(335,(342,344), END_ARRAY)",
"12" :  "(335,(342,351), END_ARRAY)",
"13" :  "(338,351, builder)",
"14" :  "(338,346, builder)",
"15" :  "(339,351, chunk)",
"16" :  "(339,(345,346), chunk)",
"17" :  "(339,(345,349), chunk)",
"18" :  "(339,349, chunk)",
"19" :  "(339,346, chunk)",
"20" :  "(340,351, ix)",
"21" :  "(340,(345,346), ix)",
"22" :  "(340,(345,349), ix)",
"23" :  "(340,349, ix)",
"24" :  "(340,346, ix)",
"25" :  "(344,349, value)",
"26" :  "(346,349, chunk)",
"27" :  "(346,351, chunk)",
"28" :  "(346,(345,346), chunk)",
"29" :  "(346,(345,349), chunk)",
"30" :  "(346,346, chunk)",
"31" :  "(347,349, ix)",
"32" :  "(349,351, ix)",
"33" :  "(349,(345,346), ix)",
"34" :  "(349,(345,349), ix)",
"35" :  "(349,349, ix)",
"36" :  "(349,346, ix)"},{ "Name" : "handleNonArray" ,
"Duas" : 20,
"0" :  "(358,367, this)",
"1" :  "(358,365, this)",
"2" :  "(358,(358,358), jp)",
"3" :  "(358,(358,364), jp)",
"4" :  "(358,367, jp)",
"5" :  "(358,(360,361), jp)",
"6" :  "(358,(360,364), jp)",
"7" :  "(358,(364,365), ctxt)",
"8" :  "(358,(364,367), ctxt)",
"9" :  "(358,367, ctxt)",
"10" :  "(358,365, ctxt)",
"11" :  "(358,(358,360), ctxt)",
"12" :  "(358,(358,364), ctxt)",
"13" :  "(358,(358,358), VALUE_STRING)",
"14" :  "(358,(358,364), VALUE_STRING)",
"15" :  "(358,(358,360), ACCEPT_EMPTY_STRING_AS_NULL_OBJECT)",
"16" :  "(358,(358,364), ACCEPT_EMPTY_STRING_AS_NULL_OBJECT)",
"17" :  "(358,(364,365), ACCEPT_SINGLE_VALUE_AS_ARRAY)",
"18" :  "(358,(364,367), ACCEPT_SINGLE_VALUE_AS_ARRAY)",
"19" :  "(358,365, this._valueClass)"}]
}