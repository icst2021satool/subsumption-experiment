{
"Class" : "com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer", 
"Methods" : [{ "Name" : "deserialize" ,
"Duas" : 48,
"0" :  "(49,55, this)",
"1" :  "(49,53, this)",
"2" :  "(49,51, this)",
"3" :  "(49,(49,90), jp)",
"4" :  "(49,(49,51), jp)",
"5" :  "(49,(49,53), jp)",
"6" :  "(49,(49,55), jp)",
"7" :  "(49,(49,57), jp)",
"8" :  "(49,(49,59), jp)",
"9" :  "(49,(49,65), jp)",
"10" :  "(49,(49,74), jp)",
"11" :  "(49,(49,80), jp)",
"12" :  "(49,(49,82), jp)",
"13" :  "(49,(49,85), jp)",
"14" :  "(49,77, jp)",
"15" :  "(49,75, jp)",
"16" :  "(49,68, jp)",
"17" :  "(49,66, jp)",
"18" :  "(49,59, jp)",
"19" :  "(49,57, jp)",
"20" :  "(49,55, jp)",
"21" :  "(49,53, jp)",
"22" :  "(49,51, jp)",
"23" :  "(49,(74,75), ctxt)",
"24" :  "(49,(74,77), ctxt)",
"25" :  "(49,(65,66), ctxt)",
"26" :  "(49,(65,68), ctxt)",
"27" :  "(49,55, ctxt)",
"28" :  "(49,53, ctxt)",
"29" :  "(49,51, ctxt)",
"30" :  "(49,90, ctxt)",
"31" :  "(49,(49,90), $SwitchMap$com$fasterxml$jackson$core$JsonToken)",
"32" :  "(49,(49,51), $SwitchMap$com$fasterxml$jackson$core$JsonToken)",
"33" :  "(49,(49,53), $SwitchMap$com$fasterxml$jackson$core$JsonToken)",
"34" :  "(49,(49,55), $SwitchMap$com$fasterxml$jackson$core$JsonToken)",
"35" :  "(49,(49,57), $SwitchMap$com$fasterxml$jackson$core$JsonToken)",
"36" :  "(49,(49,59), $SwitchMap$com$fasterxml$jackson$core$JsonToken)",
"37" :  "(49,(49,65), $SwitchMap$com$fasterxml$jackson$core$JsonToken)",
"38" :  "(49,(49,74), $SwitchMap$com$fasterxml$jackson$core$JsonToken)",
"39" :  "(49,(49,80), $SwitchMap$com$fasterxml$jackson$core$JsonToken)",
"40" :  "(49,(49,82), $SwitchMap$com$fasterxml$jackson$core$JsonToken)",
"41" :  "(49,(49,85), $SwitchMap$com$fasterxml$jackson$core$JsonToken)",
"42" :  "(49,(65,66), USE_BIG_INTEGER_FOR_INTS)",
"43" :  "(49,(65,68), USE_BIG_INTEGER_FOR_INTS)",
"44" :  "(49,(74,75), USE_BIG_DECIMAL_FOR_FLOATS)",
"45" :  "(49,(74,77), USE_BIG_DECIMAL_FOR_FLOATS)",
"46" :  "(49,80, TRUE)",
"47" :  "(49,82, FALSE)"},{ "Name" : "deserializeWithType" ,
"Duas" : 38,
"0" :  "(99,132, jp)",
"1" :  "(99,130, jp)",
"2" :  "(99,125, jp)",
"3" :  "(99,119, jp)",
"4" :  "(99,114, jp)",
"5" :  "(99,139, jp)",
"6" :  "(99,108, jp)",
"7" :  "(99,(129,130), ctxt)",
"8" :  "(99,(129,132), ctxt)",
"9" :  "(99,(118,119), ctxt)",
"10" :  "(99,(118,125), ctxt)",
"11" :  "(99,108, ctxt)",
"12" :  "(99,144, ctxt)",
"13" :  "(99,108, typeDeserializer)",
"14" :  "(99,(100,144), $SwitchMap$com$fasterxml$jackson$core$JsonToken)",
"15" :  "(99,(100,108), $SwitchMap$com$fasterxml$jackson$core$JsonToken)",
"16" :  "(99,(100,139), $SwitchMap$com$fasterxml$jackson$core$JsonToken)",
"17" :  "(99,(100,114), $SwitchMap$com$fasterxml$jackson$core$JsonToken)",
"18" :  "(99,(100,118), $SwitchMap$com$fasterxml$jackson$core$JsonToken)",
"19" :  "(99,(100,129), $SwitchMap$com$fasterxml$jackson$core$JsonToken)",
"20" :  "(99,(100,135), $SwitchMap$com$fasterxml$jackson$core$JsonToken)",
"21" :  "(99,(100,137), $SwitchMap$com$fasterxml$jackson$core$JsonToken)",
"22" :  "(99,(100,142), $SwitchMap$com$fasterxml$jackson$core$JsonToken)",
"23" :  "(99,(118,119), USE_BIG_INTEGER_FOR_INTS)",
"24" :  "(99,(118,125), USE_BIG_INTEGER_FOR_INTS)",
"25" :  "(99,(129,130), USE_BIG_DECIMAL_FOR_FLOATS)",
"26" :  "(99,(129,132), USE_BIG_DECIMAL_FOR_FLOATS)",
"27" :  "(99,135, TRUE)",
"28" :  "(99,137, FALSE)",
"29" :  "(99,(100,144), t)",
"30" :  "(99,(100,108), t)",
"31" :  "(99,(100,139), t)",
"32" :  "(99,(100,114), t)",
"33" :  "(99,(100,118), t)",
"34" :  "(99,(100,129), t)",
"35" :  "(99,(100,135), t)",
"36" :  "(99,(100,137), t)",
"37" :  "(99,(100,142), t)"},{ "Name" : "mapArray" ,
"Duas" : 43,
"0" :  "(160,172, this)",
"1" :  "(160,161, this)",
"2" :  "(160,(164,165), jp)",
"3" :  "(160,(164,167), jp)",
"4" :  "(160,172, jp)",
"5" :  "(160,(179,181), jp)",
"6" :  "(160,(179,172), jp)",
"7" :  "(160,161, jp)",
"8" :  "(160,(160,161), ctxt)",
"9" :  "(160,(160,164), ctxt)",
"10" :  "(160,167, ctxt)",
"11" :  "(160,172, ctxt)",
"12" :  "(160,161, ctxt)",
"13" :  "(160,(160,161), USE_JAVA_ARRAY_FOR_JSON_ARRAY)",
"14" :  "(160,(160,164), USE_JAVA_ARRAY_FOR_JSON_ARRAY)",
"15" :  "(160,(164,165), END_ARRAY)",
"16" :  "(160,(164,167), END_ARRAY)",
"17" :  "(160,(179,181), END_ARRAY)",
"18" :  "(160,(179,172), END_ARRAY)",
"19" :  "(167,182, buffer)",
"20" :  "(167,175, buffer)",
"21" :  "(168,(174,175), values)",
"22" :  "(168,(174,178), values)",
"23" :  "(168,178, values)",
"24" :  "(168,182, values)",
"25" :  "(168,175, values)",
"26" :  "(169,(174,175), ptr)",
"27" :  "(169,(174,178), ptr)",
"28" :  "(169,178, ptr)",
"29" :  "(170,173, totalSize)",
"30" :  "(172,178, value)",
"31" :  "(173,173, totalSize)",
"32" :  "(173,181, totalSize)",
"33" :  "(175,178, values)",
"34" :  "(175,(174,175), values)",
"35" :  "(175,(174,178), values)",
"36" :  "(175,175, values)",
"37" :  "(175,182, values)",
"38" :  "(176,178, ptr)",
"39" :  "(178,(174,175), ptr)",
"40" :  "(178,(174,178), ptr)",
"41" :  "(178,178, ptr)",
"42" :  "(178,182, ptr)"},{ "Name" : "mapObject" ,
"Duas" : 50,
"0" :  "(192,203, this)",
"1" :  "(192,211, this)",
"2" :  "(192,225, this)",
"3" :  "(192,201, jp)",
"4" :  "(192,202, jp)",
"5" :  "(192,203, jp)",
"6" :  "(192,(204,205), jp)",
"7" :  "(192,(204,209), jp)",
"8" :  "(192,209, jp)",
"9" :  "(192,210, jp)",
"10" :  "(192,211, jp)",
"11" :  "(192,(212,213), jp)",
"12" :  "(192,(212,219), jp)",
"13" :  "(192,223, jp)",
"14" :  "(192,224, jp)",
"15" :  "(192,225, jp)",
"16" :  "(192,(226,227), jp)",
"17" :  "(192,(226,223), jp)",
"18" :  "(192,194, jp)",
"19" :  "(192,203, ctxt)",
"20" :  "(192,211, ctxt)",
"21" :  "(192,225, ctxt)",
"22" :  "(192,(193,194), START_OBJECT)",
"23" :  "(192,(193,197), START_OBJECT)",
"24" :  "(192,(197,199), FIELD_NAME)",
"25" :  "(192,(197,201), FIELD_NAME)",
"26" :  "(192,(204,205), FIELD_NAME)",
"27" :  "(192,(204,209), FIELD_NAME)",
"28" :  "(192,(212,213), FIELD_NAME)",
"29" :  "(192,(212,219), FIELD_NAME)",
"30" :  "(192,(226,227), END_OBJECT)",
"31" :  "(192,(226,223), END_OBJECT)",
"32" :  "(192,(193,194), t)",
"33" :  "(192,(193,197), t)",
"34" :  "(192,(197,199), t)",
"35" :  "(192,(197,201), t)",
"36" :  "(194,(197,199), t)",
"37" :  "(194,(197,201), t)",
"38" :  "(201,220, field1)",
"39" :  "(201,214, field1)",
"40" :  "(201,206, field1)",
"41" :  "(203,220, value1)",
"42" :  "(203,214, value1)",
"43" :  "(203,206, value1)",
"44" :  "(209,221, field2)",
"45" :  "(209,215, field2)",
"46" :  "(211,221, value2)",
"47" :  "(211,215, value2)",
"48" :  "(219,225, result)",
"49" :  "(219,227, result)"},{ "Name" : "mapArrayToArray" ,
"Duas" : 34,
"0" :  "(237,244, this)",
"1" :  "(237,(237,238), jp)",
"2" :  "(237,(237,240), jp)",
"3" :  "(237,244, jp)",
"4" :  "(237,(250,251), jp)",
"5" :  "(237,(250,244), jp)",
"6" :  "(237,240, ctxt)",
"7" :  "(237,244, ctxt)",
"8" :  "(237,(237,238), END_ARRAY)",
"9" :  "(237,(237,240), END_ARRAY)",
"10" :  "(237,(250,251), END_ARRAY)",
"11" :  "(237,(250,244), END_ARRAY)",
"12" :  "(237,238, NO_OBJECTS)",
"13" :  "(240,251, buffer)",
"14" :  "(240,246, buffer)",
"15" :  "(241,(245,246), values)",
"16" :  "(241,(245,249), values)",
"17" :  "(241,249, values)",
"18" :  "(241,251, values)",
"19" :  "(241,246, values)",
"20" :  "(242,(245,246), ptr)",
"21" :  "(242,(245,249), ptr)",
"22" :  "(242,249, ptr)",
"23" :  "(244,249, value)",
"24" :  "(246,249, values)",
"25" :  "(246,(245,246), values)",
"26" :  "(246,(245,249), values)",
"27" :  "(246,246, values)",
"28" :  "(246,251, values)",
"29" :  "(247,249, ptr)",
"30" :  "(249,(245,246), ptr)",
"31" :  "(249,(245,249), ptr)",
"32" :  "(249,249, ptr)",
"33" :  "(249,251, ptr)"}]
}