{
"Class" : "com.fasterxml.jackson.databind.JsonNode", 
"Methods" : [{ "Name" : "isValueNode" ,
"Duas" : 4,
"0" :  "(79,(79,83), this)",
"1" :  "(79,(79,81), this)",
"2" :  "(79,(79,83), $SwitchMap$com$fasterxml$jackson$databind$node$JsonNodeType)",
"3" :  "(79,(79,81), $SwitchMap$com$fasterxml$jackson$databind$node$JsonNodeType)"},{ "Name" : "isContainerNode" ,
"Duas" : 8,
"0" :  "(89,(90,90), OBJECT)",
"1" :  "(89,(90,90), OBJECT)",
"2" :  "(89,(90,90), ARRAY)",
"3" :  "(89,(90,90), ARRAY)",
"4" :  "(89,(90,90), type)",
"5" :  "(89,(90,90), type)",
"6" :  "(89,(90,90), type)",
"7" :  "(89,(90,90), type)"},{ "Name" : "isMissingNode" ,
"Duas" : 4,
"0" :  "(95,(95,95), this)",
"1" :  "(95,(95,95), this)",
"2" :  "(95,(95,95), MISSING)",
"3" :  "(95,(95,95), MISSING)"},{ "Name" : "isArray" ,
"Duas" : 4,
"0" :  "(100,(100,100), this)",
"1" :  "(100,(100,100), this)",
"2" :  "(100,(100,100), ARRAY)",
"3" :  "(100,(100,100), ARRAY)"},{ "Name" : "isObject" ,
"Duas" : 4,
"0" :  "(105,(105,105), this)",
"1" :  "(105,(105,105), this)",
"2" :  "(105,(105,105), OBJECT)",
"3" :  "(105,(105,105), OBJECT)"},{ "Name" : "isPojo" ,
"Duas" : 4,
"0" :  "(204,(204,204), this)",
"1" :  "(204,(204,204), this)",
"2" :  "(204,(204,204), POJO)",
"3" :  "(204,(204,204), POJO)"},{ "Name" : "isNumber" ,
"Duas" : 4,
"0" :  "(211,(211,211), this)",
"1" :  "(211,(211,211), this)",
"2" :  "(211,(211,211), NUMBER)",
"3" :  "(211,(211,211), NUMBER)"},{ "Name" : "isTextual" ,
"Duas" : 4,
"0" :  "(277,(277,277), this)",
"1" :  "(277,(277,277), this)",
"2" :  "(277,(277,277), STRING)",
"3" :  "(277,(277,277), STRING)"},{ "Name" : "isBoolean" ,
"Duas" : 4,
"0" :  "(285,(285,285), this)",
"1" :  "(285,(285,285), this)",
"2" :  "(285,(285,285), BOOLEAN)",
"3" :  "(285,(285,285), BOOLEAN)"},{ "Name" : "isNull" ,
"Duas" : 4,
"0" :  "(293,(293,293), this)",
"1" :  "(293,(293,293), this)",
"2" :  "(293,(293,293), NULL)",
"3" :  "(293,(293,293), NULL)"},{ "Name" : "isBinary" ,
"Duas" : 4,
"0" :  "(305,(305,305), this)",
"1" :  "(305,(305,305), this)",
"2" :  "(305,(305,305), BINARY)",
"3" :  "(305,(305,305), BINARY)"},{ "Name" : "has" ,
"Duas" : 4,
"0" :  "(600,(600,600), this)",
"1" :  "(600,(600,600), this)",
"2" :  "(600,(600,600), fieldName)",
"3" :  "(600,(600,600), fieldName)"},{ "Name" : "has" ,
"Duas" : 4,
"0" :  "(626,(626,626), this)",
"1" :  "(626,(626,626), this)",
"2" :  "(626,(626,626), index)",
"3" :  "(626,(626,626), index)"},{ "Name" : "hasNonNull" ,
"Duas" : 4,
"0" :  "(641,(642,642), n)",
"1" :  "(641,(642,642), n)",
"2" :  "(641,(642,642), n)",
"3" :  "(641,(642,642), n)"},{ "Name" : "hasNonNull" ,
"Duas" : 4,
"0" :  "(657,(658,658), n)",
"1" :  "(657,(658,658), n)",
"2" :  "(657,(658,658), n)",
"3" :  "(657,(658,658), n)"},{ "Name" : "findValues" ,
"Duas" : 3,
"0" :  "(721,(722,723), result)",
"1" :  "(721,(722,725), result)",
"2" :  "(721,725, result)"},{ "Name" : "findValuesAsText" ,
"Duas" : 3,
"0" :  "(734,(735,736), result)",
"1" :  "(734,(735,738), result)",
"2" :  "(734,738, result)"},{ "Name" : "findParents" ,
"Duas" : 3,
"0" :  "(777,(778,779), result)",
"1" :  "(777,(778,781), result)",
"2" :  "(777,781, result)"}]
}