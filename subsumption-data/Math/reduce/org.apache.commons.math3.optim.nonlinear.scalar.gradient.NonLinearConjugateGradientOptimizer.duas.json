{
"Class" : "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer", 
"Methods" : [{ "Name" : "doOptimize" ,
"Duas" : 175,
"0" :  "(193,205, this)",
"1" :  "(193,214, this)",
"2" :  "(193,216, this)",
"3" :  "(193,218, this)",
"4" :  "(193,227, this)",
"5" :  "(193,228, this)",
"6" :  "(193,232, this)",
"7" :  "(193,233, this)",
"8" :  "(193,240, this)",
"9" :  "(193,249, this)",
"10" :  "(193,(256,269), this)",
"11" :  "(193,(256,258), this)",
"12" :  "(193,(256,261), this)",
"13" :  "(193,(274,274), this)",
"14" :  "(193,(274,277), this)",
"15" :  "(193,(221,223), this)",
"16" :  "(193,(221,227), this)",
"17" :  "(193,(198,199), MINIMIZE)",
"18" :  "(193,(198,205), MINIMIZE)",
"19" :  "(193,(241,242), MINIMIZE)",
"20" :  "(193,(241,248), MINIMIZE)",
"21" :  "(193,205, this.preconditioner)",
"22" :  "(193,249, this.preconditioner)",
"23" :  "(193,228, this.initialStep)",
"24" :  "(193,232, this.solver)",
"25" :  "(193,233, this.solver)",
"26" :  "(193,(256,269), $SwitchMap$org$apache$commons$math3$optim$nonlinear$scalar$gradient$NonLinearConjugateGradientOptimizer$Formula)",
"27" :  "(193,(256,258), $SwitchMap$org$apache$commons$math3$optim$nonlinear$scalar$gradient$NonLinearConjugateGradientOptimizer$Formula)",
"28" :  "(193,(256,261), $SwitchMap$org$apache$commons$math3$optim$nonlinear$scalar$gradient$NonLinearConjugateGradientOptimizer$Formula)",
"29" :  "(193,(256,269), this.updateFormula)",
"30" :  "(193,(256,258), this.updateFormula)",
"31" :  "(193,(256,261), this.updateFormula)",
"32" :  "(193,(221,223), checker)",
"33" :  "(193,(221,227), checker)",
"34" :  "(194,205, point)",
"35" :  "(194,218, point)",
"36" :  "(194,220, point)",
"37" :  "(194,227, point)",
"38" :  "(194,(236,237), point)",
"39" :  "(194,(236,240), point)",
"40" :  "(194,240, point)",
"41" :  "(194,249, point)",
"42" :  "(194,237, point)",
"43" :  "(195,(198,199), goal)",
"44" :  "(195,(198,205), goal)",
"45" :  "(195,(241,242), goal)",
"46" :  "(195,(241,248), goal)",
"47" :  "(196,(209,210), n)",
"48" :  "(196,(209,213), n)",
"49" :  "(196,(251,252), n)",
"50" :  "(196,(251,256), n)",
"51" :  "(196,(274,274), n)",
"52" :  "(196,(274,277), n)",
"53" :  "(196,(280,281), n)",
"54" :  "(196,(280,284), n)",
"55" :  "(196,(242,243), n)",
"56" :  "(196,(242,248), n)",
"57" :  "(196,(199,200), n)",
"58" :  "(196,(199,205), n)",
"59" :  "(197,205, r)",
"60" :  "(197,210, r)",
"61" :  "(197,200, r)",
"62" :  "(199,(199,200), i)",
"63" :  "(199,(199,205), i)",
"64" :  "(199,200, i)",
"65" :  "(199,199, i)",
"66" :  "(199,(199,200), i)",
"67" :  "(199,(199,205), i)",
"68" :  "(199,200, i)",
"69" :  "(199,199, i)",
"70" :  "(205,263, steepestDescent)",
"71" :  "(206,227, searchDirection)",
"72" :  "(206,281, searchDirection)",
"73" :  "(206,237, searchDirection)",
"74" :  "(206,210, searchDirection)",
"75" :  "(208,248, delta)",
"76" :  "(208,210, delta)",
"77" :  "(209,(209,210), i)",
"78" :  "(209,(209,213), i)",
"79" :  "(209,210, i)",
"80" :  "(209,209, i)",
"81" :  "(210,248, delta)",
"82" :  "(210,210, delta)",
"83" :  "(209,(209,210), i)",
"84" :  "(209,(209,213), i)",
"85" :  "(209,210, i)",
"86" :  "(209,209, i)",
"87" :  "(213,219, current)",
"88" :  "(214,232, maxEval)",
"89" :  "(214,233, maxEval)",
"90" :  "(219,(221,221), previous)",
"91" :  "(219,(221,227), previous)",
"92" :  "(219,(221,223), previous)",
"93" :  "(219,(221,227), previous)",
"94" :  "(220,219, current)",
"95" :  "(220,(221,223), current)",
"96" :  "(220,(221,227), current)",
"97" :  "(220,223, current)",
"98" :  "(232,237, step)",
"99" :  "(233,232, maxEval)",
"100" :  "(233,233, maxEval)",
"101" :  "(236,(236,237), i)",
"102" :  "(236,(236,240), i)",
"103" :  "(236,237, i)",
"104" :  "(236,236, i)",
"105" :  "(236,(236,237), i)",
"106" :  "(236,(236,240), i)",
"107" :  "(236,237, i)",
"108" :  "(236,236, i)",
"109" :  "(240,249, r)",
"110" :  "(240,(262,263), r)",
"111" :  "(240,(262,265), r)",
"112" :  "(240,263, r)",
"113" :  "(240,252, r)",
"114" :  "(240,243, r)",
"115" :  "(242,(242,243), i)",
"116" :  "(242,(242,248), i)",
"117" :  "(242,243, i)",
"118" :  "(242,242, i)",
"119" :  "(242,(242,243), i)",
"120" :  "(242,(242,248), i)",
"121" :  "(242,243, i)",
"122" :  "(242,242, i)",
"123" :  "(248,265, deltaOld)",
"124" :  "(248,258, deltaOld)",
"125" :  "(249,271, newSteepestDescent)",
"126" :  "(249,252, newSteepestDescent)",
"127" :  "(250,265, delta)",
"128" :  "(250,248, delta)",
"129" :  "(250,258, delta)",
"130" :  "(250,252, delta)",
"131" :  "(251,(251,252), i)",
"132" :  "(251,(251,256), i)",
"133" :  "(251,252, i)",
"134" :  "(251,251, i)",
"135" :  "(252,265, delta)",
"136" :  "(252,248, delta)",
"137" :  "(252,258, delta)",
"138" :  "(252,252, delta)",
"139" :  "(251,(251,252), i)",
"140" :  "(251,(251,256), i)",
"141" :  "(251,252, i)",
"142" :  "(251,251, i)",
"143" :  "(258,(274,277), beta)",
"144" :  "(258,(274,280), beta)",
"145" :  "(258,281, beta)",
"146" :  "(261,265, deltaMid)",
"147" :  "(261,263, deltaMid)",
"148" :  "(262,(262,263), i)",
"149" :  "(262,(262,265), i)",
"150" :  "(262,263, i)",
"151" :  "(262,262, i)",
"152" :  "(263,265, deltaMid)",
"153" :  "(263,263, deltaMid)",
"154" :  "(262,(262,263), i)",
"155" :  "(262,(262,265), i)",
"156" :  "(262,263, i)",
"157" :  "(262,262, i)",
"158" :  "(265,(274,277), beta)",
"159" :  "(265,(274,280), beta)",
"160" :  "(265,281, beta)",
"161" :  "(271,277, steepestDescent)",
"162" :  "(271,263, steepestDescent)",
"163" :  "(271,281, steepestDescent)",
"164" :  "(277,227, searchDirection)",
"165" :  "(277,281, searchDirection)",
"166" :  "(277,237, searchDirection)",
"167" :  "(280,(280,281), i)",
"168" :  "(280,(280,284), i)",
"169" :  "(280,281, i)",
"170" :  "(280,280, i)",
"171" :  "(280,(280,281), i)",
"172" :  "(280,(280,284), i)",
"173" :  "(280,281, i)",
"174" :  "(280,280, i)"},{ "Name" : "parseOptimizationData" ,
"Duas" : 16,
"0" :  "(300,313, this)",
"1" :  "(300,306, this)",
"2" :  "(304,304, arr$)",
"3" :  "(304,(304,304), len$)",
"4" :  "(304,(304,313), len$)",
"5" :  "(304,(304,304), i$)",
"6" :  "(304,(304,313), i$)",
"7" :  "(304,304, i$)",
"8" :  "(304,304, i$)",
"9" :  "(304,(305,306), data)",
"10" :  "(304,(305,304), data)",
"11" :  "(304,306, data)",
"12" :  "(304,(304,304), i$)",
"13" :  "(304,(304,313), i$)",
"14" :  "(304,304, i$)",
"15" :  "(304,304, i$)"},{ "Name" : "findUpperBound" ,
"Duas" : 18,
"0" :  "(327,331, f)",
"1" :  "(327,330, a)",
"2" :  "(327,336, UNABLE_TO_BRACKET_OPTIMUM_IN_LINE_SEARCH)",
"3" :  "(327,(332,333), yA)",
"4" :  "(327,(332,329), yA)",
"5" :  "(327,329, yA)",
"6" :  "(329,(329,330), step)",
"7" :  "(329,(329,336), step)",
"8" :  "(329,330, step)",
"9" :  "(329,329, step)",
"10" :  "(330,333, b)",
"11" :  "(331,(332,333), yB)",
"12" :  "(331,(332,329), yB)",
"13" :  "(331,329, yB)",
"14" :  "(329,(329,330), step)",
"15" :  "(329,(329,336), step)",
"16" :  "(329,330, step)",
"17" :  "(329,329, step)"},{ "Name" : "checkParameters" ,
"Duas" : 5,
"0" :  "(399,(399,399), this)",
"1" :  "(399,(399,401), this)",
"2" :  "(399,(399,401), this)",
"3" :  "(399,(399,403), this)",
"4" :  "(399,401, CONSTRAINT)"}]
}