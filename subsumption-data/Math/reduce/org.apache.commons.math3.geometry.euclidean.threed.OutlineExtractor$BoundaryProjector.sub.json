{
"Class" : "org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector", 
"Methods" : [{ "Name" : "visitInternalNode" ,
"Duas" : "8" ,
"Subsumers" : 4,
"0" : [ 6, 4, 0], "S0" : [0, 4, 6 ],
"1" : [ 7, 2, 1], "S1" : [1, 2, 7 ],
"2" : [ 3], "S2" : [3 ],
"3" : [ 5], "S3" : [5 ]
},{ "Name" : "addContribution" ,
"Duas" : "121" ,
"Subsumers" : 31,
"0" : [ 92], "S0" : [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 61, 62, 63, 64, 65, 66, 68, 69, 72, 73, 74, 75, 76, 77, 78, 84, 88, 90, 91, 92, 94, 96, 97, 98, 100, 106, 108, 118 ],
"1" : [ 111], "S1" : [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 61, 62, 63, 64, 65, 66, 68, 69, 72, 73, 74, 75, 76, 77, 78, 84, 88, 90, 91, 94, 96, 97, 98, 100, 106, 107, 108, 109, 110, 111, 115, 118 ],
"2" : [ 93], "S2" : [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 61, 62, 63, 64, 65, 66, 68, 69, 72, 73, 74, 75, 76, 77, 79, 84, 88, 90, 91, 93, 94, 96, 98, 108, 118 ],
"3" : [ 103], "S3" : [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 61, 62, 63, 64, 65, 66, 68, 69, 72, 73, 74, 75, 76, 77, 79, 82, 84, 88, 90, 91, 94, 96, 98, 103, 108, 118 ],
"4" : [ 105], "S4" : [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 61, 62, 63, 64, 65, 66, 68, 69, 72, 73, 74, 75, 76, 77, 79, 84, 88, 90, 91, 94, 96, 98, 99, 101, 105, 108, 118 ],
"5" : [ 112], "S5" : [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 61, 62, 63, 64, 65, 66, 68, 69, 72, 73, 74, 75, 76, 77, 79, 84, 88, 90, 91, 94, 96, 98, 107, 108, 109, 110, 112, 115, 118 ],
"6" : [ 86], "S6" : [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 61, 62, 63, 64, 65, 66, 68, 69, 72, 73, 74, 75, 76, 77, 82, 86, 88, 90, 91, 94, 95, 96, 98, 99, 101, 108, 118 ],
"7" : [ 87], "S7" : [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 61, 62, 63, 64, 65, 66, 68, 69, 72, 73, 74, 75, 76, 77, 82, 87, 88, 90, 91, 94, 96, 98, 108, 118 ],
"8" : [ 102], "S8" : [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 61, 62, 63, 64, 65, 66, 68, 69, 72, 73, 74, 75, 76, 77, 82, 88, 90, 91, 94, 96, 97, 98, 100, 102, 106, 108, 118 ],
"9" : [ 113], "S9" : [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 61, 62, 63, 64, 65, 66, 68, 69, 72, 73, 74, 75, 76, 77, 82, 88, 90, 91, 94, 96, 98, 99, 101, 107, 108, 109, 110, 113, 115, 116, 118 ],
"10" : [ 114], "S10" : [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 61, 62, 63, 64, 65, 66, 68, 69, 72, 73, 74, 75, 76, 77, 82, 88, 90, 91, 94, 96, 98, 107, 108, 109, 110, 114, 115, 118 ],
"11" : [ 83], "S11" : [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 61, 62, 63, 64, 65, 66, 68, 69, 72, 73, 74, 75, 76, 77, 83, 88, 90, 91, 94, 96, 98, 99, 101, 108, 118 ],
"12" : [ 85], "S12" : [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 61, 62, 63, 64, 65, 66, 68, 69, 72, 73, 74, 75, 76, 77, 85, 88, 90, 91, 94, 96, 97, 98, 100, 106, 108, 118 ],
"13" : [ 104], "S13" : [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 61, 62, 63, 64, 65, 66, 68, 69, 72, 73, 74, 75, 76, 77, 88, 90, 91, 94, 96, 97, 98, 99, 100, 101, 104, 106, 108, 118 ],
"14" : [ 70], "S14" : [0, 1, 5, 7, 8, 9, 11, 61, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 76, 118 ],
"15" : [ 71], "S15" : [0, 1, 5, 7, 8, 9, 11, 61, 63, 64, 65, 66, 68, 69, 71, 72, 73, 74, 76, 118 ],
"16" : [ 80], "S16" : [0, 1, 5, 7, 8, 9, 11, 61, 63, 64, 65, 66, 68, 69, 72, 73, 74, 76, 80, 118 ],
"17" : [ 81], "S17" : [0, 1, 5, 7, 8, 9, 11, 61, 63, 64, 65, 66, 68, 69, 72, 73, 74, 76, 81, 118 ],
"18" : [ 89], "S18" : [0, 1, 5, 7, 8, 9, 11, 61, 63, 64, 65, 66, 68, 69, 72, 73, 74, 76, 89, 118 ],
"19" : [ 120, 119, 117], "S19" : [0, 1, 5, 7, 8, 9, 11, 61, 63, 64, 65, 66, 68, 69, 72, 73, 74, 76, 117, 118, 119, 120 ],
"20" : [ 45, 46, 43], "S20" : [0, 3, 7, 8, 11, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 56, 60, 61, 65 ],
"21" : [ 40], "S21" : [0, 3, 7, 8, 11, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 33, 35, 37, 40, 56, 60, 61, 65 ],
"22" : [ 53, 54, 51], "S22" : [0, 3, 7, 8, 11, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 35, 36, 47, 49, 50, 51, 52, 53, 54, 56, 60, 61, 65 ],
"23" : [ 48], "S23" : [0, 3, 7, 8, 11, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 30, 35, 48, 56, 60, 61, 65 ],
"24" : [ 58, 59, 57, 55], "S24" : [0, 3, 7, 8, 11, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 35, 55, 56, 57, 58, 59, 60, 61, 65 ],
"25" : [ 23], "S25" : [0, 3, 7, 8, 11, 16, 18, 20, 23, 60, 61, 65 ],
"26" : [ 15, 4], "S26" : [0, 4, 7, 8, 11, 15, 61, 65 ],
"27" : [ 13], "S27" : [0, 7, 8, 11, 13, 61, 65 ],
"28" : [ 14], "S28" : [0, 7, 8, 11, 14, 61, 65 ],
"29" : [ 67], "S29" : [0, 7, 8, 11, 61, 65, 67 ],
"30" : [ 12], "S30" : [12 ]
}]
}