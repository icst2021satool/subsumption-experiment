{
"Class" : "org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer", 
"Methods" : [{ "Name" : "setInitialStep" ,
"Nodes" : 5,
"0" : [ ],
"1" : [ 0, 3, 4],
"3" : [ 1, 2],
"2" : [ ],
"4" : [ ],
"CoveredDUAsByNodes" : 5,
"Duas" : 5
},{ "Name" : "doOptimize" ,
"Nodes" : 35,
"0" : [ ],
"31" : [ 38, 15],
"32" : [ 38, 15],
"1" : [ 0, 19, 54, 30],
"2" : [ 0, 19, 54, 30],
"3" : [ 0, 1, 19, 54, 43, 30],
"4" : [ 0, 32, 1, 2, 82, 3, 19, 83, 54, 43, 30, 31],
"28" : [ 0, 32, 1, 2, 3, 43, 82, 19, 83, 54, 91, 30, 31],
"5" : [ 0, 32, 1, 2, 66, 3, 4, 5, 6, 7, 43, 82, 19, 83, 84, 21, 85, 22, 54, 23, 30, 31],
"6" : [ 0, 32, 1, 2, 66, 3, 4, 5, 6, 7, 43, 82, 19, 83, 84, 21, 85, 22, 54, 23, 30, 31],
"7" : [ 0, 1, 2, 66, 3, 4, 5, 6, 7, 9, 10, 82, 19, 83, 84, 21, 85, 22, 23, 30, 31, 32, 34, 35, 43, 54],
"24" : [ 0, 1, 2, 66, 3, 4, 5, 6, 7, 9, 10, 17, 82, 19, 83, 84, 21, 85, 22, 23, 30, 31, 32, 34, 35, 40, 43, 54],
"25" : [ 0, 1, 2, 66, 3, 4, 5, 6, 7, 9, 10, 17, 82, 19, 83, 84, 21, 85, 22, 23, 30, 31, 32, 34, 35, 40, 43, 54],
"8" : [ 0, 1, 2, 66, 3, 4, 5, 6, 7, 9, 10, 11, 82, 19, 83, 20, 84, 21, 85, 22, 23, 30, 31, 32, 34, 35, 36, 43, 110, 54],
"9" : [ 0, 1, 2, 66, 3, 4, 5, 6, 7, 9, 10, 11, 82, 19, 83, 20, 84, 21, 85, 22, 23, 30, 31, 32, 34, 35, 36, 43, 110, 54],
"10" : [ 0, 1, 2, 66, 3, 4, 5, 6, 7, 9, 10, 11, 82, 19, 83, 20, 84, 21, 85, 22, 23, 30, 31, 32, 34, 35, 36, 43, 45, 110, 54],
"11" : [ 0, 1, 2, 66, 3, 4, 5, 6, 7, 9, 10, 11, 13, 82, 19, 83, 20, 84, 21, 85, 22, 23, 25, 27, 30, 31, 32, 34, 35, 36, 43, 45, 110, 54],
"12" : [ 0, 1, 2, 66, 3, 4, 5, 6, 7, 9, 10, 11, 13, 82, 19, 83, 20, 84, 21, 85, 22, 23, 25, 27, 30, 31, 32, 34, 35, 36, 43, 45, 110, 54],
"13" : [ 0, 1, 2, 66, 3, 4, 5, 6, 7, 9, 10, 11, 13, 82, 19, 83, 20, 84, 21, 85, 22, 23, 25, 27, 30, 31, 32, 34, 35, 36, 43, 45, 110, 112, 54, 124],
"21" : [ 0, 1, 2, 66, 3, 4, 5, 6, 7, 9, 10, 11, 13, 82, 19, 83, 20, 84, 148, 21, 85, 149, 22, 23, 151, 152, 25, 27, 30, 31, 32, 34, 35, 36, 43, 45, 110, 111, 113, 54],
"22" : [ 0, 1, 2, 66, 3, 4, 5, 6, 7, 9, 10, 11, 12, 82, 19, 83, 20, 84, 21, 85, 22, 23, 24, 26, 30, 31, 32, 34, 35, 36, 43, 45, 110, 54, 125],
"14" : [ 0, 1, 2, 66, 3, 4, 5, 6, 7, 9, 10, 11, 82, 19, 83, 20, 84, 21, 85, 22, 23, 30, 31, 32, 34, 35, 36, 43, 45, 110, 54, 126],
"17" : [ 0, 1, 2, 66, 3, 4, 5, 6, 7, 9, 10, 11, 82, 19, 83, 20, 84, 21, 85, 22, 86, 23, 30, 31, 32, 34, 35, 36, 43, 45, 46, 110, 54, 126],
"18" : [ 0, 1, 2, 66, 3, 4, 5, 6, 7, 9, 10, 11, 82, 19, 83, 20, 84, 21, 85, 22, 86, 23, 30, 31, 32, 34, 35, 36, 43, 45, 46, 110, 54, 126],
"19" : [ 0, 1, 2, 66, 3, 4, 5, 6, 7, 9, 10, 11, 82, 19, 83, 20, 84, 21, 85, 22, 86, 23, 30, 31, 32, 34, 35, 36, 43, 45, 46, 110, 54, 126],
"20" : [ 0, 1, 2, 66, 3, 4, 5, 6, 7, 9, 10, 11, 82, 19, 83, 20, 84, 21, 85, 22, 86, 23, 30, 31, 32, 34, 35, 36, 164, 168, 170, 43, 171, 45, 46, 110, 48, 54, 126],
"15" : [ 0, 1, 2, 66, 3, 4, 5, 6, 7, 9, 10, 11, 82, 19, 83, 20, 84, 21, 85, 22, 23, 30, 31, 32, 34, 162, 35, 36, 43, 45, 110, 54, 126],
"16" : [ 0, 1, 2, 66, 3, 4, 5, 6, 7, 9, 10, 11, 82, 19, 83, 20, 84, 21, 85, 22, 23, 30, 31, 32, 34, 35, 36, 43, 45, 110, 54, 126],
"23" : [ 0, 1, 2, 66, 3, 131, 4, 132, 5, 6, 134, 7, 135, 9, 10, 11, 82, 19, 83, 20, 84, 21, 85, 22, 23, 30, 31, 32, 34, 35, 36, 43, 44, 110, 114, 54, 127],
"26" : [ 0, 1, 2, 66, 3, 4, 5, 6, 7, 9, 10, 17, 82, 19, 83, 84, 21, 85, 22, 23, 30, 31, 32, 34, 35, 40, 43, 50, 115, 116, 54, 118, 119],
"27" : [ 0, 1, 2, 66, 3, 4, 5, 6, 7, 8, 14, 82, 19, 83, 84, 21, 85, 22, 23, 30, 31, 32, 33, 99, 37, 102, 104, 105, 43, 54],
"29" : [ 0, 1, 2, 3, 82, 19, 83, 89, 91, 28, 93, 30, 31, 32, 96, 98, 43, 54],
"34" : [ 0, 1, 2, 3, 82, 19, 83, 89, 91, 28, 93, 30, 31, 32, 96, 98, 43, 54],
"30" : [ 0, 69, 71, 72, 74, 75, 19, 30, 42, 54, 55],
"33" : [ 15, 38, 52, 56, 57, 59, 60],
"CoveredDUAsByNodes" : 97,
"Duas" : 176
},{ "Name" : "findUpperBound" ,
"Nodes" : 7,
"0" : [ ],
"1" : [ ],
"2" : [ 2],
"3" : [ 0, 1, 6, 8],
"4" : [ 0, 1, 4, 5, 6, 8, 9, 12, 13],
"5" : [ 0, 1, 3, 6, 8, 10, 11],
"6" : [ ],
"CoveredDUAsByNodes" : 13,
"Duas" : 18
}]
}