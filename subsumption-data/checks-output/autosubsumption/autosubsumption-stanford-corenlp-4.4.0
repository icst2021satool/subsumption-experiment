DUA-DUA subsumption
@@ Method, Nodes, Edges, DUAs, UDUAs, RDUAs, UPerc, RPerc, Time_s, Time_ms

edu.stanford.nlp.ling.CoreAnnotations$OriginalCharAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$GrandparentAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$SentenceIDAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$SpeakerAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$LinkAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$IDAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$SectionAuthorCharacterOffsetBeginAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$ColumnDataClassifierAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$NamedEntityTagAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$ParagraphsAnnotation:
edu.stanford.nlp.ling.CoreAnnotations:

#edu/stanford/nlp/ling/CoreUtilities/toSentence:

#edu/stanford/nlp/ling/CoreUtilities/deepCopy:

#edu/stanford/nlp/ling/CoreUtilities/toCoreLabelList:

#edu/stanford/nlp/ling/CoreUtilities/toCoreLabelList:

#edu/stanford/nlp/ling/CoreUtilities/toCoreLabelList:

#edu/stanford/nlp/ling/CoreUtilities/toCoreLabelListWithCharacterOffsets:

#edu/stanford/nlp/ling/CoreUtilities/toCoreLabelList:
edu.stanford.nlp.ling.CoreUtilities:
edu.stanford.nlp.ling.CoreAnnotations$SentencePositionAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$GenericTokensAnnotation:
edu.stanford.nlp.ling.CategoryWordTag$LabelFactoryHolder:
edu.stanford.nlp.ling.CoreAnnotations$MorphoGenAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$WordFormAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$NamedEntityTagProbsAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$TopicAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$SectionStartAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$UBlockAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$EntityClassAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$AbgeneAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$NumTxtSentencesAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$SemanticWordAnnotation:
edu.stanford.nlp.ling.HasOffset:
edu.stanford.nlp.ling.CoreAnnotations$SectionEndAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$GoldAnswerAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$DictAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation:
edu.stanford.nlp.ling.HasTag:
edu.stanford.nlp.ling.CoreAnnotations$SemanticHeadTagAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$SemanticHeadWordAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$CoNLLUFeats:
edu.stanford.nlp.ling.CoreAnnotations$MentionTokenAnnotation:
edu.stanford.nlp.ling.SegmenterCoreAnnotations:
edu.stanford.nlp.ling.CoreAnnotations$SectionTagAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$IsNewlineAnnotation:
edu.stanford.nlp.ling.Label:
edu.stanford.nlp.ling.CoreAnnotations$CalendarAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$SectionDateAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$PartOfSpeechAnnotation:
edu.stanford.nlp.ling.TaggedWord$LabelFactoryHolder:
edu.stanford.nlp.ling.CoreAnnotations$LeftTermAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$MarkingAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$QuotesAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$IsURLAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$SemanticTagAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$CoNLLDepParentIndexAnnotation:

#edu/stanford/nlp/ling/TaggedWord/<init>:

#edu/stanford/nlp/ling/TaggedWord/setFromString:
edu.stanford.nlp.ling.TaggedWord:
edu.stanford.nlp.ling.SegmenterCoreAnnotations$CharactersAnnotation:
edu.stanford.nlp.ling.HasContext:
edu.stanford.nlp.ling.CoreAnnotations$NumericCompositeTypeAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$PossibleAnswersAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$SRL_ID:
edu.stanford.nlp.ling.CoreAnnotations$UnknownAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$MorphoPersAnnotation:
edu.stanford.nlp.ling.HasNER:
edu.stanford.nlp.ling.CoreAnnotations$PositionAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$ChineseOrigSegAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$CodepointOffsetEndAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$WordSenseAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$OriginalTextAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$IDFAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$CoNLLPredicateAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$SectionIndexAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$DocTitleAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$CoNLLUMisc:
edu.stanford.nlp.ling.CoreAnnotations$XmlElementAnnotation:

#edu/stanford/nlp/ling/MultiTokenTag$Tag/equals:
edu.stanford.nlp.ling.MultiTokenTag$Tag:
edu.stanford.nlp.ling.CoreAnnotations$CommonWordsAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$IsFirstWordOfMWTAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$CanonicalEntityMentionIndexAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$RoleAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$QuotationsAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$ParaPositionAnnotation:

#edu/stanford/nlp/ling/DocumentReader/<init>:

#edu/stanford/nlp/ling/DocumentReader/readDocument:

#edu/stanford/nlp/ling/DocumentReader/getBufferedReader:

#edu/stanford/nlp/ling/DocumentReader/readText:
edu.stanford.nlp.ling.DocumentReader:
edu.stanford.nlp.ling.LabeledWord:
edu.stanford.nlp.ling.CoreAnnotations$SectionAuthorCharacterOffsetEndAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$ArabicSegAnnotation:

#edu/stanford/nlp/ling/WordLemmaTag/setFromString:

#edu/stanford/nlp/ling/WordLemmaTag/equals:

#edu/stanford/nlp/ling/WordLemmaTag/hashCode:

#edu/stanford/nlp/ling/WordLemmaTag/compareTo:
edu.stanford.nlp.ling.WordLemmaTag:
edu.stanford.nlp.ling.LabelFactory:
edu.stanford.nlp.ling.CoreAnnotations$DoAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$AnswerProbAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetBeginAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$CoNLLDepTypeAnnotation:

#edu/stanford/nlp/ling/ValueLabel/toString:

#edu/stanford/nlp/ling/ValueLabel/equals:

#edu/stanford/nlp/ling/ValueLabel/hashCode:
edu.stanford.nlp.ling.ValueLabel:
edu.stanford.nlp.ling.CoreAnnotations$WikipediaEntityAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$SRLInstancesAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$D2_LEndAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$PresetAnswerAnnotation:
edu.stanford.nlp.ling.CategoryWordTagFactory:
edu.stanford.nlp.ling.CoreAnnotations$DocDateAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$GeniaAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$GazetteerAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$TextAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$LemmaAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$LBeginAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$XmlContextAnnotation:
edu.stanford.nlp.ling.IndexedWord$1:
edu.stanford.nlp.ling.CoreAnnotations$MonthAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$LMiddleAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$NumericValueAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$LastGazAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$MorphoCaseAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$CoarseTagAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$KBPTriplesAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$UnaryAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$EntityMentionToCorefMentionMappingAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$NumericCompositeValueAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$NotAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$TokensAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$WordPositionAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$AbstrAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$TrueCaseAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$PredictedAnswerAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$ArgumentAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$DistSimAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$CoNLLUTokenSpanAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$ParentAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$NumericObjectAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$VerbSenseAnnotation:
edu.stanford.nlp.ling.Tag$TagFactory:
edu.stanford.nlp.ling.CoreAnnotations$CharAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$AnswerAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$LabelAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$BeforeAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$SentenceEndAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$ForcedSentenceEndAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$MorphoNumAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$StemAnnotation:
edu.stanford.nlp.ling.HasLemma:
edu.stanford.nlp.ling.CoreAnnotations$PrevChildAnnotation:

#edu/stanford/nlp/ling/BasicDocument/init:

#edu/stanford/nlp/ling/BasicDocument/label:

#edu/stanford/nlp/ling/BasicDocument/setLabels:

#edu/stanford/nlp/ling/BasicDocument/addLabel:

#edu/stanford/nlp/ling/BasicDocument/setTitle:

#edu/stanford/nlp/ling/BasicDocument/presentableText:
edu.stanford.nlp.ling.BasicDocument:
edu.stanford.nlp.ling.CoreAnnotations$EntityMentionIndexAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$CoarseNamedEntityTagAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$AntecedentAnnotation:
edu.stanford.nlp.ling.HasWord:
edu.stanford.nlp.ling.CoreAnnotations$BeAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$ChunkAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$LastTaggedAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetEndAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$SpaceBeforeAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$DayAnnotation:

#edu/stanford/nlp/ling/CoreLabel/<init>:

#edu/stanford/nlp/ling/CoreLabel/<init>:

#edu/stanford/nlp/ling/CoreLabel/initFromStrings:

#edu/stanford/nlp/ling/CoreLabel/parseStringKeys:

#edu/stanford/nlp/ling/CoreLabel/initFromStrings:

#edu/stanford/nlp/ling/CoreLabel/getString:

#edu/stanford/nlp/ling/CoreLabel/setWord:

#edu/stanford/nlp/ling/CoreLabel/index:

#edu/stanford/nlp/ling/CoreLabel/sentIndex:

#edu/stanford/nlp/ling/CoreLabel/beginPosition:

#edu/stanford/nlp/ling/CoreLabel/endPosition:

#edu/stanford/nlp/ling/CoreLabel/toString:
edu.stanford.nlp.ling.CoreLabel:

#edu/stanford/nlp/ling/WordTag/toString:

#edu/stanford/nlp/ling/WordTag/setFromString:

#edu/stanford/nlp/ling/WordTag/equals:

#edu/stanford/nlp/ling/WordTag/hashCode:

#edu/stanford/nlp/ling/WordTag/compareTo:
edu.stanford.nlp.ling.WordTag:

#edu/stanford/nlp/ling/WordTagFactory/newLabel:

#edu/stanford/nlp/ling/WordTagFactory/newLabelFromString:

#edu/stanford/nlp/ling/WordTagFactory/newLabel:
edu.stanford.nlp.ling.WordTagFactory:
edu.stanford.nlp.ling.CoreAnnotations$GenderAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$FreqAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$PolarityAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$BestCliquesAnnotation:
edu.stanford.nlp.ling.CoreLabel$GenericAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$FemaleGazAnnotation:
edu.stanford.nlp.ling.HasOriginalText:
edu.stanford.nlp.ling.CoreAnnotations$ArabicCharAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$EntityTypeAnnotation:
edu.stanford.nlp.ling.Datum:
edu.stanford.nlp.ling.CoreAnnotations$IndexAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$StateAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$HeightAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$CoNLLUSecondaryDepsAnnotation:

#edu/stanford/nlp/ling/SentenceUtils/toTaggedList:

#edu/stanford/nlp/ling/SentenceUtils/toUntaggedList:

#edu/stanford/nlp/ling/SentenceUtils/toUntaggedList:

#edu/stanford/nlp/ling/SentenceUtils/toWordList:

#edu/stanford/nlp/ling/SentenceUtils/toCoreLabelList:

#edu/stanford/nlp/ling/SentenceUtils/toCoreLabelList:

#edu/stanford/nlp/ling/SentenceUtils/listToString:

#edu/stanford/nlp/ling/SentenceUtils/listToString:

#edu/stanford/nlp/ling/SentenceUtils/listToOriginalTextString:

#edu/stanford/nlp/ling/SentenceUtils/wordToString:

#edu/stanford/nlp/ling/SentenceUtils/extractNgram:
edu.stanford.nlp.ling.SentenceUtils:
edu.stanford.nlp.ling.CoreAnnotations$EndIndexAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$DocTypeAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$NormalizedNamedEntityTagAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$IsDateRangeAnnotation:

#edu/stanford/nlp/ling/CategoryWordTag/<init>:

#edu/stanford/nlp/ling/CategoryWordTag/toString:

#edu/stanford/nlp/ling/CategoryWordTag/toString:
edu.stanford.nlp.ling.CategoryWordTag:
edu.stanford.nlp.ling.CoreAnnotations$FirstChildAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$AnswerObjectAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$CategoryFunctionalTagAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$TagLabelAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$TokenBeginAnnotation:

#edu/stanford/nlp/ling/BasicDatum/label:

#edu/stanford/nlp/ling/BasicDatum/setLabels:

#edu/stanford/nlp/ling/BasicDatum/addLabel:

#edu/stanford/nlp/ling/BasicDatum/equals:
edu.stanford.nlp.ling.BasicDatum:
edu.stanford.nlp.ling.CoreAnnotations$YearAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$CategoryAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$BestFullAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$SentenceIndexAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$SectionsAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$CodepointOffsetBeginAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$NERIDAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$LeftChildrenNodeAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$CovertIDAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$PhraseWordsTagAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$BagOfWordsAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$SectionIDAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$DomainAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$IsMultiWordTokenAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$SubcategorizationAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$SentenceBeginAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$MentionsAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$CoNLLDepAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$DependentsAnnotation:
edu.stanford.nlp.ling.StringLabelFactory:
edu.stanford.nlp.ling.CoreAnnotations$ProtoAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$UnclosedQuotationsAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$GazAnnotation:
edu.stanford.nlp.ling.AbstractToken:
edu.stanford.nlp.ling.Tag$LabelFactoryHolder:
edu.stanford.nlp.ling.CoreAnnotations$TrueCaseTextAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$GovernorAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$NeighborsAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$QuotationIndexAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$ChineseIsSegmentedAnnotation:
edu.stanford.nlp.ling.WordFactory:
edu.stanford.nlp.ling.CoreAnnotations$CorefMentionToEntityMentionMappingAnnotation:
edu.stanford.nlp.ling.Document:
edu.stanford.nlp.ling.CoreAnnotations$UtteranceAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$LabelWeightAnnotation:

#edu/stanford/nlp/ling/CoreLabel$CoreLabelFactory/newLabel:
edu.stanford.nlp.ling.CoreLabel$CoreLabelFactory:
edu.stanford.nlp.ling.CoreAnnotations$ChineseCharAnnotation:
edu.stanford.nlp.ling.SegmenterCoreAnnotations$XMLCharAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$StatementTextAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$LengthAnnotation:

#edu/stanford/nlp/ling/TaggedWordFactory/newLabel:

#edu/stanford/nlp/ling/TaggedWordFactory/newLabelFromString:
edu.stanford.nlp.ling.TaggedWordFactory:
edu.stanford.nlp.ling.CoreAnnotations$PhraseWordsAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$ArgDescendentAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$FeaturesAnnotation:

#edu/stanford/nlp/ling/RVFDatum/<init>:

#edu/stanford/nlp/ling/RVFDatum/equals:
edu.stanford.nlp.ling.RVFDatum:
edu.stanford.nlp.ling.AbstractCoreLabel:
edu.stanford.nlp.ling.AnnotationLookup$KeyLookup:
edu.stanford.nlp.ling.StringLabel$StringLabelFactoryHolder:
edu.stanford.nlp.ling.CoreAnnotations$ContextsAnnotation:
edu.stanford.nlp.ling.HasCategory:
edu.stanford.nlp.ling.CoreAnnotations$SectionAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$ShapeAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$SpanAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$LineNumberAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$AuthorAnnotation:
edu.stanford.nlp.ling.Tag:
edu.stanford.nlp.ling.CoreAnnotations$ParagraphIndexAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$CoNLLSRLAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$D2_LMiddleAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$PercentAnnotation:
edu.stanford.nlp.ling.CoreAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$ForcedSentenceUntilEndAnnotation:

#edu/stanford/nlp/ling/WordLemmaTagFactory/newLabel:

#edu/stanford/nlp/ling/WordLemmaTagFactory/newLabelFromString:
edu.stanford.nlp.ling.WordLemmaTagFactory:
edu.stanford.nlp.ling.WordTag$LabelFactoryHolder:
edu.stanford.nlp.ling.CoreAnnotations$DocSourceTypeAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$BeginIndexAnnotation:
edu.stanford.nlp.ling.Word:
edu.stanford.nlp.ling.CoreAnnotations$SRLIDAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$ChineseSegAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$FineGrainedNamedEntityTagAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$NumericTypeAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$NumericCompositeObjectAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$EntityRuleAnnotation:
edu.stanford.nlp.ling.CoreLabel$OutputFormat:
edu.stanford.nlp.ling.CoreAnnotations$AfterAnnotation:

#edu/stanford/nlp/ling/IndexedWord/<init>:

#edu/stanford/nlp/ling/IndexedWord/makeSoftCopy:

#edu/stanford/nlp/ling/IndexedWord/pseudoPosition:

#edu/stanford/nlp/ling/IndexedWord/toCopyIndex:

#edu/stanford/nlp/ling/IndexedWord/isCopy:

#edu/stanford/nlp/ling/IndexedWord/equals:

#edu/stanford/nlp/ling/IndexedWord/hashCode:

#edu/stanford/nlp/ling/IndexedWord/compareTo:
edu.stanford.nlp.ling.IndexedWord:
edu.stanford.nlp.ling.CoreAnnotations$PriorAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$LabelIDAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$CostMagnificationAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$MaleGazAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$D2_LBeginAnnotation:
edu.stanford.nlp.ling.Featurizable:

#edu/stanford/nlp/ling/StringLabel/<init>:
edu.stanford.nlp.ling.StringLabel:
edu.stanford.nlp.ling.CoreAnnotations$QuotedAnnotation:

#edu/stanford/nlp/ling/AnnotationLookup/toCoreKey:

#edu/stanford/nlp/ling/AnnotationLookup/getValueType:
edu.stanford.nlp.ling.AnnotationLookup:
edu.stanford.nlp.ling.CoreAnnotations$ExceptionAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$SpeakerTypeAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$HeadWordStringAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$INAnnotation:
edu.stanford.nlp.ling.Labeled:
edu.stanford.nlp.ling.CoreAnnotations$HaveAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$TokenEndAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$ParagraphAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$WordnetSynAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$UTypeAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$LocationAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$UseMarkedDiscourseAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$StackedNamedEntityTagAnnotation:
edu.stanford.nlp.ling.CoreLabel$1:
edu.stanford.nlp.ling.CoreAnnotations$AbbrAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$MWTTokenTextAnnotation:
edu.stanford.nlp.ling.Word$WordFactoryHolder:
edu.stanford.nlp.ling.CoreAnnotations$ValueAnnotation:
edu.stanford.nlp.ling.LabeledWord$LabelFactoryHolder:
edu.stanford.nlp.ling.CoreAnnotations$LEndAnnotation:

#edu/stanford/nlp/ling/MultiTokenTag/isStart:

#edu/stanford/nlp/ling/MultiTokenTag/isEnd:

#edu/stanford/nlp/ling/MultiTokenTag/equals:
edu.stanford.nlp.ling.MultiTokenTag:
edu.stanford.nlp.ling.CoreAnnotations$NumerizedTokensAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$TrueTagAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$InterpretationAnnotation:
edu.stanford.nlp.ling.CoreAnnotations$WebAnnotation:
edu.stanford.nlp.ling.HasIndex:
edu.stanford.nlp.ling.CoreAnnotations$DocIDAnnotation:
edu.stanford.nlp.ling.tokensregex.CoreMapSequenceMatchAction:
edu.stanford.nlp.ling.tokensregex.SequenceMatchRules$ExtractRule:

#edu/stanford/nlp/ling/tokensregex/ComplexNodePattern$NumericAnnotationPattern/match:

#edu/stanford/nlp/ling/tokensregex/ComplexNodePattern$NumericAnnotationPattern/match:

#edu/stanford/nlp/ling/tokensregex/ComplexNodePattern$NumericAnnotationPattern/match:
edu.stanford.nlp.ling.tokensregex.ComplexNodePattern$NumericAnnotationPattern:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$RepeatPatternExpr/<init>:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$RepeatPatternExpr/build:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$RepeatPatternExpr/toString:
edu.stanford.nlp.ling.tokensregex.SequencePattern$RepeatPatternExpr:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$GroupPatternExpr/assignGroupIds:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$GroupPatternExpr/updateBindings:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$GroupPatternExpr/toString:
edu.stanford.nlp.ling.tokensregex.SequencePattern$GroupPatternExpr:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules$FilterExtractRule/extract:
edu.stanford.nlp.ling.tokensregex.SequenceMatchRules$FilterExtractRule:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules$StringPatternExtractRule/<init>:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules$StringPatternExtractRule/extract:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules$StringPatternExtractRule/apply:
edu.stanford.nlp.ling.tokensregex.SequenceMatchRules$StringPatternExtractRule:

#edu/stanford/nlp/ling/tokensregex/CoreMapExpressionExtractor/<init>:

#edu/stanford/nlp/ling/tokensregex/CoreMapExpressionExtractor/appendRules:

#edu/stanford/nlp/ling/tokensregex/CoreMapExpressionExtractor/collapse:

#edu/stanford/nlp/ling/tokensregex/CoreMapExpressionExtractor/createExtractorFromFiles:

#edu/stanford/nlp/ling/tokensregex/CoreMapExpressionExtractor/getValue:

#edu/stanford/nlp/ling/tokensregex/CoreMapExpressionExtractor/extractCoreMapsToList:

#edu/stanford/nlp/ling/tokensregex/CoreMapExpressionExtractor/extractCoreMapsMergedWithTokens:

#edu/stanford/nlp/ling/tokensregex/CoreMapExpressionExtractor/flatten:

#edu/stanford/nlp/ling/tokensregex/CoreMapExpressionExtractor/cleanupTags:

#edu/stanford/nlp/ling/tokensregex/CoreMapExpressionExtractor/cleanupTags:

#edu/stanford/nlp/ling/tokensregex/CoreMapExpressionExtractor/applyCompositeRule:

#edu/stanford/nlp/ling/tokensregex/CoreMapExpressionExtractor/extractExpressions:

#edu/stanford/nlp/ling/tokensregex/CoreMapExpressionExtractor/annotateExpressions:

#edu/stanford/nlp/ling/tokensregex/CoreMapExpressionExtractor/annotateExpressions:

#edu/stanford/nlp/ling/tokensregex/CoreMapExpressionExtractor/filterInvalidExpressions:
edu.stanford.nlp.ling.tokensregex.CoreMapExpressionExtractor:

#edu/stanford/nlp/ling/tokensregex/ComplexNodePattern$NilAnnotationPattern/match:
edu.stanford.nlp.ling.tokensregex.ComplexNodePattern$NilAnnotationPattern:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules$AnnotationExtractRuleCreator/create:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules$AnnotationExtractRuleCreator/create:
edu.stanford.nlp.ling.tokensregex.SequenceMatchRules$AnnotationExtractRuleCreator:

#edu/stanford/nlp/ling/tokensregex/ProcessTokensRegexRequest/matchPattern:

#edu/stanford/nlp/ling/tokensregex/ProcessTokensRegexRequest/processRequest:
edu.stanford.nlp.ling.tokensregex.ProcessTokensRegexRequest:

#edu/stanford/nlp/ling/tokensregex/MultiPatternMatcher$BasicSequencePatternTrigger/apply:
edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher$BasicSequencePatternTrigger:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules$SequenceMatchedExpressionExtractor/apply:
edu.stanford.nlp.ling.tokensregex.SequenceMatchRules$SequenceMatchedExpressionExtractor:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules/createRule:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules/createExtractionRule:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules/createExtractionRule:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules/lookupExtractRuleCreator:
edu.stanford.nlp.ling.tokensregex.SequenceMatchRules:

#edu/stanford/nlp/ling/tokensregex/ComplexNodePattern$StringAnnotationPattern/match:
edu.stanford.nlp.ling.tokensregex.ComplexNodePattern$StringAnnotationPattern:

#edu/stanford/nlp/ling/tokensregex/CoreMapNodePatternTrigger/<init>:

#edu/stanford/nlp/ling/tokensregex/CoreMapNodePatternTrigger/apply:

#edu/stanford/nlp/ling/tokensregex/CoreMapNodePatternTrigger/lambda$new$0:
edu.stanford.nlp.ling.tokensregex.CoreMapNodePatternTrigger:

#edu/stanford/nlp/ling/tokensregex/NodePattern/matchWithResult:
edu.stanford.nlp.ling.tokensregex.NodePattern:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$NodePatternState/match:
edu.stanford.nlp.ling.tokensregex.SequencePattern$NodePatternState:

#edu/stanford/nlp/ling/tokensregex/PhraseTable$PhraseStringCollection/isEmpty:

#edu/stanford/nlp/ling/tokensregex/PhraseTable$PhraseStringCollection/contains:

#edu/stanford/nlp/ling/tokensregex/PhraseTable$PhraseStringCollection/containsAll:

#edu/stanford/nlp/ling/tokensregex/PhraseTable$PhraseStringCollection/addAll:

#edu/stanford/nlp/ling/tokensregex/PhraseTable$PhraseStringCollection/removeAll:
edu.stanford.nlp.ling.tokensregex.PhraseTable$PhraseStringCollection:

#edu/stanford/nlp/ling/tokensregex/CoreMapNodePattern$AttributesEqualMatchChecker/matches:
edu.stanford.nlp.ling.tokensregex.CoreMapNodePattern$AttributesEqualMatchChecker:

#edu/stanford/nlp/ling/tokensregex/MultiNodePattern$IntersectMultiNodePattern/match:
edu.stanford.nlp.ling.tokensregex.MultiNodePattern$IntersectMultiNodePattern:

#edu/stanford/nlp/ling/tokensregex/ComplexNodePattern$AttributesEqualMatchChecker/matches:
edu.stanford.nlp.ling.tokensregex.ComplexNodePattern$AttributesEqualMatchChecker:
Warning: Method:edu.stanford.nlp.ling.tokensregex.SequenceMatcher$BranchStates.unlink has incoming edges.

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$BranchStates/condense:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$BranchStates/getParents:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$BranchStates/getParents:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$BranchStates/getBranchState:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$BranchStates/getBranchState:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$BranchStates/getMatchedGroups:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$BranchStates/getMatchedGroup:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$BranchStates/setGroupStart:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$BranchStates/setGroupEnd:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$BranchStates/clearGroupStart:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$BranchStates/getMatchedResults:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$BranchStates/getMatchedResult:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$BranchStates/setMatchedResult:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$BranchStates/getBranchId:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$BranchStates/getMatchStateInfo:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$BranchStates/getMatchStateInfo:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$BranchStates/removeMatchStateInfo:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$BranchStates/startMatchedCountInc:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$BranchStates/endMatchedCountInc:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$BranchStates/setMatchedInterval:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$BranchStates/mergeBranchStates:
edu.stanford.nlp.ling.tokensregex.SequenceMatcher$BranchStates:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$GroupEndState/match:
edu.stanford.nlp.ling.tokensregex.SequencePattern$GroupEndState:
edu.stanford.nlp.ling.tokensregex.SequenceMatcher$BasicMatchReplacement:
edu.stanford.nlp.ling.tokensregex.SequenceMatcher$2:

#edu/stanford/nlp/ling/tokensregex/MultiCoreMapNodePattern$StringSequenceAnnotationPattern/<init>:

#edu/stanford/nlp/ling/tokensregex/MultiCoreMapNodePattern$StringSequenceAnnotationPattern/<init>:

#edu/stanford/nlp/ling/tokensregex/MultiCoreMapNodePattern$StringSequenceAnnotationPattern/match:
edu.stanford.nlp.ling.tokensregex.MultiCoreMapNodePattern$StringSequenceAnnotationPattern:

#edu/stanford/nlp/ling/tokensregex/TokenSequencePattern/compile:
edu.stanford.nlp.ling.tokensregex.TokenSequencePattern:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$MatchedStates/split:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$MatchedStates/match:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$MatchedStates/compareMatches:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$MatchedStates/getMatchIndex:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$MatchedStates/getMatchIndices:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$MatchedStates/selectMatchIndex:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$MatchedStates/setMatchedGroups:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$MatchedStates/isAllMatch:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$MatchedStates/isMatch:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$MatchedStates/addStates:
edu.stanford.nlp.ling.tokensregex.SequenceMatcher$MatchedStates:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher/<init>:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher/replaceAllExtended:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher/replaceFirstExtended:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher/replaceAll:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher/replaceFirst:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher/find:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher/find:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher/find0:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher/findNextNonOverlapping:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher/findNextAll:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher/find:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher/findMatchStart:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher/findMatchStartNoBacktracking:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher/findMatchStartBacktracking:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher/matches:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher/clearMatched:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher/getStateMessage:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher/region:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher/toBasicSequenceMatchResult:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher/start:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher/end:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher/groupNodes:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher/groupValue:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher/groupInfo:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher/groupMatchResults:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher/groupMatchResult:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher/nodeMatchResult:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher/getMatchedSignature:
edu.stanford.nlp.ling.tokensregex.SequenceMatcher:
edu.stanford.nlp.ling.tokensregex.SequencePattern$NodesMatchChecker:
edu.stanford.nlp.ling.tokensregex.SequenceMatchRules$CoreMapToListExtractRule:
edu.stanford.nlp.ling.tokensregex.NodePatternTransformer:

#edu/stanford/nlp/ling/tokensregex/NodePattern$ConjNodePattern/match:
edu.stanford.nlp.ling.tokensregex.NodePattern$ConjNodePattern:
edu.stanford.nlp.ling.tokensregex.SequencePattern$ValuePatternExpr:
edu.stanford.nlp.ling.tokensregex.Env$Binder:

#edu/stanford/nlp/ling/tokensregex/CoreMapNodePatternTrigger$StringTriggerCandidate/<init>:
edu.stanford.nlp.ling.tokensregex.CoreMapNodePatternTrigger$StringTriggerCandidate:

#edu/stanford/nlp/ling/tokensregex/MultiCoreMapNodePattern/match:
edu.stanford.nlp.ling.tokensregex.MultiCoreMapNodePattern:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules$StringMatchResultExtractor/apply:
edu.stanford.nlp.ling.tokensregex.SequenceMatchRules$StringMatchResultExtractor:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules$CompositeExtractRuleCreator/create:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules$CompositeExtractRuleCreator/create:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules$CompositeExtractRuleCreator/lambda$updateExtractRule$0:
edu.stanford.nlp.ling.tokensregex.SequenceMatchRules$CompositeExtractRuleCreator:

#edu/stanford/nlp/ling/tokensregex/ComplexNodePattern$StringAnnotationRegexPattern/match:

#edu/stanford/nlp/ling/tokensregex/ComplexNodePattern$StringAnnotationRegexPattern/matchWithResult:
edu.stanford.nlp.ling.tokensregex.ComplexNodePattern$StringAnnotationRegexPattern:
edu.stanford.nlp.ling.tokensregex.SequenceMatcher$FindType:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchAction$NextMatchAction/apply:
edu.stanford.nlp.ling.tokensregex.SequenceMatchAction$NextMatchAction:

#edu/stanford/nlp/ling/tokensregex/ComplexNodePattern$NotNilAnnotationPattern/match:
edu.stanford.nlp.ling.tokensregex.ComplexNodePattern$NotNilAnnotationPattern:
edu.stanford.nlp.ling.tokensregex.SequenceMatchResult$GroupToIntervalFunc:
edu.stanford.nlp.ling.tokensregex.NodePattern$AnyNodePattern:
Warning: Method:edu.stanford.nlp.ling.tokensregex.PhraseTable$PhraseTableIterator.getNext has incoming edges.

#edu/stanford/nlp/ling/tokensregex/PhraseTable$PhraseTableIterator/hasNext:
edu.stanford.nlp.ling.tokensregex.PhraseTable$PhraseTableIterator:
edu.stanford.nlp.ling.tokensregex.SequenceMatcher$MatchReplacement:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$GroupStartState/match:
edu.stanford.nlp.ling.tokensregex.SequencePattern$GroupStartState:

#edu/stanford/nlp/ling/tokensregex/ComplexNodePattern$IntegerAnnotationPattern/match:
edu.stanford.nlp.ling.tokensregex.ComplexNodePattern$IntegerAnnotationPattern:

#edu/stanford/nlp/ling/tokensregex/ComplexNodePattern$AbstractStringAnnotationPattern/ignoreCase:

#edu/stanford/nlp/ling/tokensregex/ComplexNodePattern$AbstractStringAnnotationPattern/normalize:

#edu/stanford/nlp/ling/tokensregex/ComplexNodePattern$AbstractStringAnnotationPattern/getNormalized:
edu.stanford.nlp.ling.tokensregex.ComplexNodePattern$AbstractStringAnnotationPattern:
edu.stanford.nlp.ling.tokensregex.SequencePattern$ValueState:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules$ListExtractRule/extract:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules$ListExtractRule/ruleList:
edu.stanford.nlp.ling.tokensregex.SequenceMatchRules$ListExtractRule:
edu.stanford.nlp.ling.tokensregex.TokenSequenceMatcher:
edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcher$1:
edu.stanford.nlp.ling.tokensregex.SequenceMatchRules$CoreMapExtractRule:

#edu/stanford/nlp/ling/tokensregex/SequencePattern/transform:

#edu/stanford/nlp/ling/tokensregex/SequencePattern/findNodePattern:

#edu/stanford/nlp/ling/tokensregex/SequencePattern/findNodePatterns:
edu.stanford.nlp.ling.tokensregex.SequencePattern:

#edu/stanford/nlp/ling/tokensregex/MultiWordStringMatcher/setMatchType:

#edu/stanford/nlp/ling/tokensregex/MultiWordStringMatcher/markTargetString:

#edu/stanford/nlp/ling/tokensregex/MultiWordStringMatcher/findTargetStringOffsetsExct:

#edu/stanford/nlp/ling/tokensregex/MultiWordStringMatcher/getRegex:

#edu/stanford/nlp/ling/tokensregex/MultiWordStringMatcher/getPattern:

#edu/stanford/nlp/ling/tokensregex/MultiWordStringMatcher/getRegex:

#edu/stanford/nlp/ling/tokensregex/MultiWordStringMatcher/getExctWsRegex:

#edu/stanford/nlp/ling/tokensregex/MultiWordStringMatcher/getLnrmRegex:

#edu/stanford/nlp/ling/tokensregex/MultiWordStringMatcher/findTargetStringOffsetsRegex:

#edu/stanford/nlp/ling/tokensregex/MultiWordStringMatcher/findOffsets:

#edu/stanford/nlp/ling/tokensregex/MultiWordStringMatcher/findTargetStringOffsets:
edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcher:

#edu/stanford/nlp/ling/tokensregex/CoreMapSequenceMatchAction$MergeAction/apply:
edu.stanford.nlp.ling.tokensregex.CoreMapSequenceMatchAction$MergeAction:

#edu/stanford/nlp/ling/tokensregex/NodePattern$DisjNodePattern/match:
edu.stanford.nlp.ling.tokensregex.NodePattern$DisjNodePattern:

#edu/stanford/nlp/ling/tokensregex/Env/getDefaultTokensAggregator:

#edu/stanford/nlp/ling/tokensregex/Env/bindStringRegex:

#edu/stanford/nlp/ling/tokensregex/Env/expandStringRegex:

#edu/stanford/nlp/ling/tokensregex/Env/bind:

#edu/stanford/nlp/ling/tokensregex/Env/getNodePattern:

#edu/stanford/nlp/ling/tokensregex/Env/getSequencePatternExpr:

#edu/stanford/nlp/ling/tokensregex/Env/push:

#edu/stanford/nlp/ling/tokensregex/Env/pop:

#edu/stanford/nlp/ling/tokensregex/Env/peek:
edu.stanford.nlp.ling.tokensregex.Env:
edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcher$MatchType:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$ConjEndState/match:
edu.stanford.nlp.ling.tokensregex.SequencePattern$ConjEndState:
edu.stanford.nlp.ling.tokensregex.MultiNodePattern:
edu.stanford.nlp.ling.tokensregex.ComplexNodePattern$1:
edu.stanford.nlp.ling.tokensregex.ComplexNodePattern$NumericAnnotationPattern$CmpType:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$ConjStartState/match:
edu.stanford.nlp.ling.tokensregex.SequencePattern$ConjStartState:
edu.stanford.nlp.ling.tokensregex.PhraseTable$TokenList:

#edu/stanford/nlp/ling/tokensregex/PhraseTable$PhraseMatch/getInterval:
edu.stanford.nlp.ling.tokensregex.PhraseTable$PhraseMatch:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules$MultiSequencePatternExtractRule/extract:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules$MultiSequencePatternExtractRule/apply:
edu.stanford.nlp.ling.tokensregex.SequenceMatchRules$MultiSequencePatternExtractRule:
edu.stanford.nlp.ling.tokensregex.SequenceMatchResult:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$1/getNext:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$1/hasNext:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$1/next:
edu.stanford.nlp.ling.tokensregex.SequenceMatcher$1:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$AndPatternExpr/build:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$AndPatternExpr/assignGroupIds:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$AndPatternExpr/updateBindings:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$AndPatternExpr/copy:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$AndPatternExpr/optimize:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$AndPatternExpr/transform:
edu.stanford.nlp.ling.tokensregex.SequencePattern$AndPatternExpr:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchAction$BranchAction/apply:
edu.stanford.nlp.ling.tokensregex.SequenceMatchAction$BranchAction:

#edu/stanford/nlp/ling/tokensregex/EnvLookup/lookupAnnotationKey:

#edu/stanford/nlp/ling/tokensregex/EnvLookup/lookupAnnotationKeyWithClassname:

#edu/stanford/nlp/ling/tokensregex/EnvLookup/getDefaultTokensAggregators:

#edu/stanford/nlp/ling/tokensregex/EnvLookup/getDefaultTokensAggregator:

#edu/stanford/nlp/ling/tokensregex/EnvLookup/getDefaultTokensResultAnnotationKey:

#edu/stanford/nlp/ling/tokensregex/EnvLookup/getDefaultResultAnnotationKey:

#edu/stanford/nlp/ling/tokensregex/EnvLookup/getDefaultResultAnnotationExtractor:

#edu/stanford/nlp/ling/tokensregex/EnvLookup/getDefaultNestedResultsAnnotationKey:

#edu/stanford/nlp/ling/tokensregex/EnvLookup/getDefaultTextAnnotationKey:

#edu/stanford/nlp/ling/tokensregex/EnvLookup/getDefaultTokensAnnotationKey:
edu.stanford.nlp.ling.tokensregex.EnvLookup:
edu.stanford.nlp.ling.tokensregex.CoreMapSequenceMatcher$BasicCoreMapSequenceMatcher:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$BranchState/<init>:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$BranchState/updateKeepBids:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$BranchState/addBidsToCollapse:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$BranchState/addMatchedGroups:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$BranchState/addMatchedResults:
edu.stanford.nlp.ling.tokensregex.SequenceMatcher$BranchState:
edu.stanford.nlp.ling.tokensregex.ComplexNodePattern$NumericAnnotationPattern$CmpType$1:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules$AnnotationExtractRule/update:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules$AnnotationExtractRule/isMostlyCompatible:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules$AnnotationExtractRule/hasTokensRegexPattern:
edu.stanford.nlp.ling.tokensregex.SequenceMatchRules$AnnotationExtractRule:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$RepeatState/<init>:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$RepeatState/match:
edu.stanford.nlp.ling.tokensregex.SequencePattern$RepeatState:
edu.stanford.nlp.ling.tokensregex.PhraseTable$StackEntry:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$Frag/add:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$Frag/add:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$Frag/connect:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$Frag/connect:
edu.stanford.nlp.ling.tokensregex.SequencePattern$Frag:

#edu/stanford/nlp/ling/tokensregex/CoreMapSequenceMatcher/annotateGroup:

#edu/stanford/nlp/ling/tokensregex/CoreMapSequenceMatcher/getMergedList:

#edu/stanford/nlp/ling/tokensregex/CoreMapSequenceMatcher/createMergedChunk:

#edu/stanford/nlp/ling/tokensregex/CoreMapSequenceMatcher/mergeGroup:

#edu/stanford/nlp/ling/tokensregex/CoreMapSequenceMatcher/lambda$static$0:
edu.stanford.nlp.ling.tokensregex.CoreMapSequenceMatcher:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules$SequenceMatchResultExtractor/apply:
edu.stanford.nlp.ling.tokensregex.SequenceMatchRules$SequenceMatchResultExtractor:

#edu/stanford/nlp/ling/tokensregex/MatchedExpression/extractAnnotation:

#edu/stanford/nlp/ling/tokensregex/MatchedExpression/replaceMerged:

#edu/stanford/nlp/ling/tokensregex/MatchedExpression/replaceMergedUsingTokenOffsets:

#edu/stanford/nlp/ling/tokensregex/MatchedExpression/removeNullValues:

#edu/stanford/nlp/ling/tokensregex/MatchedExpression/removeNested:

#edu/stanford/nlp/ling/tokensregex/MatchedExpression/removeOverlapping:

#edu/stanford/nlp/ling/tokensregex/MatchedExpression/getBestMatched:

#edu/stanford/nlp/ling/tokensregex/MatchedExpression/lambda$static$7:

#edu/stanford/nlp/ling/tokensregex/MatchedExpression/lambda$static$5:

#edu/stanford/nlp/ling/tokensregex/MatchedExpression/lambda$static$4:

#edu/stanford/nlp/ling/tokensregex/MatchedExpression/lambda$static$3:
edu.stanford.nlp.ling.tokensregex.MatchedExpression:
edu.stanford.nlp.ling.tokensregex.SequencePattern$MatchState:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$SeqStartState/match:
edu.stanford.nlp.ling.tokensregex.SequencePattern$SeqStartState:
edu.stanford.nlp.ling.tokensregex.MapNodePattern$1:

#edu/stanford/nlp/ling/tokensregex/ComplexNodePattern$NumericAnnotationPattern$CmpType$3/accept:
edu.stanford.nlp.ling.tokensregex.ComplexNodePattern$NumericAnnotationPattern$CmpType$3:
edu.stanford.nlp.ling.tokensregex.SequencePattern$Parser:

#edu/stanford/nlp/ling/tokensregex/PhraseTable$Phrase/isLonger:

#edu/stanford/nlp/ling/tokensregex/PhraseTable$Phrase/addForm:

#edu/stanford/nlp/ling/tokensregex/PhraseTable$Phrase/getAlternateForms:
edu.stanford.nlp.ling.tokensregex.PhraseTable$Phrase:
edu.stanford.nlp.ling.tokensregex.SequenceMatchRules$AssignmentRule:
edu.stanford.nlp.ling.tokensregex.SequencePattern$PatternExpr:

#edu/stanford/nlp/ling/tokensregex/BasicSequenceMatchResult/copy:

#edu/stanford/nlp/ling/tokensregex/BasicSequenceMatchResult/start:

#edu/stanford/nlp/ling/tokensregex/BasicSequenceMatchResult/start:

#edu/stanford/nlp/ling/tokensregex/BasicSequenceMatchResult/end:

#edu/stanford/nlp/ling/tokensregex/BasicSequenceMatchResult/end:

#edu/stanford/nlp/ling/tokensregex/BasicSequenceMatchResult/group:

#edu/stanford/nlp/ling/tokensregex/BasicSequenceMatchResult/group:

#edu/stanford/nlp/ling/tokensregex/BasicSequenceMatchResult/groupNodes:

#edu/stanford/nlp/ling/tokensregex/BasicSequenceMatchResult/groupNodes:

#edu/stanford/nlp/ling/tokensregex/BasicSequenceMatchResult/groupValue:

#edu/stanford/nlp/ling/tokensregex/BasicSequenceMatchResult/groupValue:

#edu/stanford/nlp/ling/tokensregex/BasicSequenceMatchResult/groupInfo:

#edu/stanford/nlp/ling/tokensregex/BasicSequenceMatchResult/groupInfo:

#edu/stanford/nlp/ling/tokensregex/BasicSequenceMatchResult/groupMatchResults:

#edu/stanford/nlp/ling/tokensregex/BasicSequenceMatchResult/groupMatchResults:

#edu/stanford/nlp/ling/tokensregex/BasicSequenceMatchResult/nodeMatchResult:

#edu/stanford/nlp/ling/tokensregex/BasicSequenceMatchResult/groupMatchResult:

#edu/stanford/nlp/ling/tokensregex/BasicSequenceMatchResult/groupMatchResult:

#edu/stanford/nlp/ling/tokensregex/BasicSequenceMatchResult/getFirstVarGroup:
edu.stanford.nlp.ling.tokensregex.BasicSequenceMatchResult:
edu.stanford.nlp.ling.tokensregex.MapNodePattern:

#edu/stanford/nlp/ling/tokensregex/CoreMapExpressionNodePattern/match:
edu.stanford.nlp.ling.tokensregex.CoreMapExpressionNodePattern:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$State/equals:

#edu/stanford/nlp/ling/tokensregex/SequenceMatcher$State/hashCode:
edu.stanford.nlp.ling.tokensregex.SequenceMatcher$State:

#edu/stanford/nlp/ling/tokensregex/NodePattern$NegateNodePattern/match:
edu.stanford.nlp.ling.tokensregex.NodePattern$NegateNodePattern:

#edu/stanford/nlp/ling/tokensregex/ComplexNodePattern/newStringRegexPattern:

#edu/stanford/nlp/ling/tokensregex/ComplexNodePattern/populate:

#edu/stanford/nlp/ling/tokensregex/ComplexNodePattern/match:

#edu/stanford/nlp/ling/tokensregex/ComplexNodePattern/matchWithResult:

#edu/stanford/nlp/ling/tokensregex/ComplexNodePattern/match:

#edu/stanford/nlp/ling/tokensregex/ComplexNodePattern/toString:
edu.stanford.nlp.ling.tokensregex.ComplexNodePattern:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules$MultiTokenPatternExtractRuleCreator/updateExtractRule:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules$MultiTokenPatternExtractRuleCreator/create:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules$MultiTokenPatternExtractRuleCreator/lambda$updateExtractRule$0:
edu.stanford.nlp.ling.tokensregex.SequenceMatchRules$MultiTokenPatternExtractRuleCreator:

#edu/stanford/nlp/ling/tokensregex/ComplexNodePattern$NumericAnnotationPattern$CmpType$7/accept:
edu.stanford.nlp.ling.tokensregex.ComplexNodePattern$NumericAnnotationPattern$CmpType$7:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules$AnnotationMatchedFilter/test:
edu.stanford.nlp.ling.tokensregex.SequenceMatchRules$AnnotationMatchedFilter:
edu.stanford.nlp.ling.tokensregex.SequencePattern$VarGroupBindings:
edu.stanford.nlp.ling.tokensregex.PhraseTable$1:
edu.stanford.nlp.ling.tokensregex.SequencePattern$NodePatternExpr:

#edu/stanford/nlp/ling/tokensregex/MatchedExpression$SingleAnnotationExtractor/setAnnotations:

#edu/stanford/nlp/ling/tokensregex/MatchedExpression$SingleAnnotationExtractor/annotate:

#edu/stanford/nlp/ling/tokensregex/MatchedExpression$SingleAnnotationExtractor/annotate:
edu.stanford.nlp.ling.tokensregex.MatchedExpression$SingleAnnotationExtractor:
edu.stanford.nlp.ling.tokensregex.SequenceMatchResult$MatchedGroupInfo:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$BackRefPatternExpr/<init>:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$BackRefPatternExpr/toString:
edu.stanford.nlp.ling.tokensregex.SequencePattern$BackRefPatternExpr:

#edu/stanford/nlp/ling/tokensregex/CoreMapNodePatternTrigger$1/compare:
edu.stanford.nlp.ling.tokensregex.CoreMapNodePatternTrigger$1:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$SeqEndState/match:
edu.stanford.nlp.ling.tokensregex.SequencePattern$SeqEndState:

#edu/stanford/nlp/ling/tokensregex/BasicSequenceMatchResult$MatchedGroup/matchLength:
edu.stanford.nlp.ling.tokensregex.BasicSequenceMatchResult$MatchedGroup:

#edu/stanford/nlp/ling/tokensregex/MultiNodePattern$UnionMultiNodePattern/match:
edu.stanford.nlp.ling.tokensregex.MultiNodePattern$UnionMultiNodePattern:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$MultiNodePatternState/match:
edu.stanford.nlp.ling.tokensregex.SequencePattern$MultiNodePatternState:
edu.stanford.nlp.ling.tokensregex.PhraseTable$StringList:

#edu/stanford/nlp/ling/tokensregex/CoreMapExpressionExtractor$Stage/addRule:

#edu/stanford/nlp/ling/tokensregex/CoreMapExpressionExtractor$Stage/addFilterRule:
edu.stanford.nlp.ling.tokensregex.CoreMapExpressionExtractor$Stage:

#edu/stanford/nlp/ling/tokensregex/ComplexNodePattern$NumericAnnotationPattern$CmpType$5/accept:
edu.stanford.nlp.ling.tokensregex.ComplexNodePattern$NumericAnnotationPattern$CmpType$5:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchAction$SeriesAction/apply:
edu.stanford.nlp.ling.tokensregex.SequenceMatchAction$SeriesAction:
edu.stanford.nlp.ling.tokensregex.SequenceMatchAction:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules$SequencePatternExtractRule/extract:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules$SequencePatternExtractRule/apply:
edu.stanford.nlp.ling.tokensregex.SequenceMatchRules$SequencePatternExtractRule:
edu.stanford.nlp.ling.tokensregex.SequenceMatchRules$StringMatchedExpressionExtractor:

#edu/stanford/nlp/ling/tokensregex/MultiPatternMatcher/findNonOverlapping:

#edu/stanford/nlp/ling/tokensregex/MultiPatternMatcher/find:

#edu/stanford/nlp/ling/tokensregex/MultiPatternMatcher/findNonOverlappingMaxScore:

#edu/stanford/nlp/ling/tokensregex/MultiPatternMatcher/findAllNonOverlappingMatchesPerPattern:

#edu/stanford/nlp/ling/tokensregex/MultiPatternMatcher/getTriggeredPatterns:
edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher:
edu.stanford.nlp.ling.tokensregex.SequencePattern$SequenceEndPatternExpr:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$State/updateOutStates:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$State/match:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$State/add:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$State/value:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$State/markOptional:
edu.stanford.nlp.ling.tokensregex.SequencePattern$State:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules$CoreMapToListFunctionApplier/apply:
edu.stanford.nlp.ling.tokensregex.SequenceMatchRules$CoreMapToListFunctionApplier:

#edu/stanford/nlp/ling/tokensregex/ComplexNodePattern$NumericAnnotationPattern$CmpType$2/accept:
edu.stanford.nlp.ling.tokensregex.ComplexNodePattern$NumericAnnotationPattern$CmpType$2:

#edu/stanford/nlp/ling/tokensregex/PhraseTable/isEmpty:

#edu/stanford/nlp/ling/tokensregex/PhraseTable/containsKey:

#edu/stanford/nlp/ling/tokensregex/PhraseTable/get:

#edu/stanford/nlp/ling/tokensregex/PhraseTable/readPhrases:

#edu/stanford/nlp/ling/tokensregex/PhraseTable/readPhrasesWithTagScores:

#edu/stanford/nlp/ling/tokensregex/PhraseTable/readPhrases:

#edu/stanford/nlp/ling/tokensregex/PhraseTable/getLongestPhrase:

#edu/stanford/nlp/ling/tokensregex/PhraseTable/splitText:

#edu/stanford/nlp/ling/tokensregex/PhraseTable/toNormalizedWordList:

#edu/stanford/nlp/ling/tokensregex/PhraseTable/addPhrases:

#edu/stanford/nlp/ling/tokensregex/PhraseTable/addPhrases:

#edu/stanford/nlp/ling/tokensregex/PhraseTable/addPhrase:

#edu/stanford/nlp/ling/tokensregex/PhraseTable/addPhrase:

#edu/stanford/nlp/ling/tokensregex/PhraseTable/addPhrase:

#edu/stanford/nlp/ling/tokensregex/PhraseTable/getNormalizedForm:

#edu/stanford/nlp/ling/tokensregex/PhraseTable/createNormalizedForm:

#edu/stanford/nlp/ling/tokensregex/PhraseTable/lookup:

#edu/stanford/nlp/ling/tokensregex/PhraseTable/checkWordListMatch:

#edu/stanford/nlp/ling/tokensregex/PhraseTable/findNonOverlappingPhrases:

#edu/stanford/nlp/ling/tokensregex/PhraseTable/findMatches:

#edu/stanford/nlp/ling/tokensregex/PhraseTable/findMatchesNormalized:

#edu/stanford/nlp/ling/tokensregex/PhraseTable/toString:
edu.stanford.nlp.ling.tokensregex.PhraseTable:
edu.stanford.nlp.ling.tokensregex.SequenceMatcher$NamedGroupMatchReplacement:
edu.stanford.nlp.ling.tokensregex.NodePattern$EqualsNodePattern:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$BackRefState/match:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$BackRefState/match:
edu.stanford.nlp.ling.tokensregex.SequencePattern$BackRefState:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules$CoreMapFunctionApplier/<init>:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules$CoreMapFunctionApplier/apply:
edu.stanford.nlp.ling.tokensregex.SequenceMatchRules$CoreMapFunctionApplier:
edu.stanford.nlp.ling.tokensregex.CoreMapExpressionExtractor$CompositeMatchState:

#edu/stanford/nlp/ling/tokensregex/ComplexNodePattern$SequenceRegexPattern/matchWithResult:
edu.stanford.nlp.ling.tokensregex.ComplexNodePattern$SequenceRegexPattern:
edu.stanford.nlp.ling.tokensregex.SequencePattern$SequenceStartPatternExpr:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$ConjMatchStateInfo/addChildBid:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$ConjMatchStateInfo/isAllChildMatched:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$ConjMatchStateInfo/isAllChildMatched:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$ConjMatchStateInfo/getAllChildMatchedBids:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$ConjMatchStateInfo/updateKeepBids:
edu.stanford.nlp.ling.tokensregex.SequencePattern$ConjMatchStateInfo:
edu.stanford.nlp.ling.tokensregex.SequencePattern$1:
edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher$SequencePatternTrigger:
edu.stanford.nlp.ling.tokensregex.CoreMapNodePattern$1:
edu.stanford.nlp.ling.tokensregex.SequenceMatcher$GroupMatchReplacement:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules$TextPatternExtractRuleCreator/create:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules$TextPatternExtractRuleCreator/create:
edu.stanford.nlp.ling.tokensregex.SequenceMatchRules$TextPatternExtractRuleCreator:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$OrPatternExpr/build:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$OrPatternExpr/assignGroupIds:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$OrPatternExpr/updateBindings:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$OrPatternExpr/copy:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$OrPatternExpr/transform:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$OrPatternExpr/optimize:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$OrPatternExpr/optimizeOrStringSeqs:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$OrPatternExpr/_getStringAnnotation_:
edu.stanford.nlp.ling.tokensregex.SequencePattern$OrPatternExpr:

#edu/stanford/nlp/ling/tokensregex/MultiWordStringMatcher$LongestStringComparator/compare:
edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcher$LongestStringComparator:
edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher$NodePatternTrigger:

#edu/stanford/nlp/ling/tokensregex/ComplexNodePattern$NumericAnnotationPattern$CmpType$4/accept:
edu.stanford.nlp.ling.tokensregex.ComplexNodePattern$NumericAnnotationPattern$CmpType$4:

#edu/stanford/nlp/ling/tokensregex/ComplexNodePattern$StringInSetAnnotationPattern/<init>:
edu.stanford.nlp.ling.tokensregex.ComplexNodePattern$StringInSetAnnotationPattern:
edu.stanford.nlp.ling.tokensregex.SequencePattern$MultiNodePatternExpr:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchAction$StartMatchAction/apply:
edu.stanford.nlp.ling.tokensregex.SequenceMatchAction$StartMatchAction:
edu.stanford.nlp.ling.tokensregex.SequenceMatchRules$Rule:

#edu/stanford/nlp/ling/tokensregex/CoreMapNodePattern/valueOf:
edu.stanford.nlp.ling.tokensregex.CoreMapNodePattern:
edu.stanford.nlp.ling.tokensregex.PhraseTable$WordList:

#edu/stanford/nlp/ling/tokensregex/CoreMapSequenceMatchAction$AnnotateAction/apply:
edu.stanford.nlp.ling.tokensregex.CoreMapSequenceMatchAction$AnnotateAction:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$SequencePatternExpr/build:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$SequencePatternExpr/assignGroupIds:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$SequencePatternExpr/updateBindings:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$SequencePatternExpr/copy:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$SequencePatternExpr/optimize:

#edu/stanford/nlp/ling/tokensregex/SequencePattern$SequencePatternExpr/transform:
edu.stanford.nlp.ling.tokensregex.SequencePattern$SequencePatternExpr:

#edu/stanford/nlp/ling/tokensregex/ComplexNodePattern$NumericAnnotationPattern$CmpType$6/accept:
edu.stanford.nlp.ling.tokensregex.ComplexNodePattern$NumericAnnotationPattern$CmpType$6:
edu.stanford.nlp.ling.tokensregex.SequenceMatchAction$BoundAction:
edu.stanford.nlp.ling.tokensregex.SequencePattern$SpecialNodePatternExpr:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules$BasicSequenceExtractRule/extract:
edu.stanford.nlp.ling.tokensregex.SequenceMatchRules$BasicSequenceExtractRule:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules$TokenPatternExtractRuleCreator/updateExtractRule:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules$TokenPatternExtractRuleCreator/create:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules$TokenPatternExtractRuleCreator/create:

#edu/stanford/nlp/ling/tokensregex/SequenceMatchRules$TokenPatternExtractRuleCreator/lambda$updateExtractRule$0:
edu.stanford.nlp.ling.tokensregex.SequenceMatchRules$TokenPatternExtractRuleCreator:

#edu/stanford/nlp/ling/tokensregex/demo/TokensRegexRetokenizeDemo/runPipeline:

#edu/stanford/nlp/ling/tokensregex/demo/TokensRegexRetokenizeDemo/main:
edu.stanford.nlp.ling.tokensregex.demo.TokensRegexRetokenizeDemo:
edu.stanford.nlp.ling.tokensregex.demo.MyAnnotations$MyTypeAnnotation:
edu.stanford.nlp.ling.tokensregex.demo.MyAnnotations:

#edu/stanford/nlp/ling/tokensregex/demo/TokensRegexMatcher/main:
edu.stanford.nlp.ling.tokensregex.demo.TokensRegexMatcher:
edu.stanford.nlp.ling.tokensregex.demo.MyAnnotations$MyValueAnnotation:

#edu/stanford/nlp/ling/tokensregex/demo/TokensRegexMatcherDemo/main:
edu.stanford.nlp.ling.tokensregex.demo.TokensRegexMatcherDemo:

#edu/stanford/nlp/ling/tokensregex/demo/TokensRegexDemo/main:
edu.stanford.nlp.ling.tokensregex.demo.TokensRegexDemo:
edu.stanford.nlp.ling.tokensregex.demo.MyAnnotations$MyTokensAnnotation:

#edu/stanford/nlp/ling/tokensregex/demo/TokensRegexAnnotatorDemo/main:
edu.stanford.nlp.ling.tokensregex.demo.TokensRegexAnnotatorDemo:
edu.stanford.nlp.ling.tokensregex.types.Expressions$NotExpression:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$34/checkArgs:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$34/apply:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$34:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$10/compute:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$10:
edu.stanford.nlp.ling.tokensregex.types.Expressions$RegexValue:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$RegexMatchResultVarExpression/valueOf:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$RegexMatchResultVarExpression/evaluate:
edu.stanford.nlp.ling.tokensregex.types.Expressions$RegexMatchResultVarExpression:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$12/compute:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$12:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$36/checkArgs:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$36/apply:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$36:
edu.stanford.nlp.ling.tokensregex.types.Expressions$AssignableFunctionCallExpression:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$StringFunction/checkArgs:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$StringFunction/apply:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$StringFunction:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$TypedExpression/<init>:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$TypedExpression/equals:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$TypedExpression/hashCode:
edu.stanford.nlp.ling.tokensregex.types.Expressions$TypedExpression:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$VarAssignmentExpression/evaluate:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$VarAssignmentExpression/equals:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$VarAssignmentExpression/hashCode:
edu.stanford.nlp.ling.tokensregex.types.Expressions$VarAssignmentExpression:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$BooleanFunction/checkArgs:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$BooleanFunction/apply:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$BooleanFunction:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$32/checkArgs:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$32/removeTag:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$32/apply:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$32:
edu.stanford.nlp.ling.tokensregex.types.Expressions$IndexedExpression:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$NumericFunction/checkArgs:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$NumericFunction/apply:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$NumericFunction:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$16/checkArgs:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$16/apply:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$16:
edu.stanford.nlp.ling.tokensregex.types.Expressions$AndExpression:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$14:
edu.stanford.nlp.ling.tokensregex.types.Expression:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$29/checkArgs:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$29/apply:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$29:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$8:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$30/checkArgs:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$30/getTag:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$30/apply:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$30:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$13:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$VarExpression/evaluate:
edu.stanford.nlp.ling.tokensregex.types.Expressions$VarExpression:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$ParamInfo:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$TypeCheckedFunction/<init>:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$TypeCheckedFunction/getParamDesc:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$TypeCheckedFunction/checkArgs:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$TypeCheckedFunction:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$37/checkArgs:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$37/apply:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$37:
edu.stanford.nlp.ling.tokensregex.types.ValueFunction:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$35/checkArgs:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$35/apply:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$35:

#edu/stanford/nlp/ling/tokensregex/types/Expressions/convertValueToBoolean:

#edu/stanford/nlp/ling/tokensregex/types/Expressions/convertValueToBooleanValue:

#edu/stanford/nlp/ling/tokensregex/types/Expressions/asObject:

#edu/stanford/nlp/ling/tokensregex/types/Expressions/asExpression:

#edu/stanford/nlp/ling/tokensregex/types/Expressions/asValue:

#edu/stanford/nlp/ling/tokensregex/types/Expressions/createValue:

#edu/stanford/nlp/ling/tokensregex/types/Expressions/isArgTypesCompatible:
edu.stanford.nlp.ling.tokensregex.types.Expressions:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$SimpleCachedExpression/evaluate:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$SimpleCachedExpression/hasValue:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$SimpleCachedExpression/equals:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$SimpleCachedExpression/hashCode:
edu.stanford.nlp.ling.tokensregex.types.Expressions$SimpleCachedExpression:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$SimpleExpression/equals:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$SimpleExpression/hashCode:
edu.stanford.nlp.ling.tokensregex.types.Expressions$SimpleExpression:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$11/compute:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$11:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$WrappedExpression/equals:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$WrappedExpression/hashCode:
edu.stanford.nlp.ling.tokensregex.types.Expressions$WrappedExpression:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$CompareType:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$9/compute:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$9:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$28/checkArgs:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$28/apply:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$28:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$15:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$31/checkArgs:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$31/setTag:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$31/apply:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$31:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$ListExpression/addAll:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$ListExpression/evaluate:
edu.stanford.nlp.ling.tokensregex.types.Expressions$ListExpression:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$SimpleValue/equals:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$SimpleValue/hashCode:
edu.stanford.nlp.ling.tokensregex.types.Expressions$SimpleValue:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$CompareFunction/compare:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$CompareFunction/checkArgs:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$CompareFunction/apply:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$CompareFunction:
edu.stanford.nlp.ling.tokensregex.types.Expressions$PrimitiveValue:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$33/checkArgs:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$33/apply:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$33:
edu.stanford.nlp.ling.tokensregex.types.Tags$TagsAnnotation:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$CompositeValue/<init>:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$CompositeValue/checkValue:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$CompositeValue/getValue:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$CompositeValue/get:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$CompositeValue/set:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$CompositeValue/toCompatibleObject:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$CompositeValue/attemptTypeConversion:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$CompositeValue/simplifyNoTypeConversion:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$CompositeValue/evaluateNoTypeConversion:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$CompositeValue/doEvaluation:
edu.stanford.nlp.ling.tokensregex.types.Expressions$CompositeValue:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$17/checkArgs:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$17/apply:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$17:
edu.stanford.nlp.ling.tokensregex.types.Expressions$OrExpression:
edu.stanford.nlp.ling.tokensregex.types.AssignableExpression:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$7/compute:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$7:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$26:

#edu/stanford/nlp/ling/tokensregex/types/Tags/<init>:

#edu/stanford/nlp/ling/tokensregex/types/Tags/hasTag:

#edu/stanford/nlp/ling/tokensregex/types/Tags/setTag:

#edu/stanford/nlp/ling/tokensregex/types/Tags/addTag:

#edu/stanford/nlp/ling/tokensregex/types/Tags/removeTag:

#edu/stanford/nlp/ling/tokensregex/types/Tags/getTag:

#edu/stanford/nlp/ling/tokensregex/types/Tags/equals:

#edu/stanford/nlp/ling/tokensregex/types/Tags/hashCode:
edu.stanford.nlp.ling.tokensregex.types.Tags:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$ComparableComparator:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$FunctionCallExpression/simplify:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$FunctionCallExpression/evaluate:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$FunctionCallExpression/equals:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$FunctionCallExpression/hashCode:
edu.stanford.nlp.ling.tokensregex.types.Expressions$FunctionCallExpression:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$45:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$RegexMatchVarExpression/valueOf:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$RegexMatchVarExpression/evaluate:
edu.stanford.nlp.ling.tokensregex.types.Expressions$RegexMatchVarExpression:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$19/checkArgs:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$19/apply:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$19:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions/lookupFunctionObject:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions/join:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions/isInteger:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions/main:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$5/compute:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$5:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$24/apply:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$24:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$20/apply:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$20:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$1/compute:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$1:
edu.stanford.nlp.ling.tokensregex.types.Expressions$FieldExpression:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$41/checkArgs:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$41/apply:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$41:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$39/checkArgs:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$39/apply:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$39:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$43/checkArgs:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$43/apply:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$43:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$IfExpression/evaluate:
edu.stanford.nlp.ling.tokensregex.types.Expressions$IfExpression:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$22/apply:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$22:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$3/compute:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$3:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$44/checkArgs:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$44/apply:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$44:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$25/apply:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$25:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$4/compute:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$4:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$18/checkArgs:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$18/apply:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$18:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$27/checkArgs:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$27/apply:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$27:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$6/compute:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$6:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$ConditionalExpression/<init>:
edu.stanford.nlp.ling.tokensregex.types.Expressions$ConditionalExpression:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$42/checkArgs:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$42/apply:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$42:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$NumericComparator/compare:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$NumericComparator:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$NamedValueFunction/getParamDesc:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$NamedValueFunction/toString:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$NamedValueFunction:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$2/compute:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$2:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$23/apply:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$23:
edu.stanford.nlp.ling.tokensregex.types.Value:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$21/apply:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$21:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$CaseExpression/<init>:
edu.stanford.nlp.ling.tokensregex.types.Expressions$CaseExpression:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$38/checkArgs:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$38/apply:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$38:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$MethodCallExpression/simplify:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$MethodCallExpression/evaluate:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$MethodCallExpression/equals:

#edu/stanford/nlp/ling/tokensregex/types/Expressions$MethodCallExpression/hashCode:
edu.stanford.nlp.ling.tokensregex.types.Expressions$MethodCallExpression:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$40/checkArgs:

#edu/stanford/nlp/ling/tokensregex/types/ValueFunctions$40/apply:
edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$40:
edu.stanford.nlp.ling.tokensregex.parser.TokenSequenceParser$1:
edu.stanford.nlp.ling.tokensregex.parser.TokenSequenceParseException:

#edu/stanford/nlp/ling/tokensregex/parser/TokenMgrError/addEscapes:

#edu/stanford/nlp/ling/tokensregex/parser/TokenMgrError/LexicalErr:
edu.stanford.nlp.ling.tokensregex.parser.TokenMgrError:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/parseInteger:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/parseLongInteger:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/appendSpecialTokens:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/getStringFromTokens:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/RuleList:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/Rule:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/ExpressionExtractorRule:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/AssignmentRule:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/AssignableExpression:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/Expression:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/Index:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/FunctionCallExpression:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/ValueExpression:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/CompositeFieldValue:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/FieldValue:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/BasicValue:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/AssignableVar:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/VarOrRegexVar:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/MethodCallExpression:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/AssignableNestedVarExpression:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/NestedVarExpression:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/NestedFunctionCallExpression:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/ListExpression:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/ListExpression2:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/BasicCondExpression:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/CondGroup:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/CondExpression:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/CaseExpression:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/StringRegex:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/SeqRegex:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/StringNumberValue:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/SeqRegexBasic:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/SeqRegexRepeatTimes:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/SeqRegexDisj:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/SeqRegexDisjConj:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/SeqRegexGroup:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/BracketedNode:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/SeqVar:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/SeqBackRef:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/Node:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/NodeDisj:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/NodeConj:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/NodeDisjConj:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/NodeGroup:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/NodeBasic:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/CoreMapNode:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/AttrValue:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/CoreMapWordPattern:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/MultiNodePattern:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/CoreMapVarValue:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/CoreMapVarNodePattern:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/CoreMapExprNodePattern:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/SeqRegexWithAction:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/Action:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/AnnotateAction:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/SetAttrValues:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/SetAttrValue:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/NumberToken:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/IntegerToken:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/CmpToken:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/RelaxedStringToken:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/RelaxedString:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/RelaxedStringNoIdentifier:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_2_1:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_2_2:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_2_3:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_2_4:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_2_5:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_2_6:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_2_7:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_2_8:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_2_9:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_2_10:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_2_11:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_2_12:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_2_13:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_2_14:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_2_15:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_2_16:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_2_17:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_2_18:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_2_19:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_2_20:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_2_21:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_2_22:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_2_23:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_2_24:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_2_25:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_2_26:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_2_27:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_2_28:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_2_29:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_2_30:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_2_31:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_2_32:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_2_33:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_2_34:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_2_35:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_SeqRegexGroup_756_9_128:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_SeqRegexGroup_756_9_121:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_SeqRegexGroup_755_5_112:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_RelaxedStringToken_1140_3_108:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_MethodCallExpression_364_8_90:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_CmpToken_1133_3_52:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_MethodCallExpression_361_3_33:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_IntegerToken_1126_3_49:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_VarOrRegexVar_353_9_66:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_VarOrRegexVar_351_9_65:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_VarOrRegexVar_349_9_64:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_NumberToken_1119_3_135:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_VarOrRegexVar_347_9_63:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_VarOrRegexVar_345_9_42:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_VarOrRegexVar_345_9_62:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_SeqRegexDisjConj_720_12_107:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_AssignableVar_339_9_89:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_AssignableVar_337_9_72:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_AssignableVar_337_9_88:
Warning: Method:edu.stanford.nlp.ling.tokensregex.parser.TokenSequenceParser.jj_3R_SeqRegexDisjConj_719_5_71 has auto edges.

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_BasicValue_327_9_80:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_BasicValue_325_9_79:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_BasicValue_323_9_78:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_BasicValue_321_9_77:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_BasicValue_319_9_76:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_BasicValue_317_9_67:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_BasicValue_317_9_75:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_SeqRegexRepeatTimes_691_7_126:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_SeqRegexRepeatTimes_689_8_125:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_CompositeFieldValue_285_27_81:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_FieldValue_298_13_39:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3_28:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_SeqRegexRepeatTimes_681_8_124:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3_27:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_SeqRegexRepeatTimes_679_8_123:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_SeqRegexRepeatTimes_677_8_122:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_SeqRegexRepeatTimes_676_3_118:
Warning: Method:edu.stanford.nlp.ling.tokensregex.parser.TokenSequenceParser.jj_3R_CompositeFieldValue_279_9_22 has auto edges.

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_CoreMapExprNodePattern_1045_9_96:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_SeqRegexBasic_657_12_115:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_CoreMapVarNodePattern_1039_9_95:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_SeqRegexBasic_651_9_117:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_CoreMapVarValue_1033_9_134:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_ValueExpression_271_5_45:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_AttrValue_961_80_131:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_SeqRegexBasic_649_9_106:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_ValueExpression_269_5_44:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_SeqRegexBasic_647_9_105:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_ValueExpression_268_3_26:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_SeqRegexBasic_645_9_104:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_SeqRegexBasic_643_9_103:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_FunctionCallExpression_257_10_74:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_SeqRegexBasic_641_9_102:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_SeqRegexBasic_639_9_101:
Warning: Method:edu.stanford.nlp.ling.tokensregex.parser.TokenSequenceParser.jj_3R_FunctionCallExpression_256_8_61 has auto edges.

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_SeqRegexBasic_639_7_97:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_MultiNodePattern_1019_8_120:
Warning: Method:edu.stanford.nlp.ling.tokensregex.parser.TokenSequenceParser.jj_3R_SeqRegexBasic_637_5_87 has auto edges.

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_FunctionCallExpression_253_3_40:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_MultiNodePattern_1015_6_127:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3_35:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_Index_244_3_30:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_AttrValue_965_47_133:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_MultiNodePattern_1006_5_119:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3_34:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_MultiNodePattern_1004_5_111:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3_13:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3_12:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3_11:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3_10:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3_9:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3_8:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_CoreMapWordPattern_986_9_110:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_SeqRegex_604_7_98:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_Expression_224_3_31:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_SeqRegex_602_7_70:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_AttrValue_965_23_132:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_SeqRegex_601_4_59:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_AssignableExpression_217_3_38:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_AttrValue_964_19_58:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_AttrValue_962_19_57:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_StringRegex_592_5_23:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_AttrValue_961_18_56:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_AssignmentRule_209_3_21:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_CaseExpression_579_11_48:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_AttrValue_960_13_37:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3_7:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3_6:
Warning: Method:edu.stanford.nlp.ling.tokensregex.parser.TokenSequenceParser.jj_3R_CaseExpression_577_4_29 has auto edges.

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3_5:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_CoreMapNode_936_25_100:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_ExpressionExtractorRule_188_5_20:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3_4:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_CoreMapNode_936_23_94:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3_33:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_CoreMapNode_948_9_86:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_CoreMapNode_943_9_85:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3_3:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3_2:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3_1:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_CoreMapNode_926_13_93:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_CondExpression_542_12_83:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_CoreMapNode_925_9_69:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_CoreMapNode_925_9_84:
Warning: Method:edu.stanford.nlp.ling.tokensregex.parser.TokenSequenceParser.jj_3R_CondExpression_541_5_68 has auto edges.

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_NodeBasic_916_4_54:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_NodeBasic_913_4_53:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_NodeBasic_913_4_35:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_CondGroup_528_5_92:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_CondGroup_526_5_91:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_CondGroup_525_3_82:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3_32:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3_26:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3_31:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3_30:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_BasicCondExpression_507_7_34:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_NodeGroup_892_3_55:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3_25:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_BasicCondExpression_504_3_99:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_ListExpression2_490_6_47:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_NodeDisjConj_860_12_130:
Warning: Method:edu.stanford.nlp.ling.tokensregex.parser.TokenSequenceParser.jj_3R_ListExpression2_486_3_28 has auto edges.
Warning: Method:edu.stanford.nlp.ling.tokensregex.parser.TokenSequenceParser.jj_3R_NodeDisjConj_859_5_36 has auto edges.

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_ListExpression_473_6_46:
Warning: Method:edu.stanford.nlp.ling.tokensregex.parser.TokenSequenceParser.jj_3R_ListExpression_469_3_27 has auto edges.

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3_24:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3_23:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3_22:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_NestedFunctionCallExpression_442_6_41:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3_21:
Warning: Method:edu.stanford.nlp.ling.tokensregex.parser.TokenSequenceParser.jj_3R_NestedFunctionCallExpression_440_3_24 has auto edges.

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3_20:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_SeqBackRef_808_5_114:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3_19:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3_18:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_NestedVarExpression_410_6_43:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3_17:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_SeqVar_792_3_113:
Warning: Method:edu.stanford.nlp.ling.tokensregex.parser.TokenSequenceParser.jj_3R_NestedVarExpression_408_3_25 has auto edges.

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_BracketedNode_780_5_116:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3_29:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3_16:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_BracketedNode_776_3_109:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3_15:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3_14:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_AssignableNestedVarExpression_382_6_73:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_RelaxedString_1148_5_51:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_SeqRegexGroup_758_9_129:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_RelaxedString_1147_3_50:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_3R_RelaxedString_1147_3_32:
Warning: Method:edu.stanford.nlp.ling.tokensregex.parser.TokenSequenceParser.jj_3R_AssignableNestedVarExpression_380_3_60 has auto edges.

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/<init>:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/ReInit:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/<init>:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/ReInit:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/<init>:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/ReInit:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_consume_token:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_scan_token:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/getNextToken:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/getToken:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_ntk_f:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_add_error_token:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/generateParseException:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_rescan_token:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser/jj_save:
edu.stanford.nlp.ling.tokensregex.parser.TokenSequenceParser:
edu.stanford.nlp.ling.tokensregex.parser.TokenSequenceParserConstants:

#edu/stanford/nlp/ling/tokensregex/parser/SimpleCharStream/ExpandBuff:

#edu/stanford/nlp/ling/tokensregex/parser/SimpleCharStream/FillBuff:

#edu/stanford/nlp/ling/tokensregex/parser/SimpleCharStream/UpdateLineColumn:

#edu/stanford/nlp/ling/tokensregex/parser/SimpleCharStream/readChar:

#edu/stanford/nlp/ling/tokensregex/parser/SimpleCharStream/backup:

#edu/stanford/nlp/ling/tokensregex/parser/SimpleCharStream/ReInit:

#edu/stanford/nlp/ling/tokensregex/parser/SimpleCharStream/<init>:

#edu/stanford/nlp/ling/tokensregex/parser/SimpleCharStream/ReInit:

#edu/stanford/nlp/ling/tokensregex/parser/SimpleCharStream/GetImage:

#edu/stanford/nlp/ling/tokensregex/parser/SimpleCharStream/GetSuffix:

#edu/stanford/nlp/ling/tokensregex/parser/SimpleCharStream/adjustBeginLineColumn:
edu.stanford.nlp.ling.tokensregex.parser.SimpleCharStream:
Warning: Method:edu.stanford.nlp.ling.tokensregex.parser.Token.newToken has auto edges.
edu.stanford.nlp.ling.tokensregex.parser.Token:
edu.stanford.nlp.ling.tokensregex.parser.TokenSequenceParser$LookaheadSuccess:

#edu/stanford/nlp/ling/tokensregex/parser/ParseException/initialise:

#edu/stanford/nlp/ling/tokensregex/parser/ParseException/add_escapes:
edu.stanford.nlp.ling.tokensregex.parser.ParseException:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParserTokenManager/jjStopStringLiteralDfa_0:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParserTokenManager/jjMoveStringLiteralDfa0_0:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParserTokenManager/jjMoveStringLiteralDfa1_0:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParserTokenManager/jjMoveStringLiteralDfa2_0:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParserTokenManager/jjMoveStringLiteralDfa3_0:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParserTokenManager/jjMoveStringLiteralDfa4_0:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParserTokenManager/jjMoveStringLiteralDfa5_0:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParserTokenManager/jjMoveStringLiteralDfa6_0:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParserTokenManager/jjMoveStringLiteralDfa7_0:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParserTokenManager/jjMoveStringLiteralDfa8_0:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParserTokenManager/jjMoveNfa_0:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParserTokenManager/jjFillToken:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParserTokenManager/jjCanMove_0:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParserTokenManager/getNextToken:
Warning: Method:edu.stanford.nlp.ling.tokensregex.parser.TokenSequenceParserTokenManager.SkipLexicalActions has auto edges.
Warning: Method:edu.stanford.nlp.ling.tokensregex.parser.TokenSequenceParserTokenManager.MoreLexicalActions has auto edges.
Warning: Method:edu.stanford.nlp.ling.tokensregex.parser.TokenSequenceParserTokenManager.TokenLexicalActions has auto edges.

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParserTokenManager/jjCheckNAdd:
Warning: Method:edu.stanford.nlp.ling.tokensregex.parser.TokenSequenceParserTokenManager.jjAddStates has auto edges.
Warning: Method:edu.stanford.nlp.ling.tokensregex.parser.TokenSequenceParserTokenManager.jjCheckNAddStates has auto edges.

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParserTokenManager/ReInitRounds:

#edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParserTokenManager/SwitchTo:
edu.stanford.nlp.ling.tokensregex.parser.TokenSequenceParserTokenManager:
edu.stanford.nlp.ling.tokensregex.parser.TokenSequenceParser$JJCalls:
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapUtils$TrieMapFactory:

#edu/stanford/nlp/ling/tokensregex/matcher/MultiMatch/getMultimatched:

#edu/stanford/nlp/ling/tokensregex/matcher/MultiMatch/getMultivalues:

#edu/stanford/nlp/ling/tokensregex/matcher/MultiMatch/getMultioffsets:

#edu/stanford/nlp/ling/tokensregex/matcher/MultiMatch/equals:

#edu/stanford/nlp/ling/tokensregex/matcher/MultiMatch/toString:
edu.stanford.nlp.ling.tokensregex.matcher.MultiMatch:

#edu/stanford/nlp/ling/tokensregex/matcher/ExactMatchCost/cost:
edu.stanford.nlp.ling.tokensregex.matcher.ExactMatchCost:
edu.stanford.nlp.ling.tokensregex.matcher.MatchCostFunction$AbstractMatchCostFunction:

#edu/stanford/nlp/ling/tokensregex/matcher/BoundedCostOrderedMap/put:

#edu/stanford/nlp/ling/tokensregex/matcher/BoundedCostOrderedMap/putAll:

#edu/stanford/nlp/ling/tokensregex/matcher/BoundedCostOrderedMap/valuesList:
edu.stanford.nlp.ling.tokensregex.matcher.BoundedCostOrderedMap:

#edu/stanford/nlp/ling/tokensregex/matcher/Match/getMatchedLength:

#edu/stanford/nlp/ling/tokensregex/matcher/Match/equals:

#edu/stanford/nlp/ling/tokensregex/matcher/Match/hashCode:

#edu/stanford/nlp/ling/tokensregex/matcher/Match/toString:

#edu/stanford/nlp/ling/tokensregex/matcher/Match/getInterval:
edu.stanford.nlp.ling.tokensregex.matcher.Match:

#edu/stanford/nlp/ling/tokensregex/matcher/TrieMapMatcher$MultiMatchQueue/add:

#edu/stanford/nlp/ling/tokensregex/matcher/TrieMapMatcher$MultiMatchQueue/topCost:

#edu/stanford/nlp/ling/tokensregex/matcher/TrieMapMatcher$MultiMatchQueue/size:

#edu/stanford/nlp/ling/tokensregex/matcher/TrieMapMatcher$MultiMatchQueue/toSortedList:
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapMatcher$MultiMatchQueue:
edu.stanford.nlp.ling.tokensregex.matcher.MatchCostFunction:

#edu/stanford/nlp/ling/tokensregex/matcher/TrieMapMatcher$PartialApproxMatch/<init>:

#edu/stanford/nlp/ling/tokensregex/matcher/TrieMapMatcher$PartialApproxMatch/withMatch:

#edu/stanford/nlp/ling/tokensregex/matcher/TrieMapMatcher$PartialApproxMatch/withMatch:

#edu/stanford/nlp/ling/tokensregex/matcher/TrieMapMatcher$PartialApproxMatch/equals:
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapMatcher$PartialApproxMatch:
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapMatcher$1:
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapUtils:

#edu/stanford/nlp/ling/tokensregex/matcher/TrieMapMatcher$MatchQueue/add:
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapMatcher$MatchQueue:
edu.stanford.nlp.ling.tokensregex.matcher.TrieMap$1:
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapUtils$1:

#edu/stanford/nlp/ling/tokensregex/matcher/TrieMap/getChildTrie:

#edu/stanford/nlp/ling/tokensregex/matcher/TrieMap/getChildTrie:

#edu/stanford/nlp/ling/tokensregex/matcher/TrieMap/putChildTrie:

#edu/stanford/nlp/ling/tokensregex/matcher/TrieMap/isLeaf:

#edu/stanford/nlp/ling/tokensregex/matcher/TrieMap/updateTrieStrings:

#edu/stanford/nlp/ling/tokensregex/matcher/TrieMap/size:

#edu/stanford/nlp/ling/tokensregex/matcher/TrieMap/isEmpty:

#edu/stanford/nlp/ling/tokensregex/matcher/TrieMap/containsKey:

#edu/stanford/nlp/ling/tokensregex/matcher/TrieMap/get:

#edu/stanford/nlp/ling/tokensregex/matcher/TrieMap/get:

#edu/stanford/nlp/ling/tokensregex/matcher/TrieMap/put:

#edu/stanford/nlp/ling/tokensregex/matcher/TrieMap/remove:

#edu/stanford/nlp/ling/tokensregex/matcher/TrieMap/remove:

#edu/stanford/nlp/ling/tokensregex/matcher/TrieMap/putAll:

#edu/stanford/nlp/ling/tokensregex/matcher/TrieMap/updateKeys:

#edu/stanford/nlp/ling/tokensregex/matcher/TrieMap/updateValues:

#edu/stanford/nlp/ling/tokensregex/matcher/TrieMap/updateEntries:
edu.stanford.nlp.ling.tokensregex.matcher.TrieMap:

#edu/stanford/nlp/ling/tokensregex/matcher/ApproxMatch/equals:

#edu/stanford/nlp/ling/tokensregex/matcher/ApproxMatch/toString:
edu.stanford.nlp.ling.tokensregex.matcher.ApproxMatch:

#edu/stanford/nlp/ling/tokensregex/matcher/TrieMapMatcher/<init>:

#edu/stanford/nlp/ling/tokensregex/matcher/TrieMapMatcher/findClosestMatches:

#edu/stanford/nlp/ling/tokensregex/matcher/TrieMapMatcher/segment:

#edu/stanford/nlp/ling/tokensregex/matcher/TrieMapMatcher/segment:

#edu/stanford/nlp/ling/tokensregex/matcher/TrieMapMatcher/getNonOverlapping:

#edu/stanford/nlp/ling/tokensregex/matcher/TrieMapMatcher/updateAllMatches:

#edu/stanford/nlp/ling/tokensregex/matcher/TrieMapMatcher/updateAllMatchesWithStart:

#edu/stanford/nlp/ling/tokensregex/matcher/TrieMapMatcher/addToQueue:

#edu/stanford/nlp/ling/tokensregex/matcher/TrieMapMatcher/lambda$static$0:
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapMatcher:

#edu/stanford/nlp/misc/DependencyAnalyzer$Identifier/equals:
edu.stanford.nlp.misc.DependencyAnalyzer$Identifier:

#edu/stanford/nlp/misc/DependencyAnalyzer/addStartingClasses:

#edu/stanford/nlp/misc/DependencyAnalyzer/transitiveClosure:

#edu/stanford/nlp/misc/DependencyAnalyzer/main:

#edu/stanford/nlp/misc/DependencyAnalyzer/prependPackage:

#edu/stanford/nlp/misc/DependencyAnalyzer/<init>:

#edu/stanford/nlp/misc/DependencyAnalyzer/canonicalIdentifier:
edu.stanford.nlp.misc.DependencyAnalyzer:

#edu/stanford/nlp/ui/JarFileChooser/show:

#edu/stanford/nlp/ui/JarFileChooser/showListSelectionDialog:

#edu/stanford/nlp/ui/JarFileChooser/getFiles:
edu.stanford.nlp.ui.JarFileChooser:

#edu/stanford/nlp/ui/JarFileChooser$1/mouseClicked:
edu.stanford.nlp.ui.JarFileChooser$1:

#edu/stanford/nlp/loglinear/learning/AbstractBatchOptimizer$GradientWorker/run:
edu.stanford.nlp.loglinear.learning.AbstractBatchOptimizer$GradientWorker:

#edu/stanford/nlp/loglinear/learning/BacktrackingAdaGradOptimizer/updateWeights:

#edu/stanford/nlp/loglinear/learning/BacktrackingAdaGradOptimizer/lambda$updateWeights$2:
edu.stanford.nlp.loglinear.learning.BacktrackingAdaGradOptimizer:
edu.stanford.nlp.loglinear.learning.AbstractBatchOptimizer$OptimizationState:

#edu/stanford/nlp/loglinear/learning/AbstractBatchOptimizer$Constraint/applyToWeights:

#edu/stanford/nlp/loglinear/learning/AbstractBatchOptimizer$Constraint/applyToDerivative:
edu.stanford.nlp.loglinear.learning.AbstractBatchOptimizer$Constraint:

#edu/stanford/nlp/loglinear/learning/AbstractBatchOptimizer/optimize:
edu.stanford.nlp.loglinear.learning.AbstractBatchOptimizer:
edu.stanford.nlp.loglinear.learning.AbstractDifferentiableFunction:
edu.stanford.nlp.loglinear.learning.BacktrackingAdaGradOptimizer$AdaGradOptimizationState:

#edu/stanford/nlp/loglinear/learning/LogLikelihoodDifferentiableFunction/getSummaryForInstance:

#edu/stanford/nlp/loglinear/learning/LogLikelihoodDifferentiableFunction/getDeterministicAssignment:
edu.stanford.nlp.loglinear.learning.LogLikelihoodDifferentiableFunction:

#edu/stanford/nlp/loglinear/learning/AbstractBatchOptimizer$TrainingWorker/<init>:

#edu/stanford/nlp/loglinear/learning/AbstractBatchOptimizer$TrainingWorker/estimateRelativeRuntime:

#edu/stanford/nlp/loglinear/learning/AbstractBatchOptimizer$TrainingWorker/run:
edu.stanford.nlp.loglinear.learning.AbstractBatchOptimizer$TrainingWorker:
Warning: Method:edu.stanford.nlp.loglinear.storage.ModelBatch.readFrom has incoming edges.

#edu/stanford/nlp/loglinear/storage/ModelBatch/writeToStream:

#edu/stanford/nlp/loglinear/storage/ModelBatch/writeToStreamWithoutFactors:
edu.stanford.nlp.loglinear.storage.ModelBatch:
edu.stanford.nlp.loglinear.benchmarks.CoNLLBenchmark$CoNLLSentence:

#edu/stanford/nlp/loglinear/benchmarks/GamePlayerBenchmark$SampleState/push:

#edu/stanford/nlp/loglinear/benchmarks/GamePlayerBenchmark$SampleState/pop:
edu.stanford.nlp.loglinear.benchmarks.GamePlayerBenchmark$SampleState:

#edu/stanford/nlp/loglinear/benchmarks/GamePlayerBenchmark/main:

#edu/stanford/nlp/loglinear/benchmarks/GamePlayerBenchmark/gameplay:

#edu/stanford/nlp/loglinear/benchmarks/GamePlayerBenchmark/selectOrCreateChildAtRandom:
edu.stanford.nlp.loglinear.benchmarks.GamePlayerBenchmark:

#edu/stanford/nlp/loglinear/benchmarks/CoNLLBenchmark/benchmarkOptimizer:

#edu/stanford/nlp/loglinear/benchmarks/CoNLLBenchmark/getWordShape:

#edu/stanford/nlp/loglinear/benchmarks/CoNLLBenchmark/generateSentenceModel:

#edu/stanford/nlp/loglinear/benchmarks/CoNLLBenchmark/getSentences:

#edu/stanford/nlp/loglinear/benchmarks/CoNLLBenchmark/getEmbeddings:

#edu/stanford/nlp/loglinear/benchmarks/CoNLLBenchmark/loadEmbeddingsFromFile:
edu.stanford.nlp.loglinear.benchmarks.CoNLLBenchmark:

#edu/stanford/nlp/loglinear/benchmarks/ConcatVectorBenchmark$ConcatVectorConstructionRecord/getRandomSizes:

#edu/stanford/nlp/loglinear/benchmarks/ConcatVectorBenchmark$ConcatVectorConstructionRecord/<init>:

#edu/stanford/nlp/loglinear/benchmarks/ConcatVectorBenchmark$ConcatVectorConstructionRecord/create:
edu.stanford.nlp.loglinear.benchmarks.ConcatVectorBenchmark$ConcatVectorConstructionRecord:

#edu/stanford/nlp/loglinear/benchmarks/ConcatVectorBenchmark/main:

#edu/stanford/nlp/loglinear/benchmarks/ConcatVectorBenchmark/cloneBenchmark:

#edu/stanford/nlp/loglinear/benchmarks/ConcatVectorBenchmark/makeVectors:

#edu/stanford/nlp/loglinear/benchmarks/ConcatVectorBenchmark/addBenchmark:

#edu/stanford/nlp/loglinear/benchmarks/ConcatVectorBenchmark/dotProductBenchmark:

#edu/stanford/nlp/loglinear/benchmarks/ConcatVectorBenchmark/constructionBenchmark:

#edu/stanford/nlp/loglinear/benchmarks/ConcatVectorBenchmark/protoSerializationBenchmark:
edu.stanford.nlp.loglinear.benchmarks.ConcatVectorBenchmark:
edu.stanford.nlp.loglinear.benchmarks.ConcatVectorBenchmark$SerializationReport:

#edu/stanford/nlp/loglinear/benchmarks/CoNLLFeaturizer/getWordShape:

#edu/stanford/nlp/loglinear/benchmarks/CoNLLFeaturizer/annotate:

#edu/stanford/nlp/loglinear/benchmarks/CoNLLFeaturizer/lambda$annotate$0:
edu.stanford.nlp.loglinear.benchmarks.CoNLLFeaturizer:

#edu/stanford/nlp/loglinear/model/NDArrayDoubles/<init>:

#edu/stanford/nlp/loglinear/model/NDArrayDoubles/fastPassByReferenceIterator:

#edu/stanford/nlp/loglinear/model/NDArrayDoubles/combinatorialNeighborStatesCount:

#edu/stanford/nlp/loglinear/model/NDArrayDoubles/getTableAccessOffset:
edu.stanford.nlp.loglinear.model.NDArrayDoubles:
edu.stanford.nlp.loglinear.model.NDArrayDoubles$1:

#edu/stanford/nlp/loglinear/model/ConcatVectorNamespace/newWeightsVector:

#edu/stanford/nlp/loglinear/model/ConcatVectorNamespace/ensureFeature:

#edu/stanford/nlp/loglinear/model/ConcatVectorNamespace/ensureSparseFeature:

#edu/stanford/nlp/loglinear/model/ConcatVectorNamespace/debugVector:

#edu/stanford/nlp/loglinear/model/ConcatVectorNamespace/debugFeatureValue:
edu.stanford.nlp.loglinear.model.ConcatVectorNamespace:

#edu/stanford/nlp/loglinear/model/NDArrayDoubles$2/hasNext:

#edu/stanford/nlp/loglinear/model/NDArrayDoubles$2/next:
edu.stanford.nlp.loglinear.model.NDArrayDoubles$2:

#edu/stanford/nlp/loglinear/model/NDArray/<init>:

#edu/stanford/nlp/loglinear/model/NDArray/fastPassByReferenceIterator:

#edu/stanford/nlp/loglinear/model/NDArray/combinatorialNeighborStatesCount:

#edu/stanford/nlp/loglinear/model/NDArray/getTableAccessOffset:
edu.stanford.nlp.loglinear.model.NDArray:

#edu/stanford/nlp/loglinear/model/GraphicalModel$Factor/valueEquals:

#edu/stanford/nlp/loglinear/model/GraphicalModel$Factor/getProtoBuilder:

#edu/stanford/nlp/loglinear/model/GraphicalModel$Factor/readFromProto:
edu.stanford.nlp.loglinear.model.GraphicalModel$Factor:
Warning: Method:edu.stanford.nlp.loglinear.model.GraphicalModel.getVariableMetaDataByReference has incoming edges.

#edu/stanford/nlp/loglinear/model/GraphicalModel/addFactor:

#edu/stanford/nlp/loglinear/model/GraphicalModel/addFactor:

#edu/stanford/nlp/loglinear/model/GraphicalModel/getVariableSizes:

#edu/stanford/nlp/loglinear/model/GraphicalModel/getProtoBuilder:

#edu/stanford/nlp/loglinear/model/GraphicalModel/readFromProto:

#edu/stanford/nlp/loglinear/model/GraphicalModel/valueEquals:

#edu/stanford/nlp/loglinear/model/GraphicalModel/toString:

#edu/stanford/nlp/loglinear/model/GraphicalModel/cloneModel:

#edu/stanford/nlp/loglinear/model/GraphicalModel/getProtoMetaDataBuilder:

#edu/stanford/nlp/loglinear/model/GraphicalModel/readMetaDataFromProto:
edu.stanford.nlp.loglinear.model.GraphicalModel:
edu.stanford.nlp.loglinear.model.NDArray$1:

#edu/stanford/nlp/loglinear/model/ConcatVector/<init>:

#edu/stanford/nlp/loglinear/model/ConcatVector/newEmptyClone:

#edu/stanford/nlp/loglinear/model/ConcatVector/setDenseComponent:

#edu/stanford/nlp/loglinear/model/ConcatVector/setSparseComponent:

#edu/stanford/nlp/loglinear/model/ConcatVector/dotProduct:

#edu/stanford/nlp/loglinear/model/ConcatVector/addVectorInPlace:

#edu/stanford/nlp/loglinear/model/ConcatVector/elementwiseProductInPlace:

#edu/stanford/nlp/loglinear/model/ConcatVector/mapInPlace:

#edu/stanford/nlp/loglinear/model/ConcatVector/getDenseComponent:

#edu/stanford/nlp/loglinear/model/ConcatVector/getValueAt:

#edu/stanford/nlp/loglinear/model/ConcatVector/getSparseIndex:

#edu/stanford/nlp/loglinear/model/ConcatVector/getProtoBuilder:

#edu/stanford/nlp/loglinear/model/ConcatVector/readFromProto:

#edu/stanford/nlp/loglinear/model/ConcatVector/valueEquals:

#edu/stanford/nlp/loglinear/model/ConcatVector/toString:

#edu/stanford/nlp/loglinear/model/ConcatVector/increaseSizeTo:
Fail to analyze: ../programs/stanford-corenlp-4.4.0/target/classes/edu/stanford/nlp/loglinear/model/ConcatVector.class

#edu/stanford/nlp/loglinear/model/ConcatVectorTable/getProtoBuilder:

#edu/stanford/nlp/loglinear/model/ConcatVectorTable/readFromProto:

#edu/stanford/nlp/loglinear/model/ConcatVectorTable/valueEquals:

#edu/stanford/nlp/loglinear/model/ConcatVectorTable/cacheVectors:

#edu/stanford/nlp/loglinear/model/ConcatVectorTable/releaseCache:

#edu/stanford/nlp/loglinear/model/ConcatVectorTable/cloneTable:
edu.stanford.nlp.loglinear.model.ConcatVectorTable:

#edu/stanford/nlp/loglinear/model/NDArray$2/hasNext:

#edu/stanford/nlp/loglinear/model/NDArray$2/next:
edu.stanford.nlp.loglinear.model.NDArray$2:
edu.stanford.nlp.loglinear.model.proto.GraphicalModelProto$1:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Component/<init>:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Component/hasSparse:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Component/isInitialized:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Component/writeTo:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Component/getSerializedSize:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Component/equals:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Component/hashCode:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Component/toBuilder:
edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto$ConcatVector$Component:
edu.stanford.nlp.loglinear.model.proto.ConcatVectorTableProto$ConcatVectorTableOrBuilder:
edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto$ConcatVectorOrBuilder:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/maybeForceBuilderInitialization:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/clear:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/build:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/buildPartial:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/mergeFrom:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/mergeFrom:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/isInitialized:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/mergeFrom:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/ensureFactorIsMutable:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/getFactorList:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/getFactorCount:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/getFactor:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/setFactor:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/setFactor:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/addFactor:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/addFactor:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/addFactor:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/addFactor:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/addAllFactor:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/clearFactor:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/removeFactor:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/getFactorOrBuilder:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/getFactorOrBuilderList:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/getFactorFieldBuilder:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/ensureVariableMetaDataIsMutable:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/getVariableMetaDataList:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/getVariableMetaDataCount:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/getVariableMetaData:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/setVariableMetaData:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/setVariableMetaData:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/addVariableMetaData:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/addVariableMetaData:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/addVariableMetaData:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/addVariableMetaData:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/addAllVariableMetaData:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/clearVariableMetaData:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/removeVariableMetaData:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/getVariableMetaDataOrBuilder:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/getVariableMetaDataOrBuilderList:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/getVariableMetaDataFieldBuilder:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/hasMetaData:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/getMetaData:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/setMetaData:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/setMetaData:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/mergeMetaData:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/clearMetaData:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/getMetaDataOrBuilder:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel$Builder/getMetaDataFieldBuilder:
edu.stanford.nlp.loglinear.model.proto.GraphicalModelProto$GraphicalModel$Builder:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorTableProto$ConcatVectorTable/<init>:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorTableProto$ConcatVectorTable/isInitialized:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorTableProto$ConcatVectorTable/writeTo:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorTableProto$ConcatVectorTable/getSerializedSize:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorTableProto$ConcatVectorTable/equals:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorTableProto$ConcatVectorTable/hashCode:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorTableProto$ConcatVectorTable/toBuilder:
edu.stanford.nlp.loglinear.model.proto.ConcatVectorTableProto$ConcatVectorTable:
edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$MetaData$Builder/build:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$MetaData$Builder/buildPartial:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$MetaData$Builder/mergeFrom:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$MetaData$Builder/mergeFrom:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$MetaData$Builder/mergeFrom:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$MetaData$Builder/ensureKeyIsMutable:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$MetaData$Builder/setKey:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$MetaData$Builder/addKey:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$MetaData$Builder/addKeyBytes:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$MetaData$Builder/ensureValueIsMutable:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$MetaData$Builder/setValue:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$MetaData$Builder/addValue:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$MetaData$Builder/addValueBytes:
edu.stanford.nlp.loglinear.model.proto.GraphicalModelProto$MetaData$Builder:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorTableProto$ConcatVectorTable$Builder/maybeForceBuilderInitialization:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorTableProto$ConcatVectorTable$Builder/clear:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorTableProto$ConcatVectorTable$Builder/build:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorTableProto$ConcatVectorTable$Builder/buildPartial:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorTableProto$ConcatVectorTable$Builder/mergeFrom:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorTableProto$ConcatVectorTable$Builder/mergeFrom:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorTableProto$ConcatVectorTable$Builder/isInitialized:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorTableProto$ConcatVectorTable$Builder/mergeFrom:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorTableProto$ConcatVectorTable$Builder/ensureDimensionSizeIsMutable:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorTableProto$ConcatVectorTable$Builder/getDimensionSizeList:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorTableProto$ConcatVectorTable$Builder/ensureFactorTableIsMutable:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorTableProto$ConcatVectorTable$Builder/getFactorTableList:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorTableProto$ConcatVectorTable$Builder/getFactorTableCount:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorTableProto$ConcatVectorTable$Builder/getFactorTable:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorTableProto$ConcatVectorTable$Builder/setFactorTable:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorTableProto$ConcatVectorTable$Builder/setFactorTable:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorTableProto$ConcatVectorTable$Builder/addFactorTable:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorTableProto$ConcatVectorTable$Builder/addFactorTable:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorTableProto$ConcatVectorTable$Builder/addFactorTable:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorTableProto$ConcatVectorTable$Builder/addFactorTable:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorTableProto$ConcatVectorTable$Builder/addAllFactorTable:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorTableProto$ConcatVectorTable$Builder/clearFactorTable:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorTableProto$ConcatVectorTable$Builder/removeFactorTable:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorTableProto$ConcatVectorTable$Builder/getFactorTableOrBuilder:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorTableProto$ConcatVectorTable$Builder/getFactorTableOrBuilderList:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorTableProto$ConcatVectorTable$Builder/getFactorTableFieldBuilder:
edu.stanford.nlp.loglinear.model.proto.ConcatVectorTableProto$ConcatVectorTable$Builder:
edu.stanford.nlp.loglinear.model.proto.GraphicalModelProto:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor$Builder/maybeForceBuilderInitialization:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor$Builder/clear:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor$Builder/build:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor$Builder/buildPartial:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor$Builder/mergeFrom:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor$Builder/mergeFrom:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor$Builder/isInitialized:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor$Builder/mergeFrom:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor$Builder/hasFeaturesTable:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor$Builder/getFeaturesTable:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor$Builder/setFeaturesTable:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor$Builder/setFeaturesTable:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor$Builder/mergeFeaturesTable:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor$Builder/clearFeaturesTable:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor$Builder/getFeaturesTableOrBuilder:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor$Builder/getFeaturesTableFieldBuilder:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor$Builder/ensureNeighborIsMutable:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor$Builder/getNeighborList:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor$Builder/hasMetaData:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor$Builder/getMetaData:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor$Builder/setMetaData:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor$Builder/setMetaData:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor$Builder/mergeMetaData:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor$Builder/clearMetaData:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor$Builder/getMetaDataOrBuilder:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor$Builder/getMetaDataFieldBuilder:
edu.stanford.nlp.loglinear.model.proto.GraphicalModelProto$Factor$Builder:
edu.stanford.nlp.loglinear.model.proto.ConcatVectorTableProto:
edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto$ConcatVector$ComponentOrBuilder:
edu.stanford.nlp.loglinear.model.proto.ConcatVectorTableProto$ConcatVectorTable$1:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel/<init>:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel/hasMetaData:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel/getMetaData:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel/getMetaDataOrBuilder:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel/isInitialized:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel/writeTo:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel/getSerializedSize:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel/equals:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel/hashCode:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$GraphicalModel/toBuilder:
edu.stanford.nlp.loglinear.model.proto.GraphicalModelProto$GraphicalModel:
edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto$ConcatVector$1:
edu.stanford.nlp.loglinear.model.proto.GraphicalModelProto$FactorOrBuilder:
edu.stanford.nlp.loglinear.model.proto.GraphicalModelProto$MetaData$1:
edu.stanford.nlp.loglinear.model.proto.GraphicalModelProto$MetaDataOrBuilder:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector/<init>:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector/isInitialized:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector/writeTo:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector/getSerializedSize:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector/equals:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector/hashCode:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector/toBuilder:
edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto$ConcatVector:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$MetaData/<init>:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$MetaData/isInitialized:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$MetaData/writeTo:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$MetaData/getSerializedSize:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$MetaData/equals:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$MetaData/hashCode:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$MetaData/toBuilder:
edu.stanford.nlp.loglinear.model.proto.GraphicalModelProto$MetaData:
edu.stanford.nlp.loglinear.model.proto.GraphicalModelProto$GraphicalModelOrBuilder:
edu.stanford.nlp.loglinear.model.proto.GraphicalModelProto$GraphicalModel$1:
edu.stanford.nlp.loglinear.model.proto.ConcatVectorTableProto$1:
edu.stanford.nlp.loglinear.model.proto.GraphicalModelProto$Factor$1:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Component$Builder/build:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Component$Builder/buildPartial:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Component$Builder/mergeFrom:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Component$Builder/mergeFrom:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Component$Builder/isInitialized:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Component$Builder/mergeFrom:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Component$Builder/hasSparse:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Component$Builder/ensureDataIsMutable:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Component$Builder/getDataList:
edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto$ConcatVector$Component$Builder:
edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto$ConcatVector$Component$1:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Builder/maybeForceBuilderInitialization:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Builder/clear:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Builder/build:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Builder/buildPartial:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Builder/mergeFrom:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Builder/mergeFrom:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Builder/isInitialized:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Builder/mergeFrom:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Builder/ensureComponentIsMutable:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Builder/getComponentList:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Builder/getComponentCount:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Builder/getComponent:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Builder/setComponent:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Builder/setComponent:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Builder/addComponent:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Builder/addComponent:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Builder/addComponent:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Builder/addComponent:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Builder/addAllComponent:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Builder/clearComponent:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Builder/removeComponent:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Builder/getComponentOrBuilder:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Builder/getComponentOrBuilderList:

#edu/stanford/nlp/loglinear/model/proto/ConcatVectorProto$ConcatVector$Builder/getComponentFieldBuilder:
edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto$ConcatVector$Builder:
edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto$1:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor/<init>:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor/hasFeaturesTable:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor/getFeaturesTable:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor/getFeaturesTableOrBuilder:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor/hasMetaData:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor/getMetaData:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor/getMetaDataOrBuilder:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor/isInitialized:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor/writeTo:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor/getSerializedSize:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor/equals:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor/hashCode:

#edu/stanford/nlp/loglinear/model/proto/GraphicalModelProto$Factor/toBuilder:
edu.stanford.nlp.loglinear.model.proto.GraphicalModelProto$Factor:
edu.stanford.nlp.loglinear.inference.CliqueTree$1:
edu.stanford.nlp.loglinear.inference.CliqueTree$CachedFactorWithObservations:
edu.stanford.nlp.loglinear.inference.CliqueTree$MarginalResult:

#edu/stanford/nlp/loglinear/inference/CliqueTree/calculateMAP:

#edu/stanford/nlp/loglinear/inference/CliqueTree/messagePassing:

#edu/stanford/nlp/loglinear/inference/CliqueTree/getObservedAssignments:

#edu/stanford/nlp/loglinear/inference/CliqueTree/marginalizeMessage:

#edu/stanford/nlp/loglinear/inference/CliqueTree/domainsOverlap:

#edu/stanford/nlp/loglinear/inference/CliqueTree/assertsEnabled:
edu.stanford.nlp.loglinear.inference.CliqueTree:

#edu/stanford/nlp/loglinear/inference/TableFactor/<init>:

#edu/stanford/nlp/loglinear/inference/TableFactor/<init>:

#edu/stanford/nlp/loglinear/inference/TableFactor/getSummedMarginals:

#edu/stanford/nlp/loglinear/inference/TableFactor/getMaxedMarginals:

#edu/stanford/nlp/loglinear/inference/TableFactor/sumOut:

#edu/stanford/nlp/loglinear/inference/TableFactor/multiply:

#edu/stanford/nlp/loglinear/inference/TableFactor/valueSum:

#edu/stanford/nlp/loglinear/inference/TableFactor/marginalize:

#edu/stanford/nlp/loglinear/inference/TableFactor/getVariableSize:

#edu/stanford/nlp/loglinear/inference/TableFactor/normalizeLogArr:

#edu/stanford/nlp/loglinear/inference/TableFactor/<init>:

#edu/stanford/nlp/loglinear/inference/TableFactor/assertsEnabled:

#edu/stanford/nlp/loglinear/inference/TableFactor/lambda$observe$2:
edu.stanford.nlp.loglinear.inference.TableFactor:
edu.stanford.nlp.loglinear.inference.CliqueTree$MarginalizationMethod:

#edu/stanford/nlp/pipeline/CoreMapAttributeAggregator$4/aggregate:
edu.stanford.nlp.pipeline.CoreMapAttributeAggregator$4:

#edu/stanford/nlp/pipeline/TaggedTextOutputter/print:
edu.stanford.nlp.pipeline.TaggedTextOutputter:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$TokensRegexResponse:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer$TokensRegexHandler/handle:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer$TokensRegexHandler/lambda$handle$6:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer$TokensRegexHandler/lambda$null$5:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer$TokensRegexHandler/lambda$null$3:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer$TokensRegexHandler/lambda$null$2:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer$TokensRegexHandler/lambda$null$1:
edu.stanford.nlp.pipeline.StanfordCoreNLPServer$TokensRegexHandler:

#edu/stanford/nlp/pipeline/WebServiceAnnotator/ping:

#edu/stanford/nlp/pipeline/WebServiceAnnotator/ensureServer:

#edu/stanford/nlp/pipeline/WebServiceAnnotator/unmount:
edu.stanford.nlp.pipeline.WebServiceAnnotator:
edu.stanford.nlp.pipeline.CoreNLPProtos$SemgrexRequest$Dependencies$1:
edu.stanford.nlp.pipeline.CoreNLPProtos$TokenLocation$1:
edu.stanford.nlp.pipeline.CoreNLPProtos$SemgrexResponse$NamedRelationOrBuilder:
edu.stanford.nlp.pipeline.UDFeatureAnnotator:
edu.stanford.nlp.pipeline.CoreNLPProtos$DependencyGraphOrBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$FlattenedParseTree$NodeOrBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$DependencyGraph$Node$1:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple/hasSubject:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple/getSubject:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple/getSubjectBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple/hasRelation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple/getRelation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple/getRelationBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple/hasObject:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple/getObject:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple/getObjectBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple/hasConfidence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple/hasTree:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple/getTree:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple/getTreeOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple/hasIstmod:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple/hasPrefixBe:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple/hasSuffixBe:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple/hasSuffixOf:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$RelationTriple:

#edu/stanford/nlp/pipeline/AnnotatorPool$CachedAnnotator/<init>:

#edu/stanford/nlp/pipeline/AnnotatorPool$CachedAnnotator/equals:

#edu/stanford/nlp/pipeline/AnnotatorPool$CachedAnnotator/hashCode:
edu.stanford.nlp.pipeline.AnnotatorPool$CachedAnnotator:
edu.stanford.nlp.pipeline.CoreNLPProtos$1:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$FlattenedParseTree:
edu.stanford.nlp.pipeline.AnnotationSerializer$IntermediateEdge:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$Builder/maybeForceBuilderInitialization:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$Builder/clear:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$Builder/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$Builder/ensureTreebankIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$Builder/getTreebankList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$Builder/getTreebankCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$Builder/getTreebank:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$Builder/setTreebank:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$Builder/setTreebank:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$Builder/addTreebank:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$Builder/addTreebank:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$Builder/addTreebank:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$Builder/addTreebank:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$Builder/addAllTreebank:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$Builder/clearTreebank:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$Builder/removeTreebank:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$Builder/getTreebankOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$Builder/getTreebankOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$Builder/getTreebankFieldBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$EvaluateParserRequest$Builder:

#edu/stanford/nlp/pipeline/CoreEntityMention/canonicalEntityMention:
edu.stanford.nlp.pipeline.CoreEntityMention:

#edu/stanford/nlp/pipeline/ServerAnnotatorImplementations$SingletonAnnotator/<init>:
edu.stanford.nlp.pipeline.ServerAnnotatorImplementations$SingletonAnnotator:

#edu/stanford/nlp/pipeline/TokensRegexNERAnnotator$Entry/<init>:

#edu/stanford/nlp/pipeline/TokensRegexNERAnnotator$Entry/toString:
edu.stanford.nlp.pipeline.TokensRegexNERAnnotator$Entry:

#edu/stanford/nlp/pipeline/CoreDocument/wrapAnnotations:
edu.stanford.nlp.pipeline.CoreDocument:

#edu/stanford/nlp/pipeline/QuoteAttributionAnnotator/<init>:

#edu/stanford/nlp/pipeline/QuoteAttributionAnnotator/entityMentionsToCharacterMap:

#edu/stanford/nlp/pipeline/QuoteAttributionAnnotator/annotate:

#edu/stanford/nlp/pipeline/QuoteAttributionAnnotator/requires:
edu.stanford.nlp.pipeline.QuoteAttributionAnnotator:
edu.stanford.nlp.pipeline.ProtobufAnnotationSerializer$1:
edu.stanford.nlp.pipeline.CoreNLPProtos$Relation$1:
edu.stanford.nlp.pipeline.StanfordCoreNLPServer$PingHandler:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$GraphResult/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$GraphResult/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$GraphResult/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$GraphResult/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$GraphResult/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$GraphResult/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$GraphResult/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$SemgrexResponse$GraphResult:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/hasMentionID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/hasMentionType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/getMentionType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/getMentionTypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/hasNumber:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/getNumber:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/getNumberBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/hasGender:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/getGender:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/getGenderBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/hasAnimacy:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/getAnimacy:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/getAnimacyBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/hasPerson:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/getPerson:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/getPersonBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/hasStartIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/hasEndIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/hasHeadIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/hasHeadString:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/getHeadString:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/getHeadStringBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/hasNerString:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/getNerString:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/getNerStringBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/hasOriginalRef:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/hasGoldCorefClusterID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/hasCorefClusterID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/hasMentionNum:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/hasSentNum:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/hasUtter:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/hasParagraph:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/hasIsSubject:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/hasIsDirectObject:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/hasIsIndirectObject:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/hasIsPrepositionObject:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/hasHasTwin:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/hasGeneric:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/hasIsSingleton:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/hasHasBasicDependency:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/hasHasEnhancedDepenedncy:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/hasHasContextParseTree:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/hasHeadIndexedWord:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/getHeadIndexedWord:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/getHeadIndexedWordOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/hasDependingVerb:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/getDependingVerb:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/getDependingVerbOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/hasHeadWord:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/getHeadWord:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/getHeadWordOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/hasSpeakerInfo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/getSpeakerInfo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/getSpeakerInfoOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$Mention:
edu.stanford.nlp.pipeline.QuoteAttributionAnnotator$MentionAnnotation:
edu.stanford.nlp.pipeline.JSONOutputter$Writer:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/readUndelimited:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/toProto:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/toProtoBuilder:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/toProto:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/toProtoBuilder:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/toProto:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/toProtoBuilder:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/toProto:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/toProto:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/toProto:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/toProtoSection:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/createIndexedWordProtoFromIW:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/createIndexedWordProtoFromCL:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/toProto:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/toProto:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/toProto:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/toProto:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/toProto:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/toProto:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/toProto:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/toMapStringStringProto:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/toMapIntStringProto:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/toProtoQuote:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/toProtoMention:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/fromProto:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/fromProto:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/fromProtoNoTokens:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/loadSentenceMentions:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/fromProto:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/toFlattenedTree:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/toFlattenedTree:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/fromProto:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/fromProto:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/fromProto:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/fromProto:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/fromProto:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/fromProto:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/fromProto:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/fromProto:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/fromProto:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/fromProto:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/fromProtoNoTokens:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/fromProto:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/fromProto:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/fromProto:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/fromProto:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/fromProto:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/fromProto:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/recoverOriginalText:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/lambda$fromProto$18:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/lambda$fromProto$17:

#edu/stanford/nlp/pipeline/ProtobufAnnotationSerializer/lambda$fromProto$16:
edu.stanford.nlp.pipeline.ProtobufAnnotationSerializer:
edu.stanford.nlp.pipeline.CoreNLPProtos$FlattenedParseTree$Node$1:

#edu/stanford/nlp/pipeline/CorefMentionAnnotator/synchCorefMentionEntityMention:

#edu/stanford/nlp/pipeline/CorefMentionAnnotator/annotate:

#edu/stanford/nlp/pipeline/CorefMentionAnnotator/getMentionFinder:
edu.stanford.nlp.pipeline.CorefMentionAnnotator:

#edu/stanford/nlp/pipeline/StanfordCoreNLPClient/<init>:

#edu/stanford/nlp/pipeline/StanfordCoreNLPClient/<init>:

#edu/stanford/nlp/pipeline/StanfordCoreNLPClient/getBackends:

#edu/stanford/nlp/pipeline/StanfordCoreNLPClient/annotate:

#edu/stanford/nlp/pipeline/StanfordCoreNLPClient/doAnnotation:

#edu/stanford/nlp/pipeline/StanfordCoreNLPClient/checkStatus:

#edu/stanford/nlp/pipeline/StanfordCoreNLPClient/run:

#edu/stanford/nlp/pipeline/StanfordCoreNLPClient/shutdown:

#edu/stanford/nlp/pipeline/StanfordCoreNLPClient/main:

#edu/stanford/nlp/pipeline/StanfordCoreNLPClient/lambda$shell$5:

#edu/stanford/nlp/pipeline/StanfordCoreNLPClient/lambda$new$1:
edu.stanford.nlp.pipeline.StanfordCoreNLPClient:

#edu/stanford/nlp/pipeline/CoNLLUReader/<init>:

#edu/stanford/nlp/pipeline/CoNLLUReader/readCoNLLUFileCreateCoNLLXLines:

#edu/stanford/nlp/pipeline/CoNLLUReader/readCoNLLUFileCreateCoNLLUDocuments:

#edu/stanford/nlp/pipeline/CoNLLUReader/convertCoNLLUDocumentToAnnotation:

#edu/stanford/nlp/pipeline/CoNLLUReader/convertCoNLLUSentenceToCoreMap:
edu.stanford.nlp.pipeline.CoNLLUReader:

#edu/stanford/nlp/pipeline/CoreMapAttributeAggregator$6/aggregate:
edu.stanford.nlp.pipeline.CoreMapAttributeAggregator$6:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Node$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Node$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Node$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Node$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Node$Builder/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Node$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Node$Builder/hasSentenceIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Node$Builder/hasIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Node$Builder/hasCopyAnnotation:
edu.stanford.nlp.pipeline.CoreNLPProtos$DependencyGraph$Node$Builder:
edu.stanford.nlp.pipeline.CoreNLPProtos$TokensRegexResponseOrBuilder:

#edu/stanford/nlp/pipeline/CoreQuote/<init>:
edu.stanford.nlp.pipeline.CoreQuote:

#edu/stanford/nlp/pipeline/LabeledChunkIdentifier/getAnnotatedChunks:

#edu/stanford/nlp/pipeline/LabeledChunkIdentifier/isEndOfChunk:

#edu/stanford/nlp/pipeline/LabeledChunkIdentifier/isEndOfChunk:

#edu/stanford/nlp/pipeline/LabeledChunkIdentifier/isStartOfChunk:

#edu/stanford/nlp/pipeline/LabeledChunkIdentifier/isStartOfChunk:

#edu/stanford/nlp/pipeline/LabeledChunkIdentifier/isChunk:

#edu/stanford/nlp/pipeline/LabeledChunkIdentifier/getTagType:
edu.stanford.nlp.pipeline.LabeledChunkIdentifier:
edu.stanford.nlp.pipeline.AbstractTextAnnotationCreator:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/maybeForceBuilderInitialization:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/clear:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/hasMatchIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/ensureNodeIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/getNodeList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/getNodeCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/getNode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/setNode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/setNode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/addNode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/addNode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/addNode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/addNode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/addAllNode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/clearNode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/removeNode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/getNodeOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/getNodeOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/getNodeFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/ensureRelnIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/getRelnList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/getRelnCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/getReln:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/setReln:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/setReln:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/addReln:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/addReln:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/addReln:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/addReln:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/addAllReln:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/clearReln:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/removeReln:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/getRelnOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/getRelnOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match$Builder/getRelnFieldBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$SemgrexResponse$Match$Builder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$MatchLocation$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$MatchLocation$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$MatchLocation$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$MatchLocation$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$MatchLocation$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$MatchLocation$Builder/hasText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$MatchLocation$Builder/getText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$MatchLocation$Builder/getTextBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$MatchLocation$Builder/setText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$MatchLocation$Builder/setTextBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$MatchLocation$Builder/hasBegin:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$MatchLocation$Builder/hasEnd:
edu.stanford.nlp.pipeline.CoreNLPProtos$TokensRegexResponse$MatchLocation$Builder:
edu.stanford.nlp.pipeline.CoreNLPProtos$TokensRegexResponse$MatchLocation$1:
edu.stanford.nlp.pipeline.CoreNLPProtos$NERMentionOrBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$TokensRegexRequest$1:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$GraphResult$Builder/maybeForceBuilderInitialization:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$GraphResult$Builder/clear:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$GraphResult$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$GraphResult$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$GraphResult$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$GraphResult$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$GraphResult$Builder/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$GraphResult$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$GraphResult$Builder/ensureResultIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$GraphResult$Builder/getResultList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$GraphResult$Builder/getResultCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$GraphResult$Builder/getResult:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$GraphResult$Builder/setResult:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$GraphResult$Builder/setResult:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$GraphResult$Builder/addResult:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$GraphResult$Builder/addResult:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$GraphResult$Builder/addResult:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$GraphResult$Builder/addResult:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$GraphResult$Builder/addAllResult:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$GraphResult$Builder/clearResult:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$GraphResult$Builder/removeResult:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$GraphResult$Builder/getResultOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$GraphResult$Builder/getResultOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$GraphResult$Builder/getResultFieldBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$SemgrexResponse$GraphResult$Builder:

#edu/stanford/nlp/pipeline/CoreMapAttributeAggregator$2/aggregate:
edu.stanford.nlp.pipeline.CoreMapAttributeAggregator$2:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention$Builder/hasMentionID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention$Builder/hasMentionType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention$Builder/getMentionType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention$Builder/getMentionTypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention$Builder/setMentionType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention$Builder/setMentionTypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention$Builder/hasNumber:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention$Builder/getNumber:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention$Builder/getNumberBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention$Builder/setNumber:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention$Builder/setNumberBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention$Builder/hasGender:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention$Builder/getGender:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention$Builder/getGenderBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention$Builder/setGender:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention$Builder/setGenderBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention$Builder/hasAnimacy:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention$Builder/getAnimacy:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention$Builder/getAnimacyBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention$Builder/setAnimacy:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention$Builder/setAnimacyBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention$Builder/hasBeginIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention$Builder/hasEndIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention$Builder/hasHeadIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention$Builder/hasSentenceIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention$Builder/hasPosition:
edu.stanford.nlp.pipeline.CoreNLPProtos$CorefChain$CorefMention$Builder:

#edu/stanford/nlp/pipeline/CoreMapAttributeAggregator$MostFreqAggregator/aggregate:
edu.stanford.nlp.pipeline.CoreMapAttributeAggregator$MostFreqAggregator:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$MatchLocation/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$MatchLocation/hasText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$MatchLocation/getText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$MatchLocation/getTextBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$MatchLocation/hasBegin:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$MatchLocation/hasEnd:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$MatchLocation/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$MatchLocation/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$MatchLocation/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$MatchLocation/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$MatchLocation/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$MatchLocation/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$TokensRegexResponse$MatchLocation:
edu.stanford.nlp.pipeline.CoreNLPProtos$SemgrexRequest$1:

#edu/stanford/nlp/pipeline/CoreNLPProtos$IndexedWord/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$IndexedWord/hasSentenceNum:

#edu/stanford/nlp/pipeline/CoreNLPProtos$IndexedWord/hasTokenIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$IndexedWord/hasDocID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$IndexedWord/hasCopyCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$IndexedWord/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$IndexedWord/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$IndexedWord/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$IndexedWord/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$IndexedWord/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$IndexedWord/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$IndexedWord:

#edu/stanford/nlp/pipeline/ColumnDataClassifierAnnotator/annotate:
edu.stanford.nlp.pipeline.ColumnDataClassifierAnnotator:

#edu/stanford/nlp/pipeline/TokensRegexAnnotator/<init>:

#edu/stanford/nlp/pipeline/TokensRegexAnnotator/addTokenOffsets:

#edu/stanford/nlp/pipeline/TokensRegexAnnotator/extract:

#edu/stanford/nlp/pipeline/TokensRegexAnnotator/annotate:
edu.stanford.nlp.pipeline.TokensRegexAnnotator:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity/hasHeadStart:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity/hasHeadEnd:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity/hasMentionType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity/getMentionType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity/getMentionTypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity/hasNormalizedName:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity/getNormalizedName:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity/getNormalizedNameBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity/hasHeadTokenIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity/hasCorefID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity/getCorefID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity/getCorefIDBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity/hasObjectID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity/getObjectID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity/getObjectIDBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity/hasExtentStart:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity/hasExtentEnd:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity/hasType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity/getType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity/getTypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity/hasSubtype:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity/getSubtype:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity/getSubtypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$Entity:
edu.stanford.nlp.pipeline.CoreNLPProtos$TokensRegexResponse$MatchLocationOrBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$SemgrexResponse$GraphResult$1:

#edu/stanford/nlp/pipeline/WikidictAnnotator/<init>:

#edu/stanford/nlp/pipeline/WikidictAnnotator/normalizeTimex:

#edu/stanford/nlp/pipeline/WikidictAnnotator/link:

#edu/stanford/nlp/pipeline/WikidictAnnotator/doOneSentence:
edu.stanford.nlp.pipeline.WikidictAnnotator:
edu.stanford.nlp.pipeline.CoreNLPProtos$SpeakerInfoOrBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$CorefChain$CorefMention$1:
edu.stanford.nlp.pipeline.CoreNLPProtos:
edu.stanford.nlp.pipeline.CoreNLPProtos$Token$1:

#edu/stanford/nlp/pipeline/NERCombinerAnnotator/<init>:

#edu/stanford/nlp/pipeline/NERCombinerAnnotator/setUpFineGrainedNER:

#edu/stanford/nlp/pipeline/NERCombinerAnnotator/setUpAdditionalRulesNER:

#edu/stanford/nlp/pipeline/NERCombinerAnnotator/setUpTokensRegexRules:

#edu/stanford/nlp/pipeline/NERCombinerAnnotator/setUpEntityMentionBuilding:

#edu/stanford/nlp/pipeline/NERCombinerAnnotator/setUpDocDateAnnotator:

#edu/stanford/nlp/pipeline/NERCombinerAnnotator/mergeTokens:

#edu/stanford/nlp/pipeline/NERCombinerAnnotator/annotationWithNERTokenization:

#edu/stanford/nlp/pipeline/NERCombinerAnnotator/transferNERAnnotationsToAnnotation:

#edu/stanford/nlp/pipeline/NERCombinerAnnotator/annotate:

#edu/stanford/nlp/pipeline/NERCombinerAnnotator/doOneSentence:

#edu/stanford/nlp/pipeline/NERCombinerAnnotator/doOneFailedSentence:

#edu/stanford/nlp/pipeline/NERCombinerAnnotator/requires:

#edu/stanford/nlp/pipeline/NERCombinerAnnotator/requirementsSatisfied:

#edu/stanford/nlp/pipeline/NERCombinerAnnotator/lambda$static$0:
edu.stanford.nlp.pipeline.NERCombinerAnnotator:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match/hasMatchIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Match/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$SemgrexResponse$Match:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NaturalLogicRelation/forNumber:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NaturalLogicRelation/valueOf:
edu.stanford.nlp.pipeline.CoreNLPProtos$NaturalLogicRelation:
edu.stanford.nlp.pipeline.CoreNLPProtos$DependencyGraph$EdgeOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonResponse$Builder/maybeForceBuilderInitialization:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonResponse$Builder/clear:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonResponse$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonResponse$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonResponse$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonResponse$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonResponse$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonResponse$Builder/ensureTreesIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonResponse$Builder/getTreesList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonResponse$Builder/getTreesCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonResponse$Builder/getTrees:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonResponse$Builder/setTrees:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonResponse$Builder/setTrees:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonResponse$Builder/addTrees:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonResponse$Builder/addTrees:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonResponse$Builder/addTrees:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonResponse$Builder/addTrees:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonResponse$Builder/addAllTrees:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonResponse$Builder/clearTrees:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonResponse$Builder/removeTrees:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonResponse$Builder/getTreesOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonResponse$Builder/getTreesOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonResponse$Builder/getTreesFieldBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$TsurgeonResponse$Builder:

#edu/stanford/nlp/pipeline/CoreSentence/wrapEntityMentions:

#edu/stanford/nlp/pipeline/CoreSentence/tregexResultTrees:
edu.stanford.nlp.pipeline.CoreSentence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention/hasSentenceIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention/hasTokenStartInSentenceInclusive:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention/hasTokenEndInSentenceExclusive:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention/hasNer:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention/getNer:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention/getNerBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention/hasNormalizedNER:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention/getNormalizedNER:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention/getNormalizedNERBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention/hasEntityType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention/getEntityType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention/getEntityTypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention/hasTimex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention/getTimex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention/getTimexOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention/hasWikipediaEntity:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention/getWikipediaEntity:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention/getWikipediaEntityBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention/hasGender:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention/getGender:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention/getGenderBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention/hasEntityMentionIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention/hasCanonicalEntityMentionIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention/hasEntityMentionText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention/getEntityMentionText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention/getEntityMentionTextBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$NERMention:

#edu/stanford/nlp/pipeline/RelationExtractorAnnotator/getVerbose:

#edu/stanford/nlp/pipeline/RelationExtractorAnnotator/getModelName:

#edu/stanford/nlp/pipeline/RelationExtractorAnnotator/annotate:

#edu/stanford/nlp/pipeline/RelationExtractorAnnotator/main:
edu.stanford.nlp.pipeline.RelationExtractorAnnotator:
edu.stanford.nlp.pipeline.NERCombinerAnnotator$TokenMergeCountAnnotation:
edu.stanford.nlp.pipeline.CoreNLPProtos$Document$1:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer$CoreNLPHandler/getContentType:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer$CoreNLPHandler/handle:
edu.stanford.nlp.pipeline.StanfordCoreNLPServer$CoreNLPHandler:
edu.stanford.nlp.pipeline.QuoteAttributionAnnotator$CanonicalMentionBeginAnnotation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Span/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Span/hasBegin:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Span/hasEnd:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Span/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Span/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Span/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Span/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Span/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Span/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$Span:
edu.stanford.nlp.pipeline.CoreNLPProtos$DependencyGraph$NodeOrBuilder:

#edu/stanford/nlp/pipeline/TextOutputter/print:

#edu/stanford/nlp/pipeline/TextOutputter/outputQuotes:

#edu/stanford/nlp/pipeline/TextOutputter/lambda$print$0:
edu.stanford.nlp.pipeline.TextOutputter:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult/hasGold:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult/getGold:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult/getGoldOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$EvaluateParserRequest$ParseResult:

#edu/stanford/nlp/pipeline/AnnotationPipeline/<init>:

#edu/stanford/nlp/pipeline/AnnotationPipeline/annotate:

#edu/stanford/nlp/pipeline/AnnotationPipeline/annotate:

#edu/stanford/nlp/pipeline/AnnotationPipeline/getTotalTime:

#edu/stanford/nlp/pipeline/AnnotationPipeline/timingInformation:

#edu/stanford/nlp/pipeline/AnnotationPipeline/requirementsSatisfied:

#edu/stanford/nlp/pipeline/AnnotationPipeline/requires:

#edu/stanford/nlp/pipeline/AnnotationPipeline/main:
edu.stanford.nlp.pipeline.AnnotationPipeline:
edu.stanford.nlp.pipeline.CoreNLPProtos$SemgrexResponse$GraphResultOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree/hasValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree/getValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree/getValueBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree/hasYieldBeginIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree/hasYieldEndIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree/hasScore:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree/hasSentiment:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree/getSentiment:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$ParseTree:
edu.stanford.nlp.pipeline.CoreNLPProtos$NERMention$1:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Builder/maybeForceBuilderInitialization:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Builder/clear:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Builder/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Builder/ensureResultIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Builder/getResultList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Builder/getResultCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Builder/getResult:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Builder/setResult:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Builder/setResult:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Builder/addResult:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Builder/addResult:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Builder/addResult:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Builder/addResult:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Builder/addAllResult:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Builder/clearResult:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Builder/removeResult:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Builder/getResultOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Builder/getResultOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$Builder/getResultFieldBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$SemgrexResponse$Builder:
edu.stanford.nlp.pipeline.CoreNLPProtos$TsurgeonRequest$OperationOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokenLocation/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokenLocation/hasSentenceIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokenLocation/hasTokenIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokenLocation/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokenLocation/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokenLocation/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokenLocation/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokenLocation/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokenLocation/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$TokenLocation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies$Builder/maybeForceBuilderInitialization:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies$Builder/clear:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies$Builder/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies$Builder/ensureTokenIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies$Builder/getTokenList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies$Builder/getTokenCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies$Builder/getToken:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies$Builder/setToken:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies$Builder/setToken:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies$Builder/addToken:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies$Builder/addToken:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies$Builder/addToken:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies$Builder/addToken:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies$Builder/addAllToken:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies$Builder/clearToken:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies$Builder/removeToken:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies$Builder/getTokenOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies$Builder/getTokenOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies$Builder/getTokenFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies$Builder/hasGraph:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies$Builder/getGraph:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies$Builder/setGraph:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies$Builder/setGraph:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies$Builder/mergeGraph:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies$Builder/clearGraph:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies$Builder/getGraphOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies$Builder/getGraphFieldBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$SemgrexRequest$Dependencies$Builder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$PatternMatch$Builder/maybeForceBuilderInitialization:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$PatternMatch$Builder/clear:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$PatternMatch$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$PatternMatch$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$PatternMatch$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$PatternMatch$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$PatternMatch$Builder/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$PatternMatch$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$PatternMatch$Builder/ensureMatchIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$PatternMatch$Builder/getMatchList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$PatternMatch$Builder/getMatchCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$PatternMatch$Builder/getMatch:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$PatternMatch$Builder/setMatch:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$PatternMatch$Builder/setMatch:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$PatternMatch$Builder/addMatch:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$PatternMatch$Builder/addMatch:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$PatternMatch$Builder/addMatch:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$PatternMatch$Builder/addMatch:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$PatternMatch$Builder/addAllMatch:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$PatternMatch$Builder/clearMatch:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$PatternMatch$Builder/removeMatch:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$PatternMatch$Builder/getMatchOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$PatternMatch$Builder/getMatchOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$PatternMatch$Builder/getMatchFieldBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$TokensRegexResponse$PatternMatch$Builder:
edu.stanford.nlp.pipeline.CoreNLPProtos$CorefChain$1:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SentenceFragment/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SentenceFragment/hasRoot:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SentenceFragment/hasAssumedTruth:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SentenceFragment/hasScore:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SentenceFragment/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SentenceFragment/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SentenceFragment/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SentenceFragment/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SentenceFragment/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SentenceFragment/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$SentenceFragment:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$PatternMatch/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$PatternMatch/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$PatternMatch/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$PatternMatch/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$PatternMatch/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$PatternMatch/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$PatternMatch/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$TokensRegexResponse$PatternMatch:
edu.stanford.nlp.pipeline.CoreNLPProtos$DependencyGraph$Edge$1:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree$Builder/maybeForceBuilderInitialization:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree$Builder/clear:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree$Builder/ensureChildIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree$Builder/getChildList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree$Builder/getChildCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree$Builder/getChild:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree$Builder/setChild:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree$Builder/setChild:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree$Builder/addChild:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree$Builder/addChild:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree$Builder/addChild:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree$Builder/addChild:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree$Builder/addAllChild:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree$Builder/clearChild:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree$Builder/removeChild:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree$Builder/getChildOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree$Builder/getChildOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree$Builder/getChildFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree$Builder/hasValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree$Builder/getValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree$Builder/getValueBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree$Builder/setValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree$Builder/setValueBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree$Builder/hasYieldBeginIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree$Builder/hasYieldEndIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree$Builder/hasScore:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree$Builder/hasSentiment:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree$Builder/getSentiment:

#edu/stanford/nlp/pipeline/CoreNLPProtos$ParseTree$Builder/setSentiment:
edu.stanford.nlp.pipeline.CoreNLPProtos$ParseTree$Builder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match/hasSentence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match/hasMatch:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match/getMatch:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match/getMatchOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$TokensRegexResponse$Match:

#edu/stanford/nlp/pipeline/GenderAnnotator/loadGenderNames:

#edu/stanford/nlp/pipeline/GenderAnnotator/annotateEntityMention:

#edu/stanford/nlp/pipeline/GenderAnnotator/annotate:
edu.stanford.nlp.pipeline.GenderAnnotator:

#edu/stanford/nlp/pipeline/CoNLLOutputter/orNeg:

#edu/stanford/nlp/pipeline/CoNLLOutputter/orNull:

#edu/stanford/nlp/pipeline/CoNLLOutputter/line:

#edu/stanford/nlp/pipeline/CoNLLOutputter/print:
edu.stanford.nlp.pipeline.CoNLLOutputter:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SpeakerInfo$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SpeakerInfo$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SpeakerInfo$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SpeakerInfo$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SpeakerInfo$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SpeakerInfo$Builder/hasSpeakerName:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SpeakerInfo$Builder/getSpeakerName:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SpeakerInfo$Builder/getSpeakerNameBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SpeakerInfo$Builder/setSpeakerName:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SpeakerInfo$Builder/setSpeakerNameBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SpeakerInfo$Builder/ensureMentionsIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SpeakerInfo$Builder/getMentionsList:
edu.stanford.nlp.pipeline.CoreNLPProtos$SpeakerInfo$Builder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexRequest$Builder/maybeForceBuilderInitialization:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexRequest$Builder/clear:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexRequest$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexRequest$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexRequest$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexRequest$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexRequest$Builder/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexRequest$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexRequest$Builder/hasDoc:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexRequest$Builder/getDoc:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexRequest$Builder/setDoc:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexRequest$Builder/setDoc:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexRequest$Builder/mergeDoc:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexRequest$Builder/clearDoc:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexRequest$Builder/getDocOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexRequest$Builder/getDocFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexRequest$Builder/ensurePatternIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexRequest$Builder/setPattern:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexRequest$Builder/addPattern:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexRequest$Builder/addPatternBytes:
edu.stanford.nlp.pipeline.CoreNLPProtos$TokensRegexRequest$Builder:

#edu/stanford/nlp/pipeline/RegexNERAnnotator/annotate:

#edu/stanford/nlp/pipeline/RegexNERAnnotator/findEndOfAnswerAnnotation:

#edu/stanford/nlp/pipeline/RegexNERAnnotator/findStartOfNERAnnotation:

#edu/stanford/nlp/pipeline/RegexNERAnnotator/findEndOfNERAnnotation:
edu.stanford.nlp.pipeline.RegexNERAnnotator:

#edu/stanford/nlp/pipeline/XMLOutputter/print:

#edu/stanford/nlp/pipeline/XMLOutputter/annotationToDoc:

#edu/stanford/nlp/pipeline/XMLOutputter/addSentiment:

#edu/stanford/nlp/pipeline/XMLOutputter/addTriples:

#edu/stanford/nlp/pipeline/XMLOutputter/buildDependencyTreeInfo:

#edu/stanford/nlp/pipeline/XMLOutputter/addDependencyInfo:

#edu/stanford/nlp/pipeline/XMLOutputter/addEntities:

#edu/stanford/nlp/pipeline/XMLOutputter/addRelations:

#edu/stanford/nlp/pipeline/XMLOutputter/addCorefGraphInfo:

#edu/stanford/nlp/pipeline/XMLOutputter/addCorefMention:

#edu/stanford/nlp/pipeline/XMLOutputter/addWordInfo:

#edu/stanford/nlp/pipeline/XMLOutputter/setSingleElement:

#edu/stanford/nlp/pipeline/XMLOutputter/toXML:

#edu/stanford/nlp/pipeline/XMLOutputter/toXML:

#edu/stanford/nlp/pipeline/XMLOutputter/makeProbabilitiesElement:
edu.stanford.nlp.pipeline.XMLOutputter:

#edu/stanford/nlp/pipeline/ParserAnnotator/<init>:

#edu/stanford/nlp/pipeline/ParserAnnotator/<init>:

#edu/stanford/nlp/pipeline/ParserAnnotator/convertFlagsToArray:

#edu/stanford/nlp/pipeline/ParserAnnotator/loadModel:

#edu/stanford/nlp/pipeline/ParserAnnotator/doOneSentence:

#edu/stanford/nlp/pipeline/ParserAnnotator/doOneFailedSentence:

#edu/stanford/nlp/pipeline/ParserAnnotator/finishSentence:

#edu/stanford/nlp/pipeline/ParserAnnotator/doOneSentence:

#edu/stanford/nlp/pipeline/ParserAnnotator/requires:

#edu/stanford/nlp/pipeline/ParserAnnotator/requirementsSatisfied:
edu.stanford.nlp.pipeline.ParserAnnotator:
edu.stanford.nlp.pipeline.CoreNLPProtos$TsurgeonRequest$1:

#edu/stanford/nlp/pipeline/KBPAnnotator/<init>:

#edu/stanford/nlp/pipeline/KBPAnnotator/acronymMatch:

#edu/stanford/nlp/pipeline/KBPAnnotator/annotate:

#edu/stanford/nlp/pipeline/KBPAnnotator/lambda$main$5:

#edu/stanford/nlp/pipeline/KBPAnnotator/lambda$annotate$3:

#edu/stanford/nlp/pipeline/KBPAnnotator/lambda$corefChainToKBPMentions$1:

#edu/stanford/nlp/pipeline/KBPAnnotator/lambda$corefChainToKBPMentions$0:
edu.stanford.nlp.pipeline.KBPAnnotator:
edu.stanford.nlp.pipeline.LabeledChunkIdentifier$LabelTagType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Operation$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Operation$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Operation$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Operation$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Operation$Builder/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Operation$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Operation$Builder/hasTregex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Operation$Builder/getTregex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Operation$Builder/getTregexBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Operation$Builder/setTregex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Operation$Builder/setTregexBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Operation$Builder/ensureTsurgeonIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Operation$Builder/setTsurgeon:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Operation$Builder/addTsurgeon:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Operation$Builder/addTsurgeonBytes:
edu.stanford.nlp.pipeline.CoreNLPProtos$TsurgeonRequest$Operation$Builder:

#edu/stanford/nlp/pipeline/CoreMapAttributeAggregator$7/aggregate:
edu.stanford.nlp.pipeline.CoreMapAttributeAggregator$7:
edu.stanford.nlp.pipeline.CoreNLPProtos$QuoteOrBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$Polarity$1:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/maybeForceBuilderInitialization:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/clear:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/hasMentionID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/hasMentionType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getMentionType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getMentionTypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/setMentionType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/setMentionTypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/hasNumber:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getNumber:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getNumberBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/setNumber:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/setNumberBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/hasGender:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getGender:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getGenderBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/setGender:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/setGenderBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/hasAnimacy:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getAnimacy:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getAnimacyBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/setAnimacy:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/setAnimacyBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/hasPerson:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getPerson:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getPersonBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/setPerson:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/setPersonBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/hasStartIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/hasEndIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/hasHeadIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/hasHeadString:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getHeadString:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getHeadStringBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/setHeadString:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/setHeadStringBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/hasNerString:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getNerString:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getNerStringBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/setNerString:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/setNerStringBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/hasOriginalRef:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/hasGoldCorefClusterID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/hasCorefClusterID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/hasMentionNum:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/hasSentNum:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/hasUtter:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/hasParagraph:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/hasIsSubject:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/hasIsDirectObject:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/hasIsIndirectObject:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/hasIsPrepositionObject:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/hasHasTwin:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/hasGeneric:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/hasIsSingleton:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/hasHasBasicDependency:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/hasHasEnhancedDepenedncy:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/hasHasContextParseTree:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/hasHeadIndexedWord:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getHeadIndexedWord:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/setHeadIndexedWord:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/setHeadIndexedWord:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/mergeHeadIndexedWord:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/clearHeadIndexedWord:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getHeadIndexedWordOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getHeadIndexedWordFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/hasDependingVerb:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getDependingVerb:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/setDependingVerb:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/setDependingVerb:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/mergeDependingVerb:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/clearDependingVerb:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getDependingVerbOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getDependingVerbFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/hasHeadWord:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getHeadWord:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/setHeadWord:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/setHeadWord:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/mergeHeadWord:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/clearHeadWord:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getHeadWordOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getHeadWordFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/hasSpeakerInfo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getSpeakerInfo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/setSpeakerInfo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/setSpeakerInfo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/mergeSpeakerInfo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/clearSpeakerInfo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getSpeakerInfoOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getSpeakerInfoFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/ensureSentenceWordsIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getSentenceWordsList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getSentenceWordsCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getSentenceWords:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/setSentenceWords:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/setSentenceWords:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/addSentenceWords:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/addSentenceWords:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/addSentenceWords:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/addSentenceWords:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/addAllSentenceWords:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/clearSentenceWords:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/removeSentenceWords:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getSentenceWordsOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getSentenceWordsOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getSentenceWordsFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/ensureOriginalSpanIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getOriginalSpanList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getOriginalSpanCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getOriginalSpan:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/setOriginalSpan:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/setOriginalSpan:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/addOriginalSpan:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/addOriginalSpan:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/addOriginalSpan:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/addOriginalSpan:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/addAllOriginalSpan:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/clearOriginalSpan:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/removeOriginalSpan:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getOriginalSpanOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getOriginalSpanOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getOriginalSpanFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/ensureDependentsIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/setDependents:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/addDependents:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/addDependentsBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/ensurePreprocessedTermsIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/setPreprocessedTerms:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/addPreprocessedTerms:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/addPreprocessedTermsBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/ensureAppositionsIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getAppositionsList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/ensurePredicateNominativesIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getPredicateNominativesList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/ensureRelativePronounsIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getRelativePronounsList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/ensureListMembersIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getListMembersList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/ensureBelongToListsIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Mention$Builder/getBelongToListsList:
edu.stanford.nlp.pipeline.CoreNLPProtos$Mention$Builder:
Warning: Method:edu.stanford.nlp.pipeline.StanfordCoreNLPClient$BackendScheduler.run has incoming edges.

#edu/stanford/nlp/pipeline/StanfordCoreNLPClient$BackendScheduler/lambda$run$0:
edu.stanford.nlp.pipeline.StanfordCoreNLPClient$BackendScheduler:

#edu/stanford/nlp/pipeline/NumberAnnotator/annotate:

#edu/stanford/nlp/pipeline/NumberAnnotator/doOneSentenceNew:
edu.stanford.nlp.pipeline.NumberAnnotator:
edu.stanford.nlp.pipeline.CoreNLPProtos$TokensRegexResponse$MatchOrBuilder:
edu.stanford.nlp.pipeline.POSTaggerAnnotator$POSTaggerProcessor:

#edu/stanford/nlp/pipeline/BinarizerAnnotator/annotate:

#edu/stanford/nlp/pipeline/BinarizerAnnotator/doOneSentence:

#edu/stanford/nlp/pipeline/BinarizerAnnotator/isBinarized:
edu.stanford.nlp.pipeline.BinarizerAnnotator:
edu.stanford.nlp.pipeline.CoreNLPProtos$TokensRegexResponse$PatternMatch$1:

#edu/stanford/nlp/pipeline/ChunkAnnotationUtils/checkOffsets:

#edu/stanford/nlp/pipeline/ChunkAnnotationUtils/fixTokenOffsets:

#edu/stanford/nlp/pipeline/ChunkAnnotationUtils/copyUnsetAnnotations:

#edu/stanford/nlp/pipeline/ChunkAnnotationUtils/fixChunkTokenBoundaries:

#edu/stanford/nlp/pipeline/ChunkAnnotationUtils/getMergedChunk:

#edu/stanford/nlp/pipeline/ChunkAnnotationUtils/getMergedChunk:

#edu/stanford/nlp/pipeline/ChunkAnnotationUtils/getChunkOffsetsUsingCharOffsets:

#edu/stanford/nlp/pipeline/ChunkAnnotationUtils/mergeChunks:

#edu/stanford/nlp/pipeline/ChunkAnnotationUtils/getFirstNonWsChar:

#edu/stanford/nlp/pipeline/ChunkAnnotationUtils/getFirstNonWsCharOffset:

#edu/stanford/nlp/pipeline/ChunkAnnotationUtils/fixChunkSentenceBoundaries:

#edu/stanford/nlp/pipeline/ChunkAnnotationUtils/getTokenText:

#edu/stanford/nlp/pipeline/ChunkAnnotationUtils/hasCharacterOffsets:

#edu/stanford/nlp/pipeline/ChunkAnnotationUtils/annotateChunkText:

#edu/stanford/nlp/pipeline/ChunkAnnotationUtils/annotateChunkTokens:

#edu/stanford/nlp/pipeline/ChunkAnnotationUtils/getAnnotatedChunk:

#edu/stanford/nlp/pipeline/ChunkAnnotationUtils/getAnnotatedChunkUsingCharOffsets:

#edu/stanford/nlp/pipeline/ChunkAnnotationUtils/getAnnotatedChunksUsingSortedCharOffsets:

#edu/stanford/nlp/pipeline/ChunkAnnotationUtils/annotateChunk:

#edu/stanford/nlp/pipeline/ChunkAnnotationUtils/annotateChunks:

#edu/stanford/nlp/pipeline/ChunkAnnotationUtils/annotateChunks:

#edu/stanford/nlp/pipeline/ChunkAnnotationUtils/createCoreMap:

#edu/stanford/nlp/pipeline/ChunkAnnotationUtils/appendCoreMap:

#edu/stanford/nlp/pipeline/ChunkAnnotationUtils/splitCoreMap:
edu.stanford.nlp.pipeline.ChunkAnnotationUtils:
edu.stanford.nlp.pipeline.CoreNLPProtos$OperatorOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest$RefCase/forNumber:
edu.stanford.nlp.pipeline.CoreNLPProtos$DependencyEnhancerRequest$RefCase:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedNode/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedNode/hasName:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedNode/getName:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedNode/getNameBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedNode/hasMatchIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedNode/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedNode/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedNode/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedNode/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedNode/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedNode/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$SemgrexResponse$NamedNode:
edu.stanford.nlp.pipeline.CoreNLPProtos$Sentiment$1:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Edge/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Edge/hasSource:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Edge/hasTarget:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Edge/hasDep:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Edge/getDep:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Edge/getDepBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Edge/hasIsExtra:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Edge/hasSourceCopy:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Edge/hasTargetCopy:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Edge/hasLanguage:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Edge/getLanguage:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Edge/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Edge/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Edge/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Edge/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Edge/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Edge/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$DependencyGraph$Edge:
edu.stanford.nlp.pipeline.CoreNLPProtos$Span$1:
edu.stanford.nlp.pipeline.SentenceAnnotator$AnnotatorProcessor:
edu.stanford.nlp.pipeline.CoreMapAttributeAggregator$5:

#edu/stanford/nlp/pipeline/CoNLLUReader$CoNLLUSentence/processLine:

#edu/stanford/nlp/pipeline/CoNLLUReader$CoNLLUSentence/addSentenceData:

#edu/stanford/nlp/pipeline/CoNLLUReader$CoNLLUSentence/addMWTData:
edu.stanford.nlp.pipeline.CoNLLUReader$CoNLLUSentence:
edu.stanford.nlp.pipeline.CoreNLPProtos$EvaluateParserRequest$ParseResultOrBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$FlattenedParseTreeOrBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$SpeakerInfo$1:
edu.stanford.nlp.pipeline.QuoteAttributionAnnotator$SpeakerAnnotation:
edu.stanford.nlp.pipeline.ProtobufAnnotationSerializer$LossySerializationException:

#edu/stanford/nlp/pipeline/CoreMapAttributeAggregator$ConcatListAggregator/aggregate:
edu.stanford.nlp.pipeline.CoreMapAttributeAggregator$ConcatListAggregator:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/maybeForceBuilderInitialization:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/clear:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/hasText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/getText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/getTextBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/setText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/setTextBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/hasBegin:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/hasEnd:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/hasSentenceBegin:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/hasSentenceEnd:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/hasTokenBegin:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/hasTokenEnd:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/hasDocid:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/getDocid:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/getDocidBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/setDocid:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/setDocidBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/hasIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/hasAuthor:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/getAuthor:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/getAuthorBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/setAuthor:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/setAuthorBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/hasMention:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/getMention:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/getMentionBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/setMention:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/setMentionBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/hasMentionBegin:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/hasMentionEnd:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/hasMentionType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/getMentionType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/getMentionTypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/setMentionType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/setMentionTypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/hasMentionSieve:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/getMentionSieve:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/getMentionSieveBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/setMentionSieve:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/setMentionSieveBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/hasSpeaker:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/getSpeaker:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/getSpeakerBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/setSpeaker:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/setSpeakerBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/hasSpeakerSieve:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/getSpeakerSieve:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/getSpeakerSieveBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/setSpeakerSieve:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/setSpeakerSieveBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/hasCanonicalMention:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/getCanonicalMention:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/getCanonicalMentionBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/setCanonicalMention:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/setCanonicalMentionBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/hasCanonicalMentionBegin:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/hasCanonicalMentionEnd:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/hasAttributionDependencyGraph:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/getAttributionDependencyGraph:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/setAttributionDependencyGraph:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/setAttributionDependencyGraph:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/mergeAttributionDependencyGraph:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/clearAttributionDependencyGraph:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/getAttributionDependencyGraphOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote$Builder/getAttributionDependencyGraphFieldBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$Quote$Builder:

#edu/stanford/nlp/pipeline/JSONAnnotationReader/toList:

#edu/stanford/nlp/pipeline/JSONAnnotationReader/toMap:

#edu/stanford/nlp/pipeline/JSONAnnotationReader/toMap:

#edu/stanford/nlp/pipeline/JSONAnnotationReader/toMap:

#edu/stanford/nlp/pipeline/JSONAnnotationReader/toNullable:

#edu/stanford/nlp/pipeline/JSONAnnotationReader/toNullableList:

#edu/stanford/nlp/pipeline/JSONAnnotationReader/toNullableMap:

#edu/stanford/nlp/pipeline/JSONAnnotationReader/toCorefMention:

#edu/stanford/nlp/pipeline/JSONAnnotationReader/toCorefChain:

#edu/stanford/nlp/pipeline/JSONAnnotationReader/toQuotation:

#edu/stanford/nlp/pipeline/JSONAnnotationReader/toSentence:

#edu/stanford/nlp/pipeline/JSONAnnotationReader/hasSpeakerAnnotations:

#edu/stanford/nlp/pipeline/JSONAnnotationReader/toAnnotation:
edu.stanford.nlp.pipeline.JSONAnnotationReader:

#edu/stanford/nlp/pipeline/AnnotatorPool/register:

#edu/stanford/nlp/pipeline/AnnotatorPool/clear:

#edu/stanford/nlp/pipeline/AnnotatorPool/get:
edu.stanford.nlp.pipeline.AnnotatorPool:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/hasTokenOffsetBegin:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/hasTokenOffsetEnd:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/hasSentenceIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/hasCharacterOffsetBegin:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/hasCharacterOffsetEnd:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/hasParseTree:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getParseTree:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getParseTreeOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/hasBinarizedParseTree:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getBinarizedParseTree:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getBinarizedParseTreeOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/hasAnnotatedParseTree:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getAnnotatedParseTree:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getAnnotatedParseTreeOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/hasSentiment:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getSentiment:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getSentimentBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/hasBasicDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getBasicDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getBasicDependenciesOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/hasCollapsedDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getCollapsedDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getCollapsedDependenciesOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/hasCollapsedCCProcessedDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getCollapsedCCProcessedDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getCollapsedCCProcessedDependenciesOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/hasAlternativeDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getAlternativeDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getAlternativeDependenciesOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/hasEnhancedDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getEnhancedDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getEnhancedDependenciesOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/hasEnhancedPlusPlusDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getEnhancedPlusPlusDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getEnhancedPlusPlusDependenciesOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/hasParagraph:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/hasText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getTextBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/hasLineNumber:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/hasHasRelationAnnotations:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/hasHasNumerizedTokensAnnotation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/hasHasCorefMentionsAnnotation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/hasSentenceID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getSentenceID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getSentenceIDBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/hasSectionDate:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getSectionDate:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getSectionDateBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/hasSectionIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/hasSectionName:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getSectionName:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getSectionNameBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/hasSectionAuthor:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getSectionAuthor:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getSectionAuthorBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/hasDocID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getDocID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getDocIDBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/hasSectionQuoted:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/hasHasEntityMentionsAnnotation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/hasHasKBPTriplesAnnotation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/hasHasOpenieTriplesAnnotation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/hasChapterIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/hasParagraphIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/hasEnhancedSentence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getEnhancedSentence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getEnhancedSentenceOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/hasSpeaker:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getSpeaker:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getSpeakerBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/hasSpeakerType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getSpeakerType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getSpeakerTypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$Sentence:

#edu/stanford/nlp/pipeline/CoreMapAggregator/merge:
edu.stanford.nlp.pipeline.CoreMapAggregator:
edu.stanford.nlp.pipeline.CoreNLPProtos$RelationOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Node/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Node/hasOpenNode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Node/getOpenNode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Node/hasCloseNode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Node/getCloseNode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Node/hasValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Node/getValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Node/getValueBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Node/hasScore:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Node/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Node/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Node/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Node/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Node/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Node/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$FlattenedParseTree$Node:
edu.stanford.nlp.pipeline.CoreNLPProtos$SemgrexResponse$SemgrexResultOrBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$SemgrexRequest$DependenciesOrBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$EvaluateParserRequest$1:

#edu/stanford/nlp/pipeline/CharniakParserAnnotator/annotate:
edu.stanford.nlp.pipeline.CharniakParserAnnotator:
edu.stanford.nlp.pipeline.WebServiceAnnotator$1:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Operator$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Operator$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Operator$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Operator$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Operator$Builder/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Operator$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Operator$Builder/hasName:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Operator$Builder/getName:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Operator$Builder/getNameBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Operator$Builder/setName:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Operator$Builder/setNameBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Operator$Builder/hasQuantifierSpanBegin:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Operator$Builder/hasQuantifierSpanEnd:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Operator$Builder/hasSubjectSpanBegin:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Operator$Builder/hasSubjectSpanEnd:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Operator$Builder/hasObjectSpanBegin:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Operator$Builder/hasObjectSpanEnd:
edu.stanford.nlp.pipeline.CoreNLPProtos$Operator$Builder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Span$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Span$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Span$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Span$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Span$Builder/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Span$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Span$Builder/hasBegin:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Span$Builder/hasEnd:
edu.stanford.nlp.pipeline.CoreNLPProtos$Span$Builder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest/hasDocument:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest/getDocument:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest/getDocumentOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest/hasLanguage:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest/getLanguage:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest/hasRelativePronouns:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest/getRelativePronouns:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest/getRelativePronounsBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$DependencyEnhancerRequest:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/maybeForceBuilderInitialization:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/clear:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/hasSubject:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/getSubject:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/getSubjectBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/setSubject:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/setSubjectBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/hasRelation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/getRelation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/getRelationBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/setRelation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/setRelationBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/hasObject:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/getObject:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/getObjectBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/setObject:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/setObjectBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/hasConfidence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/ensureSubjectTokensIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/getSubjectTokensList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/getSubjectTokensCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/getSubjectTokens:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/setSubjectTokens:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/setSubjectTokens:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/addSubjectTokens:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/addSubjectTokens:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/addSubjectTokens:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/addSubjectTokens:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/addAllSubjectTokens:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/clearSubjectTokens:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/removeSubjectTokens:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/getSubjectTokensOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/getSubjectTokensOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/getSubjectTokensFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/ensureRelationTokensIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/getRelationTokensList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/getRelationTokensCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/getRelationTokens:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/setRelationTokens:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/setRelationTokens:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/addRelationTokens:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/addRelationTokens:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/addRelationTokens:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/addRelationTokens:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/addAllRelationTokens:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/clearRelationTokens:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/removeRelationTokens:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/getRelationTokensOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/getRelationTokensOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/getRelationTokensFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/ensureObjectTokensIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/getObjectTokensList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/getObjectTokensCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/getObjectTokens:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/setObjectTokens:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/setObjectTokens:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/addObjectTokens:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/addObjectTokens:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/addObjectTokens:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/addObjectTokens:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/addAllObjectTokens:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/clearObjectTokens:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/removeObjectTokens:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/getObjectTokensOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/getObjectTokensOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/getObjectTokensFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/hasTree:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/getTree:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/setTree:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/setTree:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/mergeTree:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/clearTree:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/getTreeOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/getTreeFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/hasIstmod:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/hasPrefixBe:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/hasSuffixBe:

#edu/stanford/nlp/pipeline/CoreNLPProtos$RelationTriple$Builder/hasSuffixOf:
edu.stanford.nlp.pipeline.CoreNLPProtos$RelationTriple$Builder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity/hasProjectEquivalence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity/getProjectEquivalence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity/hasProjectForwardEntailment:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity/getProjectForwardEntailment:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity/hasProjectReverseEntailment:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity/getProjectReverseEntailment:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity/hasProjectNegation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity/getProjectNegation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity/hasProjectAlternation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity/getProjectAlternation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity/hasProjectCover:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity/getProjectCover:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity/hasProjectIndependence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity/getProjectIndependence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$Polarity:

#edu/stanford/nlp/pipeline/JSONOutputter$JSONWriter/routeObject:

#edu/stanford/nlp/pipeline/JSONOutputter$JSONWriter/indent:

#edu/stanford/nlp/pipeline/JSONOutputter$JSONWriter/space:

#edu/stanford/nlp/pipeline/JSONOutputter$JSONWriter/newline:

#edu/stanford/nlp/pipeline/JSONOutputter$JSONWriter/lambda$object$0:
edu.stanford.nlp.pipeline.JSONOutputter$JSONWriter:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex$Builder/hasValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex$Builder/getValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex$Builder/getValueBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex$Builder/setValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex$Builder/setValueBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex$Builder/hasAltValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex$Builder/getAltValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex$Builder/getAltValueBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex$Builder/setAltValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex$Builder/setAltValueBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex$Builder/hasText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex$Builder/getText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex$Builder/getTextBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex$Builder/setText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex$Builder/setTextBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex$Builder/hasType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex$Builder/getType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex$Builder/getTypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex$Builder/setType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex$Builder/setTypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex$Builder/hasTid:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex$Builder/getTid:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex$Builder/getTidBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex$Builder/setTid:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex$Builder/setTidBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex$Builder/hasBeginPoint:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex$Builder/hasEndPoint:
edu.stanford.nlp.pipeline.CoreNLPProtos$Timex$Builder:
edu.stanford.nlp.pipeline.StanfordCoreNLPServer$FinishedRequest:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/maybeForceBuilderInitialization:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/clear:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/ensureTokenIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getTokenList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getTokenCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getToken:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setToken:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setToken:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addToken:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addToken:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addToken:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addToken:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addAllToken:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/clearToken:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/removeToken:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getTokenOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getTokenOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getTokenFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/hasTokenOffsetBegin:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/hasTokenOffsetEnd:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/hasSentenceIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/hasCharacterOffsetBegin:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/hasCharacterOffsetEnd:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/hasParseTree:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getParseTree:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setParseTree:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setParseTree:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/mergeParseTree:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/clearParseTree:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getParseTreeOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getParseTreeFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/hasBinarizedParseTree:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getBinarizedParseTree:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setBinarizedParseTree:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setBinarizedParseTree:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/mergeBinarizedParseTree:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/clearBinarizedParseTree:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getBinarizedParseTreeOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getBinarizedParseTreeFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/hasAnnotatedParseTree:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getAnnotatedParseTree:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setAnnotatedParseTree:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setAnnotatedParseTree:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/mergeAnnotatedParseTree:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/clearAnnotatedParseTree:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getAnnotatedParseTreeOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getAnnotatedParseTreeFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/hasSentiment:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getSentiment:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getSentimentBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setSentiment:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setSentimentBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/ensureKBestParseTreesIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getKBestParseTreesList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getKBestParseTreesCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getKBestParseTrees:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setKBestParseTrees:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setKBestParseTrees:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addKBestParseTrees:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addKBestParseTrees:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addKBestParseTrees:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addKBestParseTrees:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addAllKBestParseTrees:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/clearKBestParseTrees:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/removeKBestParseTrees:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getKBestParseTreesOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getKBestParseTreesOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getKBestParseTreesFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/hasBasicDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getBasicDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setBasicDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setBasicDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/mergeBasicDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/clearBasicDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getBasicDependenciesOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getBasicDependenciesFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/hasCollapsedDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getCollapsedDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setCollapsedDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setCollapsedDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/mergeCollapsedDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/clearCollapsedDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getCollapsedDependenciesOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getCollapsedDependenciesFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/hasCollapsedCCProcessedDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getCollapsedCCProcessedDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setCollapsedCCProcessedDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setCollapsedCCProcessedDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/mergeCollapsedCCProcessedDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/clearCollapsedCCProcessedDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getCollapsedCCProcessedDependenciesOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getCollapsedCCProcessedDependenciesFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/hasAlternativeDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getAlternativeDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setAlternativeDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setAlternativeDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/mergeAlternativeDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/clearAlternativeDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getAlternativeDependenciesOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getAlternativeDependenciesFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/ensureOpenieTripleIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getOpenieTripleList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getOpenieTripleCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getOpenieTriple:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setOpenieTriple:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setOpenieTriple:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addOpenieTriple:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addOpenieTriple:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addOpenieTriple:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addOpenieTriple:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addAllOpenieTriple:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/clearOpenieTriple:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/removeOpenieTriple:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getOpenieTripleOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getOpenieTripleOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getOpenieTripleFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/ensureKbpTripleIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getKbpTripleList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getKbpTripleCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getKbpTriple:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setKbpTriple:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setKbpTriple:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addKbpTriple:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addKbpTriple:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addKbpTriple:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addKbpTriple:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addAllKbpTriple:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/clearKbpTriple:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/removeKbpTriple:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getKbpTripleOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getKbpTripleOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getKbpTripleFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/ensureEntailedSentenceIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getEntailedSentenceList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getEntailedSentenceCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getEntailedSentence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setEntailedSentence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setEntailedSentence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addEntailedSentence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addEntailedSentence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addEntailedSentence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addEntailedSentence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addAllEntailedSentence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/clearEntailedSentence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/removeEntailedSentence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getEntailedSentenceOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getEntailedSentenceOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getEntailedSentenceFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/ensureEntailedClauseIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getEntailedClauseList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getEntailedClauseCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getEntailedClause:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setEntailedClause:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setEntailedClause:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addEntailedClause:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addEntailedClause:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addEntailedClause:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addEntailedClause:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addAllEntailedClause:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/clearEntailedClause:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/removeEntailedClause:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getEntailedClauseOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getEntailedClauseOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getEntailedClauseFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/hasEnhancedDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getEnhancedDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setEnhancedDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setEnhancedDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/mergeEnhancedDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/clearEnhancedDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getEnhancedDependenciesOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getEnhancedDependenciesFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/hasEnhancedPlusPlusDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getEnhancedPlusPlusDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setEnhancedPlusPlusDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setEnhancedPlusPlusDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/mergeEnhancedPlusPlusDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/clearEnhancedPlusPlusDependencies:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getEnhancedPlusPlusDependenciesOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getEnhancedPlusPlusDependenciesFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/ensureCharacterIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getCharacterList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getCharacterCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getCharacter:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setCharacter:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setCharacter:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addCharacter:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addCharacter:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addCharacter:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addCharacter:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addAllCharacter:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/clearCharacter:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/removeCharacter:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getCharacterOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getCharacterOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getCharacterFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/hasParagraph:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/hasText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getTextBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setTextBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/hasLineNumber:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/hasHasRelationAnnotations:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/ensureEntityIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getEntityList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getEntityCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getEntity:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setEntity:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setEntity:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addEntity:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addEntity:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addEntity:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addEntity:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addAllEntity:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/clearEntity:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/removeEntity:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getEntityOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getEntityOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getEntityFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/ensureRelationIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getRelationList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getRelationCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getRelation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setRelation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setRelation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addRelation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addRelation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addRelation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addRelation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addAllRelation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/clearRelation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/removeRelation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getRelationOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getRelationOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getRelationFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/hasHasNumerizedTokensAnnotation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/ensureMentionsIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getMentionsList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getMentionsCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getMentions:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setMentions:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setMentions:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addMentions:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addMentions:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addMentions:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addMentions:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addAllMentions:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/clearMentions:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/removeMentions:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getMentionsOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getMentionsOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getMentionsFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/ensureMentionsForCorefIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getMentionsForCorefList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getMentionsForCorefCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getMentionsForCoref:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setMentionsForCoref:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setMentionsForCoref:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addMentionsForCoref:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addMentionsForCoref:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addMentionsForCoref:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addMentionsForCoref:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/addAllMentionsForCoref:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/clearMentionsForCoref:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/removeMentionsForCoref:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getMentionsForCorefOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getMentionsForCorefOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getMentionsForCorefFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/hasHasCorefMentionsAnnotation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/hasSentenceID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getSentenceID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getSentenceIDBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setSentenceID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setSentenceIDBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/hasSectionDate:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getSectionDate:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getSectionDateBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setSectionDate:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setSectionDateBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/hasSectionIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/hasSectionName:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getSectionName:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getSectionNameBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setSectionName:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setSectionNameBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/hasSectionAuthor:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getSectionAuthor:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getSectionAuthorBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setSectionAuthor:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setSectionAuthorBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/hasDocID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getDocID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getDocIDBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setDocID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setDocIDBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/hasSectionQuoted:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/hasHasEntityMentionsAnnotation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/hasHasKBPTriplesAnnotation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/hasHasOpenieTriplesAnnotation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/hasChapterIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/hasParagraphIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/hasEnhancedSentence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getEnhancedSentence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setEnhancedSentence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setEnhancedSentence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/mergeEnhancedSentence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/clearEnhancedSentence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getEnhancedSentenceOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getEnhancedSentenceFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/hasSpeaker:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getSpeaker:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getSpeakerBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setSpeaker:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setSpeakerBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/hasSpeakerType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getSpeakerType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/getSpeakerTypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setSpeakerType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentence$Builder/setSpeakerTypeBytes:
edu.stanford.nlp.pipeline.CoreNLPProtos$Sentence$Builder:

#edu/stanford/nlp/pipeline/CoNLLUOutputter/print:
edu.stanford.nlp.pipeline.CoNLLUOutputter:

#edu/stanford/nlp/pipeline/CoreMapAttributeAggregator$1/aggregate:
edu.stanford.nlp.pipeline.CoreMapAttributeAggregator$1:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Node$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Node$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Node$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Node$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Node$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Node$Builder/hasOpenNode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Node$Builder/getOpenNode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Node$Builder/clearOpenNode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Node$Builder/hasCloseNode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Node$Builder/getCloseNode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Node$Builder/clearCloseNode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Node$Builder/hasValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Node$Builder/getValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Node$Builder/getValueBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Node$Builder/setValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Node$Builder/clearValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Node$Builder/setValueBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Node$Builder/hasScore:
edu.stanford.nlp.pipeline.CoreNLPProtos$FlattenedParseTree$Node$Builder:

#edu/stanford/nlp/pipeline/CoreMapAttributeAggregator$3/aggregate:
edu.stanford.nlp.pipeline.CoreMapAttributeAggregator$3:

#edu/stanford/nlp/pipeline/WebServiceAnnotator$RunningProcess/lambda$new$0:
edu.stanford.nlp.pipeline.WebServiceAnnotator$RunningProcess:
edu.stanford.nlp.pipeline.CoNLLUReader$CoNLLUDocument:
edu.stanford.nlp.pipeline.Annotator$1:

#edu/stanford/nlp/pipeline/StanfordCoreNLP/getDefaultExtension:

#edu/stanford/nlp/pipeline/StanfordCoreNLP/<init>:

#edu/stanford/nlp/pipeline/StanfordCoreNLP/<init>:

#edu/stanford/nlp/pipeline/StanfordCoreNLP/getRequiredProperty:

#edu/stanford/nlp/pipeline/StanfordCoreNLP/loadPropertiesFromClasspath:

#edu/stanford/nlp/pipeline/StanfordCoreNLP/loadPropertiesOrException:

#edu/stanford/nlp/pipeline/StanfordCoreNLP/loadProperties:

#edu/stanford/nlp/pipeline/StanfordCoreNLP/ensurePrerequisiteAnnotators:

#edu/stanford/nlp/pipeline/StanfordCoreNLP/getDefaultAnnotatorPool:

#edu/stanford/nlp/pipeline/StanfordCoreNLP/registerCustomAnnotators:

#edu/stanford/nlp/pipeline/StanfordCoreNLP/constructAnnotatorPool:

#edu/stanford/nlp/pipeline/StanfordCoreNLP/getExistingAnnotator:

#edu/stanford/nlp/pipeline/StanfordCoreNLP/annotate:

#edu/stanford/nlp/pipeline/StanfordCoreNLP/annotate:

#edu/stanford/nlp/pipeline/StanfordCoreNLP/printHelp:

#edu/stanford/nlp/pipeline/StanfordCoreNLP/timingInformation:

#edu/stanford/nlp/pipeline/StanfordCoreNLP/shell:

#edu/stanford/nlp/pipeline/StanfordCoreNLP/outputAnnotation:

#edu/stanford/nlp/pipeline/StanfordCoreNLP/processFiles:

#edu/stanford/nlp/pipeline/StanfordCoreNLP/run:

#edu/stanford/nlp/pipeline/StanfordCoreNLP/main:

#edu/stanford/nlp/pipeline/StanfordCoreNLP/lambda$processFiles$39:
edu.stanford.nlp.pipeline.StanfordCoreNLP:
edu.stanford.nlp.pipeline.CoreNLPProtos$SemgrexResponse$Match$1:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SentenceFragment$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SentenceFragment$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SentenceFragment$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SentenceFragment$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SentenceFragment$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SentenceFragment$Builder/ensureTokenIndexIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SentenceFragment$Builder/getTokenIndexList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SentenceFragment$Builder/hasRoot:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SentenceFragment$Builder/hasAssumedTruth:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SentenceFragment$Builder/hasScore:
edu.stanford.nlp.pipeline.CoreNLPProtos$SentenceFragment$Builder:
edu.stanford.nlp.pipeline.CoreNLPProtos$CorefChain$CorefMentionOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedNode$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedNode$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedNode$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedNode$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedNode$Builder/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedNode$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedNode$Builder/hasName:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedNode$Builder/getName:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedNode$Builder/getNameBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedNode$Builder/setName:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedNode$Builder/setNameBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedNode$Builder/hasMatchIndex:
edu.stanford.nlp.pipeline.CoreNLPProtos$SemgrexResponse$NamedNode$Builder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserResponse$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserResponse$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserResponse$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserResponse$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserResponse$Builder/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserResponse$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserResponse$Builder/hasF1:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserResponse$Builder/hasKbestF1:
edu.stanford.nlp.pipeline.CoreNLPProtos$EvaluateParserResponse$Builder:
edu.stanford.nlp.pipeline.CoreNLPProtos$SemgrexResponse$SemgrexResult$1:
edu.stanford.nlp.pipeline.CoreNLPProtos$SemgrexResponse$NamedNodeOrBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$SemgrexResponse$NamedNode$1:
edu.stanford.nlp.pipeline.CoreNLPProtos$TokensRegexRequestOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Builder/maybeForceBuilderInitialization:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Builder/clear:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Builder/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Builder/ensureSemgrexIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Builder/setSemgrex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Builder/addSemgrex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Builder/addSemgrexBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Builder/ensureQueryIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Builder/getQueryList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Builder/getQueryCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Builder/getQuery:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Builder/setQuery:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Builder/setQuery:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Builder/addQuery:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Builder/addQuery:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Builder/addQuery:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Builder/addQuery:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Builder/addAllQuery:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Builder/clearQuery:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Builder/removeQuery:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Builder/getQueryOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Builder/getQueryOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Builder/getQueryFieldBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$SemgrexRequest$Builder:

#edu/stanford/nlp/pipeline/AnnotationOutputter$Options/getKeysToPrint:
edu.stanford.nlp.pipeline.AnnotationOutputter$Options:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/hasText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/getText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/getTextBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/hasBegin:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/hasEnd:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/hasSentenceBegin:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/hasSentenceEnd:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/hasTokenBegin:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/hasTokenEnd:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/hasDocid:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/getDocid:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/getDocidBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/hasIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/hasAuthor:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/getAuthor:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/getAuthorBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/hasMention:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/getMention:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/getMentionBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/hasMentionBegin:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/hasMentionEnd:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/hasMentionType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/getMentionType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/getMentionTypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/hasMentionSieve:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/getMentionSieve:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/getMentionSieveBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/hasSpeaker:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/getSpeaker:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/getSpeakerBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/hasSpeakerSieve:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/getSpeakerSieve:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/getSpeakerSieveBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/hasCanonicalMention:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/getCanonicalMention:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/getCanonicalMentionBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/hasCanonicalMentionBegin:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/hasCanonicalMentionEnd:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/hasAttributionDependencyGraph:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/getAttributionDependencyGraph:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/getAttributionDependencyGraphOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Quote/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$Quote:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document/hasText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document/getText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document/getTextBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document/hasDocID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document/getDocID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document/getDocIDBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document/hasDocDate:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document/getDocDate:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document/getDocDateBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document/hasCalendar:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document/hasHasEntityMentionsAnnotation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document/hasXmlDoc:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document/hasHasCorefMentionAnnotation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document/hasHasCorefAnnotation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$Document:

#edu/stanford/nlp/pipeline/SentenceAnnotator/annotate:
edu.stanford.nlp.pipeline.SentenceAnnotator:
edu.stanford.nlp.pipeline.CoreNLPProtos$Operator$1:

#edu/stanford/nlp/pipeline/CoreNLPProtos$MapIntString/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$MapIntString/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$MapIntString/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$MapIntString/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$MapIntString/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$MapIntString/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$MapIntString/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$MapIntString:

#edu/stanford/nlp/pipeline/TokenizerAnnotator$TokenizerType/initializeNameMap:

#edu/stanford/nlp/pipeline/TokenizerAnnotator$TokenizerType/initializeClassMap:

#edu/stanford/nlp/pipeline/TokenizerAnnotator$TokenizerType/getTokenizerType:
edu.stanford.nlp.pipeline.TokenizerAnnotator$TokenizerType:
edu.stanford.nlp.pipeline.CoreNLPProtos$RelationTriple$1:
edu.stanford.nlp.pipeline.WebServiceAnnotator$ShouldRetryException:

#edu/stanford/nlp/pipeline/CoreMapAttributeAggregator$ConcatTextAggregator/aggregate:
edu.stanford.nlp.pipeline.CoreMapAttributeAggregator$ConcatTextAggregator:

#edu/stanford/nlp/pipeline/CoreMapAttributeAggregator$ConcatAggregator/aggregate:
edu.stanford.nlp.pipeline.CoreMapAttributeAggregator$ConcatAggregator:

#edu/stanford/nlp/pipeline/CoreNLPProtos$MapStringString/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$MapStringString/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$MapStringString/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$MapStringString/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$MapStringString/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$MapStringString/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$MapStringString/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$MapStringString:
edu.stanford.nlp.pipeline.ServerAnnotatorImplementations:
edu.stanford.nlp.pipeline.CoreNLPProtos$MapStringString$1:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/hasHeadStart:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/hasHeadEnd:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/hasMentionType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/getMentionType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/getMentionTypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/setMentionType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/setMentionTypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/hasNormalizedName:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/getNormalizedName:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/getNormalizedNameBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/setNormalizedName:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/setNormalizedNameBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/hasHeadTokenIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/hasCorefID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/getCorefID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/getCorefIDBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/setCorefID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/setCorefIDBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/hasObjectID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/getObjectID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/getObjectIDBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/setObjectID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/setObjectIDBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/hasExtentStart:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/hasExtentEnd:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/hasType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/getType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/getTypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/setType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/setTypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/hasSubtype:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/getSubtype:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/getSubtypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/setSubtype:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Entity$Builder/setSubtypeBytes:
edu.stanford.nlp.pipeline.CoreNLPProtos$Entity$Builder:
edu.stanford.nlp.pipeline.StanfordCoreNLP$1:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain/hasChainID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain/hasRepresentative:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$CorefChain:
edu.stanford.nlp.pipeline.CoreMapAttributeAggregator:
edu.stanford.nlp.pipeline.CoreNLPProtos$MapStringStringOrBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$NaturalLogicRelation$1:
edu.stanford.nlp.pipeline.TokensRegexNERAnnotator$1:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$SemgrexRequest:
edu.stanford.nlp.pipeline.QuoteAttributionAnnotator$MentionEndAnnotation:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer$FileHandler/<init>:
edu.stanford.nlp.pipeline.StanfordCoreNLPServer$FileHandler:

#edu/stanford/nlp/pipeline/TokenizerAnnotator/computeExtraOptions:

#edu/stanford/nlp/pipeline/TokenizerAnnotator/<init>:

#edu/stanford/nlp/pipeline/TokenizerAnnotator/<init>:

#edu/stanford/nlp/pipeline/TokenizerAnnotator/initFactory:

#edu/stanford/nlp/pipeline/TokenizerAnnotator/setTokenBeginTokenEnd:

#edu/stanford/nlp/pipeline/TokenizerAnnotator/setNewlineStatus:

#edu/stanford/nlp/pipeline/TokenizerAnnotator/adjustFinalToken:

#edu/stanford/nlp/pipeline/TokenizerAnnotator/annotate:
edu.stanford.nlp.pipeline.TokenizerAnnotator:
edu.stanford.nlp.pipeline.StanfordCoreNLPClient$1:
edu.stanford.nlp.pipeline.TextAnnotationCreator:

#edu/stanford/nlp/pipeline/GenericAnnotationSerializer/write:

#edu/stanford/nlp/pipeline/GenericAnnotationSerializer/read:
edu.stanford.nlp.pipeline.GenericAnnotationSerializer:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokenLocation$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokenLocation$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokenLocation$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokenLocation$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokenLocation$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokenLocation$Builder/hasSentenceIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokenLocation$Builder/hasTokenIndex:
edu.stanford.nlp.pipeline.CoreNLPProtos$TokenLocation$Builder:
edu.stanford.nlp.pipeline.CoreNLPProtos$TimexOrBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$DependencyGraph$1:
edu.stanford.nlp.pipeline.CoreNLPProtos$MapIntStringOrBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$MentionOrBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$Sentence$1:
edu.stanford.nlp.pipeline.CoreNLPProtos$Timex$1:
edu.stanford.nlp.pipeline.CoreNLPProtos$CorefChainOrBuilder:

#edu/stanford/nlp/pipeline/POSTaggerAnnotator/<init>:

#edu/stanford/nlp/pipeline/POSTaggerAnnotator/loadModel:

#edu/stanford/nlp/pipeline/POSTaggerAnnotator/annotate:

#edu/stanford/nlp/pipeline/POSTaggerAnnotator/doOneSentence:
edu.stanford.nlp.pipeline.POSTaggerAnnotator:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$SemgrexResponse:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$SemgrexResult$Builder/maybeForceBuilderInitialization:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$SemgrexResult$Builder/clear:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$SemgrexResult$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$SemgrexResult$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$SemgrexResult$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$SemgrexResult$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$SemgrexResult$Builder/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$SemgrexResult$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$SemgrexResult$Builder/ensureMatchIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$SemgrexResult$Builder/getMatchList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$SemgrexResult$Builder/getMatchCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$SemgrexResult$Builder/getMatch:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$SemgrexResult$Builder/setMatch:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$SemgrexResult$Builder/setMatch:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$SemgrexResult$Builder/addMatch:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$SemgrexResult$Builder/addMatch:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$SemgrexResult$Builder/addMatch:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$SemgrexResult$Builder/addMatch:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$SemgrexResult$Builder/addAllMatch:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$SemgrexResult$Builder/clearMatch:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$SemgrexResult$Builder/removeMatch:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$SemgrexResult$Builder/getMatchOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$SemgrexResult$Builder/getMatchOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$SemgrexResult$Builder/getMatchFieldBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$SemgrexResponse$SemgrexResult$Builder:

#edu/stanford/nlp/pipeline/WordsToSentencesAnnotator/<init>:

#edu/stanford/nlp/pipeline/WordsToSentencesAnnotator/<init>:

#edu/stanford/nlp/pipeline/WordsToSentencesAnnotator/annotate:
edu.stanford.nlp.pipeline.WordsToSentencesAnnotator:
edu.stanford.nlp.pipeline.AnnotationSource:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Operator/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Operator/hasName:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Operator/getName:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Operator/getNameBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Operator/hasQuantifierSpanBegin:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Operator/hasQuantifierSpanEnd:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Operator/hasSubjectSpanBegin:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Operator/hasSubjectSpanEnd:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Operator/hasObjectSpanBegin:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Operator/hasObjectSpanEnd:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Operator/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Operator/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Operator/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Operator/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Operator/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Operator/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$Operator:

#edu/stanford/nlp/pipeline/DocDateAnnotator/<init>:

#edu/stanford/nlp/pipeline/DocDateAnnotator/annotate:
edu.stanford.nlp.pipeline.DocDateAnnotator:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer$ReadyHandler/handle:
edu.stanford.nlp.pipeline.StanfordCoreNLPServer$ReadyHandler:

#edu/stanford/nlp/pipeline/LanguageInfo/main:

#edu/stanford/nlp/pipeline/LanguageInfo/getLanguageFromString:

#edu/stanford/nlp/pipeline/LanguageInfo/isStanfordCoreNLPSupportedLang:

#edu/stanford/nlp/pipeline/LanguageInfo/isSegmenterLanguage:
edu.stanford.nlp.pipeline.LanguageInfo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest$Builder/maybeForceBuilderInitialization:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest$Builder/clear:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest$Builder/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest$Builder/hasDocument:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest$Builder/getDocument:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest$Builder/setDocument:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest$Builder/setDocument:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest$Builder/mergeDocument:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest$Builder/clearDocument:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest$Builder/getDocumentOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest$Builder/getDocumentFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest$Builder/hasLanguage:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest$Builder/getLanguage:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest$Builder/setLanguage:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest$Builder/clearLanguage:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest$Builder/hasRelativePronouns:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest$Builder/getRelativePronouns:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest$Builder/getRelativePronounsBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest$Builder/setRelativePronouns:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest$Builder/clearRelativePronouns:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyEnhancerRequest$Builder/setRelativePronounsBytes:
edu.stanford.nlp.pipeline.CoreNLPProtos$DependencyEnhancerRequest$Builder:
edu.stanford.nlp.pipeline.CoreNLPProtos$TokensRegexResponse$1:
edu.stanford.nlp.pipeline.QuoteAttributionAnnotator$CanonicalMentionAnnotation:
edu.stanford.nlp.pipeline.QuoteAttributionAnnotator$MentionBeginAnnotation:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer$ShutdownHandler/handle:
edu.stanford.nlp.pipeline.StanfordCoreNLPServer$ShutdownHandler:
edu.stanford.nlp.pipeline.TokenizerAnnotator$1:
edu.stanford.nlp.pipeline.CoreNLPProtos$SemgrexResponse$1:

#edu/stanford/nlp/pipeline/AnnotatorImplementations/parse:

#edu/stanford/nlp/pipeline/AnnotatorImplementations/custom:

#edu/stanford/nlp/pipeline/AnnotatorImplementations/columnData:

#edu/stanford/nlp/pipeline/AnnotatorImplementations/dependencies:

#edu/stanford/nlp/pipeline/AnnotatorImplementations/quote:
edu.stanford.nlp.pipeline.AnnotatorImplementations:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$SemgrexResult/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$SemgrexResult/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$SemgrexResult/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$SemgrexResult/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$SemgrexResult/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$SemgrexResult/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$SemgrexResult/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$SemgrexResponse$SemgrexResult:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/maybeForceBuilderInitialization:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/clear:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/ensureNodeIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/getNodeList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/getNodeCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/getNode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/setNode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/setNode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/addNode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/addNode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/addNode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/addNode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/addAllNode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/clearNode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/removeNode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/getNodeOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/getNodeOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/getNodeFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/ensureEdgeIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/getEdgeList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/getEdgeCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/getEdge:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/setEdge:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/setEdge:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/addEdge:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/addEdge:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/addEdge:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/addEdge:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/addAllEdge:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/clearEdge:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/removeEdge:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/getEdgeOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/getEdgeOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/getEdgeFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/ensureRootIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Builder/getRootList:
edu.stanford.nlp.pipeline.CoreNLPProtos$DependencyGraph$Builder:
edu.stanford.nlp.pipeline.CoreNLPProtos$ParseTreeOrBuilder:
edu.stanford.nlp.pipeline.TokensRegexAnnotator$Options:

#edu/stanford/nlp/pipeline/CoreNLPProtos$IndexedWord$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$IndexedWord$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$IndexedWord$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$IndexedWord$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$IndexedWord$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$IndexedWord$Builder/hasSentenceNum:

#edu/stanford/nlp/pipeline/CoreNLPProtos$IndexedWord$Builder/hasTokenIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$IndexedWord$Builder/hasDocID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$IndexedWord$Builder/hasCopyCount:
edu.stanford.nlp.pipeline.CoreNLPProtos$IndexedWord$Builder:

#edu/stanford/nlp/pipeline/ChineseSegmenterAnnotator/<init>:

#edu/stanford/nlp/pipeline/ChineseSegmenterAnnotator/annotate:

#edu/stanford/nlp/pipeline/ChineseSegmenterAnnotator/splitCharacters:

#edu/stanford/nlp/pipeline/ChineseSegmenterAnnotator/advancePos:

#edu/stanford/nlp/pipeline/ChineseSegmenterAnnotator/runSegmentation:

#edu/stanford/nlp/pipeline/ChineseSegmenterAnnotator/makeXmlToken:
edu.stanford.nlp.pipeline.ChineseSegmenterAnnotator:

#edu/stanford/nlp/pipeline/AnnotationSerializer$IntermediateSemanticGraph/convertIntermediateGraph:
edu.stanford.nlp.pipeline.AnnotationSerializer$IntermediateSemanticGraph:

#edu/stanford/nlp/pipeline/CoreNLPProtos$MapIntString$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$MapIntString$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$MapIntString$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$MapIntString$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$MapIntString$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$MapIntString$Builder/ensureKeyIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$MapIntString$Builder/getKeyList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$MapIntString$Builder/ensureValueIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$MapIntString$Builder/setValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$MapIntString$Builder/addValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$MapIntString$Builder/addValueBytes:
edu.stanford.nlp.pipeline.CoreNLPProtos$MapIntString$Builder:

#edu/stanford/nlp/pipeline/QuoteAnnotator/<init>:

#edu/stanford/nlp/pipeline/QuoteAnnotator/xmlFreeText:

#edu/stanford/nlp/pipeline/QuoteAnnotator/annotate:

#edu/stanford/nlp/pipeline/QuoteAnnotator/setAnnotations:

#edu/stanford/nlp/pipeline/QuoteAnnotator/countQuotes:

#edu/stanford/nlp/pipeline/QuoteAnnotator/getCoreMapQuotes:

#edu/stanford/nlp/pipeline/QuoteAnnotator/setQuoteIndices:

#edu/stanford/nlp/pipeline/QuoteAnnotator/makeQuote:

#edu/stanford/nlp/pipeline/QuoteAnnotator/recursiveQuotes:

#edu/stanford/nlp/pipeline/QuoteAnnotator/isAQuoteMapStarter:

#edu/stanford/nlp/pipeline/QuoteAnnotator/isSingleQuoteWithUse:

#edu/stanford/nlp/pipeline/QuoteAnnotator/matchesPrevQuote:

#edu/stanford/nlp/pipeline/QuoteAnnotator/isSingleQuoteStart:

#edu/stanford/nlp/pipeline/QuoteAnnotator/isSingleQuoteEnd:

#edu/stanford/nlp/pipeline/QuoteAnnotator/isDoubleQuoteEnd:

#edu/stanford/nlp/pipeline/QuoteAnnotator/requires:

#edu/stanford/nlp/pipeline/QuoteAnnotator/requirementsSatisfied:

#edu/stanford/nlp/pipeline/QuoteAnnotator/gatherQuotes:
edu.stanford.nlp.pipeline.QuoteAnnotator:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Node/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Node/hasSentenceIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Node/hasIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Node/hasCopyAnnotation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Node/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Node/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Node/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Node/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Node/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Node/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$DependencyGraph$Node:
edu.stanford.nlp.pipeline.CoreNLPProtos$SentenceOrBuilder:

#edu/stanford/nlp/pipeline/InlineXMLOutputter/print:
edu.stanford.nlp.pipeline.InlineXMLOutputter:
edu.stanford.nlp.pipeline.CoreNLPProtos$EvaluateParserResponseOrBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$Section$1:
edu.stanford.nlp.pipeline.LanguageInfo$HumanLanguage:
edu.stanford.nlp.pipeline.POSTaggerAnnotator$1:

#edu/stanford/nlp/pipeline/StatTokSentAnnotator/<init>:

#edu/stanford/nlp/pipeline/StatTokSentAnnotator/setNewlineStatus:

#edu/stanford/nlp/pipeline/StatTokSentAnnotator/annotate:
edu.stanford.nlp.pipeline.StatTokSentAnnotator:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex/hasValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex/getValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex/getValueBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex/hasAltValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex/getAltValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex/getAltValueBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex/hasText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex/getText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex/getTextBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex/hasType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex/getType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex/getTypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex/hasTid:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex/getTid:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex/getTidBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex/hasBeginPoint:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex/hasEndPoint:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Timex/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$Timex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match$Builder/maybeForceBuilderInitialization:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match$Builder/clear:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match$Builder/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match$Builder/hasSentence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match$Builder/hasMatch:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match$Builder/getMatch:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match$Builder/setMatch:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match$Builder/setMatch:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match$Builder/mergeMatch:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match$Builder/clearMatch:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match$Builder/getMatchOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match$Builder/getMatchFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match$Builder/ensureGroupIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match$Builder/getGroupList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match$Builder/getGroupCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match$Builder/getGroup:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match$Builder/setGroup:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match$Builder/setGroup:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match$Builder/addGroup:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match$Builder/addGroup:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match$Builder/addGroup:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match$Builder/addGroup:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match$Builder/addAllGroup:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match$Builder/clearGroup:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match$Builder/removeGroup:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match$Builder/getGroupOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match$Builder/getGroupOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Match$Builder/getGroupFieldBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$TokensRegexResponse$Match$Builder:
edu.stanford.nlp.pipeline.QuoteAttributionAnnotator$CanonicalMentionEndAnnotation:
edu.stanford.nlp.pipeline.QuoteAttributionAnnotator$MentionSieveAnnotation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Node$ContentsCase/forNumber:
edu.stanford.nlp.pipeline.CoreNLPProtos$FlattenedParseTree$Node$ContentsCase:

#edu/stanford/nlp/pipeline/ParserAnnotatorUtils/fillInParseAnnotations:

#edu/stanford/nlp/pipeline/ParserAnnotatorUtils/setMissingTags:
edu.stanford.nlp.pipeline.ParserAnnotatorUtils:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer$TregexHandler/setTregexOffsets:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer$TregexHandler/handle:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer$TregexHandler/lambda$handle$7:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer$TregexHandler/lambda$null$4:
edu.stanford.nlp.pipeline.StanfordCoreNLPServer$TregexHandler:
edu.stanford.nlp.pipeline.StanfordCoreNLPServer$3:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention/hasMentionID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention/hasMentionType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention/getMentionType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention/getMentionTypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention/hasNumber:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention/getNumber:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention/getNumberBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention/hasGender:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention/getGender:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention/getGenderBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention/hasAnimacy:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention/getAnimacy:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention/getAnimacyBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention/hasBeginIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention/hasEndIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention/hasHeadIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention/hasSentenceIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention/hasPosition:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$CorefMention/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$CorefChain$CorefMention:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonResponse/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonResponse/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonResponse/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonResponse/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonResponse/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonResponse/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonResponse/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$TsurgeonResponse:

#edu/stanford/nlp/pipeline/HybridCorefAnnotator/<init>:

#edu/stanford/nlp/pipeline/HybridCorefAnnotator/annotate:

#edu/stanford/nlp/pipeline/HybridCorefAnnotator/getLinks:

#edu/stanford/nlp/pipeline/HybridCorefAnnotator/annotateOldFormat:

#edu/stanford/nlp/pipeline/HybridCorefAnnotator/hasSpeakerAnnotations:
edu.stanford.nlp.pipeline.HybridCorefAnnotator:
edu.stanford.nlp.pipeline.StanfordCoreNLPServer$1:

#edu/stanford/nlp/pipeline/CoreMapAttributeAggregator$ConcatCoreMapListAggregator/aggregate:
edu.stanford.nlp.pipeline.CoreMapAttributeAggregator$ConcatCoreMapListAggregator:
edu.stanford.nlp.pipeline.CoreNLPProtos$Quote$1:
edu.stanford.nlp.pipeline.CoreNLPProtos$SectionOrBuilder:
edu.stanford.nlp.pipeline.CoNLLUOutputter$2:
edu.stanford.nlp.pipeline.CoreNLPProtos$TsurgeonRequest$Operation$1:

#edu/stanford/nlp/pipeline/CorefAnnotator/<init>:

#edu/stanford/nlp/pipeline/CorefAnnotator/setNamedEntityTagGranularity:

#edu/stanford/nlp/pipeline/CorefAnnotator/findBestCoreferentEntityMention:

#edu/stanford/nlp/pipeline/CorefAnnotator/annotate:

#edu/stanford/nlp/pipeline/CorefAnnotator/getLinks:

#edu/stanford/nlp/pipeline/CorefAnnotator/hasSpeakerAnnotations:

#edu/stanford/nlp/pipeline/CorefAnnotator/requires:

#edu/stanford/nlp/pipeline/CorefAnnotator/exactRequirements:

#edu/stanford/nlp/pipeline/CorefAnnotator/lambda$findBestCoreferentEntityMention$0:
edu.stanford.nlp.pipeline.CorefAnnotator:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedRelation$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedRelation$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedRelation$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedRelation$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedRelation$Builder/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedRelation$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedRelation$Builder/hasName:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedRelation$Builder/getName:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedRelation$Builder/getNameBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedRelation$Builder/setName:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedRelation$Builder/setNameBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedRelation$Builder/hasReln:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedRelation$Builder/getReln:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedRelation$Builder/getRelnBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedRelation$Builder/setReln:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedRelation$Builder/setRelnBytes:
edu.stanford.nlp.pipeline.CoreNLPProtos$SemgrexResponse$NamedRelation$Builder:
edu.stanford.nlp.pipeline.CoreNLPProtos$SemgrexRequestOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity$Builder/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity$Builder/hasProjectEquivalence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity$Builder/getProjectEquivalence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity$Builder/setProjectEquivalence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity$Builder/hasProjectForwardEntailment:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity$Builder/getProjectForwardEntailment:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity$Builder/setProjectForwardEntailment:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity$Builder/hasProjectReverseEntailment:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity$Builder/getProjectReverseEntailment:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity$Builder/setProjectReverseEntailment:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity$Builder/hasProjectNegation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity$Builder/getProjectNegation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity$Builder/setProjectNegation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity$Builder/hasProjectAlternation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity$Builder/getProjectAlternation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity$Builder/setProjectAlternation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity$Builder/hasProjectCover:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity$Builder/getProjectCover:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity$Builder/setProjectCover:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity$Builder/hasProjectIndependence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity$Builder/getProjectIndependence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Polarity$Builder/setProjectIndependence:
edu.stanford.nlp.pipeline.CoreNLPProtos$Polarity$Builder:
edu.stanford.nlp.pipeline.CoreNLPProtos$Mention$1:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section/hasCharBegin:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section/hasCharEnd:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section/hasAuthor:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section/getAuthor:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section/getAuthorBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section/hasDatetime:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section/getDatetime:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section/getDatetimeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section/hasAuthorCharBegin:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section/hasAuthorCharEnd:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section/hasXmlTag:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section/getXmlTag:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section/getXmlTagOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$Section:
edu.stanford.nlp.pipeline.CoreNLPProtos$SemgrexResponseOrBuilder:

#edu/stanford/nlp/pipeline/AnnotationIterator/<init>:

#edu/stanford/nlp/pipeline/AnnotationIterator/hasNext:

#edu/stanford/nlp/pipeline/AnnotationIterator/next:

#edu/stanford/nlp/pipeline/AnnotationIterator/readNextDocument:

#edu/stanford/nlp/pipeline/AnnotationIterator/close:
edu.stanford.nlp.pipeline.AnnotationIterator:
edu.stanford.nlp.pipeline.CoreNLPProtos$Language$1:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Operation/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Operation/hasTregex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Operation/getTregex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Operation/getTregexBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Operation/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Operation/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Operation/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Operation/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Operation/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Operation/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$TsurgeonRequest$Operation:
edu.stanford.nlp.pipeline.AnnotatorPool$1:
edu.stanford.nlp.pipeline.CoreNLPProtos$TokensRegexResponse$Match$1:
edu.stanford.nlp.pipeline.CoreNLPProtos$MapIntString$1:
edu.stanford.nlp.pipeline.TokensRegexNERAnnotator$PosMatchType:
edu.stanford.nlp.pipeline.CoreNLPProtos$EvaluateParserRequest$ParseResult$1:

#edu/stanford/nlp/pipeline/AnnotationPipeline$1/next:
edu.stanford.nlp.pipeline.AnnotationPipeline$1:

#edu/stanford/nlp/pipeline/SentimentAnnotator/<init>:

#edu/stanford/nlp/pipeline/SentimentAnnotator/doOneSentence:
edu.stanford.nlp.pipeline.SentimentAnnotator:

#edu/stanford/nlp/pipeline/JSONOutputter/writeTriples:

#edu/stanford/nlp/pipeline/JSONOutputter/writeTime:

#edu/stanford/nlp/pipeline/JSONOutputter/buildDependencyTree:

#edu/stanford/nlp/pipeline/JSONOutputter/lambda$writeTime$24:

#edu/stanford/nlp/pipeline/JSONOutputter/lambda$print$20:

#edu/stanford/nlp/pipeline/JSONOutputter/lambda$null$18:

#edu/stanford/nlp/pipeline/JSONOutputter/lambda$null$14:

#edu/stanford/nlp/pipeline/JSONOutputter/lambda$null$13:

#edu/stanford/nlp/pipeline/JSONOutputter/lambda$null$11:

#edu/stanford/nlp/pipeline/JSONOutputter/lambda$null$7:

#edu/stanford/nlp/pipeline/JSONOutputter/lambda$null$5:

#edu/stanford/nlp/pipeline/JSONOutputter/lambda$null$3:

#edu/stanford/nlp/pipeline/JSONOutputter/lambda$null$2:

#edu/stanford/nlp/pipeline/JSONOutputter/lambda$null$1:

#edu/stanford/nlp/pipeline/JSONOutputter/lambda$null$0:
edu.stanford.nlp.pipeline.JSONOutputter:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/maybeForceBuilderInitialization:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/clear:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasWord:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getWord:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getWordBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setWord:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setWordBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasPos:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getPos:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getPosBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setPos:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setPosBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getValueBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setValueBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasCategory:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getCategory:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getCategoryBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setCategory:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setCategoryBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasBefore:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getBefore:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getBeforeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setBefore:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setBeforeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasAfter:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getAfter:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getAfterBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setAfter:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setAfterBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasOriginalText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getOriginalText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getOriginalTextBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setOriginalText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setOriginalTextBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasNer:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getNer:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getNerBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setNer:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setNerBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasCoarseNER:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getCoarseNER:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getCoarseNERBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setCoarseNER:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setCoarseNERBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasFineGrainedNER:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getFineGrainedNER:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getFineGrainedNERBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setFineGrainedNER:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setFineGrainedNERBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/ensureNerLabelProbsIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setNerLabelProbs:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/addNerLabelProbs:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/addNerLabelProbsBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasNormalizedNER:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getNormalizedNER:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getNormalizedNERBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setNormalizedNER:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setNormalizedNERBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasLemma:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getLemma:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getLemmaBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setLemma:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setLemmaBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasBeginChar:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasEndChar:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasUtterance:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasSpeaker:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getSpeaker:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getSpeakerBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setSpeaker:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setSpeakerBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasSpeakerType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getSpeakerType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getSpeakerTypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setSpeakerType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setSpeakerTypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasBeginIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasEndIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasTokenBeginIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasTokenEndIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasTimexValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getTimexValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setTimexValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setTimexValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/mergeTimexValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/clearTimexValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getTimexValueOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getTimexValueFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasHasXmlContext:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/ensureXmlContextIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setXmlContext:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/addXmlContext:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/addXmlContextBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasCorefClusterID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasAnswer:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getAnswer:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getAnswerBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setAnswer:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setAnswerBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasHeadWordIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasOperator:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getOperator:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setOperator:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setOperator:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/mergeOperator:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/clearOperator:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getOperatorOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getOperatorFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasPolarity:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getPolarity:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setPolarity:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setPolarity:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/mergePolarity:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/clearPolarity:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getPolarityOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getPolarityFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasPolarityDir:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getPolarityDir:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getPolarityDirBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setPolarityDir:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setPolarityDirBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasSpan:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getSpan:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setSpan:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setSpan:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/mergeSpan:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/clearSpan:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getSpanOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getSpanFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasSentiment:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getSentiment:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getSentimentBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setSentiment:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setSentimentBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasQuotationIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasConllUFeatures:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getConllUFeatures:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setConllUFeatures:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setConllUFeatures:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/mergeConllUFeatures:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/clearConllUFeatures:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getConllUFeaturesOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getConllUFeaturesFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasCoarseTag:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getCoarseTag:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getCoarseTagBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setCoarseTag:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setCoarseTagBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasConllUTokenSpan:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getConllUTokenSpan:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setConllUTokenSpan:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setConllUTokenSpan:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/mergeConllUTokenSpan:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/clearConllUTokenSpan:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getConllUTokenSpanOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getConllUTokenSpanFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasConllUMisc:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getConllUMisc:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getConllUMiscBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setConllUMisc:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setConllUMiscBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasConllUSecondaryDeps:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getConllUSecondaryDeps:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setConllUSecondaryDeps:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setConllUSecondaryDeps:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/mergeConllUSecondaryDeps:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/clearConllUSecondaryDeps:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getConllUSecondaryDepsOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getConllUSecondaryDepsFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasWikipediaEntity:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getWikipediaEntity:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getWikipediaEntityBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setWikipediaEntity:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setWikipediaEntityBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasIsNewline:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasGender:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getGender:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getGenderBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setGender:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setGenderBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasTrueCase:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getTrueCase:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getTrueCaseBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setTrueCase:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setTrueCaseBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasTrueCaseText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getTrueCaseText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getTrueCaseTextBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setTrueCaseText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setTrueCaseTextBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasChineseChar:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getChineseChar:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getChineseCharBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setChineseChar:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setChineseCharBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasChineseSeg:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getChineseSeg:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getChineseSegBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setChineseSeg:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setChineseSegBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasChineseXMLChar:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getChineseXMLChar:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getChineseXMLCharBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setChineseXMLChar:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setChineseXMLCharBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasArabicSeg:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getArabicSeg:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getArabicSegBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setArabicSeg:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setArabicSegBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasSectionName:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getSectionName:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getSectionNameBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setSectionName:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setSectionNameBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasSectionAuthor:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getSectionAuthor:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getSectionAuthorBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setSectionAuthor:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setSectionAuthorBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasSectionDate:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getSectionDate:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getSectionDateBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setSectionDate:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setSectionDateBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasSectionEndLabel:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getSectionEndLabel:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getSectionEndLabelBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setSectionEndLabel:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setSectionEndLabelBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasParent:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getParent:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getParentBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setParent:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setParentBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/ensureCorefMentionIndexIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getCorefMentionIndexList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasEntityMentionIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasIsMWT:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasIsFirstMWT:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasMwtText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getMwtText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getMwtTextBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setMwtText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setMwtTextBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasNumericValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasNumericType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getNumericType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getNumericTypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setNumericType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setNumericTypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasNumericCompositeValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasNumericCompositeType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getNumericCompositeType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/getNumericCompositeTypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setNumericCompositeType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/setNumericCompositeTypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasCodepointOffsetBegin:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token$Builder/hasCodepointOffsetEnd:
edu.stanford.nlp.pipeline.CoreNLPProtos$Token$Builder:

#edu/stanford/nlp/pipeline/MWTAnnotator/<init>:

#edu/stanford/nlp/pipeline/MWTAnnotator/loadMultiWordTokenMappings:

#edu/stanford/nlp/pipeline/MWTAnnotator/annotate:
edu.stanford.nlp.pipeline.MWTAnnotator:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$Builder/maybeForceBuilderInitialization:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$Builder/clear:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$Builder/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$Builder/hasChainID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$Builder/ensureMentionIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$Builder/getMentionList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$Builder/getMentionCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$Builder/getMention:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$Builder/setMention:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$Builder/setMention:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$Builder/addMention:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$Builder/addMention:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$Builder/addMention:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$Builder/addMention:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$Builder/addAllMention:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$Builder/clearMention:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$Builder/removeMention:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$Builder/getMentionOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$Builder/getMentionOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$Builder/getMentionFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$CorefChain$Builder/hasRepresentative:
edu.stanford.nlp.pipeline.CoreNLPProtos$CorefChain$Builder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentiment/forNumber:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Sentiment/valueOf:
edu.stanford.nlp.pipeline.CoreNLPProtos$Sentiment:
edu.stanford.nlp.pipeline.CoreNLPProtos$TsurgeonRequestOrBuilder:
edu.stanford.nlp.pipeline.AnnotationSerializer$IntermediateNode:

#edu/stanford/nlp/pipeline/GenericWebServiceAnnotator/parseClasses:

#edu/stanford/nlp/pipeline/GenericWebServiceAnnotator/annotateImpl:
edu.stanford.nlp.pipeline.GenericWebServiceAnnotator:
edu.stanford.nlp.pipeline.CoreNLPProtos$IndexedWord$1:
edu.stanford.nlp.pipeline.CoreNLPProtos$FlattenedParseTree$1:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/maybeForceBuilderInitialization:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/clear:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/ensureOperationsIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/getOperationsList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/getOperationsCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/getOperations:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/setOperations:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/setOperations:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/addOperations:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/addOperations:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/addOperations:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/addOperations:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/addAllOperations:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/clearOperations:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/removeOperations:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/getOperationsOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/getOperationsOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/getOperationsFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/ensureTreesIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/getTreesList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/getTreesCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/getTrees:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/setTrees:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/setTrees:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/addTrees:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/addTrees:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/addTrees:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/addTrees:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/addAllTrees:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/clearTrees:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/removeTrees:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/getTreesOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/getTreesOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest$Builder/getTreesFieldBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$TsurgeonRequest$Builder:
edu.stanford.nlp.pipeline.CoreNLPProtos$TsurgeonResponseOrBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$EntityOrBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$EvaluateParserResponse$1:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserResponse/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserResponse/hasF1:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserResponse/hasKbestF1:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserResponse/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserResponse/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserResponse/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserResponse/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserResponse/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserResponse/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$EvaluateParserResponse:
edu.stanford.nlp.pipeline.GenericAnnotationSerializer$AppendingObjectOutputStream:
edu.stanford.nlp.pipeline.WebServiceAnnotator$PermanentlyFailedException:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer$SemgrexHandler/handle:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer$SemgrexHandler/lambda$handle$6:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer$SemgrexHandler/lambda$null$5:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer$SemgrexHandler/lambda$null$3:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer$SemgrexHandler/lambda$null$2:
edu.stanford.nlp.pipeline.StanfordCoreNLPServer$SemgrexHandler:
edu.stanford.nlp.pipeline.QuoteAttributionAnnotator$MentionTypeAnnotation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Edge$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Edge$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Edge$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Edge$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Edge$Builder/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Edge$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Edge$Builder/hasSource:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Edge$Builder/hasTarget:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Edge$Builder/hasDep:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Edge$Builder/getDep:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Edge$Builder/getDepBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Edge$Builder/setDep:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Edge$Builder/setDepBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Edge$Builder/hasIsExtra:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Edge$Builder/hasSourceCopy:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Edge$Builder/hasTargetCopy:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Edge$Builder/hasLanguage:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Edge$Builder/getLanguage:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph$Edge$Builder/setLanguage:
edu.stanford.nlp.pipeline.CoreNLPProtos$DependencyGraph$Edge$Builder:

#edu/stanford/nlp/pipeline/DefaultPaths/main:
edu.stanford.nlp.pipeline.DefaultPaths:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasWord:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getWord:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getWordBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasPos:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getPos:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getPosBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getValueBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasCategory:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getCategory:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getCategoryBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasBefore:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getBefore:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getBeforeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasAfter:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getAfter:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getAfterBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasOriginalText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getOriginalText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getOriginalTextBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasNer:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getNer:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getNerBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasCoarseNER:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getCoarseNER:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getCoarseNERBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasFineGrainedNER:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getFineGrainedNER:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getFineGrainedNERBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasNormalizedNER:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getNormalizedNER:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getNormalizedNERBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasLemma:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getLemma:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getLemmaBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasBeginChar:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasEndChar:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasUtterance:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasSpeaker:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getSpeaker:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getSpeakerBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasSpeakerType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getSpeakerType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getSpeakerTypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasBeginIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasEndIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasTokenBeginIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasTokenEndIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasTimexValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getTimexValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getTimexValueOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasHasXmlContext:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasCorefClusterID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasAnswer:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getAnswer:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getAnswerBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasHeadWordIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasOperator:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getOperator:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getOperatorOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasPolarity:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getPolarity:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getPolarityOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasPolarityDir:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getPolarityDir:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getPolarityDirBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasSpan:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getSpan:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getSpanOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasSentiment:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getSentiment:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getSentimentBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasQuotationIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasConllUFeatures:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getConllUFeatures:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getConllUFeaturesOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasCoarseTag:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getCoarseTag:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getCoarseTagBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasConllUTokenSpan:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getConllUTokenSpan:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getConllUTokenSpanOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasConllUMisc:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getConllUMisc:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getConllUMiscBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasConllUSecondaryDeps:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getConllUSecondaryDeps:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getConllUSecondaryDepsOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasWikipediaEntity:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getWikipediaEntity:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getWikipediaEntityBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasIsNewline:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasGender:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getGender:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getGenderBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasTrueCase:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getTrueCase:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getTrueCaseBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasTrueCaseText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getTrueCaseText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getTrueCaseTextBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasChineseChar:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getChineseChar:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getChineseCharBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasChineseSeg:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getChineseSeg:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getChineseSegBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasChineseXMLChar:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getChineseXMLChar:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getChineseXMLCharBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasArabicSeg:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getArabicSeg:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getArabicSegBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasSectionName:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getSectionName:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getSectionNameBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasSectionAuthor:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getSectionAuthor:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getSectionAuthorBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasSectionDate:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getSectionDate:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getSectionDateBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasSectionEndLabel:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getSectionEndLabel:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getSectionEndLabelBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasParent:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getParent:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getParentBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasEntityMentionIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasIsMWT:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasIsFirstMWT:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasMwtText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getMwtText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getMwtTextBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasNumericValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasNumericType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getNumericType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getNumericTypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasNumericCompositeValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasNumericCompositeType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getNumericCompositeType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getNumericCompositeTypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasCodepointOffsetBegin:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hasCodepointOffsetEnd:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Token/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$Token:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Language/forNumber:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Language/valueOf:
edu.stanford.nlp.pipeline.CoreNLPProtos$Language:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$DependencyGraph/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$DependencyGraph:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$EvaluateParserRequest:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Builder/maybeForceBuilderInitialization:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Builder/clear:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Builder/ensureNodesIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Builder/getNodesList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Builder/getNodesCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Builder/getNodes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Builder/setNodes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Builder/setNodes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Builder/addNodes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Builder/addNodes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Builder/addNodes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Builder/addNodes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Builder/addAllNodes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Builder/clearNodes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Builder/removeNodes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Builder/getNodesOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Builder/getNodesOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$FlattenedParseTree$Builder/getNodesFieldBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$FlattenedParseTree$Builder:

#edu/stanford/nlp/pipeline/TrueCaseAnnotator/<init>:

#edu/stanford/nlp/pipeline/TrueCaseAnnotator/annotate:

#edu/stanford/nlp/pipeline/TrueCaseAnnotator/setTrueCaseText:

#edu/stanford/nlp/pipeline/TrueCaseAnnotator/loadMixedCaseMap:
edu.stanford.nlp.pipeline.TrueCaseAnnotator:
edu.stanford.nlp.pipeline.StanfordCoreNLP$OutputFormat:
edu.stanford.nlp.pipeline.CoreNLPProtos$Entity$1:
edu.stanford.nlp.pipeline.CoreNLPProtos$SentenceFragmentOrBuilder:

#edu/stanford/nlp/pipeline/EPEOutputter/print:

#edu/stanford/nlp/pipeline/EPEOutputter/getNodes:

#edu/stanford/nlp/pipeline/EPEOutputter/getNodeIndex:

#edu/stanford/nlp/pipeline/EPEOutputter/lambda$null$5:

#edu/stanford/nlp/pipeline/EPEOutputter/lambda$null$0:
edu.stanford.nlp.pipeline.EPEOutputter:
edu.stanford.nlp.pipeline.CoreNLPProtos$SemgrexResponse$MatchOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/maybeForceBuilderInitialization:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/clear:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/ensureArgNameIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/setArgName:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/addArgName:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/addArgNameBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/ensureArgIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/getArgList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/getArgCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/getArg:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/setArg:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/setArg:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/addArg:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/addArg:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/addArg:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/addArg:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/addAllArg:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/clearArg:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/removeArg:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/getArgOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/getArgOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/getArgFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/hasSignature:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/getSignature:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/getSignatureBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/setSignature:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/setSignatureBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/hasObjectID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/getObjectID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/getObjectIDBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/setObjectID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/setObjectIDBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/hasExtentStart:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/hasExtentEnd:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/hasType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/getType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/getTypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/setType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/setTypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/hasSubtype:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/getSubtype:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/getSubtypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/setSubtype:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation$Builder/setSubtypeBytes:
edu.stanford.nlp.pipeline.CoreNLPProtos$Relation$Builder:
edu.stanford.nlp.pipeline.CoreNLPProtos$TokenLocationOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation/hasSignature:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation/getSignature:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation/getSignatureBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation/hasObjectID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation/getObjectID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation/getObjectIDBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation/hasExtentStart:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation/hasExtentEnd:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation/hasType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation/getType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation/getTypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation/hasSubtype:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation/getSubtype:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation/getSubtypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Relation/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$Relation:
edu.stanford.nlp.pipeline.CoreNLPProtos$TsurgeonResponse$1:
edu.stanford.nlp.pipeline.CoreNLPProtos$PolarityOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies/hasGraph:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies/getGraph:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies/getGraphOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexRequest$Dependencies/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$SemgrexRequest$Dependencies:
edu.stanford.nlp.pipeline.CoreNLPProtos$TokenOrBuilder:
edu.stanford.nlp.pipeline.StanfordCoreNLPServer$LiveHandler:
edu.stanford.nlp.pipeline.SerializedAnnotationCreator:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/maybeForceBuilderInitialization:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/clear:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/hasText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getTextBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/setText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/setTextBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/ensureSentenceIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getSentenceList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getSentenceCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getSentence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/setSentence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/setSentence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addSentence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addSentence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addSentence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addSentence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addAllSentence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/clearSentence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/removeSentence:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getSentenceOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getSentenceOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getSentenceFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/ensureCorefChainIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getCorefChainList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getCorefChainCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getCorefChain:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/setCorefChain:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/setCorefChain:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addCorefChain:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addCorefChain:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addCorefChain:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addCorefChain:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addAllCorefChain:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/clearCorefChain:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/removeCorefChain:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getCorefChainOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getCorefChainOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getCorefChainFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/hasDocID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getDocID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getDocIDBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/setDocID:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/setDocIDBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/hasDocDate:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getDocDate:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getDocDateBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/setDocDate:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/setDocDateBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/hasCalendar:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/ensureSentencelessTokenIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getSentencelessTokenList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getSentencelessTokenCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getSentencelessToken:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/setSentencelessToken:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/setSentencelessToken:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addSentencelessToken:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addSentencelessToken:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addSentencelessToken:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addSentencelessToken:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addAllSentencelessToken:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/clearSentencelessToken:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/removeSentencelessToken:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getSentencelessTokenOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getSentencelessTokenOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getSentencelessTokenFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/ensureCharacterIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getCharacterList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getCharacterCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getCharacter:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/setCharacter:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/setCharacter:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addCharacter:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addCharacter:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addCharacter:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addCharacter:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addAllCharacter:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/clearCharacter:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/removeCharacter:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getCharacterOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getCharacterOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getCharacterFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/ensureQuoteIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getQuoteList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getQuoteCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getQuote:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/setQuote:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/setQuote:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addQuote:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addQuote:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addQuote:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addQuote:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addAllQuote:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/clearQuote:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/removeQuote:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getQuoteOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getQuoteOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getQuoteFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/ensureMentionsIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getMentionsList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getMentionsCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getMentions:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/setMentions:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/setMentions:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addMentions:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addMentions:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addMentions:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addMentions:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addAllMentions:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/clearMentions:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/removeMentions:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getMentionsOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getMentionsOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getMentionsFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/hasHasEntityMentionsAnnotation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/hasXmlDoc:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/ensureSectionsIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getSectionsList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getSectionsCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getSections:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/setSections:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/setSections:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addSections:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addSections:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addSections:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addSections:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addAllSections:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/clearSections:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/removeSections:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getSectionsOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getSectionsOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getSectionsFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/ensureMentionsForCorefIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getMentionsForCorefList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getMentionsForCorefCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getMentionsForCoref:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/setMentionsForCoref:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/setMentionsForCoref:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addMentionsForCoref:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addMentionsForCoref:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addMentionsForCoref:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addMentionsForCoref:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/addAllMentionsForCoref:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/clearMentionsForCoref:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/removeMentionsForCoref:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getMentionsForCorefOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getMentionsForCorefOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getMentionsForCorefFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/hasHasCorefMentionAnnotation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/hasHasCorefAnnotation:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/ensureCorefMentionToEntityMentionMappingsIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getCorefMentionToEntityMentionMappingsList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/ensureEntityMentionToCorefMentionMappingsIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Document$Builder/getEntityMentionToCorefMentionMappingsList:
edu.stanford.nlp.pipeline.CoreNLPProtos$Document$Builder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TsurgeonRequest/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$TsurgeonRequest:

#edu/stanford/nlp/pipeline/ArabicSegmenterAnnotator/<init>:

#edu/stanford/nlp/pipeline/ArabicSegmenterAnnotator/loadModel:

#edu/stanford/nlp/pipeline/ArabicSegmenterAnnotator/loadModel:

#edu/stanford/nlp/pipeline/ArabicSegmenterAnnotator/annotate:

#edu/stanford/nlp/pipeline/ArabicSegmenterAnnotator/doOneSentence:
edu.stanford.nlp.pipeline.ArabicSegmenterAnnotator:
edu.stanford.nlp.pipeline.CoreNLPProtos$TokensRegexResponse$PatternMatchOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult$Builder/maybeForceBuilderInitialization:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult$Builder/clear:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult$Builder/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult$Builder/hasGold:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult$Builder/getGold:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult$Builder/setGold:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult$Builder/setGold:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult$Builder/mergeGold:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult$Builder/clearGold:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult$Builder/getGoldOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult$Builder/getGoldFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult$Builder/ensurePredictedIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult$Builder/getPredictedList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult$Builder/getPredictedCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult$Builder/getPredicted:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult$Builder/setPredicted:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult$Builder/setPredicted:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult$Builder/addPredicted:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult$Builder/addPredicted:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult$Builder/addPredicted:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult$Builder/addPredicted:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult$Builder/addAllPredicted:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult$Builder/clearPredicted:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult$Builder/removePredicted:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult$Builder/getPredictedOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult$Builder/getPredictedOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$EvaluateParserRequest$ParseResult$Builder/getPredictedFieldBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$EvaluateParserRequest$ParseResult$Builder:
edu.stanford.nlp.pipeline.CoreNLPProtos$DependencyEnhancerRequestOrBuilder:
edu.stanford.nlp.pipeline.QuoteAttributionAnnotator$SpeakerSieveAnnotation:

#edu/stanford/nlp/pipeline/Annotation/<init>:
edu.stanford.nlp.pipeline.Annotation:
edu.stanford.nlp.pipeline.CoreNLPProtos$RelationTripleOrBuilder:

#edu/stanford/nlp/pipeline/MorphaAnnotator/annotate:

#edu/stanford/nlp/pipeline/MorphaAnnotator/addLemma:

#edu/stanford/nlp/pipeline/MorphaAnnotator/phrasalVerb:
edu.stanford.nlp.pipeline.MorphaAnnotator:

#edu/stanford/nlp/pipeline/CoreNLPProtos$MapStringString$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$MapStringString$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$MapStringString$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$MapStringString$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$MapStringString$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$MapStringString$Builder/ensureKeyIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$MapStringString$Builder/setKey:

#edu/stanford/nlp/pipeline/CoreNLPProtos$MapStringString$Builder/addKey:

#edu/stanford/nlp/pipeline/CoreNLPProtos$MapStringString$Builder/addKeyBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$MapStringString$Builder/ensureValueIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$MapStringString$Builder/setValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$MapStringString$Builder/addValue:

#edu/stanford/nlp/pipeline/CoreNLPProtos$MapStringString$Builder/addValueBytes:
edu.stanford.nlp.pipeline.CoreNLPProtos$MapStringString$Builder:
edu.stanford.nlp.pipeline.CoreNLPProtos$DocumentOrBuilder:

#edu/stanford/nlp/pipeline/StanfordCoreNLP$AnnotatorSignature/equals:
edu.stanford.nlp.pipeline.StanfordCoreNLP$AnnotatorSignature:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/maybeForceBuilderInitialization:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/clear:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/hasCharBegin:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/hasCharEnd:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/hasAuthor:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/getAuthor:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/getAuthorBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/setAuthor:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/setAuthorBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/ensureSentenceIndexesIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/getSentenceIndexesList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/hasDatetime:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/getDatetime:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/getDatetimeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/setDatetime:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/setDatetimeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/ensureQuotesIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/getQuotesList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/getQuotesCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/getQuotes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/setQuotes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/setQuotes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/addQuotes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/addQuotes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/addQuotes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/addQuotes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/addAllQuotes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/clearQuotes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/removeQuotes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/getQuotesOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/getQuotesOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/getQuotesFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/hasAuthorCharBegin:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/hasAuthorCharEnd:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/hasXmlTag:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/getXmlTag:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/setXmlTag:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/setXmlTag:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/mergeXmlTag:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/clearXmlTag:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/getXmlTagOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$Section$Builder/getXmlTagFieldBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$Section$Builder:
edu.stanford.nlp.pipeline.CoreNLPProtos$SemgrexResponse$NamedRelation$1:
edu.stanford.nlp.pipeline.Annotator:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexRequest/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexRequest/hasDoc:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexRequest/getDoc:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexRequest/getDocOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexRequest/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexRequest/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexRequest/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexRequest/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexRequest/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexRequest/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$TokensRegexRequest:

#edu/stanford/nlp/pipeline/TokensRegexNERAnnotator/getProperties:

#edu/stanford/nlp/pipeline/TokensRegexNERAnnotator/<init>:

#edu/stanford/nlp/pipeline/TokensRegexNERAnnotator/annotate:

#edu/stanford/nlp/pipeline/TokensRegexNERAnnotator/createPatternMatcher:

#edu/stanford/nlp/pipeline/TokensRegexNERAnnotator/annotateMatched:

#edu/stanford/nlp/pipeline/TokensRegexNERAnnotator/checkPosTags:

#edu/stanford/nlp/pipeline/TokensRegexNERAnnotator/isLocationOrGpe:

#edu/stanford/nlp/pipeline/TokensRegexNERAnnotator/checkOrigNerTags:

#edu/stanford/nlp/pipeline/TokensRegexNERAnnotator/readEntries:

#edu/stanford/nlp/pipeline/TokensRegexNERAnnotator/getHeaderIndexMap:

#edu/stanford/nlp/pipeline/TokensRegexNERAnnotator/getIndex:

#edu/stanford/nlp/pipeline/TokensRegexNERAnnotator/readEntries:

#edu/stanford/nlp/pipeline/TokensRegexNERAnnotator/hasNoOverwritableType:

#edu/stanford/nlp/pipeline/TokensRegexNERAnnotator/processListMappingFiles:

#edu/stanford/nlp/pipeline/TokensRegexNERAnnotator/processPerFileOptions:

#edu/stanford/nlp/pipeline/TokensRegexNERAnnotator/atLeastOneValidPosPattern:
edu.stanford.nlp.pipeline.TokensRegexNERAnnotator:
edu.stanford.nlp.pipeline.CoreNLPProtos$SpanOrBuilder:
edu.stanford.nlp.pipeline.AnnotationSerializer:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SpeakerInfo/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SpeakerInfo/hasSpeakerName:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SpeakerInfo/getSpeakerName:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SpeakerInfo/getSpeakerNameBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SpeakerInfo/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SpeakerInfo/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SpeakerInfo/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SpeakerInfo/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SpeakerInfo/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SpeakerInfo/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$SpeakerInfo:
edu.stanford.nlp.pipeline.AbstractInputStreamAnnotationCreator:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Builder/maybeForceBuilderInitialization:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Builder/clear:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Builder/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Builder/ensureMatchIsMutable:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Builder/getMatchList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Builder/getMatchCount:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Builder/getMatch:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Builder/setMatch:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Builder/setMatch:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Builder/addMatch:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Builder/addMatch:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Builder/addMatch:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Builder/addMatch:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Builder/addAllMatch:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Builder/clearMatch:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Builder/removeMatch:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Builder/getMatchOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Builder/getMatchOrBuilderList:

#edu/stanford/nlp/pipeline/CoreNLPProtos$TokensRegexResponse$Builder/getMatchFieldBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$TokensRegexResponse$Builder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedRelation/<init>:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedRelation/hasName:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedRelation/getName:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedRelation/getNameBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedRelation/hasReln:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedRelation/getReln:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedRelation/getRelnBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedRelation/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedRelation/writeTo:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedRelation/getSerializedSize:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedRelation/equals:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedRelation/hashCode:

#edu/stanford/nlp/pipeline/CoreNLPProtos$SemgrexResponse$NamedRelation/toBuilder:
edu.stanford.nlp.pipeline.CoreNLPProtos$SemgrexResponse$NamedRelation:
edu.stanford.nlp.pipeline.AnnotationOutputter:
edu.stanford.nlp.pipeline.CoreNLPProtos$DependencyEnhancerRequest$1:
edu.stanford.nlp.pipeline.AnnotationCreator:

#edu/stanford/nlp/pipeline/CustomAnnotationSerializer/loadDependencyGraph:

#edu/stanford/nlp/pipeline/CustomAnnotationSerializer/saveDependencyGraph:

#edu/stanford/nlp/pipeline/CustomAnnotationSerializer/saveCorefChains:

#edu/stanford/nlp/pipeline/CustomAnnotationSerializer/countMentions:

#edu/stanford/nlp/pipeline/CustomAnnotationSerializer/saveCorefChain:

#edu/stanford/nlp/pipeline/CustomAnnotationSerializer/loadCorefChains:

#edu/stanford/nlp/pipeline/CustomAnnotationSerializer/write:

#edu/stanford/nlp/pipeline/CustomAnnotationSerializer/read:

#edu/stanford/nlp/pipeline/CustomAnnotationSerializer/loadToken:

#edu/stanford/nlp/pipeline/CustomAnnotationSerializer/saveToken:

#edu/stanford/nlp/pipeline/CustomAnnotationSerializer/main:
edu.stanford.nlp.pipeline.CustomAnnotationSerializer:
edu.stanford.nlp.pipeline.CoreNLPProtos$IndexedWordOrBuilder:
edu.stanford.nlp.pipeline.CorefMentionAnnotator$1:
edu.stanford.nlp.pipeline.CoreNLPProtos$ParseTree$1:

#edu/stanford/nlp/pipeline/QuantifiableEntityNormalizingAnnotator/<init>:

#edu/stanford/nlp/pipeline/QuantifiableEntityNormalizingAnnotator/<init>:

#edu/stanford/nlp/pipeline/QuantifiableEntityNormalizingAnnotator/annotate:

#edu/stanford/nlp/pipeline/QuantifiableEntityNormalizingAnnotator/annotateTokens:
edu.stanford.nlp.pipeline.QuantifiableEntityNormalizingAnnotator:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer$2/checkCredentials:
edu.stanford.nlp.pipeline.StanfordCoreNLPServer$2:

#edu/stanford/nlp/pipeline/CoreMapAttributeAggregator$8/aggregate:
edu.stanford.nlp.pipeline.CoreMapAttributeAggregator$8:
edu.stanford.nlp.pipeline.DependencyParseAnnotator:

#edu/stanford/nlp/pipeline/StanfordCoreNLPClient$Backend/equals:
edu.stanford.nlp.pipeline.StanfordCoreNLPClient$Backend:
edu.stanford.nlp.pipeline.CoreNLPProtos$EvaluateParserRequestOrBuilder:

#edu/stanford/nlp/pipeline/EntityMentionsAnnotator/<init>:

#edu/stanford/nlp/pipeline/EntityMentionsAnnotator/tokensForCharacters:

#edu/stanford/nlp/pipeline/EntityMentionsAnnotator/annotatePronominalMentions:

#edu/stanford/nlp/pipeline/EntityMentionsAnnotator/determineEntityMentionConfidences:

#edu/stanford/nlp/pipeline/EntityMentionsAnnotator/annotate:

#edu/stanford/nlp/pipeline/EntityMentionsAnnotator/addAcronyms:

#edu/stanford/nlp/pipeline/EntityMentionsAnnotator/requires:

#edu/stanford/nlp/pipeline/EntityMentionsAnnotator/lambda$overlapsWithMention$1:

#edu/stanford/nlp/pipeline/EntityMentionsAnnotator/lambda$new$0:
edu.stanford.nlp.pipeline.EntityMentionsAnnotator:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer/<init>:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer/<init>:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer/getURLParams:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer/getDocument:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer/mkStanfordCoreNLP:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer/getProperties:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer/parseSubnet:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer/netMatch:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer/onBlockList:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer/onBlockList:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer/maybeAlterStanfordTimeout:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer/sendAndGetResponse:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer/addSSLContext:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer/livenessServer:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer/run:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer/launchServer:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer/lambda$getProperties$6:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer/lambda$mkStanfordCoreNLP$3:

#edu/stanford/nlp/pipeline/StanfordCoreNLPServer/lambda$getDocument$2:
edu.stanford.nlp.pipeline.StanfordCoreNLPServer:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/maybeForceBuilderInitialization:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/clear:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/build:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/buildPartial:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/isInitialized:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/mergeFrom:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/hasSentenceIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/hasTokenStartInSentenceInclusive:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/hasTokenEndInSentenceExclusive:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/hasNer:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/getNer:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/getNerBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/setNer:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/setNerBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/hasNormalizedNER:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/getNormalizedNER:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/getNormalizedNERBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/setNormalizedNER:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/setNormalizedNERBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/hasEntityType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/getEntityType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/getEntityTypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/setEntityType:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/setEntityTypeBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/hasTimex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/getTimex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/setTimex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/setTimex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/mergeTimex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/clearTimex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/getTimexOrBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/getTimexFieldBuilder:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/hasWikipediaEntity:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/getWikipediaEntity:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/getWikipediaEntityBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/setWikipediaEntity:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/setWikipediaEntityBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/hasGender:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/getGender:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/getGenderBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/setGender:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/setGenderBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/hasEntityMentionIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/hasCanonicalEntityMentionIndex:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/hasEntityMentionText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/getEntityMentionText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/getEntityMentionTextBytes:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/setEntityMentionText:

#edu/stanford/nlp/pipeline/CoreNLPProtos$NERMention$Builder/setEntityMentionTextBytes:
edu.stanford.nlp.pipeline.CoreNLPProtos$NERMention$Builder:

#edu/stanford/nlp/pipeline/DeterministicCorefAnnotator/<init>:

#edu/stanford/nlp/pipeline/DeterministicCorefAnnotator/setNamedEntityTagGranularity:

#edu/stanford/nlp/pipeline/DeterministicCorefAnnotator/annotate:

#edu/stanford/nlp/pipeline/DeterministicCorefAnnotator/addObsoleteCoreferenceAnnotations:
edu.stanford.nlp.pipeline.DeterministicCorefAnnotator:
edu.stanford.nlp.pipeline.CoNLLUOutputter$1:
edu.stanford.nlp.pipeline.CoreNLPProtos$SentenceFragment$1:

#edu/stanford/nlp/pipeline/CleanXmlAnnotator/<init>:

#edu/stanford/nlp/pipeline/CleanXmlAnnotator/<init>:

#edu/stanford/nlp/pipeline/CleanXmlAnnotator/toCaseInsensitivePattern:

#edu/stanford/nlp/pipeline/CleanXmlAnnotator/addAnnotationPatterns:

#edu/stanford/nlp/pipeline/CleanXmlAnnotator/setTokenBeginTokenEnd:

#edu/stanford/nlp/pipeline/CleanXmlAnnotator/annotate:

#edu/stanford/nlp/pipeline/CleanXmlAnnotator/tokensToString:

#edu/stanford/nlp/pipeline/CleanXmlAnnotator/annotateWithTag:

#edu/stanford/nlp/pipeline/CleanXmlAnnotator/process:
edu.stanford.nlp.pipeline.CleanXmlAnnotator:

#edu/stanford/nlp/pipeline/demo/StanfordCoreNlpDemo/main:
edu.stanford.nlp.pipeline.demo.StanfordCoreNlpDemo:

#edu/stanford/nlp/pipeline/demo/StanfordCoreNlpDemoChinese/main:
edu.stanford.nlp.pipeline.demo.StanfordCoreNlpDemoChinese:

#edu/stanford/nlp/pipeline/webapp/CoreNLPServlet/doGet:

#edu/stanford/nlp/pipeline/webapp/CoreNLPServlet/addResults:

#edu/stanford/nlp/pipeline/webapp/CoreNLPServlet/outputVisualise:

#edu/stanford/nlp/pipeline/webapp/CoreNLPServlet/outputPretty:

#edu/stanford/nlp/pipeline/webapp/CoreNLPServlet/outputByWriter:
edu.stanford.nlp.pipeline.webapp.CoreNLPServlet:

#edu/stanford/nlp/net/Ports/available:

#edu/stanford/nlp/net/Ports/findAvailable:
edu.stanford.nlp.net.Ports:
edu.stanford.nlp.trees.UnnamedConcreteDependency$DependencyFactoryHolder:

#edu/stanford/nlp/trees/UniversalSemanticHeadFinder/<init>:

#edu/stanford/nlp/trees/UniversalSemanticHeadFinder/ruleChanges:

#edu/stanford/nlp/trees/UniversalSemanticHeadFinder/shouldSkip:

#edu/stanford/nlp/trees/UniversalSemanticHeadFinder/findPreviousHead:

#edu/stanford/nlp/trees/UniversalSemanticHeadFinder/postOperationFix:

#edu/stanford/nlp/trees/UniversalSemanticHeadFinder/determineNonTrivialHead:

#edu/stanford/nlp/trees/UniversalSemanticHeadFinder/isExistential:

#edu/stanford/nlp/trees/UniversalSemanticHeadFinder/isWHQ:

#edu/stanford/nlp/trees/UniversalSemanticHeadFinder/isVerbalAuxiliary:

#edu/stanford/nlp/trees/UniversalSemanticHeadFinder/hasPassiveProgressiveAuxiliary:

#edu/stanford/nlp/trees/UniversalSemanticHeadFinder/vpContainsParticiple:

#edu/stanford/nlp/trees/UniversalSemanticHeadFinder/hasVerbalAuxiliary:

#edu/stanford/nlp/trees/UniversalSemanticHeadFinder/lambda$static$0:
edu.stanford.nlp.trees.UniversalSemanticHeadFinder:

#edu/stanford/nlp/trees/DependencyScoring/toSets:

#edu/stanford/nlp/trees/DependencyScoring/<init>:

#edu/stanford/nlp/trees/DependencyScoring/removeHeadsAssignedToPunc:

#edu/stanford/nlp/trees/DependencyScoring/langIndependentPuncCheck:

#edu/stanford/nlp/trees/DependencyScoring/<init>:

#edu/stanford/nlp/trees/DependencyScoring/convertStringEquality:

#edu/stanford/nlp/trees/DependencyScoring/normalizeNumbers:

#edu/stanford/nlp/trees/DependencyScoring/readDepsCoNLLX:

#edu/stanford/nlp/trees/DependencyScoring/readDeps:

#edu/stanford/nlp/trees/DependencyScoring/score:

#edu/stanford/nlp/trees/DependencyScoring/main:
edu.stanford.nlp.trees.DependencyScoring:
edu.stanford.nlp.trees.NamedDependency$DependencyFactoryHolder:
edu.stanford.nlp.trees.TreeGraphNode$TreeFactoryHolder:

#edu/stanford/nlp/trees/SplitTrainingSet/weightedIndex:

#edu/stanford/nlp/trees/SplitTrainingSet/main:
edu.stanford.nlp.trees.SplitTrainingSet:
edu.stanford.nlp.trees.Treebanks$1:
edu.stanford.nlp.trees.SimpleConstituent$ConstituentFactoryHolder:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructureFactory/newGrammaticalStructure:
edu.stanford.nlp.trees.UniversalEnglishGrammaticalStructureFactory:
edu.stanford.nlp.trees.TreebankFactory:

#edu/stanford/nlp/trees/NPTmpRetainingTreeNormalizer/cleanUpLabel:

#edu/stanford/nlp/trees/NPTmpRetainingTreeNormalizer/includesEmptyNPSubj:

#edu/stanford/nlp/trees/NPTmpRetainingTreeNormalizer/normalizeWholeTree:

#edu/stanford/nlp/trees/NPTmpRetainingTreeNormalizer/addTMP9:
Warning: Method:edu.stanford.nlp.trees.NPTmpRetainingTreeNormalizer.lambda$normalizeWholeTree$1 has auto edges.

#edu/stanford/nlp/trees/NPTmpRetainingTreeNormalizer/lambda$normalizeWholeTree$0:
edu.stanford.nlp.trees.NPTmpRetainingTreeNormalizer:
edu.stanford.nlp.trees.UnnamedDependency$UnnamedDependencyFactory:

#edu/stanford/nlp/trees/DiskTreebank$DiskTreebankIterator/<init>:
Warning: Method:edu.stanford.nlp.trees.DiskTreebank$DiskTreebankIterator.primeNextPath has incoming edges.

#edu/stanford/nlp/trees/DiskTreebank$DiskTreebankIterator/primeNextFile:

#edu/stanford/nlp/trees/DiskTreebank$DiskTreebankIterator/primeNextTree:

#edu/stanford/nlp/trees/DiskTreebank$DiskTreebankIterator/hasNext:

#edu/stanford/nlp/trees/DiskTreebank$DiskTreebankIterator/next:
edu.stanford.nlp.trees.DiskTreebank$DiskTreebankIterator:

#edu/stanford/nlp/trees/RecursiveTreeTransformer/transformHelper:

#edu/stanford/nlp/trees/RecursiveTreeTransformer/transformNonterminal:

#edu/stanford/nlp/trees/RecursiveTreeTransformer/transformLabel:
edu.stanford.nlp.trees.RecursiveTreeTransformer:
edu.stanford.nlp.trees.CollinsRelation$Direction:

#edu/stanford/nlp/trees/WordCatEqualityChecker/areEqual:
edu.stanford.nlp.trees.WordCatEqualityChecker:
edu.stanford.nlp.trees.Span$ConstituentFactoryHolder$SpanFactory:
edu.stanford.nlp.trees.EnglishGrammaticalStructure$1:
edu.stanford.nlp.trees.TreeCoreAnnotations$HeadWordLabelAnnotation:
edu.stanford.nlp.trees.TransformingTreebank$1:

#edu/stanford/nlp/trees/QPTreeTransformer/QPtransform:

#edu/stanford/nlp/trees/QPTreeTransformer/main:
edu.stanford.nlp.trees.QPTreeTransformer:

#edu/stanford/nlp/trees/UnnamedDependency/<init>:

#edu/stanford/nlp/trees/UnnamedDependency/<init>:

#edu/stanford/nlp/trees/UnnamedDependency/getText:

#edu/stanford/nlp/trees/UnnamedDependency/equalsIgnoreName:

#edu/stanford/nlp/trees/UnnamedDependency/toString:
edu.stanford.nlp.trees.UnnamedDependency:
edu.stanford.nlp.trees.GrammaticalRelation$1:
edu.stanford.nlp.trees.TreeFilters:
edu.stanford.nlp.trees.LabeledScoredConstituent$1:

#edu/stanford/nlp/trees/FilteringTreebank/apply:
edu.stanford.nlp.trees.FilteringTreebank:
edu.stanford.nlp.trees.GrammaticalStructure$Extras:

#edu/stanford/nlp/trees/WordStemmer/processTree:

#edu/stanford/nlp/trees/WordStemmer/main:
edu.stanford.nlp.trees.WordStemmer:
edu.stanford.nlp.trees.GrammaticalStructure$NameComparator:
edu.stanford.nlp.trees.GraphLessGrammaticalStructureFactory:
edu.stanford.nlp.trees.UnnamedConcreteDependency$UnnamedConcreteDependencyFactory:
edu.stanford.nlp.trees.DependencyReader:

#edu/stanford/nlp/trees/DependencyScoring$Score/toStringAttachmentScore:

#edu/stanford/nlp/trees/DependencyScoring$Score/toStringFScore:
edu.stanford.nlp.trees.DependencyScoring$Score:

#edu/stanford/nlp/trees/GrammaticalStructureConversionUtils$LazyLoadTreesByParsing/iterator:
edu.stanford.nlp.trees.GrammaticalStructureConversionUtils$LazyLoadTreesByParsing:
edu.stanford.nlp.trees.CopulaHeadFinder:

#edu/stanford/nlp/trees/RightHeadFinder/determineHead:
edu.stanford.nlp.trees.RightHeadFinder:

#edu/stanford/nlp/trees/AbstractCollinsHeadFinder/<init>:

#edu/stanford/nlp/trees/AbstractCollinsHeadFinder/determineHead:

#edu/stanford/nlp/trees/AbstractCollinsHeadFinder/determineNonTrivialHead:

#edu/stanford/nlp/trees/AbstractCollinsHeadFinder/traverseLocate:

#edu/stanford/nlp/trees/AbstractCollinsHeadFinder/findLeftHead:

#edu/stanford/nlp/trees/AbstractCollinsHeadFinder/findLeftDisHead:

#edu/stanford/nlp/trees/AbstractCollinsHeadFinder/findLeftExceptHead:

#edu/stanford/nlp/trees/AbstractCollinsHeadFinder/findRightHead:

#edu/stanford/nlp/trees/AbstractCollinsHeadFinder/findRightDisHead:

#edu/stanford/nlp/trees/AbstractCollinsHeadFinder/findRightExceptHead:
edu.stanford.nlp.trees.AbstractCollinsHeadFinder:

#edu/stanford/nlp/trees/NamedDependency/equals:

#edu/stanford/nlp/trees/NamedDependency/toString:
edu.stanford.nlp.trees.NamedDependency:
edu.stanford.nlp.trees.TreeGraphNodeFactory:
edu.stanford.nlp.trees.EnglishPatterns:
edu.stanford.nlp.trees.WordCatEquivalenceClasser:

#edu/stanford/nlp/trees/MemoryTreebank/readSRLFile:

#edu/stanford/nlp/trees/MemoryTreebank/processFile:

#edu/stanford/nlp/trees/MemoryTreebank/load:

#edu/stanford/nlp/trees/MemoryTreebank/apply:

#edu/stanford/nlp/trees/MemoryTreebank/transform:
edu.stanford.nlp.trees.MemoryTreebank:

#edu/stanford/nlp/trees/EnglishGrammaticalStructure/correctDependencies:

#edu/stanford/nlp/trees/EnglishGrammaticalStructure/printListSorted:

#edu/stanford/nlp/trees/EnglishGrammaticalStructure/postProcessDependencies:

#edu/stanford/nlp/trees/EnglishGrammaticalStructure/getExtras:

#edu/stanford/nlp/trees/EnglishGrammaticalStructure/addStrandedPobj:

#edu/stanford/nlp/trees/EnglishGrammaticalStructure/correctWHAttachment:

#edu/stanford/nlp/trees/EnglishGrammaticalStructure/convertRel:

#edu/stanford/nlp/trees/EnglishGrammaticalStructure/filterKill:

#edu/stanford/nlp/trees/EnglishGrammaticalStructure/collapseDependencies:

#edu/stanford/nlp/trees/EnglishGrammaticalStructure/conjValue:

#edu/stanford/nlp/trees/EnglishGrammaticalStructure/treatCC:

#edu/stanford/nlp/trees/EnglishGrammaticalStructure/isDefinitelyActive:

#edu/stanford/nlp/trees/EnglishGrammaticalStructure/collapseConj:

#edu/stanford/nlp/trees/EnglishGrammaticalStructure/collapseReferent:

#edu/stanford/nlp/trees/EnglishGrammaticalStructure/addRef:

#edu/stanford/nlp/trees/EnglishGrammaticalStructure/addExtraNSubj:

#edu/stanford/nlp/trees/EnglishGrammaticalStructure/correctSubjPass:

#edu/stanford/nlp/trees/EnglishGrammaticalStructure/inConjDeps:

#edu/stanford/nlp/trees/EnglishGrammaticalStructure/collapsePrepAndPoss:

#edu/stanford/nlp/trees/EnglishGrammaticalStructure/determinePrepRelation:

#edu/stanford/nlp/trees/EnglishGrammaticalStructure/isConjWithNoPrep:

#edu/stanford/nlp/trees/EnglishGrammaticalStructure/collapse2WP:

#edu/stanford/nlp/trees/EnglishGrammaticalStructure/collapseMultiWordPrep:

#edu/stanford/nlp/trees/EnglishGrammaticalStructure/collapse2WPbis:

#edu/stanford/nlp/trees/EnglishGrammaticalStructure/collapse3WP:

#edu/stanford/nlp/trees/EnglishGrammaticalStructure/collapseFlatMWP:

#edu/stanford/nlp/trees/EnglishGrammaticalStructure/eraseMultiConj:

#edu/stanford/nlp/trees/EnglishGrammaticalStructure/removeDep:

#edu/stanford/nlp/trees/EnglishGrammaticalStructure/lambda$collapseConj$0:
edu.stanford.nlp.trees.EnglishGrammaticalStructure:
edu.stanford.nlp.trees.TreeCoreAnnotations$HeadTagLabelAnnotation:

#edu/stanford/nlp/trees/EnglishGrammaticalStructureFactory/newGrammaticalStructure:
edu.stanford.nlp.trees.EnglishGrammaticalStructureFactory:

#edu/stanford/nlp/trees/TreeLeafLabelTransformer/transformTree:
edu.stanford.nlp.trees.TreeLeafLabelTransformer:

#edu/stanford/nlp/trees/FilteringTreebank$FilteringTreebankIterator/hasNext:
Warning: Method:edu.stanford.nlp.trees.FilteringTreebank$FilteringTreebankIterator.primeNext has incoming edges.
edu.stanford.nlp.trees.FilteringTreebank$FilteringTreebankIterator:
edu.stanford.nlp.trees.TreeFactory:

#edu/stanford/nlp/trees/TreeFunctions$LabeledTreeToStringLabeledTreeFunction/helper:
edu.stanford.nlp.trees.TreeFunctions$LabeledTreeToStringLabeledTreeFunction:

#edu/stanford/nlp/trees/OrderedCombinationTreeNormalizer/normalizeNonterminal:

#edu/stanford/nlp/trees/OrderedCombinationTreeNormalizer/normalizeTerminal:

#edu/stanford/nlp/trees/OrderedCombinationTreeNormalizer/normalizeWholeTree:
edu.stanford.nlp.trees.OrderedCombinationTreeNormalizer:

#edu/stanford/nlp/trees/GrammaticalStructureConversionUtils$LazyLoadTreesByParsing$1/hasNext:

#edu/stanford/nlp/trees/GrammaticalStructureConversionUtils$LazyLoadTreesByParsing$1/next:
edu.stanford.nlp.trees.GrammaticalStructureConversionUtils$LazyLoadTreesByParsing$1:

#edu/stanford/nlp/trees/TreeLemmatizer/transformTree:
edu.stanford.nlp.trees.TreeLemmatizer:

#edu/stanford/nlp/trees/TreeToBracketProcessor/allBrackets:

#edu/stanford/nlp/trees/TreeToBracketProcessor/commonWordTagTypeBrackets:
edu.stanford.nlp.trees.TreeToBracketProcessor:

#edu/stanford/nlp/trees/GenerateTrees/readGrammar:

#edu/stanford/nlp/trees/GenerateTrees/produceTrees:

#edu/stanford/nlp/trees/GenerateTrees/produceTree:

#edu/stanford/nlp/trees/GenerateTrees/main:
edu.stanford.nlp.trees.GenerateTrees:
edu.stanford.nlp.trees.TreeNormalizer:
edu.stanford.nlp.trees.UnnamedConcreteDependency$1:

#edu/stanford/nlp/trees/GrammaticalFunctionTreeNormalizer/cleanUpLabel:
edu.stanford.nlp.trees.GrammaticalFunctionTreeNormalizer:

#edu/stanford/nlp/trees/GrammaticalStructure/<init>:

#edu/stanford/nlp/trees/GrammaticalStructure/indexLeaves:

#edu/stanford/nlp/trees/GrammaticalStructure/indexNodes:

#edu/stanford/nlp/trees/GrammaticalStructure/fromStringReps:

#edu/stanford/nlp/trees/GrammaticalStructure/attachStrandedNodes:

#edu/stanford/nlp/trees/GrammaticalStructure/analyzeNode:

#edu/stanford/nlp/trees/GrammaticalStructure/getDeps:

#edu/stanford/nlp/trees/GrammaticalStructure/getTreeDeps:

#edu/stanford/nlp/trees/GrammaticalStructure/getGrammaticalRelation:

#edu/stanford/nlp/trees/GrammaticalStructure/getGrammaticalRelationCommonAncestor:

#edu/stanford/nlp/trees/GrammaticalStructure/removeGrammaticalRelationAncestors:

#edu/stanford/nlp/trees/GrammaticalStructure/typedDependencies:

#edu/stanford/nlp/trees/GrammaticalStructure/typedDependencies:

#edu/stanford/nlp/trees/GrammaticalStructure/typedDependenciesCollapsed:

#edu/stanford/nlp/trees/GrammaticalStructure/typedDependenciesCCprocessed:

#edu/stanford/nlp/trees/GrammaticalStructure/isConnected:

#edu/stanford/nlp/trees/GrammaticalStructure/getRoots:

#edu/stanford/nlp/trees/GrammaticalStructure/readCoNLLXGrammaticalStructureCollection:

#edu/stanford/nlp/trees/GrammaticalStructure/buildCoNLLXGrammaticalStructure:
edu.stanford.nlp.trees.GrammaticalStructure:

#edu/stanford/nlp/trees/BasicCategoryTreeTransformer/transformNonterminalLabel:
edu.stanford.nlp.trees.BasicCategoryTreeTransformer:

#edu/stanford/nlp/trees/DependencyTreeTransformer/cleanUpRoot:

#edu/stanford/nlp/trees/DependencyTreeTransformer/cleanUpLabel:

#edu/stanford/nlp/trees/DependencyTreeTransformer/stripTag:
edu.stanford.nlp.trees.DependencyTreeTransformer:
edu.stanford.nlp.trees.ModCollinsHeadFinder:
edu.stanford.nlp.trees.LabeledScoredConstituent$LabeledScoredConstituentLabelFactory:

#edu/stanford/nlp/trees/Span/equals:
edu.stanford.nlp.trees.Span:

#edu/stanford/nlp/trees/BobChrisTreeNormalizer/cleanUpLabel:

#edu/stanford/nlp/trees/BobChrisTreeNormalizer/normalizeWholeTree:
edu.stanford.nlp.trees.BobChrisTreeNormalizer:
edu.stanford.nlp.trees.Span$1:
edu.stanford.nlp.trees.StringLabeledScoredTreeReaderFactory:
edu.stanford.nlp.trees.LabeledScoredConstituentFactory:

#edu/stanford/nlp/trees/UnnamedConcreteDependency/<init>:

#edu/stanford/nlp/trees/UnnamedConcreteDependency/equals:

#edu/stanford/nlp/trees/UnnamedConcreteDependency/toString:
edu.stanford.nlp.trees.UnnamedConcreteDependency:

#edu/stanford/nlp/trees/CompositeTreebank/apply:
edu.stanford.nlp.trees.CompositeTreebank:
edu.stanford.nlp.trees.LabeledScoredTreeReaderFactory:

#edu/stanford/nlp/trees/CollinsDependency/<init>:

#edu/stanford/nlp/trees/CollinsDependency/extractFromTree:

#edu/stanford/nlp/trees/CollinsDependency/equals:
edu.stanford.nlp.trees.CollinsDependency:

#edu/stanford/nlp/trees/Dependencies/govToDepMap:

#edu/stanford/nlp/trees/Dependencies/getGovMaxChains:

#edu/stanford/nlp/trees/Dependencies/getTypedDependencyChains:
edu.stanford.nlp.trees.Dependencies:
edu.stanford.nlp.trees.GrammaticalStructureFactory:

#edu/stanford/nlp/trees/TransformingTreebank$MyTreeTransformer/transformTree:
edu.stanford.nlp.trees.TransformingTreebank$MyTreeTransformer:

#edu/stanford/nlp/trees/GrammaticalStructureConversionUtils/dependenciesToCoNLLXString:

#edu/stanford/nlp/trees/GrammaticalStructureConversionUtils/dependenciesToString:

#edu/stanford/nlp/trees/GrammaticalStructureConversionUtils/parseClassConstructArgs:

#edu/stanford/nlp/trees/GrammaticalStructureConversionUtils/loadAlternateDependencyReader:

#edu/stanford/nlp/trees/GrammaticalStructureConversionUtils/loadAlternateDependencyPrinter:

#edu/stanford/nlp/trees/GrammaticalStructureConversionUtils/loadParser:

#edu/stanford/nlp/trees/GrammaticalStructureConversionUtils/convertTrees:
edu.stanford.nlp.trees.GrammaticalStructureConversionUtils:
edu.stanford.nlp.trees.PennTreebankTokenizer:
edu.stanford.nlp.trees.HeadFinder:
edu.stanford.nlp.trees.TreeTransformer:
edu.stanford.nlp.trees.Dependencies$1:
edu.stanford.nlp.trees.GraphLessGrammaticalStructure:
edu.stanford.nlp.trees.LabeledScoredConstituent$ConstituentFactoryHolder:
edu.stanford.nlp.trees.SynchronizedTreeTransformer:
edu.stanford.nlp.trees.CollocationFinder$1:
edu.stanford.nlp.trees.DependencyTyper:
edu.stanford.nlp.trees.SimpleTree$TreeFactoryHolder:
edu.stanford.nlp.trees.Span$ConstituentFactoryHolder:
edu.stanford.nlp.trees.Treebank$1:
edu.stanford.nlp.trees.HasParent:
edu.stanford.nlp.trees.SimpleConstituent:

#edu/stanford/nlp/trees/TreeGraphNode/<init>:

#edu/stanford/nlp/trees/TreeGraphNode/equals:

#edu/stanford/nlp/trees/TreeGraphNode/setLabel:

#edu/stanford/nlp/trees/TreeGraphNode/setChildren:

#edu/stanford/nlp/trees/TreeGraphNode/setChildren:

#edu/stanford/nlp/trees/TreeGraphNode/setChild:

#edu/stanford/nlp/trees/TreeGraphNode/addChild:

#edu/stanford/nlp/trees/TreeGraphNode/removeChild:

#edu/stanford/nlp/trees/TreeGraphNode/percolateHeads:

#edu/stanford/nlp/trees/TreeGraphNode/safeCast:

#edu/stanford/nlp/trees/TreeGraphNode/highestNodeWithSameHead:

#edu/stanford/nlp/trees/TreeGraphNode/treeFactory:

#edu/stanford/nlp/trees/TreeGraphNode/toPrettyString:

#edu/stanford/nlp/trees/TreeGraphNode/toOneLineString:
edu.stanford.nlp.trees.TreeGraphNode:
edu.stanford.nlp.trees.TreeFunctions$1:
edu.stanford.nlp.trees.GrammaticalStructureConversionUtils$TreeBankGrammaticalStructureWrapper:
edu.stanford.nlp.trees.SimpleConstituent$SimpleConstituentLabelFactory:
edu.stanford.nlp.trees.LabeledConstituent$LabeledConstituentLabelFactory:
edu.stanford.nlp.trees.LabeledScoredConstituent$LabelFactoryHolder:

#edu/stanford/nlp/trees/EnglishGrammaticalStructure$ExtraTreeDepFilter/test:
edu.stanford.nlp.trees.EnglishGrammaticalStructure$ExtraTreeDepFilter:
edu.stanford.nlp.trees.SimpleConstituent$1:
edu.stanford.nlp.trees.NPTmpRetainingTreeNormalizer$NPTmpRetainingTreeReaderFactory:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure$ExtraTreeDepFilter/test:
edu.stanford.nlp.trees.UniversalEnglishGrammaticalStructure$ExtraTreeDepFilter:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalRelations/getConj:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalRelations/getNmod:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalRelations/getObl:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalRelations/getAdvcl:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalRelations/getAcl:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalRelations/valueOf:
edu.stanford.nlp.trees.UniversalEnglishGrammaticalRelations:
edu.stanford.nlp.trees.SimpleConstituentFactory:
edu.stanford.nlp.trees.LabeledConstituent$ConstituentFactoryHolder:
edu.stanford.nlp.trees.LabeledConstituent$ConstituentFactoryHolder$LabeledConstituentFactory:
edu.stanford.nlp.trees.LabeledScoredConstituent:
edu.stanford.nlp.trees.WordNetConnection:
edu.stanford.nlp.trees.GrammaticalStructure$1:
edu.stanford.nlp.trees.TreebankLanguagePack:
edu.stanford.nlp.trees.ConstituentFactory:
edu.stanford.nlp.trees.TreeTokenizerFactory$1:

#edu/stanford/nlp/trees/BobChrisTreeNormalizer$AOverAFilter/test:
edu.stanford.nlp.trees.BobChrisTreeNormalizer$AOverAFilter:

#edu/stanford/nlp/trees/GrammaticalStructure$NoPunctFilter/test:
edu.stanford.nlp.trees.GrammaticalStructure$NoPunctFilter:

#edu/stanford/nlp/trees/CollinsRelation/toString:

#edu/stanford/nlp/trees/CollinsRelation/pad:

#edu/stanford/nlp/trees/CollinsRelation/equals:

#edu/stanford/nlp/trees/CollinsRelation/hashCode:
edu.stanford.nlp.trees.CollinsRelation:
edu.stanford.nlp.trees.DependencyPrinter:

#edu/stanford/nlp/trees/GrammaticalStructureConversionUtils$ConverterOptions/initializeNameMap:

#edu/stanford/nlp/trees/GrammaticalStructureConversionUtils$ConverterOptions/getConverterOptions:
edu.stanford.nlp.trees.GrammaticalStructureConversionUtils$ConverterOptions:

#edu/stanford/nlp/trees/LengthTreeFilter/test:
edu.stanford.nlp.trees.LengthTreeFilter:

#edu/stanford/nlp/trees/AbstractTreebankLanguagePack/postBasicCategoryIndex:

#edu/stanford/nlp/trees/AbstractTreebankLanguagePack/basicCategory:

#edu/stanford/nlp/trees/AbstractTreebankLanguagePack/stripGF:

#edu/stanford/nlp/trees/AbstractTreebankLanguagePack/categoryAndFunction:

#edu/stanford/nlp/trees/AbstractTreebankLanguagePack/lastIndexOfNumericTag:

#edu/stanford/nlp/trees/AbstractTreebankLanguagePack/isLabelAnnotationIntroducingCharacter:

#edu/stanford/nlp/trees/AbstractTreebankLanguagePack/startSymbol:
edu.stanford.nlp.trees.AbstractTreebankLanguagePack:
edu.stanford.nlp.trees.UniversalEnglishGrammaticalStructure$1:

#edu/stanford/nlp/trees/SemanticHeadFinder/<init>:

#edu/stanford/nlp/trees/SemanticHeadFinder/ruleChanges:

#edu/stanford/nlp/trees/SemanticHeadFinder/shouldSkip:

#edu/stanford/nlp/trees/SemanticHeadFinder/findPreviousHead:

#edu/stanford/nlp/trees/SemanticHeadFinder/postOperationFix:

#edu/stanford/nlp/trees/SemanticHeadFinder/determineNonTrivialHead:

#edu/stanford/nlp/trees/SemanticHeadFinder/isExistential:

#edu/stanford/nlp/trees/SemanticHeadFinder/isWHQ:

#edu/stanford/nlp/trees/SemanticHeadFinder/isVerbalAuxiliary:

#edu/stanford/nlp/trees/SemanticHeadFinder/hasPassiveProgressiveAuxiliary:

#edu/stanford/nlp/trees/SemanticHeadFinder/vpContainsParticiple:

#edu/stanford/nlp/trees/SemanticHeadFinder/hasVerbalAuxiliary:

#edu/stanford/nlp/trees/SemanticHeadFinder/lambda$static$0:
edu.stanford.nlp.trees.SemanticHeadFinder:

#edu/stanford/nlp/trees/CompositeTreebank$CompositeTreebankIterator/hasNext:

#edu/stanford/nlp/trees/CompositeTreebank$CompositeTreebankIterator/next:
edu.stanford.nlp.trees.CompositeTreebank$CompositeTreebankIterator:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure/correctDependencies:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure/printListSorted:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure/postProcessDependencies:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure/getExtras:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure/addCaseMarkerInformation:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure/addCaseMarkersToReln:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure/expandPrepConjunctions:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure/expandPrepConjunction:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure/expandPPConjunctions:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure/expandPPConjunction:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure/getCaseMarkedRelation:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure/addConjInformation:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure/addConjToReln:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure/correctWHAttachment:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure/fixCCAttachment:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure/convertRel:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure/addEnhancements:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure/collapseDependencies:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure/conjValue:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure/treatCC:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure/isDefinitelyActive:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure/collapseReferent:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure/addRef:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure/addExtraNSubj:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure/correctSubjPass:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure/processMultiwordPreps:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure/processSimple2WP:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure/processComplex2WP:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure/process3WP:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure/createMultiWordExpression:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure/demoteQuantificationalModifiers:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure/demoteQmodParentHelper:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure/processNames:

#edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure/processNamesHelper:
edu.stanford.nlp.trees.UniversalEnglishGrammaticalStructure:

#edu/stanford/nlp/trees/GrammaticalRelation/valueOf:

#edu/stanford/nlp/trees/GrammaticalRelation/valueOf:

#edu/stanford/nlp/trees/GrammaticalRelation/valueOf:

#edu/stanford/nlp/trees/GrammaticalRelation/isFromString:

#edu/stanford/nlp/trees/GrammaticalRelation/<init>:

#edu/stanford/nlp/trees/GrammaticalRelation/getRelatedNodes:

#edu/stanford/nlp/trees/GrammaticalRelation/isApplicable:
Warning: Method:edu.stanford.nlp.trees.GrammaticalRelation.isAncestor has incoming edges.

#edu/stanford/nlp/trees/GrammaticalRelation/toString:

#edu/stanford/nlp/trees/GrammaticalRelation/toPrettyString:

#edu/stanford/nlp/trees/GrammaticalRelation/equals:

#edu/stanford/nlp/trees/GrammaticalRelation/hashCode:

#edu/stanford/nlp/trees/GrammaticalRelation/readResolve:

#edu/stanford/nlp/trees/GrammaticalRelation/main:
edu.stanford.nlp.trees.GrammaticalRelation:
edu.stanford.nlp.trees.PennTreeReaderFactory:
edu.stanford.nlp.trees.SimpleConstituent$LabelFactoryHolder:
edu.stanford.nlp.trees.UnnamedDependency$DependencyFactoryHolder:
edu.stanford.nlp.trees.GrammaticalStructureFromDependenciesFactory:
edu.stanford.nlp.trees.CollocationFinder$Collocation:
edu.stanford.nlp.trees.PennTreebankTokenizer$EnglishTreebankStreamTokenizer:

#edu/stanford/nlp/trees/NPTmpRetainingTreeNormalizer$1/test:
edu.stanford.nlp.trees.NPTmpRetainingTreeNormalizer$1:

#edu/stanford/nlp/trees/CoordinationTransformer/transformTree:

#edu/stanford/nlp/trees/CoordinationTransformer/rearrangeNowThat:

#edu/stanford/nlp/trees/CoordinationTransformer/changeSbarToPP:

#edu/stanford/nlp/trees/CoordinationTransformer/combineConjp:

#edu/stanford/nlp/trees/CoordinationTransformer/moveRB:

#edu/stanford/nlp/trees/CoordinationTransformer/SQflatten:

#edu/stanford/nlp/trees/CoordinationTransformer/UCPtransform:

#edu/stanford/nlp/trees/CoordinationTransformer/CCtransform:

#edu/stanford/nlp/trees/CoordinationTransformer/getHeadTag:

#edu/stanford/nlp/trees/CoordinationTransformer/transformCC:

#edu/stanford/nlp/trees/CoordinationTransformer/notNP:

#edu/stanford/nlp/trees/CoordinationTransformer/findCCparent:

#edu/stanford/nlp/trees/CoordinationTransformer/MWETransform:

#edu/stanford/nlp/trees/CoordinationTransformer/main:
edu.stanford.nlp.trees.CoordinationTransformer:
edu.stanford.nlp.trees.DiskTreebank$1:

#edu/stanford/nlp/trees/TransformingTreebank$TransformingTreebankIterator/next:
edu.stanford.nlp.trees.TransformingTreebank$TransformingTreebankIterator:

#edu/stanford/nlp/trees/TransformingTreebank$MyTreeTransformer2/transformTree:
edu.stanford.nlp.trees.TransformingTreebank$MyTreeTransformer2:
edu.stanford.nlp.trees.GenerateTrees$1:

#edu/stanford/nlp/trees/CollinsHeadFinder/postOperationFix:
edu.stanford.nlp.trees.CollinsHeadFinder:

#edu/stanford/nlp/trees/TransformingTreebank/apply:
edu.stanford.nlp.trees.TransformingTreebank:
edu.stanford.nlp.trees.GenerateTrees$Section:

#edu/stanford/nlp/trees/Tree$TreeIterator/hasNext:

#edu/stanford/nlp/trees/Tree$TreeIterator/next:
edu.stanford.nlp.trees.Tree$TreeIterator:
edu.stanford.nlp.trees.Dependency:

#edu/stanford/nlp/trees/LeftHeadFinder/determineHead:
edu.stanford.nlp.trees.LeftHeadFinder:
edu.stanford.nlp.trees.NamedDependency$NamedDependencyFactory:

#edu/stanford/nlp/trees/DiskTreebank/loadPath:

#edu/stanford/nlp/trees/DiskTreebank/apply:
edu.stanford.nlp.trees.DiskTreebank:
edu.stanford.nlp.trees.EnglishGrammaticalStructure$FromDependenciesFactory:
edu.stanford.nlp.trees.UnnamedDependency$1:

#edu/stanford/nlp/trees/PennTreeReader/<init>:

#edu/stanford/nlp/trees/PennTreeReader/readTree:

#edu/stanford/nlp/trees/PennTreeReader/getTreeFromInputStream:

#edu/stanford/nlp/trees/PennTreeReader/main:
edu.stanford.nlp.trees.PennTreeReader:

#edu/stanford/nlp/trees/TreeFunctions$LabeledTreeToCategoryWordTagTreeFunction/helper:
edu.stanford.nlp.trees.TreeFunctions$LabeledTreeToCategoryWordTagTreeFunction:

#edu/stanford/nlp/trees/LabeledScoredTreeNode/setChildren:

#edu/stanford/nlp/trees/LabeledScoredTreeNode/treeFactory:

#edu/stanford/nlp/trees/LabeledScoredTreeNode/nodeString:
edu.stanford.nlp.trees.LabeledScoredTreeNode:
edu.stanford.nlp.trees.LabeledConstituent$1:

#edu/stanford/nlp/trees/Constituent/toString:

#edu/stanford/nlp/trees/Constituent/equals:

#edu/stanford/nlp/trees/Constituent/hashCode:

#edu/stanford/nlp/trees/Constituent/crosses:

#edu/stanford/nlp/trees/Constituent/crosses:

#edu/stanford/nlp/trees/Constituent/contains:

#edu/stanford/nlp/trees/Constituent/value:

#edu/stanford/nlp/trees/Constituent/setValue:

#edu/stanford/nlp/trees/Constituent/setFromString:

#edu/stanford/nlp/trees/Constituent/toSentenceString:
edu.stanford.nlp.trees.Constituent:

#edu/stanford/nlp/trees/Tree/isLeaf:

#edu/stanford/nlp/trees/Tree/isUnaryRewrite:

#edu/stanford/nlp/trees/Tree/isPreTerminal:

#edu/stanford/nlp/trees/Tree/isPrePreTerminal:

#edu/stanford/nlp/trees/Tree/isPhrasal:

#edu/stanford/nlp/trees/Tree/isBinary:

#edu/stanford/nlp/trees/Tree/isBinarized:

#edu/stanford/nlp/trees/Tree/equals:

#edu/stanford/nlp/trees/Tree/hashCode:

#edu/stanford/nlp/trees/Tree/objectIndexOf:

#edu/stanford/nlp/trees/Tree/setChildren:

#edu/stanford/nlp/trees/Tree/firstChild:

#edu/stanford/nlp/trees/Tree/lastChild:

#edu/stanford/nlp/trees/Tree/upperMostUnary:

#edu/stanford/nlp/trees/Tree/getSpan:

#edu/stanford/nlp/trees/Tree/constituentsNodes:

#edu/stanford/nlp/trees/Tree/constituents:

#edu/stanford/nlp/trees/Tree/localTree:

#edu/stanford/nlp/trees/Tree/localTrees:

#edu/stanford/nlp/trees/Tree/updateBrackets:

#edu/stanford/nlp/trees/Tree/toStringBuilder:

#edu/stanford/nlp/trees/Tree/makeIndentString:

#edu/stanford/nlp/trees/Tree/printLocalTree:

#edu/stanford/nlp/trees/Tree/indentedListPrint:

#edu/stanford/nlp/trees/Tree/indentedXMLPrint:

#edu/stanford/nlp/trees/Tree/displayChildren:

#edu/stanford/nlp/trees/Tree/nodeString:

#edu/stanford/nlp/trees/Tree/display:

#edu/stanford/nlp/trees/Tree/spanString:

#edu/stanford/nlp/trees/Tree/depth:

#edu/stanford/nlp/trees/Tree/depth:

#edu/stanford/nlp/trees/Tree/headTerminal:

#edu/stanford/nlp/trees/Tree/headPreTerminal:

#edu/stanford/nlp/trees/Tree/percolateHeadAnnotations:

#edu/stanford/nlp/trees/Tree/percolateHeads:

#edu/stanford/nlp/trees/Tree/makeDependencyLabel:

#edu/stanford/nlp/trees/Tree/dependencies:

#edu/stanford/nlp/trees/Tree/mapDependencies:

#edu/stanford/nlp/trees/Tree/mapDependencies:

#edu/stanford/nlp/trees/Tree/yield:

#edu/stanford/nlp/trees/Tree/yieldWords:

#edu/stanford/nlp/trees/Tree/yieldHasWord:

#edu/stanford/nlp/trees/Tree/yield:

#edu/stanford/nlp/trees/Tree/taggedYield:

#edu/stanford/nlp/trees/Tree/labeledYield:

#edu/stanford/nlp/trees/Tree/taggedLabeledYield:

#edu/stanford/nlp/trees/Tree/preTerminalYield:

#edu/stanford/nlp/trees/Tree/getLeaves:

#edu/stanford/nlp/trees/Tree/labels:

#edu/stanford/nlp/trees/Tree/flatten:

#edu/stanford/nlp/trees/Tree/subTrees:

#edu/stanford/nlp/trees/Tree/deepCopy:

#edu/stanford/nlp/trees/Tree/treeSkeletonCopy:

#edu/stanford/nlp/trees/Tree/treeSkeletonConstituentCopy:

#edu/stanford/nlp/trees/Tree/transform:

#edu/stanford/nlp/trees/Tree/spliceOut:

#edu/stanford/nlp/trees/Tree/spliceOutHelper:

#edu/stanford/nlp/trees/Tree/prune:

#edu/stanford/nlp/trees/Tree/skipRoot:

#edu/stanford/nlp/trees/Tree/parentHelper:

#edu/stanford/nlp/trees/Tree/size:

#edu/stanford/nlp/trees/Tree/ancestor:

#edu/stanford/nlp/trees/Tree/postOrderRecurse:

#edu/stanford/nlp/trees/Tree/preOrderRecurse:

#edu/stanford/nlp/trees/Tree/removeChild:

#edu/stanford/nlp/trees/Tree/addChild:

#edu/stanford/nlp/trees/Tree/dominates:

#edu/stanford/nlp/trees/Tree/dominationPath:

#edu/stanford/nlp/trees/Tree/dominationPathHelper:

#edu/stanford/nlp/trees/Tree/dominationPath:

#edu/stanford/nlp/trees/Tree/pathNodeToNode:

#edu/stanford/nlp/trees/Tree/joinNode:

#edu/stanford/nlp/trees/Tree/cCommands:

#edu/stanford/nlp/trees/Tree/siblings:

#edu/stanford/nlp/trees/Tree/insertDtr:

#edu/stanford/nlp/trees/Tree/value:

#edu/stanford/nlp/trees/Tree/setValue:

#edu/stanford/nlp/trees/Tree/setFromString:

#edu/stanford/nlp/trees/Tree/labelFactory:

#edu/stanford/nlp/trees/Tree/leftCharEdge:

#edu/stanford/nlp/trees/Tree/leftCharEdge:

#edu/stanford/nlp/trees/Tree/rightCharEdge:

#edu/stanford/nlp/trees/Tree/rightCharEdge:

#edu/stanford/nlp/trees/Tree/nodeNumber:

#edu/stanford/nlp/trees/Tree/nodeNumberHelper:

#edu/stanford/nlp/trees/Tree/getNodeNumberHelper:

#edu/stanford/nlp/trees/Tree/indexLeaves:

#edu/stanford/nlp/trees/Tree/percolateHeadIndices:

#edu/stanford/nlp/trees/Tree/indexSpans:

#edu/stanford/nlp/trees/Tree/lambda$pennPrint$1:

#edu/stanford/nlp/trees/Tree/lambda$toStringBuilder$0:
edu.stanford.nlp.trees.Tree:
edu.stanford.nlp.trees.TreeCoreAnnotations$BinarizedTreeAnnotation:
edu.stanford.nlp.trees.LabeledConstituent$LabelFactoryHolder:
edu.stanford.nlp.trees.DependencyFactory:

#edu/stanford/nlp/trees/DateTreeTransformer/transformTree:
edu.stanford.nlp.trees.DateTreeTransformer:
edu.stanford.nlp.trees.TreeReaderFactory:
edu.stanford.nlp.trees.Dependencies$ComparatorHolder$DependencyIdxComparator:

#edu/stanford/nlp/trees/TypedDependency/equals:

#edu/stanford/nlp/trees/TypedDependency/hashCode:

#edu/stanford/nlp/trees/TypedDependency/compareTo:
edu.stanford.nlp.trees.TypedDependency:

#edu/stanford/nlp/trees/CompositeTreeTransformer/transformTree:
edu.stanford.nlp.trees.CompositeTreeTransformer:
edu.stanford.nlp.trees.LabeledScoredTreeNode$TreeFactoryHolder:
edu.stanford.nlp.trees.PennTreebankTokenizer$1:

#edu/stanford/nlp/trees/TreebankTagUpdater/tagTree:

#edu/stanford/nlp/trees/TreebankTagUpdater/getTaggedLeaves:

#edu/stanford/nlp/trees/TreebankTagUpdater/main:
edu.stanford.nlp.trees.TreebankTagUpdater:

#edu/stanford/nlp/trees/TransformingTreebank$MyTreeTransformer3/transformTree:
edu.stanford.nlp.trees.TransformingTreebank$MyTreeTransformer3:

#edu/stanford/nlp/trees/TreeFunctions$LabeledToDescriptiveCoreLabelTreeFunction/apply:
edu.stanford.nlp.trees.TreeFunctions$LabeledToDescriptiveCoreLabelTreeFunction:

#edu/stanford/nlp/trees/Dependencies$DependentPuncTagRejectFilter/test:
edu.stanford.nlp.trees.Dependencies$DependentPuncTagRejectFilter:
edu.stanford.nlp.trees.DeepTree:
edu.stanford.nlp.trees.UniversalEnglishGrammaticalStructure$FromDependenciesFactory:

#edu/stanford/nlp/trees/TreeLengthComparator/compare:
edu.stanford.nlp.trees.TreeLengthComparator:

#edu/stanford/nlp/trees/GrammaticalStructure$NoPunctTypedDependencyFilter/test:
edu.stanford.nlp.trees.GrammaticalStructure$NoPunctTypedDependencyFilter:
Warning: Method:edu.stanford.nlp.trees.FilteringTreeReader.readTree has incoming edges.
edu.stanford.nlp.trees.FilteringTreeReader:

#edu/stanford/nlp/trees/NPTmpRetainingTreeNormalizer$2/test:
edu.stanford.nlp.trees.NPTmpRetainingTreeNormalizer$2:
edu.stanford.nlp.trees.TreeVisitor:
edu.stanford.nlp.trees.AbstractTreebankLanguagePack$BasicCategoryStringFunction:

#edu/stanford/nlp/trees/Treebanks/main:

#edu/stanford/nlp/trees/Treebanks/printPunct:

#edu/stanford/nlp/trees/Treebanks/countTaggings:

#edu/stanford/nlp/trees/Treebanks/runTiming:

#edu/stanford/nlp/trees/Treebanks/sentenceLengths:

#edu/stanford/nlp/trees/Treebanks/lambda$countTaggings$6:

#edu/stanford/nlp/trees/Treebanks/lambda$main$5:

#edu/stanford/nlp/trees/Treebanks/lambda$main$3:

#edu/stanford/nlp/trees/Treebanks/lambda$main$2:

#edu/stanford/nlp/trees/Treebanks/lambda$main$1:
edu.stanford.nlp.trees.Treebanks:

#edu/stanford/nlp/trees/GrammaticalStructureConversionUtils$TreeBankGrammaticalStructureWrapper$GsIterator/<init>:

#edu/stanford/nlp/trees/GrammaticalStructureConversionUtils$TreeBankGrammaticalStructureWrapper$GsIterator/primeGs:

#edu/stanford/nlp/trees/GrammaticalStructureConversionUtils$TreeBankGrammaticalStructureWrapper$GsIterator/hasNext:

#edu/stanford/nlp/trees/GrammaticalStructureConversionUtils$TreeBankGrammaticalStructureWrapper$GsIterator/next:
edu.stanford.nlp.trees.GrammaticalStructureConversionUtils$TreeBankGrammaticalStructureWrapper$GsIterator:
edu.stanford.nlp.trees.TreeTokenizerFactory:
edu.stanford.nlp.trees.WordCatConstituent:

#edu/stanford/nlp/trees/Dependencies$DependentPuncWordRejectFilter/test:
edu.stanford.nlp.trees.Dependencies$DependentPuncWordRejectFilter:

#edu/stanford/nlp/trees/CollocationFinder/<init>:

#edu/stanford/nlp/trees/CollocationFinder/getMangledTree:

#edu/stanford/nlp/trees/CollocationFinder/printCollocationStrings:
Warning: Method:edu.stanford.nlp.trees.CollocationFinder.getCollocationsList has auto edges.

#edu/stanford/nlp/trees/CollocationFinder/treeAsStemmedCollocation:

#edu/stanford/nlp/trees/CollocationFinder/treeAsNonStemmedCollocation:

#edu/stanford/nlp/trees/CollocationFinder/mergeLeavesIntoCollocatedString:

#edu/stanford/nlp/trees/CollocationFinder/mergeLeavesIntoCollocatedString:

#edu/stanford/nlp/trees/CollocationFinder/getStemmedWordTagsFromTree:

#edu/stanford/nlp/trees/CollocationFinder/getNonStemmedWordTagsFromTree:
edu.stanford.nlp.trees.CollocationFinder:

#edu/stanford/nlp/trees/OutputSubtrees/main:
edu.stanford.nlp.trees.OutputSubtrees:
edu.stanford.nlp.trees.AbstractTreebankLanguagePack$CategoryAndFunctionStringFunction:
edu.stanford.nlp.trees.Dependencies$ComparatorHolder:
edu.stanford.nlp.trees.TreeCoreAnnotations$KBestTreesAnnotation:

#edu/stanford/nlp/trees/EnglishGrammaticalRelations/getConj:

#edu/stanford/nlp/trees/EnglishGrammaticalRelations/getPrep:

#edu/stanford/nlp/trees/EnglishGrammaticalRelations/getPrepC:

#edu/stanford/nlp/trees/EnglishGrammaticalRelations/valueOf:
edu.stanford.nlp.trees.EnglishGrammaticalRelations:
edu.stanford.nlp.trees.SimpleTreeFactory:
edu.stanford.nlp.trees.TreeCoreAnnotations$TreeAnnotation:
edu.stanford.nlp.trees.OutputSubtrees$1:

#edu/stanford/nlp/trees/TreePrint/<init>:

#edu/stanford/nlp/trees/TreePrint/printTree:

#edu/stanford/nlp/trees/TreePrint/printTrees:

#edu/stanford/nlp/trees/TreePrint/printTreeInternal:

#edu/stanford/nlp/trees/TreePrint/getSortedDeps:

#edu/stanford/nlp/trees/TreePrint/getCollocationProcessedTree:

#edu/stanford/nlp/trees/TreePrint/printHeader:

#edu/stanford/nlp/trees/TreePrint/printFooter:

#edu/stanford/nlp/trees/TreePrint/markHeadNodes:

#edu/stanford/nlp/trees/TreePrint/headMarkChildren:

#edu/stanford/nlp/trees/TreePrint/main:

#edu/stanford/nlp/trees/TreePrint/toString:

#edu/stanford/nlp/trees/TreePrint/toString:

#edu/stanford/nlp/trees/TreePrint/toReadableString:

#edu/stanford/nlp/trees/TreePrint/toXMLString:

#edu/stanford/nlp/trees/TreePrint/lambda$printTreeInternal$0:
edu.stanford.nlp.trees.TreePrint:
edu.stanford.nlp.trees.TreeCoreAnnotations:
edu.stanford.nlp.trees.NamedDependency$1:
edu.stanford.nlp.trees.TreeReader:

#edu/stanford/nlp/trees/FindTreebankTree/main:

#edu/stanford/nlp/trees/FindTreebankTree/lambda$main$0:
edu.stanford.nlp.trees.FindTreebankTree:

#edu/stanford/nlp/trees/SimpleTree/setChildren:
edu.stanford.nlp.trees.SimpleTree:

#edu/stanford/nlp/trees/fakeShortNameToGRel$1/equals:
edu.stanford.nlp.trees.fakeShortNameToGRel$1:

#edu/stanford/nlp/trees/PennTreebankLanguagePack/grammaticalStructureFactory:

#edu/stanford/nlp/trees/PennTreebankLanguagePack/grammaticalStructureFactory:

#edu/stanford/nlp/trees/PennTreebankLanguagePack/grammaticalStructureFactory:

#edu/stanford/nlp/trees/PennTreebankLanguagePack/typedDependencyHeadFinder:

#edu/stanford/nlp/trees/PennTreebankLanguagePack/main:
edu.stanford.nlp.trees.PennTreebankLanguagePack:

#edu/stanford/nlp/trees/TreeFilters$HasMatchingChild/test:
edu.stanford.nlp.trees.TreeFilters$HasMatchingChild:

#edu/stanford/nlp/trees/Trees/height:

#edu/stanford/nlp/trees/Trees/leftEdge:

#edu/stanford/nlp/trees/Trees/leftEdgeUnsafe:

#edu/stanford/nlp/trees/Trees/leftEdge:

#edu/stanford/nlp/trees/Trees/rightEdge:

#edu/stanford/nlp/trees/Trees/rightEdgeUnsafe:

#edu/stanford/nlp/trees/Trees/rightEdge:

#edu/stanford/nlp/trees/Trees/leaves:

#edu/stanford/nlp/trees/Trees/preTerminals:

#edu/stanford/nlp/trees/Trees/leafLabels:

#edu/stanford/nlp/trees/Trees/taggedLeafLabels:

#edu/stanford/nlp/trees/Trees/setLeafTagsIfUnset:

#edu/stanford/nlp/trees/Trees/setLeafLabels:

#edu/stanford/nlp/trees/Trees/maximalProjection:

#edu/stanford/nlp/trees/Trees/applyToProjections:

#edu/stanford/nlp/trees/Trees/getTerminal:

#edu/stanford/nlp/trees/Trees/getPreTerminal:

#edu/stanford/nlp/trees/Trees/localTreeAsCatList:

#edu/stanford/nlp/trees/Trees/objectEqualityIndexOf:

#edu/stanford/nlp/trees/Trees/toStructureDebugString:

#edu/stanford/nlp/trees/Trees/toFlatTree:

#edu/stanford/nlp/trees/Trees/treeToLatexHelper:

#edu/stanford/nlp/trees/Trees/treeToLatexEvenHelper:

#edu/stanford/nlp/trees/Trees/escape:

#edu/stanford/nlp/trees/Trees/main:

#edu/stanford/nlp/trees/Trees/normalizeTree:

#edu/stanford/nlp/trees/Trees/getLeaf:

#edu/stanford/nlp/trees/Trees/getLowestCommonAncestor:

#edu/stanford/nlp/trees/Trees/pathNodeToNode:

#edu/stanford/nlp/trees/Trees/pathFromRoot:

#edu/stanford/nlp/trees/Trees/replaceNode:

#edu/stanford/nlp/trees/Trees/getLowestCommonAncestor:

#edu/stanford/nlp/trees/Trees/outputTreeLabels:

#edu/stanford/nlp/trees/Trees/convertToCoreLabels:

#edu/stanford/nlp/trees/Trees/setSentIndex:
edu.stanford.nlp.trees.Trees:
edu.stanford.nlp.trees.TreeFunctions:
edu.stanford.nlp.trees.Labeled:
edu.stanford.nlp.trees.SimpleConstituent$ConstituentFactoryHolder$SimpleConstituentFactory:
edu.stanford.nlp.trees.LabeledScoredTreeFactory:
edu.stanford.nlp.trees.NPTmpRetainingTreeNormalizer$NPTmpAdvRetainingTreeReaderFactory:

#edu/stanford/nlp/trees/UniversalPOSMapper/mapTree:
edu.stanford.nlp.trees.UniversalPOSMapper:
edu.stanford.nlp.trees.DependencyScoring$TypedDependencyStringEquality:

#edu/stanford/nlp/trees/BobChrisTreeNormalizer$EmptyFilter/test:
edu.stanford.nlp.trees.BobChrisTreeNormalizer$EmptyFilter:
edu.stanford.nlp.trees.DeepTree$1:

#edu/stanford/nlp/trees/fakeShortNameToGRel/containsKey:

#edu/stanford/nlp/trees/fakeShortNameToGRel/get:
edu.stanford.nlp.trees.fakeShortNameToGRel:
edu.stanford.nlp.trees.TreebankTransformer:

#edu/stanford/nlp/trees/Treebank/decimate:

#edu/stanford/nlp/trees/Treebank/textualSummary:
edu.stanford.nlp.trees.Treebank:
edu.stanford.nlp.trees.LabeledConstituent:
edu.stanford.nlp.trees.Treebank$CounterTreeProcessor:
edu.stanford.nlp.trees.tregex.TregexParseException:

#edu/stanford/nlp/trees/tregex/TregexPattern$TRegexTreeReaderFactory$1/normalizeNonterminal:
edu.stanford.nlp.trees.tregex.TregexPattern$TRegexTreeReaderFactory$1:
edu.stanford.nlp.trees.tregex.Relation$7$1:

#edu/stanford/nlp/trees/tregex/Relation$24/satisfies:
edu.stanford.nlp.trees.tregex.Relation$24:

#edu/stanford/nlp/trees/tregex/Relation$16$1/initialize:

#edu/stanford/nlp/trees/tregex/Relation$16$1/advance:
edu.stanford.nlp.trees.tregex.Relation$16$1:

#edu/stanford/nlp/trees/tregex/Relation$8/satisfies:
edu.stanford.nlp.trees.tregex.Relation$8:

#edu/stanford/nlp/trees/tregex/Relation$19/satisfies:
edu.stanford.nlp.trees.tregex.Relation$19:

#edu/stanford/nlp/trees/tregex/Relation$Heads$1/advance:
edu.stanford.nlp.trees.tregex.Relation$Heads$1:

#edu/stanford/nlp/trees/tregex/Relation$20$1/initialize:
edu.stanford.nlp.trees.tregex.Relation$20$1:

#edu/stanford/nlp/trees/tregex/Relation/getRelation:

#edu/stanford/nlp/trees/tregex/Relation/getRelation:

#edu/stanford/nlp/trees/tregex/Relation/constructMultiRelation:

#edu/stanford/nlp/trees/tregex/Relation/equals:
edu.stanford.nlp.trees.tregex.Relation:

#edu/stanford/nlp/trees/tregex/Relation$21$1/initialize:
edu.stanford.nlp.trees.tregex.Relation$21$1:

#edu/stanford/nlp/trees/tregex/Relation$UnbrokenCategoryFollows$1/initializeHelper:

#edu/stanford/nlp/trees/tregex/Relation$UnbrokenCategoryFollows$1/advance:
edu.stanford.nlp.trees.tregex.Relation$UnbrokenCategoryFollows$1:

#edu/stanford/nlp/trees/tregex/Relation$22/satisfies:
edu.stanford.nlp.trees.tregex.Relation$22:
edu.stanford.nlp.trees.tregex.Relation$20:

#edu/stanford/nlp/trees/tregex/Relation$6$1/advance:
edu.stanford.nlp.trees.tregex.Relation$6$1:

#edu/stanford/nlp/trees/tregex/Relation$IthChildOf$1/initialize:
edu.stanford.nlp.trees.tregex.Relation$IthChildOf$1:

#edu/stanford/nlp/trees/tregex/Relation$17$1/initialize:

#edu/stanford/nlp/trees/tregex/Relation$17$1/advance:
edu.stanford.nlp.trees.tregex.Relation$17$1:

#edu/stanford/nlp/trees/tregex/Relation$IthChildOf/<init>:

#edu/stanford/nlp/trees/tregex/Relation$IthChildOf/satisfies:

#edu/stanford/nlp/trees/tregex/Relation$IthChildOf/equals:
edu.stanford.nlp.trees.tregex.Relation$IthChildOf:

#edu/stanford/nlp/trees/tregex/Relation$UnbrokenCategoryDominates$1/initialize:

#edu/stanford/nlp/trees/tregex/Relation$UnbrokenCategoryDominates$1/advance:
edu.stanford.nlp.trees.tregex.Relation$UnbrokenCategoryDominates$1:

#edu/stanford/nlp/trees/tregex/TokenMgrError/addEscapes:

#edu/stanford/nlp/trees/tregex/TokenMgrError/LexicalErr:
edu.stanford.nlp.trees.tregex.TokenMgrError:

#edu/stanford/nlp/trees/tregex/Relation$23$1/initialize:

#edu/stanford/nlp/trees/tregex/Relation$23$1/advance:
edu.stanford.nlp.trees.tregex.Relation$23$1:

#edu/stanford/nlp/trees/tregex/Relation$HasIthChild/equals:

#edu/stanford/nlp/trees/tregex/Relation$HasIthChild/hashCode:
edu.stanford.nlp.trees.tregex.Relation$HasIthChild:

#edu/stanford/nlp/trees/tregex/Relation$HasIthChild$1/initialize:
edu.stanford.nlp.trees.tregex.Relation$HasIthChild$1:

#edu/stanford/nlp/trees/tregex/Relation$UnbrokenCategoryPrecedes$1/initializeHelper:

#edu/stanford/nlp/trees/tregex/Relation$UnbrokenCategoryPrecedes$1/advance:
edu.stanford.nlp.trees.tregex.Relation$UnbrokenCategoryPrecedes$1:

#edu/stanford/nlp/trees/tregex/TregexPatternCompiler/compile:
edu.stanford.nlp.trees.tregex.TregexPatternCompiler:

#edu/stanford/nlp/trees/tregex/Relation$UnbrokenCategoryPrecedes/<init>:

#edu/stanford/nlp/trees/tregex/Relation$UnbrokenCategoryPrecedes/pathMatchesNode:
edu.stanford.nlp.trees.tregex.Relation$UnbrokenCategoryPrecedes:

#edu/stanford/nlp/trees/tregex/Relation$4$1/initialize:

#edu/stanford/nlp/trees/tregex/Relation$4$1/advance:
edu.stanford.nlp.trees.tregex.Relation$4$1:

#edu/stanford/nlp/trees/tregex/Relation$ImmediatelyHeads/satisfies:

#edu/stanford/nlp/trees/tregex/Relation$ImmediatelyHeads/equals:

#edu/stanford/nlp/trees/tregex/Relation$ImmediatelyHeads/hashCode:
edu.stanford.nlp.trees.tregex.Relation$ImmediatelyHeads:
edu.stanford.nlp.trees.tregex.TregexParser$1:

#edu/stanford/nlp/trees/tregex/Relation$ImmediatelyHeadedBy/equals:

#edu/stanford/nlp/trees/tregex/Relation$ImmediatelyHeadedBy/hashCode:
edu.stanford.nlp.trees.tregex.Relation$ImmediatelyHeadedBy:

#edu/stanford/nlp/trees/tregex/Relation$9/satisfies:
edu.stanford.nlp.trees.tregex.Relation$9:
edu.stanford.nlp.trees.tregex.Relation$18:

#edu/stanford/nlp/trees/tregex/Relation$ImmediatelyHeads$1/initialize:
edu.stanford.nlp.trees.tregex.Relation$ImmediatelyHeads$1:

#edu/stanford/nlp/trees/tregex/Relation$15$1/advance:
edu.stanford.nlp.trees.tregex.Relation$15$1:

#edu/stanford/nlp/trees/tregex/Relation$25/satisfies:
edu.stanford.nlp.trees.tregex.Relation$25:
edu.stanford.nlp.trees.tregex.Relation$5$1:

#edu/stanford/nlp/trees/tregex/TregexPattern$TRegexTreeVisitor/visitTree:
edu.stanford.nlp.trees.tregex.TregexPattern$TRegexTreeVisitor:

#edu/stanford/nlp/trees/tregex/Relation$21/satisfies:
edu.stanford.nlp.trees.tregex.Relation$21:

#edu/stanford/nlp/trees/tregex/Relation$14$1/advance:
edu.stanford.nlp.trees.tregex.Relation$14$1:

#edu/stanford/nlp/trees/tregex/Relation$22$1/initialize:
edu.stanford.nlp.trees.tregex.Relation$22$1:
edu.stanford.nlp.trees.tregex.TregexPattern$TRegexTreeReaderFactory:

#edu/stanford/nlp/trees/tregex/Relation$23/satisfies:
edu.stanford.nlp.trees.tregex.Relation$23:
edu.stanford.nlp.trees.tregex.TregexParser$LookaheadSuccess:

#edu/stanford/nlp/trees/tregex/Relation$18$1/initialize:

#edu/stanford/nlp/trees/tregex/Relation$18$1/advance:
edu.stanford.nlp.trees.tregex.Relation$18$1:
edu.stanford.nlp.trees.tregex.Relation$3:

#edu/stanford/nlp/trees/tregex/Relation$12/satisfies:
edu.stanford.nlp.trees.tregex.Relation$12:

#edu/stanford/nlp/trees/tregex/Relation$9$1/initialize:

#edu/stanford/nlp/trees/tregex/Relation$9$1/advance:
edu.stanford.nlp.trees.tregex.Relation$9$1:

#edu/stanford/nlp/trees/tregex/Relation$11$1/initialize:

#edu/stanford/nlp/trees/tregex/Relation$11$1/advance:
edu.stanford.nlp.trees.tregex.Relation$11$1:
edu.stanford.nlp.trees.tregex.DescriptionPattern$1:

#edu/stanford/nlp/trees/tregex/CoordinationPattern/<init>:

#edu/stanford/nlp/trees/tregex/CoordinationPattern/localString:

#edu/stanford/nlp/trees/tregex/CoordinationPattern/toString:
edu.stanford.nlp.trees.tregex.CoordinationPattern:

#edu/stanford/nlp/trees/tregex/Relation$10/satisfies:
edu.stanford.nlp.trees.tregex.Relation$10:

#edu/stanford/nlp/trees/tregex/Relation$1/satisfies:
edu.stanford.nlp.trees.tregex.Relation$1:
edu.stanford.nlp.trees.tregex.Relation$14:

#edu/stanford/nlp/trees/tregex/TregexPattern/negate:

#edu/stanford/nlp/trees/tregex/TregexPattern/makeOptional:

#edu/stanford/nlp/trees/tregex/TregexPattern/prettyPrint:

#edu/stanford/nlp/trees/tregex/TregexPattern/extractSubtrees:

#edu/stanford/nlp/trees/tregex/TregexPattern/main:

#edu/stanford/nlp/trees/tregex/TregexPattern/getTreeReaderFactory:
edu.stanford.nlp.trees.tregex.TregexPattern:
edu.stanford.nlp.trees.tregex.Relation$5:
edu.stanford.nlp.trees.tregex.TregexParserConstants:

#edu/stanford/nlp/trees/tregex/Relation$10$1/initialize:

#edu/stanford/nlp/trees/tregex/Relation$10$1/advance:
edu.stanford.nlp.trees.tregex.Relation$10$1:
edu.stanford.nlp.trees.tregex.Relation$1$1:

#edu/stanford/nlp/trees/tregex/DescriptionPattern$DescriptionMatcher/resetChildIter:

#edu/stanford/nlp/trees/tregex/DescriptionPattern$DescriptionMatcher/resetChild:

#edu/stanford/nlp/trees/tregex/DescriptionPattern$DescriptionMatcher/goToNextTreeNodeMatch:

#edu/stanford/nlp/trees/tregex/DescriptionPattern$DescriptionMatcher/commitVariableGroups:

#edu/stanford/nlp/trees/tregex/DescriptionPattern$DescriptionMatcher/commitVariableGroups:

#edu/stanford/nlp/trees/tregex/DescriptionPattern$DescriptionMatcher/decommitVariableGroups:

#edu/stanford/nlp/trees/tregex/DescriptionPattern$DescriptionMatcher/removeNamedNodes:

#edu/stanford/nlp/trees/tregex/DescriptionPattern$DescriptionMatcher/matchChild:

#edu/stanford/nlp/trees/tregex/DescriptionPattern$DescriptionMatcher/matches:
edu.stanford.nlp.trees.tregex.DescriptionPattern$DescriptionMatcher:

#edu/stanford/nlp/trees/tregex/Relation$19$1/initialize:
edu.stanford.nlp.trees.tregex.Relation$19$1:

#edu/stanford/nlp/trees/tregex/TregexParserTokenManager/jjStopStringLiteralDfa_0:

#edu/stanford/nlp/trees/tregex/TregexParserTokenManager/jjMoveStringLiteralDfa0_0:

#edu/stanford/nlp/trees/tregex/TregexParserTokenManager/jjMoveStringLiteralDfa1_0:

#edu/stanford/nlp/trees/tregex/TregexParserTokenManager/jjMoveStringLiteralDfa2_0:

#edu/stanford/nlp/trees/tregex/TregexParserTokenManager/jjMoveStringLiteralDfa3_0:

#edu/stanford/nlp/trees/tregex/TregexParserTokenManager/jjMoveNfa_0:

#edu/stanford/nlp/trees/tregex/TregexParserTokenManager/jjFillToken:

#edu/stanford/nlp/trees/tregex/TregexParserTokenManager/jjCanMove_0:

#edu/stanford/nlp/trees/tregex/TregexParserTokenManager/getNextToken:
Warning: Method:edu.stanford.nlp.trees.tregex.TregexParserTokenManager.SkipLexicalActions has auto edges.
Warning: Method:edu.stanford.nlp.trees.tregex.TregexParserTokenManager.MoreLexicalActions has auto edges.
Warning: Method:edu.stanford.nlp.trees.tregex.TregexParserTokenManager.TokenLexicalActions has auto edges.

#edu/stanford/nlp/trees/tregex/TregexParserTokenManager/jjCheckNAdd:
Warning: Method:edu.stanford.nlp.trees.tregex.TregexParserTokenManager.jjAddStates has auto edges.
Warning: Method:edu.stanford.nlp.trees.tregex.TregexParserTokenManager.jjCheckNAddStates has auto edges.

#edu/stanford/nlp/trees/tregex/TregexParserTokenManager/ReInitRounds:

#edu/stanford/nlp/trees/tregex/TregexParserTokenManager/SwitchTo:
edu.stanford.nlp.trees.tregex.TregexParserTokenManager:

#edu/stanford/nlp/trees/tregex/SimpleCharStream/ExpandBuff:

#edu/stanford/nlp/trees/tregex/SimpleCharStream/FillBuff:

#edu/stanford/nlp/trees/tregex/SimpleCharStream/UpdateLineColumn:

#edu/stanford/nlp/trees/tregex/SimpleCharStream/readChar:

#edu/stanford/nlp/trees/tregex/SimpleCharStream/backup:

#edu/stanford/nlp/trees/tregex/SimpleCharStream/ReInit:

#edu/stanford/nlp/trees/tregex/SimpleCharStream/<init>:

#edu/stanford/nlp/trees/tregex/SimpleCharStream/ReInit:

#edu/stanford/nlp/trees/tregex/SimpleCharStream/GetImage:

#edu/stanford/nlp/trees/tregex/SimpleCharStream/GetSuffix:

#edu/stanford/nlp/trees/tregex/SimpleCharStream/adjustBeginLineColumn:
edu.stanford.nlp.trees.tregex.SimpleCharStream:

#edu/stanford/nlp/trees/tregex/Relation$UnbrokenCategoryFollows/<init>:

#edu/stanford/nlp/trees/tregex/Relation$UnbrokenCategoryFollows/pathMatchesNode:
edu.stanford.nlp.trees.tregex.Relation$UnbrokenCategoryFollows:
edu.stanford.nlp.trees.tregex.Relation$7:

#edu/stanford/nlp/trees/tregex/Relation$16/satisfies:
edu.stanford.nlp.trees.tregex.Relation$16:

#edu/stanford/nlp/trees/tregex/Relation$8$1/initialize:

#edu/stanford/nlp/trees/tregex/Relation$8$1/advance:
edu.stanford.nlp.trees.tregex.Relation$8$1:

#edu/stanford/nlp/trees/tregex/VariableStrings/isSet:

#edu/stanford/nlp/trees/tregex/VariableStrings/setVar:

#edu/stanford/nlp/trees/tregex/VariableStrings/unsetVar:

#edu/stanford/nlp/trees/tregex/VariableStrings/toString:
edu.stanford.nlp.trees.tregex.VariableStrings:

#edu/stanford/nlp/trees/tregex/Relation$12$1/advance:
edu.stanford.nlp.trees.tregex.Relation$12$1:

#edu/stanford/nlp/trees/tregex/Relation$UnbrokenCategoryIsDominatedBy/equals:
edu.stanford.nlp.trees.tregex.Relation$UnbrokenCategoryIsDominatedBy:

#edu/stanford/nlp/trees/tregex/Relation$11/satisfies:
edu.stanford.nlp.trees.tregex.Relation$11:
Warning: Method:edu.stanford.nlp.trees.tregex.Token.newToken has auto edges.
edu.stanford.nlp.trees.tregex.Token:

#edu/stanford/nlp/trees/tregex/Relation$HeadedBy/equals:

#edu/stanford/nlp/trees/tregex/Relation$HeadedBy/hashCode:
edu.stanford.nlp.trees.tregex.Relation$HeadedBy:

#edu/stanford/nlp/trees/tregex/Relation$UnbrokenCategoryDominates/<init>:

#edu/stanford/nlp/trees/tregex/Relation$UnbrokenCategoryDominates/satisfies:

#edu/stanford/nlp/trees/tregex/Relation$UnbrokenCategoryDominates/pathMatchesNode:

#edu/stanford/nlp/trees/tregex/Relation$UnbrokenCategoryDominates/equals:

#edu/stanford/nlp/trees/tregex/Relation$UnbrokenCategoryDominates/hashCode:
edu.stanford.nlp.trees.tregex.Relation$UnbrokenCategoryDominates:

#edu/stanford/nlp/trees/tregex/Relation$2/satisfies:
edu.stanford.nlp.trees.tregex.Relation$2:

#edu/stanford/nlp/trees/tregex/DescriptionPattern/<init>:

#edu/stanford/nlp/trees/tregex/DescriptionPattern/localString:

#edu/stanford/nlp/trees/tregex/DescriptionPattern/toString:

#edu/stanford/nlp/trees/tregex/DescriptionPattern/getChildren:
edu.stanford.nlp.trees.tregex.DescriptionPattern:

#edu/stanford/nlp/trees/tregex/Relation$13/satisfies:
edu.stanford.nlp.trees.tregex.Relation$13:

#edu/stanford/nlp/trees/tregex/TregexParser/Root:

#edu/stanford/nlp/trees/tregex/TregexParser/Node:

#edu/stanford/nlp/trees/tregex/TregexParser/SubNode:

#edu/stanford/nlp/trees/tregex/TregexParser/ModDescription:

#edu/stanford/nlp/trees/tregex/TregexParser/Description:

#edu/stanford/nlp/trees/tregex/TregexParser/ChildrenDisj:

#edu/stanford/nlp/trees/tregex/TregexParser/ChildrenConj:

#edu/stanford/nlp/trees/tregex/TregexParser/ModChild:

#edu/stanford/nlp/trees/tregex/TregexParser/Child:

#edu/stanford/nlp/trees/tregex/TregexParser/Relation:

#edu/stanford/nlp/trees/tregex/TregexParser/jj_2_1:

#edu/stanford/nlp/trees/tregex/TregexParser/jj_2_2:

#edu/stanford/nlp/trees/tregex/TregexParser/jj_3R_Relation_277_3_25:

#edu/stanford/nlp/trees/tregex/TregexParser/jj_3R_SubNode_128_5_9:

#edu/stanford/nlp/trees/tregex/TregexParser/jj_3R_Child_265_7_24:

#edu/stanford/nlp/trees/tregex/TregexParser/jj_3R_Child_264_7_23:

#edu/stanford/nlp/trees/tregex/TregexParser/jj_3R_Description_170_5_20:

#edu/stanford/nlp/trees/tregex/TregexParser/jj_3_2:

#edu/stanford/nlp/trees/tregex/TregexParser/jj_3R_Child_263_5_22:

#edu/stanford/nlp/trees/tregex/TregexParser/jj_3R_ModDescription_142_31_16:

#edu/stanford/nlp/trees/tregex/TregexParser/jj_3R_Child_263_3_18:

#edu/stanford/nlp/trees/tregex/TregexParser/jj_3R_SubNode_119_3_8:

#edu/stanford/nlp/trees/tregex/TregexParser/jj_3R_SubNode_119_3_6:

#edu/stanford/nlp/trees/tregex/TregexParser/jj_3R_ModChild_256_7_14:

#edu/stanford/nlp/trees/tregex/TregexParser/jj_3R_Relation_305_3_27:

#edu/stanford/nlp/trees/tregex/TregexParser/jj_3R_Description_157_5_19:

#edu/stanford/nlp/trees/tregex/TregexParser/jj_3R_ModChild_249_7_13:

#edu/stanford/nlp/trees/tregex/TregexParser/jj_3R_Description_157_3_17:

#edu/stanford/nlp/trees/tregex/TregexParser/jj_3R_ModChild_248_5_12:

#edu/stanford/nlp/trees/tregex/TregexParser/jj_3R_ModChild_248_3_10:

#edu/stanford/nlp/trees/tregex/TregexParser/jj_3R_ModDescription_142_6_15:

#edu/stanford/nlp/trees/tregex/TregexParser/jj_3R_Relation_278_9_29:

#edu/stanford/nlp/trees/tregex/TregexParser/jj_3_1:

#edu/stanford/nlp/trees/tregex/TregexParser/jj_3R_Relation_277_9_28:

#edu/stanford/nlp/trees/tregex/TregexParser/jj_3R_ModDescription_142_3_11:

#edu/stanford/nlp/trees/tregex/TregexParser/jj_3R_Description_184_5_21:

#edu/stanford/nlp/trees/tregex/TregexParser/jj_3R_ChildrenConj_233_3_7:

#edu/stanford/nlp/trees/tregex/TregexParser/jj_3R_Relation_277_5_26:

#edu/stanford/nlp/trees/tregex/TregexParser/<init>:

#edu/stanford/nlp/trees/tregex/TregexParser/ReInit:

#edu/stanford/nlp/trees/tregex/TregexParser/<init>:

#edu/stanford/nlp/trees/tregex/TregexParser/ReInit:

#edu/stanford/nlp/trees/tregex/TregexParser/<init>:

#edu/stanford/nlp/trees/tregex/TregexParser/ReInit:

#edu/stanford/nlp/trees/tregex/TregexParser/jj_consume_token:

#edu/stanford/nlp/trees/tregex/TregexParser/jj_scan_token:

#edu/stanford/nlp/trees/tregex/TregexParser/getNextToken:

#edu/stanford/nlp/trees/tregex/TregexParser/getToken:

#edu/stanford/nlp/trees/tregex/TregexParser/jj_ntk_f:

#edu/stanford/nlp/trees/tregex/TregexParser/jj_add_error_token:

#edu/stanford/nlp/trees/tregex/TregexParser/generateParseException:

#edu/stanford/nlp/trees/tregex/TregexParser/jj_rescan_token:

#edu/stanford/nlp/trees/tregex/TregexParser/jj_save:
edu.stanford.nlp.trees.tregex.TregexParser:

#edu/stanford/nlp/trees/tregex/Relation$24$1/initialize:

#edu/stanford/nlp/trees/tregex/Relation$24$1/advance:
edu.stanford.nlp.trees.tregex.Relation$24$1:

#edu/stanford/nlp/trees/tregex/ParseException/initialise:

#edu/stanford/nlp/trees/tregex/ParseException/add_escapes:
edu.stanford.nlp.trees.tregex.ParseException:
edu.stanford.nlp.trees.tregex.TregexParser$JJCalls:
edu.stanford.nlp.trees.tregex.DescriptionPattern$DescriptionMode:

#edu/stanford/nlp/trees/tregex/Relation$6/satisfies:
edu.stanford.nlp.trees.tregex.Relation$6:

#edu/stanford/nlp/trees/tregex/Relation$25$1/advance:
edu.stanford.nlp.trees.tregex.Relation$25$1:

#edu/stanford/nlp/trees/tregex/Relation$17/satisfies:
edu.stanford.nlp.trees.tregex.Relation$17:

#edu/stanford/nlp/trees/tregex/Relation$13$1/advance:
edu.stanford.nlp.trees.tregex.Relation$13$1:

#edu/stanford/nlp/trees/tregex/Relation$Heads/satisfies:

#edu/stanford/nlp/trees/tregex/Relation$Heads/equals:

#edu/stanford/nlp/trees/tregex/Relation$Heads/hashCode:
edu.stanford.nlp.trees.tregex.Relation$Heads:
edu.stanford.nlp.trees.tregex.Relation$15:

#edu/stanford/nlp/trees/tregex/Relation$4/satisfies:
edu.stanford.nlp.trees.tregex.Relation$4:

#edu/stanford/nlp/trees/tregex/Relation$UnbrokenCategoryIsDominatedBy$1/advance:
edu.stanford.nlp.trees.tregex.Relation$UnbrokenCategoryIsDominatedBy$1:

#edu/stanford/nlp/trees/tregex/Macros/readMacros:

#edu/stanford/nlp/trees/tregex/Macros/addAllMacros:

#edu/stanford/nlp/trees/tregex/Macros/addAllMacros:
edu.stanford.nlp.trees.tregex.Macros:

#edu/stanford/nlp/trees/tregex/Relation$SearchNodeIterator/hasNext:

#edu/stanford/nlp/trees/tregex/Relation$SearchNodeIterator/next:
edu.stanford.nlp.trees.tregex.Relation$SearchNodeIterator:

#edu/stanford/nlp/trees/tregex/Relation$ImmediatelyHeadedBy$1/initialize:
edu.stanford.nlp.trees.tregex.Relation$ImmediatelyHeadedBy$1:

#edu/stanford/nlp/trees/tregex/CoordinationPattern$CoordinationMatcher/resetChildIter:

#edu/stanford/nlp/trees/tregex/CoordinationPattern$CoordinationMatcher/resetChildIter:

#edu/stanford/nlp/trees/tregex/CoordinationPattern$CoordinationMatcher/matches:

#edu/stanford/nlp/trees/tregex/CoordinationPattern$CoordinationMatcher/getMatch:
edu.stanford.nlp.trees.tregex.CoordinationPattern$CoordinationMatcher:

#edu/stanford/nlp/trees/tregex/TregexMatcher/find:

#edu/stanford/nlp/trees/tregex/TregexMatcher/findAt:

#edu/stanford/nlp/trees/tregex/TregexMatcher/findNextMatchingNode:

#edu/stanford/nlp/trees/tregex/TregexMatcher/getParent:

#edu/stanford/nlp/trees/tregex/TregexMatcher/fillNodesToParents:
edu.stanford.nlp.trees.tregex.TregexMatcher:

#edu/stanford/nlp/trees/tregex/Relation$HeadedBy$1/advance:
edu.stanford.nlp.trees.tregex.Relation$HeadedBy$1:
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonParser$LookaheadSuccess:

#edu/stanford/nlp/trees/tregex/tsurgeon/RelabelNode$RelabelMatcher/evaluate:
edu.stanford.nlp.trees.tregex.tsurgeon.RelabelNode$RelabelMatcher:
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonParser$1:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonPattern/setRoot:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonPattern/toString:
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonPattern:
edu.stanford.nlp.trees.tregex.tsurgeon.MoveNode$Matcher:

#edu/stanford/nlp/trees/tregex/tsurgeon/CoindexationGenerator/setLastIndex:
edu.stanford.nlp.trees.tregex.tsurgeon.CoindexationGenerator:

#edu/stanford/nlp/trees/tregex/tsurgeon/AdjoinToFootNode$Matcher/evaluate:
edu.stanford.nlp.trees.tregex.tsurgeon.AdjoinToFootNode$Matcher:

#edu/stanford/nlp/trees/tregex/tsurgeon/PruneNode$Matcher/evaluate:
edu.stanford.nlp.trees.tregex.tsurgeon.PruneNode$Matcher:

#edu/stanford/nlp/trees/tregex/tsurgeon/AdjoinNode/<init>:
edu.stanford.nlp.trees.tregex.tsurgeon.AdjoinNode:
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonParserTreeConstants:
edu.stanford.nlp.trees.tregex.tsurgeon.DeleteNode:

#edu/stanford/nlp/trees/tregex/tsurgeon/ProcessTsurgeonRequest/parseOperations:

#edu/stanford/nlp/trees/tregex/tsurgeon/ProcessTsurgeonRequest/processRequest:
edu.stanford.nlp.trees.tregex.tsurgeon.ProcessTsurgeonRequest:

#edu/stanford/nlp/trees/tregex/tsurgeon/ExciseNode$Matcher/evaluate:
edu.stanford.nlp.trees.tregex.tsurgeon.ExciseNode$Matcher:

#edu/stanford/nlp/trees/tregex/tsurgeon/TokenMgrError/addEscapes:

#edu/stanford/nlp/trees/tregex/tsurgeon/TokenMgrError/LexicalErr:
edu.stanford.nlp.trees.tregex.tsurgeon.TokenMgrError:
edu.stanford.nlp.trees.tregex.tsurgeon.ReplaceNode:

#edu/stanford/nlp/trees/tregex/tsurgeon/ReplaceNode$Matcher/evaluate:
edu.stanford.nlp.trees.tregex.tsurgeon.ReplaceNode$Matcher:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonPatternRoot$Matcher/evaluate:
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonPatternRoot$Matcher:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonMatcher/<init>:
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonMatcher:
edu.stanford.nlp.trees.tregex.tsurgeon.MoveNode:

#edu/stanford/nlp/trees/tregex/tsurgeon/CreateSubtreeNode$Matcher/evaluate:
edu.stanford.nlp.trees.tregex.tsurgeon.CreateSubtreeNode$Matcher:
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonParserConstants:
edu.stanford.nlp.trees.tregex.tsurgeon.AdjoinToHeadNode:
edu.stanford.nlp.trees.tregex.tsurgeon.HoldTreeNode:

#edu/stanford/nlp/trees/tregex/tsurgeon/CreateSubtreeNode/<init>:

#edu/stanford/nlp/trees/tregex/tsurgeon/CreateSubtreeNode/findFoot:
edu.stanford.nlp.trees.tregex.tsurgeon.CreateSubtreeNode:
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonParser$JJCalls:
edu.stanford.nlp.trees.tregex.tsurgeon.ExciseNode:
edu.stanford.nlp.trees.tregex.tsurgeon.RelabelNode$RelabelMode:

#edu/stanford/nlp/trees/tregex/tsurgeon/RelabelNode/<init>:

#edu/stanford/nlp/trees/tregex/tsurgeon/RelabelNode/removeEscapeSlashes:

#edu/stanford/nlp/trees/tregex/tsurgeon/RelabelNode/toString:
edu.stanford.nlp.trees.tregex.tsurgeon.RelabelNode:
edu.stanford.nlp.trees.tregex.tsurgeon.AdjoinToHeadNode$Matcher:

#edu/stanford/nlp/trees/tregex/tsurgeon/IfExistsNode$Matcher/evaluate:
edu.stanford.nlp.trees.tregex.tsurgeon.IfExistsNode$Matcher:

#edu/stanford/nlp/trees/tregex/tsurgeon/TreeLocation$LocationMatcher/evaluate:
edu.stanford.nlp.trees.tregex.tsurgeon.TreeLocation$LocationMatcher:
edu.stanford.nlp.trees.tregex.tsurgeon.HoldTreeNode$Matcher:
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonRuntimeException:

#edu/stanford/nlp/trees/tregex/tsurgeon/AdjoinNode$Matcher/evaluate:
edu.stanford.nlp.trees.tregex.tsurgeon.AdjoinNode$Matcher:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonPatternRoot/matcher:
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonPatternRoot:
edu.stanford.nlp.trees.tregex.tsurgeon.InsertNode:
edu.stanford.nlp.trees.tregex.tsurgeon.AdjoinToFootNode:
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonParseException:

#edu/stanford/nlp/trees/tregex/tsurgeon/SimpleCharStream/ExpandBuff:

#edu/stanford/nlp/trees/tregex/tsurgeon/SimpleCharStream/FillBuff:

#edu/stanford/nlp/trees/tregex/tsurgeon/SimpleCharStream/UpdateLineColumn:

#edu/stanford/nlp/trees/tregex/tsurgeon/SimpleCharStream/readChar:

#edu/stanford/nlp/trees/tregex/tsurgeon/SimpleCharStream/backup:

#edu/stanford/nlp/trees/tregex/tsurgeon/SimpleCharStream/ReInit:

#edu/stanford/nlp/trees/tregex/tsurgeon/SimpleCharStream/<init>:

#edu/stanford/nlp/trees/tregex/tsurgeon/SimpleCharStream/ReInit:

#edu/stanford/nlp/trees/tregex/tsurgeon/SimpleCharStream/GetImage:

#edu/stanford/nlp/trees/tregex/tsurgeon/SimpleCharStream/GetSuffix:

#edu/stanford/nlp/trees/tregex/tsurgeon/SimpleCharStream/adjustBeginLineColumn:
edu.stanford.nlp.trees.tregex.tsurgeon.SimpleCharStream:

#edu/stanford/nlp/trees/tregex/tsurgeon/AuxiliaryTree/<init>:

#edu/stanford/nlp/trees/tregex/tsurgeon/AuxiliaryTree/copy:

#edu/stanford/nlp/trees/tregex/tsurgeon/AuxiliaryTree/copyHelper:

#edu/stanford/nlp/trees/tregex/tsurgeon/AuxiliaryTree/findFootNode:

#edu/stanford/nlp/trees/tregex/tsurgeon/AuxiliaryTree/findFootNodeHelper:

#edu/stanford/nlp/trees/tregex/tsurgeon/AuxiliaryTree/initializeNamesNodesMaps:
edu.stanford.nlp.trees.tregex.tsurgeon.AuxiliaryTree:

#edu/stanford/nlp/trees/tregex/tsurgeon/SimpleNode/jjtAddChild:

#edu/stanford/nlp/trees/tregex/tsurgeon/SimpleNode/jjtGetNumChildren:

#edu/stanford/nlp/trees/tregex/tsurgeon/SimpleNode/dump:
edu.stanford.nlp.trees.tregex.tsurgeon.SimpleNode:
edu.stanford.nlp.trees.tregex.tsurgeon.FetchNode:
Warning: Method:edu.stanford.nlp.trees.tregex.tsurgeon.Token.newToken has auto edges.
edu.stanford.nlp.trees.tregex.tsurgeon.Token:
edu.stanford.nlp.trees.tregex.tsurgeon.RelabelNode$1:

#edu/stanford/nlp/trees/tregex/tsurgeon/IfExistsNode/<init>:
edu.stanford.nlp.trees.tregex.tsurgeon.IfExistsNode:

#edu/stanford/nlp/trees/tregex/tsurgeon/InsertNode$Matcher/evaluate:
edu.stanford.nlp.trees.tregex.tsurgeon.InsertNode$Matcher:
edu.stanford.nlp.trees.tregex.tsurgeon.CoindexNodes:

#edu/stanford/nlp/trees/tregex/tsurgeon/ParseException/initialise:

#edu/stanford/nlp/trees/tregex/tsurgeon/ParseException/add_escapes:
edu.stanford.nlp.trees.tregex.tsurgeon.ParseException:

#edu/stanford/nlp/trees/tregex/tsurgeon/PruneNode/pruneHelper:
edu.stanford.nlp.trees.tregex.tsurgeon.PruneNode:

#edu/stanford/nlp/trees/tregex/tsurgeon/Tsurgeon/main:

#edu/stanford/nlp/trees/tregex/tsurgeon/Tsurgeon/displayTree:

#edu/stanford/nlp/trees/tregex/tsurgeon/Tsurgeon/getOperationFromReader:

#edu/stanford/nlp/trees/tregex/tsurgeon/Tsurgeon/getTregexPatternFromReader:

#edu/stanford/nlp/trees/tregex/tsurgeon/Tsurgeon/getTsurgeonOperationsFromReader:

#edu/stanford/nlp/trees/tregex/tsurgeon/Tsurgeon/getTsurgeonTextFromReader:

#edu/stanford/nlp/trees/tregex/tsurgeon/Tsurgeon/getOperationsFromReader:

#edu/stanford/nlp/trees/tregex/tsurgeon/Tsurgeon/processPattern:

#edu/stanford/nlp/trees/tregex/tsurgeon/Tsurgeon/processPatternsOnTree:
edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon:

#edu/stanford/nlp/trees/tregex/tsurgeon/FetchNode$Matcher/evaluate:
edu.stanford.nlp.trees.tregex.tsurgeon.FetchNode$Matcher:

#edu/stanford/nlp/trees/tregex/tsurgeon/JJTTsurgeonParserState/popNode:
Warning: Method:edu.stanford.nlp.trees.tregex.tsurgeon.JJTTsurgeonParserState.clearNodeScope has incoming edges.

#edu/stanford/nlp/trees/tregex/tsurgeon/JJTTsurgeonParserState/closeNodeScope:

#edu/stanford/nlp/trees/tregex/tsurgeon/JJTTsurgeonParserState/closeNodeScope:
edu.stanford.nlp.trees.tregex.tsurgeon.JJTTsurgeonParserState:

#edu/stanford/nlp/trees/tregex/tsurgeon/CoindexNodes$Matcher/evaluate:
edu.stanford.nlp.trees.tregex.tsurgeon.CoindexNodes$Matcher:
edu.stanford.nlp.trees.tregex.tsurgeon.Node:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/Root:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/Operation:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/Location:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/NodeSelectionList:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/NodeSelection:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/NodeName:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/TreeList:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/TreeRoot:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/TreeNode:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/TreeDtrs:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/jj_2_1:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/jj_2_2:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/jj_2_3:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/jj_2_4:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/jj_2_5:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/jj_2_6:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/jj_2_7:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/jj_2_8:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/jj_2_9:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/jj_2_10:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/jj_3R_TreeDtrs_271_3_15:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/jj_3R_NodeName_224_3_8:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/jj_3R_TreeDtrs_269_3_14:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/jj_3R_TreeDtrs_269_3_13:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/jj_3R_NodeSelection_215_3_4:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/jj_3R_TreeNode_260_3_12:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/jj_3_10:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/jj_3R_TreeNode_258_3_11:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/jj_3_9:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/jj_3R_TreeNode_256_2_9:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/jj_3R_TreeNode_256_2_10:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/jj_3_8:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/jj_3_7:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/jj_3R_TreeRoot_246_3_7:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/jj_3_2:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/jj_3_6:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/jj_3_1:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/jj_3_5:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/jj_3_4:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/jj_3R_Location_193_2_6:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/jj_3_3:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/jj_3R_TreeList_234_2_5:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/<init>:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/ReInit:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/<init>:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/ReInit:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/<init>:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/ReInit:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/jj_consume_token:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/jj_scan_token:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/getNextToken:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/getToken:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/jj_ntk_f:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/jj_add_error_token:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/generateParseException:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/jj_rescan_token:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParser/jj_save:
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonParser:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParserTokenManager/jjMoveStringLiteralDfa0_2:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParserTokenManager/jjMoveStringLiteralDfa1_2:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParserTokenManager/jjMoveStringLiteralDfa2_2:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParserTokenManager/jjMoveStringLiteralDfa3_2:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParserTokenManager/jjMoveStringLiteralDfa4_2:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParserTokenManager/jjMoveStringLiteralDfa5_2:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParserTokenManager/jjMoveStringLiteralDfa6_2:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParserTokenManager/jjMoveStringLiteralDfa7_2:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParserTokenManager/jjMoveStringLiteralDfa8_2:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParserTokenManager/jjMoveStringLiteralDfa9_2:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParserTokenManager/jjMoveStringLiteralDfa10_2:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParserTokenManager/jjMoveStringLiteralDfa11_2:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParserTokenManager/jjMoveStringLiteralDfa12_2:
Warning: Method:edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonParserTokenManager.jjStopStringLiteralDfa_0 has auto edges.

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParserTokenManager/jjMoveStringLiteralDfa0_0:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParserTokenManager/jjMoveNfa_0:
Warning: Method:edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonParserTokenManager.jjStopStringLiteralDfa_1 has auto edges.

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParserTokenManager/jjMoveStringLiteralDfa0_1:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParserTokenManager/jjMoveNfa_1:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParserTokenManager/jjFillToken:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParserTokenManager/jjCanMove_0:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParserTokenManager/getNextToken:
Warning: Method:edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonParserTokenManager.SkipLexicalActions has auto edges.
Warning: Method:edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonParserTokenManager.MoreLexicalActions has auto edges.
Warning: Method:edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonParserTokenManager.TokenLexicalActions has auto edges.

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParserTokenManager/jjCheckNAdd:
Warning: Method:edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonParserTokenManager.jjAddStates has auto edges.
Warning: Method:edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonParserTokenManager.jjCheckNAddStates has auto edges.

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParserTokenManager/ReInitRounds:

#edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParserTokenManager/SwitchTo:
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonParserTokenManager:
edu.stanford.nlp.trees.tregex.tsurgeon.TreeLocation:

#edu/stanford/nlp/trees/tregex/tsurgeon/DeleteNode$Matcher/evaluate:
edu.stanford.nlp.trees.tregex.tsurgeon.DeleteNode$Matcher:

#edu/stanford/nlp/trees/tregex/gui/PreferencesPanel$1/actionPerformed:
edu.stanford.nlp.trees.tregex.gui.PreferencesPanel$1:

#edu/stanford/nlp/trees/tregex/gui/InputPanel$2/run:
edu.stanford.nlp.trees.tregex.gui.InputPanel$2:

#edu/stanford/nlp/trees/tregex/gui/DisplayMatchesPanel$4/maybeShowPopup:
edu.stanford.nlp.trees.tregex.gui.DisplayMatchesPanel$4:

#edu/stanford/nlp/trees/tregex/gui/DisplayMatchesPanel$FilenameMouseInputAdapter/mousePressed:

#edu/stanford/nlp/trees/tregex/gui/DisplayMatchesPanel$FilenameMouseInputAdapter/mouseDragged:
edu.stanford.nlp.trees.tregex.gui.DisplayMatchesPanel$FilenameMouseInputAdapter:

#edu/stanford/nlp/trees/tregex/gui/OSXAdapter/handleAbout:

#edu/stanford/nlp/trees/tregex/gui/OSXAdapter/handlePreferences:

#edu/stanford/nlp/trees/tregex/gui/OSXAdapter/handleQuit:

#edu/stanford/nlp/trees/tregex/gui/OSXAdapter/registerMacOSXApplication:

#edu/stanford/nlp/trees/tregex/gui/OSXAdapter/enablePrefs:
edu.stanford.nlp.trees.tregex.gui.OSXAdapter:

#edu/stanford/nlp/trees/tregex/gui/DisplayMatchesPanel/getInstance:

#edu/stanford/nlp/trees/tregex/gui/DisplayMatchesPanel/<init>:

#edu/stanford/nlp/trees/tregex/gui/DisplayMatchesPanel/setMatch:

#edu/stanford/nlp/trees/tregex/gui/DisplayMatchesPanel/addMatch:

#edu/stanford/nlp/trees/tregex/gui/DisplayMatchesPanel/showPrevMatchedPart:

#edu/stanford/nlp/trees/tregex/gui/DisplayMatchesPanel/showNextMatchedPart:

#edu/stanford/nlp/trees/tregex/gui/DisplayMatchesPanel/doExportTree:

#edu/stanford/nlp/trees/tregex/gui/DisplayMatchesPanel/getTreeJPanel:

#edu/stanford/nlp/trees/tregex/gui/DisplayMatchesPanel/setFontSizeRepaint:

#edu/stanford/nlp/trees/tregex/gui/DisplayMatchesPanel/valueChanged:
edu.stanford.nlp.trees.tregex.gui.DisplayMatchesPanel:

#edu/stanford/nlp/trees/tregex/gui/TregexGUI$2/run:
edu.stanford.nlp.trees.tregex.gui.TregexGUI$2:

#edu/stanford/nlp/trees/tregex/gui/MatchesPanel$1/mousePressed:

#edu/stanford/nlp/trees/tregex/gui/MatchesPanel$1/addHighlight:

#edu/stanford/nlp/trees/tregex/gui/MatchesPanel$1/mouseDragged:

#edu/stanford/nlp/trees/tregex/gui/MatchesPanel$1/getCharOffset:
edu.stanford.nlp.trees.tregex.gui.MatchesPanel$1:
edu.stanford.nlp.trees.tregex.gui.TregexGUI$6:

#edu/stanford/nlp/trees/tregex/gui/DisplayMatchesPanel$DisplayTransferHandler/exportString:
edu.stanford.nlp.trees.tregex.gui.DisplayMatchesPanel$DisplayTransferHandler:

#edu/stanford/nlp/trees/tregex/gui/InputPanel$TRegexGUITreeVisitor/visitTree:
edu.stanford.nlp.trees.tregex.gui.InputPanel$TRegexGUITreeVisitor:
edu.stanford.nlp.trees.tregex.gui.DisplayMatchesPanel$2:
edu.stanford.nlp.trees.tregex.gui.InputPanel$HistoryEntry:
edu.stanford.nlp.trees.tregex.gui.TregexGUI$4:
edu.stanford.nlp.trees.tregex.gui.TregexGUI$3:

#edu/stanford/nlp/trees/tregex/gui/InputPanel$1/run:
edu.stanford.nlp.trees.tregex.gui.InputPanel$1:

#edu/stanford/nlp/trees/tregex/gui/InputPanel$3/run:
edu.stanford.nlp.trees.tregex.gui.InputPanel$3:
edu.stanford.nlp.trees.tregex.gui.PreferencesPanel$ColorIcon:

#edu/stanford/nlp/trees/tregex/gui/FilePanel/getInstance:

#edu/stanford/nlp/trees/tregex/gui/FilePanel/setActiveTreebanksFromParent:
edu.stanford.nlp.trees.tregex.gui.FilePanel:

#edu/stanford/nlp/trees/tregex/gui/TregexGUI$1/run:
edu.stanford.nlp.trees.tregex.gui.TregexGUI$1:

#edu/stanford/nlp/trees/tregex/gui/Preferences/lookupHeadFinder:

#edu/stanford/nlp/trees/tregex/gui/Preferences/lookupTreeReaderFactory:
edu.stanford.nlp.trees.tregex.gui.Preferences:

#edu/stanford/nlp/trees/tregex/gui/MatchesPanel/getInstance:

#edu/stanford/nlp/trees/tregex/gui/MatchesPanel/getTreebankAsList:

#edu/stanford/nlp/trees/tregex/gui/MatchesPanel/setMatches:

#edu/stanford/nlp/trees/tregex/gui/MatchesPanel/getSelectedMatch:

#edu/stanford/nlp/trees/tregex/gui/MatchesPanel/getMatches:

#edu/stanford/nlp/trees/tregex/gui/MatchesPanel/getMatchedSentences:

#edu/stanford/nlp/trees/tregex/gui/MatchesPanel/setMatchedParts:

#edu/stanford/nlp/trees/tregex/gui/MatchesPanel/valueChanged:
edu.stanford.nlp.trees.tregex.gui.MatchesPanel:

#edu/stanford/nlp/trees/tregex/gui/ScrollableTreeJPanel/paintComponent:

#edu/stanford/nlp/trees/tregex/gui/ScrollableTreeJPanel/renderRows:

#edu/stanford/nlp/trees/tregex/gui/ScrollableTreeJPanel/doesOverlap:

#edu/stanford/nlp/trees/tregex/gui/ScrollableTreeJPanel/paintTree:

#edu/stanford/nlp/trees/tregex/gui/ScrollableTreeJPanel/getPreferredSize:
edu.stanford.nlp.trees.tregex.gui.ScrollableTreeJPanel:

#edu/stanford/nlp/trees/tregex/gui/MatchesPanel$MatchCellRenderer/getListCellRendererComponent:
edu.stanford.nlp.trees.tregex.gui.MatchesPanel$MatchCellRenderer:
edu.stanford.nlp.trees.tregex.gui.DisplayMatchesPanel$1:
edu.stanford.nlp.trees.tregex.gui.TregexGUI$5:
edu.stanford.nlp.trees.tregex.gui.TregexGUI$7:

#edu/stanford/nlp/trees/tregex/gui/DisplayMatchesPanel$DisplayMouseMotionAdapter/mousePressed:

#edu/stanford/nlp/trees/tregex/gui/DisplayMatchesPanel$DisplayMouseMotionAdapter/mouseDragged:
edu.stanford.nlp.trees.tregex.gui.DisplayMatchesPanel$DisplayMouseMotionAdapter:
edu.stanford.nlp.trees.tregex.gui.TregexGUI$FilterType:
edu.stanford.nlp.trees.tregex.gui.DisplayMatchesPanel$3:

#edu/stanford/nlp/trees/tregex/gui/HighlightUtils/addHighlight:

#edu/stanford/nlp/trees/tregex/gui/HighlightUtils/isInHighlight:

#edu/stanford/nlp/trees/tregex/gui/HighlightUtils/getCharOffset:
edu.stanford.nlp.trees.tregex.gui.HighlightUtils:

#edu/stanford/nlp/trees/tregex/gui/FilePanel$1/mouseClicked:
edu.stanford.nlp.trees.tregex.gui.FilePanel$1:
edu.stanford.nlp.trees.tregex.gui.InputPanel$TregexGUITableModel:
edu.stanford.nlp.trees.tregex.gui.FilePanel$FileTreeCellRenderer:

#edu/stanford/nlp/trees/tregex/gui/TregexGUI$TransferActionListener/propertyChange:

#edu/stanford/nlp/trees/tregex/gui/TregexGUI$TransferActionListener/actionPerformed:
edu.stanford.nlp.trees.tregex.gui.TregexGUI$TransferActionListener:
edu.stanford.nlp.trees.tregex.gui.FileTreeNode$FileTreeNodeListener:
edu.stanford.nlp.trees.tregex.gui.MatchesPanel$MatchesPanelListener:

#edu/stanford/nlp/trees/tregex/gui/InputPanel/getInstance:

#edu/stanford/nlp/trees/tregex/gui/InputPanel/enableTsurgeon:

#edu/stanford/nlp/trees/tregex/gui/InputPanel/getHistoryString:

#edu/stanford/nlp/trees/tregex/gui/InputPanel/addToHistoryList:

#edu/stanford/nlp/trees/tregex/gui/InputPanel/useProgressBar:

#edu/stanford/nlp/trees/tregex/gui/InputPanel/actionPerformed:

#edu/stanford/nlp/trees/tregex/gui/InputPanel/stateChanged:

#edu/stanford/nlp/trees/tregex/gui/InputPanel/showHistory:

#edu/stanford/nlp/trees/tregex/gui/InputPanel/doRecent:

#edu/stanford/nlp/trees/tregex/gui/InputPanel/setTregexState:

#edu/stanford/nlp/trees/tregex/gui/InputPanel/setTsurgeonState:

#edu/stanford/nlp/trees/tregex/gui/InputPanel/addRecentTregexPattern:

#edu/stanford/nlp/trees/tregex/gui/InputPanel/setNumRecentPatterns:

#edu/stanford/nlp/trees/tregex/gui/InputPanel/getMatchTreeVisitor:

#edu/stanford/nlp/trees/tregex/gui/InputPanel/updateProgressBar:

#edu/stanford/nlp/trees/tregex/gui/InputPanel/displayHelp:

#edu/stanford/nlp/trees/tregex/gui/InputPanel/displayTsurgeonHelp:

#edu/stanford/nlp/trees/tregex/gui/InputPanel/lambda$doError$4:

#edu/stanford/nlp/trees/tregex/gui/InputPanel/lambda$returnToValidState$2:

#edu/stanford/nlp/trees/tregex/gui/InputPanel/lambda$updateFoundStats$0:
edu.stanford.nlp.trees.tregex.gui.InputPanel:

#edu/stanford/nlp/trees/tregex/gui/FileTreeNode/<init>:

#edu/stanford/nlp/trees/tregex/gui/FileTreeNode/toString:

#edu/stanford/nlp/trees/tregex/gui/FileTreeNode/getDisplay:

#edu/stanford/nlp/trees/tregex/gui/FileTreeNode/isActive:

#edu/stanford/nlp/trees/tregex/gui/FileTreeNode/setActive:

#edu/stanford/nlp/trees/tregex/gui/FileTreeNode/sendToListeners:

#edu/stanford/nlp/trees/tregex/gui/FileTreeNode/getFilename:
edu.stanford.nlp.trees.tregex.gui.FileTreeNode:

#edu/stanford/nlp/trees/tregex/gui/TregexGUI/getMenu:

#edu/stanford/nlp/trees/tregex/gui/TregexGUI/setShortcutKeys:

#edu/stanford/nlp/trees/tregex/gui/TregexGUI/setSaveEnabled:

#edu/stanford/nlp/trees/tregex/gui/TregexGUI/setSaveHistoryEnabled:

#edu/stanford/nlp/trees/tregex/gui/TregexGUI/setTsurgeonEnabled:

#edu/stanford/nlp/trees/tregex/gui/TregexGUI/<init>:

#edu/stanford/nlp/trees/tregex/gui/TregexGUI/macOSXRegistration:

#edu/stanford/nlp/trees/tregex/gui/TregexGUI/loadPreferences:

#edu/stanford/nlp/trees/tregex/gui/TregexGUI/doLoadFiles:

#edu/stanford/nlp/trees/tregex/gui/TregexGUI/getFilters:

#edu/stanford/nlp/trees/tregex/gui/TregexGUI/doSaveFile:

#edu/stanford/nlp/trees/tregex/gui/TregexGUI/doSaveSentencesFile:

#edu/stanford/nlp/trees/tregex/gui/TregexGUI/doSaveHistory:

#edu/stanford/nlp/trees/tregex/gui/TregexGUI/loadTsurgeonScript:

#edu/stanford/nlp/trees/tregex/gui/TregexGUI/doPreferences:

#edu/stanford/nlp/trees/tregex/gui/TregexGUI/doTdiff:

#edu/stanford/nlp/trees/tregex/gui/TregexGUI/actionPerformed:

#edu/stanford/nlp/trees/tregex/gui/TregexGUI/matchesChanged:

#edu/stanford/nlp/trees/tregex/gui/TregexGUI/main:

#edu/stanford/nlp/trees/tregex/gui/TregexGUI/lambda$doFileFilters$0:
edu.stanford.nlp.trees.tregex.gui.TregexGUI:

#edu/stanford/nlp/trees/tregex/gui/TreeFromFile/<init>:

#edu/stanford/nlp/trees/tregex/gui/TreeFromFile/getLabel:

#edu/stanford/nlp/trees/tregex/gui/TreeFromFile/toString:
edu.stanford.nlp.trees.tregex.gui.TreeFromFile:

#edu/stanford/nlp/trees/tregex/gui/PreferencesPanel/checkNumberFormat:

#edu/stanford/nlp/trees/tregex/gui/PreferencesPanel/syncFromPrefPanel:

#edu/stanford/nlp/trees/tregex/gui/PreferencesPanel/checkEncodingAndDisplay:

#edu/stanford/nlp/trees/tregex/gui/PreferencesPanel/isChinese:

#edu/stanford/nlp/trees/tregex/gui/PreferencesPanel/isArabic:

#edu/stanford/nlp/trees/tregex/gui/PreferencesPanel/lambda$makeColorButton$4:

#edu/stanford/nlp/trees/tregex/gui/PreferencesPanel/lambda$doEncodingPrompt$1:
edu.stanford.nlp.trees.tregex.gui.PreferencesPanel:

#edu/stanford/nlp/trees/tregex/gui/Tdiff/markDiff:

#edu/stanford/nlp/trees/tregex/gui/Tdiff/main:
edu.stanford.nlp.trees.tregex.gui.Tdiff:

#edu/stanford/nlp/trees/tregex/gui/MatchesPanel$TreeTransferHandler/exportString:
edu.stanford.nlp.trees.tregex.gui.MatchesPanel$TreeTransferHandler:

#edu/stanford/nlp/trees/tregex/gui/FileTreeModel/fireTreeStructureChanged:

#edu/stanford/nlp/trees/tregex/gui/FileTreeModel/getChild:

#edu/stanford/nlp/trees/tregex/gui/FileTreeModel/getChildCount:

#edu/stanford/nlp/trees/tregex/gui/FileTreeModel/getIndexOfChild:

#edu/stanford/nlp/trees/tregex/gui/FileTreeModel/isLeaf:

#edu/stanford/nlp/trees/tregex/gui/FileTreeModel/isEmpty:

#edu/stanford/nlp/trees/tregex/gui/FileTreeModel/makeTreePathArray:

#edu/stanford/nlp/trees/tregex/gui/FileTreeModel/addFileFolder:

#edu/stanford/nlp/trees/tregex/gui/FileTreeModel/findLoadableFiles:

#edu/stanford/nlp/trees/tregex/gui/FileTreeModel/addToMap:

#edu/stanford/nlp/trees/tregex/gui/FileTreeModel/checkFile:
edu.stanford.nlp.trees.tregex.gui.FileTreeModel:
edu.stanford.nlp.trees.ud.ProcessUniversalEnhancerRequest$1:

#edu/stanford/nlp/trees/ud/UniversalDependenciesFeatureAnnotator/loadFeatureMap:

#edu/stanford/nlp/trees/ud/UniversalDependenciesFeatureAnnotator/getPOSFeatures:

#edu/stanford/nlp/trees/ud/UniversalDependenciesFeatureAnnotator/isOrdinal:

#edu/stanford/nlp/trees/ud/UniversalDependenciesFeatureAnnotator/isMultiplicative:

#edu/stanford/nlp/trees/ud/UniversalDependenciesFeatureAnnotator/getGraphFeatures:

#edu/stanford/nlp/trees/ud/UniversalDependenciesFeatureAnnotator/pronounCase:

#edu/stanford/nlp/trees/ud/UniversalDependenciesFeatureAnnotator/wasPerson:

#edu/stanford/nlp/trees/ud/UniversalDependenciesFeatureAnnotator/getRelAndIntPronFeatures:

#edu/stanford/nlp/trees/ud/UniversalDependenciesFeatureAnnotator/getImperatives:

#edu/stanford/nlp/trees/ud/UniversalDependenciesFeatureAnnotator/hasAux:

#edu/stanford/nlp/trees/ud/UniversalDependenciesFeatureAnnotator/hasTo:

#edu/stanford/nlp/trees/ud/UniversalDependenciesFeatureAnnotator/hasBeAux:

#edu/stanford/nlp/trees/ud/UniversalDependenciesFeatureAnnotator/addFeatures:

#edu/stanford/nlp/trees/ud/UniversalDependenciesFeatureAnnotator/main:
edu.stanford.nlp.trees.ud.UniversalDependenciesFeatureAnnotator:
edu.stanford.nlp.trees.ud.CoNLLUUtils$FeatureNameComparator:

#edu/stanford/nlp/trees/ud/ProcessUniversalEnhancerRequest/enhanceDependencies:

#edu/stanford/nlp/trees/ud/ProcessUniversalEnhancerRequest/enhanceEnglishDependencies:

#edu/stanford/nlp/trees/ud/ProcessUniversalEnhancerRequest/processRequest:

#edu/stanford/nlp/trees/ud/ProcessUniversalEnhancerRequest/getRelativePronouns:
edu.stanford.nlp.trees.ud.ProcessUniversalEnhancerRequest:
edu.stanford.nlp.trees.ud.CoNLLUUtils$DepIndexComparator:

#edu/stanford/nlp/trees/ud/UniversalGrammaticalStructure/addRef:

#edu/stanford/nlp/trees/ud/UniversalGrammaticalStructure/collapseReferent:

#edu/stanford/nlp/trees/ud/UniversalGrammaticalStructure/addExtraNSubj:

#edu/stanford/nlp/trees/ud/UniversalGrammaticalStructure/propagateConjuncts:

#edu/stanford/nlp/trees/ud/UniversalGrammaticalStructure/addCaseMarkerInformation:

#edu/stanford/nlp/trees/ud/UniversalGrammaticalStructure/addCaseMarkerForConjunctions:

#edu/stanford/nlp/trees/ud/UniversalGrammaticalStructure/addCaseMarkersToReln:

#edu/stanford/nlp/trees/ud/UniversalGrammaticalStructure/getCaseMarkedRelation:

#edu/stanford/nlp/trees/ud/UniversalGrammaticalStructure/addConjInformation:

#edu/stanford/nlp/trees/ud/UniversalGrammaticalStructure/addConjToReln:

#edu/stanford/nlp/trees/ud/UniversalGrammaticalStructure/conjValue:
edu.stanford.nlp.trees.ud.UniversalGrammaticalStructure:

#edu/stanford/nlp/trees/ud/CoNLLUDocumentReader/lambda$static$0:
edu.stanford.nlp.trees.ud.CoNLLUDocumentReader:

#edu/stanford/nlp/trees/ud/UniversalEnhancer/isEmptyNode:

#edu/stanford/nlp/trees/ud/UniversalEnhancer/copyEmptyNodes:

#edu/stanford/nlp/trees/ud/UniversalEnhancer/enhanceGraph:

#edu/stanford/nlp/trees/ud/UniversalEnhancer/main:
edu.stanford.nlp.trees.ud.UniversalEnhancer:

#edu/stanford/nlp/trees/ud/UniversalGappingEnhancer$ArgumentSequence/getAverageEmbeddings:
edu.stanford.nlp.trees.ud.UniversalGappingEnhancer$ArgumentSequence:
edu.stanford.nlp.trees.ud.CoNLLUDocumentReader$1:

#edu/stanford/nlp/trees/ud/CoNLLUTagUpdater/main:
edu.stanford.nlp.trees.ud.CoNLLUTagUpdater:

#edu/stanford/nlp/trees/ud/CoNLLUDocumentReader$WordProcessor/apply:
edu.stanford.nlp.trees.ud.CoNLLUDocumentReader$WordProcessor:
edu.stanford.nlp.trees.ud.EnhancementOptions:

#edu/stanford/nlp/trees/ud/UniversalGrammaticalRelations/getSpecificReln:
edu.stanford.nlp.trees.ud.UniversalGrammaticalRelations:
edu.stanford.nlp.trees.ud.UniversalDependenciesConverter$TreeToSemanticGraphIterator:

#edu/stanford/nlp/trees/ud/CoNLLUDocumentWriter/printSemanticGraph:

#edu/stanford/nlp/trees/ud/CoNLLUDocumentWriter/printSpan:

#edu/stanford/nlp/trees/ud/CoNLLUDocumentWriter/printPOSAnnotations:
edu.stanford.nlp.trees.ud.CoNLLUDocumentWriter:

#edu/stanford/nlp/trees/ud/UniversalGappingEnhancer/coarsenUPOSTag:

#edu/stanford/nlp/trees/ud/UniversalGappingEnhancer/align:

#edu/stanford/nlp/trees/ud/UniversalGappingEnhancer/getConjGovOrphanGovPair:

#edu/stanford/nlp/trees/ud/UniversalGappingEnhancer/isArgument:

#edu/stanford/nlp/trees/ud/UniversalGappingEnhancer/isClausalArgument:

#edu/stanford/nlp/trees/ud/UniversalGappingEnhancer/getArgumentSubsequences:

#edu/stanford/nlp/trees/ud/UniversalGappingEnhancer/getFullConjunctArgumentsHelper:

#edu/stanford/nlp/trees/ud/UniversalGappingEnhancer/buildAllArgumentSequences:

#edu/stanford/nlp/trees/ud/UniversalGappingEnhancer/getFullConjunctArguments:

#edu/stanford/nlp/trees/ud/UniversalGappingEnhancer/getOrphanGovSequence:

#edu/stanford/nlp/trees/ud/UniversalGappingEnhancer/getGappedConjunctArguments:

#edu/stanford/nlp/trees/ud/UniversalGappingEnhancer/doEnhancement:

#edu/stanford/nlp/trees/ud/UniversalGappingEnhancer/addEnhancements:
edu.stanford.nlp.trees.ud.UniversalGappingEnhancer:

#edu/stanford/nlp/trees/ud/CoNLLUDocumentReader$SentenceProcessor/getGovAndReln:

#edu/stanford/nlp/trees/ud/CoNLLUDocumentReader$SentenceProcessor/getToken:

#edu/stanford/nlp/trees/ud/CoNLLUDocumentReader$SentenceProcessor/apply:

#edu/stanford/nlp/trees/ud/CoNLLUDocumentReader$SentenceProcessor/lambda$apply$3:

#edu/stanford/nlp/trees/ud/CoNLLUDocumentReader$SentenceProcessor/lambda$apply$2:

#edu/stanford/nlp/trees/ud/CoNLLUDocumentReader$SentenceProcessor/lambda$apply$0:
edu.stanford.nlp.trees.ud.CoNLLUDocumentReader$SentenceProcessor:
edu.stanford.nlp.trees.ud.UniversalGappingEnhancer$1:

#edu/stanford/nlp/trees/ud/CoNLLUUtils/parseFeatures:

#edu/stanford/nlp/trees/ud/CoNLLUUtils/toFeatureString:

#edu/stanford/nlp/trees/ud/CoNLLUUtils/parseExtraDeps:

#edu/stanford/nlp/trees/ud/CoNLLUUtils/toExtraDepsString:
edu.stanford.nlp.trees.ud.CoNLLUUtils:

#edu/stanford/nlp/trees/ud/UniversalDependenciesConverter/convertTreeToBasic:

#edu/stanford/nlp/trees/ud/UniversalDependenciesConverter/addNERTags:

#edu/stanford/nlp/trees/ud/UniversalDependenciesConverter/addNERTags:

#edu/stanford/nlp/trees/ud/UniversalDependenciesConverter/main:

#edu/stanford/nlp/trees/ud/UniversalDependenciesConverter/lambda$addLemmata$1:

#edu/stanford/nlp/trees/ud/UniversalDependenciesConverter/lambda$addLemmata$0:
edu.stanford.nlp.trees.ud.UniversalDependenciesConverter:
edu.stanford.nlp.trees.treebank.UselessTreeFilter$2:

#edu/stanford/nlp/trees/treebank/TreebankPreprocessor/getDatasetClass:

#edu/stanford/nlp/trees/treebank/TreebankPreprocessor/validateCommandLine:

#edu/stanford/nlp/trees/treebank/TreebankPreprocessor/main:
edu.stanford.nlp.trees.treebank.TreebankPreprocessor:

#edu/stanford/nlp/trees/treebank/DistributionPackage/make:

#edu/stanford/nlp/trees/treebank/DistributionPackage/toString:
edu.stanford.nlp.trees.treebank.DistributionPackage:
edu.stanford.nlp.trees.treebank.Dataset$Encoding:
edu.stanford.nlp.trees.treebank.UselessTreeFilter$1:
edu.stanford.nlp.trees.treebank.Dataset:

#edu/stanford/nlp/trees/treebank/PunctCountingTreeVisitor/countAnywhere:

#edu/stanford/nlp/trees/treebank/PunctCountingTreeVisitor/countFinal:

#edu/stanford/nlp/trees/treebank/PunctCountingTreeVisitor/countNode:

#edu/stanford/nlp/trees/treebank/PunctCountingTreeVisitor/main:
edu.stanford.nlp.trees.treebank.PunctCountingTreeVisitor:

#edu/stanford/nlp/trees/treebank/EnglishPTBTreebankCorrector/<init>:

#edu/stanford/nlp/trees/treebank/EnglishPTBTreebankCorrector/transformTrees:

#edu/stanford/nlp/trees/treebank/EnglishPTBTreebankCorrector/continuing:
edu.stanford.nlp.trees.treebank.EnglishPTBTreebankCorrector:

#edu/stanford/nlp/trees/treebank/DuplicateTreeStringFilter/test:
edu.stanford.nlp.trees.treebank.DuplicateTreeStringFilter:

#edu/stanford/nlp/trees/treebank/AbstractDataset/setOptions:

#edu/stanford/nlp/trees/treebank/AbstractDataset/buildSplitMap:
edu.stanford.nlp.trees.treebank.AbstractDataset:
edu.stanford.nlp.trees.treebank.DefaultMapper:

#edu/stanford/nlp/trees/treebank/ConfigParser/parse:

#edu/stanford/nlp/trees/treebank/ConfigParser/toString:

#edu/stanford/nlp/trees/treebank/ConfigParser/main:
edu.stanford.nlp.trees.treebank.ConfigParser:
edu.stanford.nlp.trees.treebank.AbstractDataset$SplitFilter:
edu.stanford.nlp.trees.treebank.Mapper:

#edu/stanford/nlp/trees/treebank/OntoNotesUDUpdater/main:
edu.stanford.nlp.trees.treebank.OntoNotesUDUpdater:

#edu/stanford/nlp/trees/treebank/UselessTreeFilter/test:
edu.stanford.nlp.trees.treebank.UselessTreeFilter:
edu.stanford.nlp.trees.international.hungarian.HungarianTreebankLanguagePack:
Warning: Method:edu.stanford.nlp.trees.international.negra.NegraPennLexer.zzUnpackcmap_top has auto edges.
Warning: Method:edu.stanford.nlp.trees.international.negra.NegraPennLexer.zzUnpackcmap_blocks has auto edges.
Warning: Method:edu.stanford.nlp.trees.international.negra.NegraPennLexer.zzUnpackAction has auto edges.

#edu/stanford/nlp/trees/international/negra/NegraPennLexer/zzUnpackRowMap:
Warning: Method:edu.stanford.nlp.trees.international.negra.NegraPennLexer.zzUnpackTrans has auto edges.
Warning: Method:edu.stanford.nlp.trees.international.negra.NegraPennLexer.zzUnpackAttribute has auto edges.

#edu/stanford/nlp/trees/international/negra/NegraPennLexer/zzCMap:

#edu/stanford/nlp/trees/international/negra/NegraPennLexer/zzRefill:

#edu/stanford/nlp/trees/international/negra/NegraPennLexer/yyclose:

#edu/stanford/nlp/trees/international/negra/NegraPennLexer/yyreset:

#edu/stanford/nlp/trees/international/negra/NegraPennLexer/yypushback:

#edu/stanford/nlp/trees/international/negra/NegraPennLexer/yylex:

#edu/stanford/nlp/trees/international/negra/NegraPennLexer/main:
edu.stanford.nlp.trees.international.negra.NegraPennLexer:

#edu/stanford/nlp/trees/international/negra/NegraPennLanguagePack/basicCategory:

#edu/stanford/nlp/trees/international/negra/NegraPennLanguagePack/stripGF:

#edu/stanford/nlp/trees/international/negra/NegraPennLanguagePack/containsKeptGF:
edu.stanford.nlp.trees.international.negra.NegraPennLanguagePack:

#edu/stanford/nlp/trees/international/negra/NegraPennTreeNormalizer/normalizeNonterminal:

#edu/stanford/nlp/trees/international/negra/NegraPennTreeNormalizer/fixNonUnaryRoot:

#edu/stanford/nlp/trees/international/negra/NegraPennTreeNormalizer/normalizeWholeTree:

#edu/stanford/nlp/trees/international/negra/NegraPennTreeNormalizer/insertNPinPPall:

#edu/stanford/nlp/trees/international/negra/NegraPennTreeNormalizer/insertNPinPP:

#edu/stanford/nlp/trees/international/negra/NegraPennTreeNormalizer/cleanUpLabel:
edu.stanford.nlp.trees.international.negra.NegraPennTreeNormalizer:

#edu/stanford/nlp/trees/international/negra/NegraPennTokenizer/main:
edu.stanford.nlp.trees.international.negra.NegraPennTokenizer:

#edu/stanford/nlp/trees/international/negra/NegraPennTreeNormalizer$2/test:
edu.stanford.nlp.trees.international.negra.NegraPennTreeNormalizer$2:
Warning: Method:edu.stanford.nlp.trees.international.negra.NegraLexer.zzUnpackcmap_top has auto edges.
Warning: Method:edu.stanford.nlp.trees.international.negra.NegraLexer.zzUnpackcmap_blocks has auto edges.
Warning: Method:edu.stanford.nlp.trees.international.negra.NegraLexer.zzUnpackAction has auto edges.

#edu/stanford/nlp/trees/international/negra/NegraLexer/zzUnpackRowMap:
Warning: Method:edu.stanford.nlp.trees.international.negra.NegraLexer.zzUnpackTrans has auto edges.
Warning: Method:edu.stanford.nlp.trees.international.negra.NegraLexer.zzUnpackAttribute has auto edges.

#edu/stanford/nlp/trees/international/negra/NegraLexer/zzCMap:

#edu/stanford/nlp/trees/international/negra/NegraLexer/zzRefill:

#edu/stanford/nlp/trees/international/negra/NegraLexer/yyclose:

#edu/stanford/nlp/trees/international/negra/NegraLexer/yyreset:

#edu/stanford/nlp/trees/international/negra/NegraLexer/yypushback:

#edu/stanford/nlp/trees/international/negra/NegraLexer/yylex:

#edu/stanford/nlp/trees/international/negra/NegraLexer/main:
edu.stanford.nlp.trees.international.negra.NegraLexer:

#edu/stanford/nlp/trees/international/negra/NegraLabel/toString:
edu.stanford.nlp.trees.international.negra.NegraLabel:

#edu/stanford/nlp/trees/international/negra/NegraHeadFinder/<init>:

#edu/stanford/nlp/trees/international/negra/NegraHeadFinder/findMarkedHead:

#edu/stanford/nlp/trees/international/negra/NegraHeadFinder/basicCategory:

#edu/stanford/nlp/trees/international/negra/NegraHeadFinder/postBasicCategoryIndex:

#edu/stanford/nlp/trees/international/negra/NegraHeadFinder/isLabelAnnotationIntroducingCharacter:

#edu/stanford/nlp/trees/international/negra/NegraHeadFinder/determineNonTrivialHead:
edu.stanford.nlp.trees.international.negra.NegraHeadFinder:
edu.stanford.nlp.trees.international.negra.NegraLabel$1:

#edu/stanford/nlp/trees/international/negra/NegraLabel$NegraLabelFactory/newLabel:
edu.stanford.nlp.trees.international.negra.NegraLabel$NegraLabelFactory:

#edu/stanford/nlp/trees/international/negra/NegraPennTreeReaderFactory/newTreeReader:

#edu/stanford/nlp/trees/international/negra/NegraPennTreeReaderFactory/main:
edu.stanford.nlp.trees.international.negra.NegraPennTreeReaderFactory:

#edu/stanford/nlp/trees/international/negra/NegraPennTreeNormalizer$1/test:
edu.stanford.nlp.trees.international.negra.NegraPennTreeNormalizer$1:
edu.stanford.nlp.trees.international.italian.ItalianTreebankLanguagePack:

#edu/stanford/nlp/trees/international/hebrew/SplitMaker/main:
edu.stanford.nlp.trees.international.hebrew.SplitMaker:

#edu/stanford/nlp/trees/international/hebrew/HebrewTreeReaderFactory/main:
edu.stanford.nlp.trees.international.hebrew.HebrewTreeReaderFactory:

#edu/stanford/nlp/trees/international/hebrew/HebrewTreeNormalizer/normalizeWholeTree:
edu.stanford.nlp.trees.international.hebrew.HebrewTreeNormalizer:
edu.stanford.nlp.trees.international.hebrew.HebrewTreebankLanguagePack:

#edu/stanford/nlp/trees/international/hebrew/HebrewTreeNormalizer$HebrewEmptyFilter/test:
edu.stanford.nlp.trees.international.hebrew.HebrewTreeNormalizer$HebrewEmptyFilter:

#edu/stanford/nlp/trees/international/french/FrenchTreeNormalizer/normalizeTerminal:

#edu/stanford/nlp/trees/international/french/FrenchTreeNormalizer/replacePOSTag:

#edu/stanford/nlp/trees/international/french/FrenchTreeNormalizer/normalizePreterminal:

#edu/stanford/nlp/trees/international/french/FrenchTreeNormalizer/normalizeWholeTree:
edu.stanford.nlp.trees.international.french.FrenchTreeNormalizer:
edu.stanford.nlp.trees.international.french.FrenchTreeReaderFactory:

#edu/stanford/nlp/trees/international/french/FrenchXMLTreeReader/close:

#edu/stanford/nlp/trees/international/french/FrenchXMLTreeReader/readTree:

#edu/stanford/nlp/trees/international/french/FrenchXMLTreeReader/getPOS:

#edu/stanford/nlp/trees/international/french/FrenchXMLTreeReader/getLemma:

#edu/stanford/nlp/trees/international/french/FrenchXMLTreeReader/getMorph:

#edu/stanford/nlp/trees/international/french/FrenchXMLTreeReader/getSubcat:

#edu/stanford/nlp/trees/international/french/FrenchXMLTreeReader/getWordString:

#edu/stanford/nlp/trees/international/french/FrenchXMLTreeReader/getTreeFromXML:

#edu/stanford/nlp/trees/international/french/FrenchXMLTreeReader/postProcessMWE:

#edu/stanford/nlp/trees/international/french/FrenchXMLTreeReader/main:
edu.stanford.nlp.trees.international.french.FrenchXMLTreeReader:
edu.stanford.nlp.trees.international.french.FrenchXMLTreeReaderFactory:

#edu/stanford/nlp/trees/international/french/FrenchTreeNormalizer$1/test:
edu.stanford.nlp.trees.international.french.FrenchTreeNormalizer$1:
edu.stanford.nlp.trees.international.french.FrenchTreebankLanguagePack:
edu.stanford.nlp.trees.international.french.AbishekFrenchHeadFinder:

#edu/stanford/nlp/trees/international/french/FrenchTreeNormalizer$FrenchAOverAFilter/test:
edu.stanford.nlp.trees.international.french.FrenchTreeNormalizer$FrenchAOverAFilter:
edu.stanford.nlp.trees.international.french.DybroFrenchHeadFinder:
edu.stanford.nlp.trees.international.french.FrenchHeadFinder:
edu.stanford.nlp.trees.international.spanish.SpanishHeadFinder:
edu.stanford.nlp.trees.international.spanish.SpanishTreebankLanguagePack:
edu.stanford.nlp.trees.international.spanish.SpanishHeadFinder$1:

#edu/stanford/nlp/trees/international/spanish/SpanishTreeNormalizer/<init>:

#edu/stanford/nlp/trees/international/spanish/SpanishTreeNormalizer/normalizeWholeTree:

#edu/stanford/nlp/trees/international/spanish/SpanishTreeNormalizer/normalizeTerminal:

#edu/stanford/nlp/trees/international/spanish/SpanishTreeNormalizer/simplifyPOSTag:

#edu/stanford/nlp/trees/international/spanish/SpanishTreeNormalizer/expandCliticPronounsInner:

#edu/stanford/nlp/trees/international/spanish/SpanishTreeNormalizer/isMultiWordCandidate:

#edu/stanford/nlp/trees/international/spanish/SpanishTreeNormalizer/normalizeForMultiWord:

#edu/stanford/nlp/trees/international/spanish/SpanishTreeNormalizer/getMultiWords:

#edu/stanford/nlp/trees/international/spanish/SpanishTreeNormalizer/shouldDropWord:

#edu/stanford/nlp/trees/international/spanish/SpanishTreeNormalizer/expandConmigo:

#edu/stanford/nlp/trees/international/spanish/SpanishTreeNormalizer/compilePatterns:

#edu/stanford/nlp/trees/international/spanish/SpanishTreeNormalizer/lambda$static$0:
edu.stanford.nlp.trees.international.spanish.SpanishTreeNormalizer:

#edu/stanford/nlp/trees/international/spanish/SpanishTreeNormalizer$1/transformTree:
edu.stanford.nlp.trees.international.spanish.SpanishTreeNormalizer$1:
edu.stanford.nlp.trees.international.spanish.SpanishTreeReaderFactory:
edu.stanford.nlp.trees.international.spanish.SpanishTreeNormalizer$2:

#edu/stanford/nlp/trees/international/spanish/SpanishXMLTreeReader/close:

#edu/stanford/nlp/trees/international/spanish/SpanishXMLTreeReader/readTree:

#edu/stanford/nlp/trees/international/spanish/SpanishXMLTreeReader/isWordNode:

#edu/stanford/nlp/trees/international/spanish/SpanishXMLTreeReader/getPOS:

#edu/stanford/nlp/trees/international/spanish/SpanishXMLTreeReader/getWord:

#edu/stanford/nlp/trees/international/spanish/SpanishXMLTreeReader/getTreeFromXML:

#edu/stanford/nlp/trees/international/spanish/SpanishXMLTreeReader/buildWordNode:

#edu/stanford/nlp/trees/international/spanish/SpanishXMLTreeReader/buildEllipticNode:

#edu/stanford/nlp/trees/international/spanish/SpanishXMLTreeReader/buildConstituentNode:

#edu/stanford/nlp/trees/international/spanish/SpanishXMLTreeReader/shouldPrintTree:

#edu/stanford/nlp/trees/international/spanish/SpanishXMLTreeReader/toString:

#edu/stanford/nlp/trees/international/spanish/SpanishXMLTreeReader/process:

#edu/stanford/nlp/trees/international/spanish/SpanishXMLTreeReader/main:
edu.stanford.nlp.trees.international.spanish.SpanishXMLTreeReader:
edu.stanford.nlp.trees.international.spanish.SpanishSplitTreeNormalizer:
edu.stanford.nlp.trees.international.spanish.SpanishXMLTreeReaderFactory:

#edu/stanford/nlp/trees/international/arabic/ArabicTreebankLanguagePack/main:
edu.stanford.nlp.trees.international.arabic.ArabicTreebankLanguagePack:
edu.stanford.nlp.trees.international.arabic.ArabicHeadFinder$TagSet$1:
Warning: Method:edu.stanford.nlp.trees.international.arabic.ArabicTreebankTokenizer.getNext has incoming edges.

#edu/stanford/nlp/trees/international/arabic/ArabicTreebankTokenizer/main:
edu.stanford.nlp.trees.international.arabic.ArabicTreebankTokenizer:
edu.stanford.nlp.trees.international.arabic.ArabicHeadFinder$1:
edu.stanford.nlp.trees.international.arabic.ArabicHeadFinder$TagSet$2:

#edu/stanford/nlp/trees/international/arabic/ATBEscaper/apply:
edu.stanford.nlp.trees.international.arabic.ATBEscaper:

#edu/stanford/nlp/trees/international/arabic/ArabicHeadFinder$TagSet/tagSet:
edu.stanford.nlp.trees.international.arabic.ArabicHeadFinder$TagSet:
edu.stanford.nlp.trees.international.arabic.ArabicTreeReaderFactory$ArabicRawTreeReaderFactory:

#edu/stanford/nlp/trees/international/arabic/ArabicTreeNormalizer/normalizeNonterminal:

#edu/stanford/nlp/trees/international/arabic/ArabicTreeNormalizer/normalizeWholeTree:
edu.stanford.nlp.trees.international.arabic.ArabicTreeNormalizer:

#edu/stanford/nlp/trees/international/arabic/ArabicTreeReaderFactory$XFilter/test:
edu.stanford.nlp.trees.international.arabic.ArabicTreeReaderFactory$XFilter:

#edu/stanford/nlp/trees/international/arabic/ATBTreeUtils/escape:

#edu/stanford/nlp/trees/international/arabic/ATBTreeUtils/unEscape:

#edu/stanford/nlp/trees/international/arabic/ATBTreeUtils/taggedStringFromTree:
edu.stanford.nlp.trees.international.arabic.ATBTreeUtils:

#edu/stanford/nlp/trees/international/arabic/ArabicTreeNormalizer$ArabicEmptyFilter/test:
edu.stanford.nlp.trees.international.arabic.ArabicTreeNormalizer$ArabicEmptyFilter:

#edu/stanford/nlp/trees/international/arabic/ArabicUtils/normalize:

#edu/stanford/nlp/trees/international/arabic/ArabicUtils/main:
edu.stanford.nlp.trees.international.arabic.ArabicUtils:

#edu/stanford/nlp/trees/international/arabic/ArabicHeadFinder/findMarkedHead:
edu.stanford.nlp.trees.international.arabic.ArabicHeadFinder:

#edu/stanford/nlp/trees/international/arabic/ArabicTreeReaderFactory/newTreeReader:
edu.stanford.nlp.trees.international.arabic.ArabicTreeReaderFactory:

#edu/stanford/nlp/trees/international/tuebadz/TueBaDZHeadFinder/<init>:

#edu/stanford/nlp/trees/international/tuebadz/TueBaDZHeadFinder/findMarkedHead:

#edu/stanford/nlp/trees/international/tuebadz/TueBaDZHeadFinder/basicCategory:

#edu/stanford/nlp/trees/international/tuebadz/TueBaDZHeadFinder/postBasicCategoryIndex:

#edu/stanford/nlp/trees/international/tuebadz/TueBaDZHeadFinder/isLabelAnnotationIntroducingCharacter:

#edu/stanford/nlp/trees/international/tuebadz/TueBaDZHeadFinder/determineNonTrivialHead:
edu.stanford.nlp.trees.international.tuebadz.TueBaDZHeadFinder:

#edu/stanford/nlp/trees/international/tuebadz/TueBaDZPennTreeNormalizer/cleanUpLabel:

#edu/stanford/nlp/trees/international/tuebadz/TueBaDZPennTreeNormalizer/normalizeWholeTree:
edu.stanford.nlp.trees.international.tuebadz.TueBaDZPennTreeNormalizer:

#edu/stanford/nlp/trees/international/tuebadz/TueBaDZLanguagePack/basicCategory:

#edu/stanford/nlp/trees/international/tuebadz/TueBaDZLanguagePack/stripGF:

#edu/stanford/nlp/trees/international/tuebadz/TueBaDZLanguagePack/containsKeptGF:

#edu/stanford/nlp/trees/international/tuebadz/TueBaDZLanguagePack/main:
edu.stanford.nlp.trees.international.tuebadz.TueBaDZLanguagePack:
edu.stanford.nlp.trees.international.tuebadz.TueBaDZTreeReaderFactory:
edu.stanford.nlp.trees.international.pennchinese.SunJurafskyChineseHeadFinder:
edu.stanford.nlp.trees.international.pennchinese.NoEmptiesCTBTreeReaderFactory:
edu.stanford.nlp.trees.international.pennchinese.UniversalChineseSemanticHeadFinder:

#edu/stanford/nlp/trees/international/pennchinese/ChineseUtils/isNumber:

#edu/stanford/nlp/trees/international/pennchinese/ChineseUtils/normalize:

#edu/stanford/nlp/trees/international/pennchinese/ChineseUtils/normalizeBMP:

#edu/stanford/nlp/trees/international/pennchinese/ChineseUtils/normalizeUnicode:

#edu/stanford/nlp/trees/international/pennchinese/ChineseUtils/isMidDot:

#edu/stanford/nlp/trees/international/pennchinese/ChineseUtils/isAsciiLowHigh:

#edu/stanford/nlp/trees/international/pennchinese/ChineseUtils/main:

#edu/stanford/nlp/trees/international/pennchinese/ChineseUtils/shapeOf:
edu.stanford.nlp.trees.international.pennchinese.ChineseUtils:
edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalRelations:

#edu/stanford/nlp/trees/international/pennchinese/ChineseEnglishWordMap/getFirstTranslation:

#edu/stanford/nlp/trees/international/pennchinese/ChineseEnglishWordMap/normalize:

#edu/stanford/nlp/trees/international/pennchinese/ChineseEnglishWordMap/normalize:

#edu/stanford/nlp/trees/international/pennchinese/ChineseEnglishWordMap/readCEDict:

#edu/stanford/nlp/trees/international/pennchinese/ChineseEnglishWordMap/isDigits:

#edu/stanford/nlp/trees/international/pennchinese/ChineseEnglishWordMap/getReverseMap:

#edu/stanford/nlp/trees/international/pennchinese/ChineseEnglishWordMap/addMap:

#edu/stanford/nlp/trees/international/pennchinese/ChineseEnglishWordMap/main:
edu.stanford.nlp.trees.international.pennchinese.ChineseEnglishWordMap:

#edu/stanford/nlp/trees/international/pennchinese/CEDict/path:
edu.stanford.nlp.trees.international.pennchinese.CEDict:
edu.stanford.nlp.trees.international.pennchinese.ChineseHeadFinder:

#edu/stanford/nlp/trees/international/pennchinese/TraditionalSimplifiedCharacterMap/init:

#edu/stanford/nlp/trees/international/pennchinese/TraditionalSimplifiedCharacterMap/apply:
Warning: Method:edu.stanford.nlp.trees.international.pennchinese.TraditionalSimplifiedCharacterMap.translateLines has incoming edges.
edu.stanford.nlp.trees.international.pennchinese.TraditionalSimplifiedCharacterMap:
Warning: Method:edu.stanford.nlp.trees.international.pennchinese.CHTBLexer.zzUnpackcmap_top has auto edges.
Warning: Method:edu.stanford.nlp.trees.international.pennchinese.CHTBLexer.zzUnpackcmap_blocks has auto edges.
Warning: Method:edu.stanford.nlp.trees.international.pennchinese.CHTBLexer.zzUnpackAction has auto edges.

#edu/stanford/nlp/trees/international/pennchinese/CHTBLexer/zzUnpackRowMap:
Warning: Method:edu.stanford.nlp.trees.international.pennchinese.CHTBLexer.zzUnpackTrans has auto edges.
Warning: Method:edu.stanford.nlp.trees.international.pennchinese.CHTBLexer.zzUnpackAttribute has auto edges.

#edu/stanford/nlp/trees/international/pennchinese/CHTBLexer/reportError:

#edu/stanford/nlp/trees/international/pennchinese/CHTBLexer/zzCMap:

#edu/stanford/nlp/trees/international/pennchinese/CHTBLexer/zzRefill:

#edu/stanford/nlp/trees/international/pennchinese/CHTBLexer/yyclose:

#edu/stanford/nlp/trees/international/pennchinese/CHTBLexer/yyreset:

#edu/stanford/nlp/trees/international/pennchinese/CHTBLexer/yypushback:

#edu/stanford/nlp/trees/international/pennchinese/CHTBLexer/yylex:
edu.stanford.nlp.trees.international.pennchinese.CHTBLexer:
edu.stanford.nlp.trees.international.pennchinese.ChineseSemanticHeadFinder:

#edu/stanford/nlp/trees/international/pennchinese/ChineseTreebankLanguagePack/getTokenizerFactory:

#edu/stanford/nlp/trees/international/pennchinese/ChineseTreebankLanguagePack/isPunctuationWord:

#edu/stanford/nlp/trees/international/pennchinese/ChineseTreebankLanguagePack/grammaticalStructureFactory:

#edu/stanford/nlp/trees/international/pennchinese/ChineseTreebankLanguagePack/grammaticalStructureFactory:

#edu/stanford/nlp/trees/international/pennchinese/ChineseTreebankLanguagePack/grammaticalStructureFactory:

#edu/stanford/nlp/trees/international/pennchinese/ChineseTreebankLanguagePack/typedDependencyHeadFinder:
edu.stanford.nlp.trees.international.pennchinese.ChineseTreebankLanguagePack:

#edu/stanford/nlp/trees/international/pennchinese/FragmentTreeFilter/test:
edu.stanford.nlp.trees.international.pennchinese.FragmentTreeFilter:
edu.stanford.nlp.trees.international.pennchinese.ChineseEnglishWordMap$SingletonHolder:

#edu/stanford/nlp/trees/international/pennchinese/ChineseGrammaticalStructure/collapsePrepAndPoss:

#edu/stanford/nlp/trees/international/pennchinese/ChineseGrammaticalStructure/main:
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructure:

#edu/stanford/nlp/trees/international/pennchinese/CTBTreeReaderFactory/newTreeReader:
edu.stanford.nlp.trees.international.pennchinese.CTBTreeReaderFactory:
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizer$1:

#edu/stanford/nlp/trees/international/pennchinese/CTBErrorCorrectingTreeNormalizer/<init>:

#edu/stanford/nlp/trees/international/pennchinese/CTBErrorCorrectingTreeNormalizer/cleanUpLabel:

#edu/stanford/nlp/trees/international/pennchinese/CTBErrorCorrectingTreeNormalizer/normalizeWholeTree:
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizer:
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalRelations:
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructure$FromDependenciesFactory:
edu.stanford.nlp.trees.international.pennchinese.CTBTreeReaderFactory$NoEmptiesCTBTreeReaderFactory:

#edu/stanford/nlp/trees/international/pennchinese/CTBErrorCorrectingTreeNormalizer$ChineseEmptyFilter/test:
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizer$ChineseEmptyFilter:

#edu/stanford/nlp/trees/international/pennchinese/UniversalChineseGrammaticalStructure/collapsePrepAndPoss:

#edu/stanford/nlp/trees/international/pennchinese/UniversalChineseGrammaticalStructure/main:
edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructure:
Warning: Method:edu.stanford.nlp.trees.international.pennchinese.CHTBTokenizer.getNext has incoming edges.

#edu/stanford/nlp/trees/international/pennchinese/CHTBTokenizer/main:
edu.stanford.nlp.trees.international.pennchinese.CHTBTokenizer:
edu.stanford.nlp.trees.international.pennchinese.BikelChineseHeadFinder:
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizer$CTBErrorCorrectingTreeReaderFactory:

#edu/stanford/nlp/trees/international/pennchinese/UniversalChineseGrammaticalStructureFactory/newGrammaticalStructure:
edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructureFactory:

#edu/stanford/nlp/trees/international/pennchinese/FragDiscardingPennTreeReader/readTree:
edu.stanford.nlp.trees.international.pennchinese.FragDiscardingPennTreeReader:

#edu/stanford/nlp/trees/international/pennchinese/CharacterLevelTagExtender/transformTree:

#edu/stanford/nlp/trees/international/pennchinese/CharacterLevelTagExtender/untransformTree:

#edu/stanford/nlp/trees/international/pennchinese/CharacterLevelTagExtender/testTransAndUntrans:

#edu/stanford/nlp/trees/international/pennchinese/CharacterLevelTagExtender/main:
edu.stanford.nlp.trees.international.pennchinese.CharacterLevelTagExtender:

#edu/stanford/nlp/trees/international/pennchinese/ChineseGrammaticalStructureFactory/newGrammaticalStructure:
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructureFactory:

#edu/stanford/nlp/trees/international/pennchinese/RadicalMap/getRadical:

#edu/stanford/nlp/trees/international/pennchinese/RadicalMap/main:
edu.stanford.nlp.trees.international.pennchinese.RadicalMap:

#edu/stanford/nlp/trees/international/pennchinese/ChineseCollinizer/transformTree:
edu.stanford.nlp.trees.international.pennchinese.ChineseCollinizer:
edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructure$FromDependenciesFactory:

#edu/stanford/nlp/trees/international/pennchinese/ChineseEscaper/apply:
edu.stanford.nlp.trees.international.pennchinese.ChineseEscaper:

#edu/stanford/nlp/classify/LogisticObjectiveFunction/calculate:

#edu/stanford/nlp/classify/LogisticObjectiveFunction/calculateRVF:
edu.stanford.nlp.classify.LogisticObjectiveFunction:

#edu/stanford/nlp/classify/SVMLightClassifier/logProbabilityOf:

#edu/stanford/nlp/classify/SVMLightClassifier/logProbabilityOf:
edu.stanford.nlp.classify.SVMLightClassifier:

#edu/stanford/nlp/classify/ClassifierExample/makeStopLights:
edu.stanford.nlp.classify.ClassifierExample:

#edu/stanford/nlp/classify/GeneralizedExpectationObjectiveFunction/to2D:

#edu/stanford/nlp/classify/GeneralizedExpectationObjectiveFunction/calculate:

#edu/stanford/nlp/classify/GeneralizedExpectationObjectiveFunction/updateDerivative:

#edu/stanford/nlp/classify/GeneralizedExpectationObjectiveFunction/valueOfFeature:

#edu/stanford/nlp/classify/GeneralizedExpectationObjectiveFunction/computeEmpiricalStatistics:

#edu/stanford/nlp/classify/GeneralizedExpectationObjectiveFunction/smoothDistribution:

#edu/stanford/nlp/classify/GeneralizedExpectationObjectiveFunction/getModelProbs:
edu.stanford.nlp.classify.GeneralizedExpectationObjectiveFunction:

#edu/stanford/nlp/classify/LinearClassifierFactory$5/create:
edu.stanford.nlp.classify.LinearClassifierFactory$5:

#edu/stanford/nlp/classify/LogisticUtils/identityMatrix:

#edu/stanford/nlp/classify/LogisticUtils/flatten:

#edu/stanford/nlp/classify/LogisticUtils/unflatten:

#edu/stanford/nlp/classify/LogisticUtils/dotProduct:

#edu/stanford/nlp/classify/LogisticUtils/initializeDataValues:

#edu/stanford/nlp/classify/LogisticUtils/indicesOf:

#edu/stanford/nlp/classify/LogisticUtils/convertToArray:

#edu/stanford/nlp/classify/LogisticUtils/calculateSums:

#edu/stanford/nlp/classify/LogisticUtils/calculateSums:

#edu/stanford/nlp/classify/LogisticUtils/sample:

#edu/stanford/nlp/classify/LogisticUtils/prettyPrint:
edu.stanford.nlp.classify.LogisticUtils:

#edu/stanford/nlp/classify/LinearClassifierFactory$7/create:
edu.stanford.nlp.classify.LinearClassifierFactory$7:

#edu/stanford/nlp/classify/OneVsAllClassifier/classOf:

#edu/stanford/nlp/classify/OneVsAllClassifier/scoresOf:

#edu/stanford/nlp/classify/OneVsAllClassifier/train:
edu.stanford.nlp.classify.OneVsAllClassifier:
edu.stanford.nlp.classify.ProbabilisticClassifier:
edu.stanford.nlp.classify.LogPrior$1:
edu.stanford.nlp.classify.RVFClassifier:

#edu/stanford/nlp/classify/GeneralDataset/getFeatureCounts:

#edu/stanford/nlp/classify/GeneralDataset/applyFeatureCountThreshold:

#edu/stanford/nlp/classify/GeneralDataset/retainFeatures:

#edu/stanford/nlp/classify/GeneralDataset/applyFeatureMaxCountThreshold:

#edu/stanford/nlp/classify/GeneralDataset/numFeatureTokens:

#edu/stanford/nlp/classify/GeneralDataset/addAll:

#edu/stanford/nlp/classify/GeneralDataset/splitOutFold:

#edu/stanford/nlp/classify/GeneralDataset/randomize:

#edu/stanford/nlp/classify/GeneralDataset/shuffleWithSideInformation:

#edu/stanford/nlp/classify/GeneralDataset/sampleDataset:

#edu/stanford/nlp/classify/GeneralDataset/mapDataset:

#edu/stanford/nlp/classify/GeneralDataset/mapDatum:

#edu/stanford/nlp/classify/GeneralDataset/mapDataset:

#edu/stanford/nlp/classify/GeneralDataset/makeSvmLabelMap:

#edu/stanford/nlp/classify/GeneralDataset/printSVMLightFormat:

#edu/stanford/nlp/classify/GeneralDataset/numDatumsPerLabel:
edu.stanford.nlp.classify.GeneralDataset:

#edu/stanford/nlp/classify/GeneralDataset$1/hasNext:

#edu/stanford/nlp/classify/GeneralDataset$1/next:
edu.stanford.nlp.classify.GeneralDataset$1:

#edu/stanford/nlp/classify/LinearClassifierFactory$3/create:
edu.stanford.nlp.classify.LinearClassifierFactory$3:
edu.stanford.nlp.classify.LinearClassifierFactory$1:

#edu/stanford/nlp/classify/LogConditionalObjectiveFunction$RVFDerivativeCalculation/run:
edu.stanford.nlp.classify.LogConditionalObjectiveFunction$RVFDerivativeCalculation:
edu.stanford.nlp.classify.ColumnDataClassifier$InputFormat:

#edu/stanford/nlp/classify/LogPrior/getType:

#edu/stanford/nlp/classify/LogPrior/intToType:

#edu/stanford/nlp/classify/LogPrior/<init>:

#edu/stanford/nlp/classify/LogPrior/<init>:

#edu/stanford/nlp/classify/LogPrior/getSigma:

#edu/stanford/nlp/classify/LogPrior/getSigmaSquared:

#edu/stanford/nlp/classify/LogPrior/getSigmaSquaredM:

#edu/stanford/nlp/classify/LogPrior/getEpsilon:

#edu/stanford/nlp/classify/LogPrior/setSigma:

#edu/stanford/nlp/classify/LogPrior/setSigmaSquared:

#edu/stanford/nlp/classify/LogPrior/setSigmaSquaredM:

#edu/stanford/nlp/classify/LogPrior/setEpsilon:

#edu/stanford/nlp/classify/LogPrior/computeStochastic:

#edu/stanford/nlp/classify/LogPrior/compute:
edu.stanford.nlp.classify.LogPrior:
edu.stanford.nlp.classify.LogPrior$LogPriorType:

#edu/stanford/nlp/classify/WeightedDataset/getFeatureCounts:

#edu/stanford/nlp/classify/WeightedDataset/ensureSize:

#edu/stanford/nlp/classify/WeightedDataset/randomize:

#edu/stanford/nlp/classify/WeightedDataset/shuffleWithSideInformation:
edu.stanford.nlp.classify.WeightedDataset:

#edu/stanford/nlp/classify/KNNClassifierFactory/train:

#edu/stanford/nlp/classify/KNNClassifierFactory/train:
edu.stanford.nlp.classify.KNNClassifierFactory:

#edu/stanford/nlp/classify/LinearClassifierFactory$6/create:
edu.stanford.nlp.classify.LinearClassifierFactory$6:

#edu/stanford/nlp/classify/CrossValidator$CrossValidationIterator/hasNext:

#edu/stanford/nlp/classify/CrossValidator$CrossValidationIterator/next:
edu.stanford.nlp.classify.CrossValidator$CrossValidationIterator:

#edu/stanford/nlp/classify/ColumnDataClassifier/makeDatumFromStrings:

#edu/stanford/nlp/classify/ColumnDataClassifier/isRealValued:

#edu/stanford/nlp/classify/ColumnDataClassifier/makeRVFDatumFromStrings:

#edu/stanford/nlp/classify/ColumnDataClassifier/readAndReturnTrainingExamples:

#edu/stanford/nlp/classify/ColumnDataClassifier/makeSVMLightLineInfos:

#edu/stanford/nlp/classify/ColumnDataClassifier/readDataset:

#edu/stanford/nlp/classify/ColumnDataClassifier/splitLineToFields:

#edu/stanford/nlp/classify/ColumnDataClassifier/writeResultsSummary:

#edu/stanford/nlp/classify/ColumnDataClassifier/writeAnswer:

#edu/stanford/nlp/classify/ColumnDataClassifier/updatePerformanceStatistics:

#edu/stanford/nlp/classify/ColumnDataClassifier/finishRanking:

#edu/stanford/nlp/classify/ColumnDataClassifier/testExamples:

#edu/stanford/nlp/classify/ColumnDataClassifier/testExample:

#edu/stanford/nlp/classify/ColumnDataClassifier/formatCsv:

#edu/stanford/nlp/classify/ColumnDataClassifier/makeDatum:

#edu/stanford/nlp/classify/ColumnDataClassifier/makeRVFDatum:

#edu/stanford/nlp/classify/ColumnDataClassifier/addAllInterningAndPrefixingRVF:

#edu/stanford/nlp/classify/ColumnDataClassifier/addAllInterningAndPrefixing:

#edu/stanford/nlp/classify/ColumnDataClassifier/addFeatureValue:

#edu/stanford/nlp/classify/ColumnDataClassifier/addFeature:

#edu/stanford/nlp/classify/ColumnDataClassifier/makeDatum:

#edu/stanford/nlp/classify/ColumnDataClassifier/ptbTokenize:

#edu/stanford/nlp/classify/ColumnDataClassifier/intern:

#edu/stanford/nlp/classify/ColumnDataClassifier/makeNGramFeatures:

#edu/stanford/nlp/classify/ColumnDataClassifier/newFeaturePrinter:

#edu/stanford/nlp/classify/ColumnDataClassifier/printFeatures:

#edu/stanford/nlp/classify/ColumnDataClassifier/printFeatures:

#edu/stanford/nlp/classify/ColumnDataClassifier/makeClassifierAdaptL1:

#edu/stanford/nlp/classify/ColumnDataClassifier/makeClassifier:

#edu/stanford/nlp/classify/ColumnDataClassifier/regexpTokenize:

#edu/stanford/nlp/classify/ColumnDataClassifier/splitTokenize:

#edu/stanford/nlp/classify/ColumnDataClassifier/loadWordVectors:

#edu/stanford/nlp/classify/ColumnDataClassifier/setProperties:

#edu/stanford/nlp/classify/ColumnDataClassifier/loadClassifier:

#edu/stanford/nlp/classify/ColumnDataClassifier/loadClassifier:

#edu/stanford/nlp/classify/ColumnDataClassifier/main:

#edu/stanford/nlp/classify/ColumnDataClassifier/trainClassifier:

#edu/stanford/nlp/classify/ColumnDataClassifier/printClassifier:

#edu/stanford/nlp/classify/ColumnDataClassifier/testClassifier:

#edu/stanford/nlp/classify/ColumnDataClassifier/crossValidate:

#edu/stanford/nlp/classify/ColumnDataClassifier/classOf:

#edu/stanford/nlp/classify/ColumnDataClassifier/scoresOf:

#edu/stanford/nlp/classify/ColumnDataClassifier/getClassifier:
edu.stanford.nlp.classify.ColumnDataClassifier:

#edu/stanford/nlp/classify/AdaptedGaussianPriorObjectiveFunction/calculate:

#edu/stanford/nlp/classify/AdaptedGaussianPriorObjectiveFunction/calculateCL:

#edu/stanford/nlp/classify/AdaptedGaussianPriorObjectiveFunction/to1D:
edu.stanford.nlp.classify.AdaptedGaussianPriorObjectiveFunction:

#edu/stanford/nlp/classify/RVFDataset/scaleFeaturesGaussian:

#edu/stanford/nlp/classify/RVFDataset/scaleFeatures:

#edu/stanford/nlp/classify/RVFDataset/ensureRealValues:

#edu/stanford/nlp/classify/RVFDataset/scaleDataset:

#edu/stanford/nlp/classify/RVFDataset/scaleDatum:

#edu/stanford/nlp/classify/RVFDataset/scaleDatasetGaussian:

#edu/stanford/nlp/classify/RVFDataset/scaleDatumGaussian:

#edu/stanford/nlp/classify/RVFDataset/split:

#edu/stanford/nlp/classify/RVFDataset/add:

#edu/stanford/nlp/classify/RVFDataset/add:

#edu/stanford/nlp/classify/RVFDataset/getRVFDatum:

#edu/stanford/nlp/classify/RVFDataset/addAllWithSourcesAndIds:

#edu/stanford/nlp/classify/RVFDataset/addAll:

#edu/stanford/nlp/classify/RVFDataset/addLabel:

#edu/stanford/nlp/classify/RVFDataset/addFeatures:

#edu/stanford/nlp/classify/RVFDataset/summaryStatistics:

#edu/stanford/nlp/classify/RVFDataset/printFullFeatureMatrix:

#edu/stanford/nlp/classify/RVFDataset/printFullFeatureMatrixWithValues:

#edu/stanford/nlp/classify/RVFDataset/selectFeaturesFromSet:

#edu/stanford/nlp/classify/RVFDataset/applyFeatureCountThreshold:

#edu/stanford/nlp/classify/RVFDataset/applyFeatureMaxCountThreshold:

#edu/stanford/nlp/classify/RVFDataset/readSVMLightFormat:

#edu/stanford/nlp/classify/RVFDataset/svmLightLineToRVFDatum:

#edu/stanford/nlp/classify/RVFDataset/readSVMLightFormat:

#edu/stanford/nlp/classify/RVFDataset/writeSVMLightFormat:

#edu/stanford/nlp/classify/RVFDataset/printSparseFeatureMatrix:

#edu/stanford/nlp/classify/RVFDataset/printSparseFeatureValues:

#edu/stanford/nlp/classify/RVFDataset/printSparseFeatureValues:

#edu/stanford/nlp/classify/RVFDataset/getValuesArray:

#edu/stanford/nlp/classify/RVFDataset/toSummaryString:

#edu/stanford/nlp/classify/RVFDataset/randomize:

#edu/stanford/nlp/classify/RVFDataset/shuffleWithSideInformation:
edu.stanford.nlp.classify.RVFDataset:
edu.stanford.nlp.classify.Classifier:

#edu/stanford/nlp/classify/LinearClassifierFactory$4/create:
edu.stanford.nlp.classify.LinearClassifierFactory$4:

#edu/stanford/nlp/classify/LinearClassifierFactory$QNFactory/create:
edu.stanford.nlp.classify.LinearClassifierFactory$QNFactory:

#edu/stanford/nlp/classify/NominalDataReader/readDatum:

#edu/stanford/nlp/classify/NominalDataReader/readDatum:

#edu/stanford/nlp/classify/NominalDataReader/readData:
edu.stanford.nlp.classify.NominalDataReader:

#edu/stanford/nlp/classify/LinearClassifierFactory/<init>:

#edu/stanford/nlp/classify/LinearClassifierFactory/getMinimizer:

#edu/stanford/nlp/classify/LinearClassifierFactory/trainWeights:

#edu/stanford/nlp/classify/LinearClassifierFactory/trainWeightsSemiSup:

#edu/stanford/nlp/classify/LinearClassifierFactory/getHighPrecisionFeatures:

#edu/stanford/nlp/classify/LinearClassifierFactory/heldOutSetSigma:

#edu/stanford/nlp/classify/LinearClassifierFactory/trainClassifier:

#edu/stanford/nlp/classify/LinearClassifierFactory/trainClassifier:

#edu/stanford/nlp/classify/LinearClassifierFactory/trainClassifier:

#edu/stanford/nlp/classify/LinearClassifierFactory/trainClassifierWithInitialWeights:

#edu/stanford/nlp/classify/LinearClassifierFactory/trainClassifierWithInitialWeights:

#edu/stanford/nlp/classify/LinearClassifierFactory/loadFromFilename:

#edu/stanford/nlp/classify/LinearClassifierFactory/$deserializeLambda$:

#edu/stanford/nlp/classify/LinearClassifierFactory/lambda$useHybridMinimizer$ac01f5a7$1:
edu.stanford.nlp.classify.LinearClassifierFactory:

#edu/stanford/nlp/classify/LogConditionalEqConstraintFunction/featureOf:

#edu/stanford/nlp/classify/LogConditionalEqConstraintFunction/createIndex:

#edu/stanford/nlp/classify/LogConditionalEqConstraintFunction/to3D:

#edu/stanford/nlp/classify/LogConditionalEqConstraintFunction/priors:

#edu/stanford/nlp/classify/LogConditionalEqConstraintFunction/normalize:

#edu/stanford/nlp/classify/LogConditionalEqConstraintFunction/calculate:

#edu/stanford/nlp/classify/LogConditionalEqConstraintFunction/<init>:

#edu/stanford/nlp/classify/LogConditionalEqConstraintFunction/initial:
edu.stanford.nlp.classify.LogConditionalEqConstraintFunction:

#edu/stanford/nlp/classify/MultinomialLogisticClassifier/probabilityOf:

#edu/stanford/nlp/classify/MultinomialLogisticClassifier/load:

#edu/stanford/nlp/classify/MultinomialLogisticClassifier/save:

#edu/stanford/nlp/classify/MultinomialLogisticClassifier/weightsAsGenericCounter:
edu.stanford.nlp.classify.MultinomialLogisticClassifier:
edu.stanford.nlp.classify.ClassifierCreator:

#edu/stanford/nlp/classify/NBLinearClassifierFactory/trainWeights:

#edu/stanford/nlp/classify/NBLinearClassifierFactory/weights:

#edu/stanford/nlp/classify/NBLinearClassifierFactory/lambda$tuneSigma$0:
edu.stanford.nlp.classify.NBLinearClassifierFactory:

#edu/stanford/nlp/classify/LinearClassifierFactory$2/create:
edu.stanford.nlp.classify.LinearClassifierFactory$2:

#edu/stanford/nlp/classify/WeightedRVFDataset/getWeights:

#edu/stanford/nlp/classify/WeightedRVFDataset/addWeight:
edu.stanford.nlp.classify.WeightedRVFDataset:

#edu/stanford/nlp/classify/ShiftParamsLogisticClassifierFactory/trainClassifier:

#edu/stanford/nlp/classify/ShiftParamsLogisticClassifierFactory/trainWeights:

#edu/stanford/nlp/classify/ShiftParamsLogisticClassifierFactory/augmentFeatureMatrix:

#edu/stanford/nlp/classify/ShiftParamsLogisticClassifierFactory/convertLabels:
edu.stanford.nlp.classify.ShiftParamsLogisticClassifierFactory:
edu.stanford.nlp.classify.ColumnDataClassifier$Flags:
edu.stanford.nlp.classify.LinearClassifierFactory$NegativeScorer:

#edu/stanford/nlp/classify/LogConditionalObjectiveFunction/to2D:

#edu/stanford/nlp/classify/LogConditionalObjectiveFunction/calculate:

#edu/stanford/nlp/classify/LogConditionalObjectiveFunction/calculateStochastic:

#edu/stanford/nlp/classify/LogConditionalObjectiveFunction/calculateSCL:

#edu/stanford/nlp/classify/LogConditionalObjectiveFunction/calculateCL:

#edu/stanford/nlp/classify/LogConditionalObjectiveFunction/calculateCLbatch:

#edu/stanford/nlp/classify/LogConditionalObjectiveFunction/calculateCLiterable:

#edu/stanford/nlp/classify/LogConditionalObjectiveFunction/calculateStochasticFiniteDifference:

#edu/stanford/nlp/classify/LogConditionalObjectiveFunction/calculateStochasticGradientLocal:

#edu/stanford/nlp/classify/LogConditionalObjectiveFunction/valueAt:

#edu/stanford/nlp/classify/LogConditionalObjectiveFunction/calculateStochasticUpdate:

#edu/stanford/nlp/classify/LogConditionalObjectiveFunction/calculateStochasticGradient:

#edu/stanford/nlp/classify/LogConditionalObjectiveFunction/calculateStochasticAlgorithmicDifferentiation:

#edu/stanford/nlp/classify/LogConditionalObjectiveFunction/rvfcalculate:

#edu/stanford/nlp/classify/LogConditionalObjectiveFunction/<init>:
edu.stanford.nlp.classify.LogConditionalObjectiveFunction:

#edu/stanford/nlp/classify/CrossValidator/<init>:

#edu/stanford/nlp/classify/CrossValidator/computeAverage:

#edu/stanford/nlp/classify/CrossValidator/main:
edu.stanford.nlp.classify.CrossValidator:

#edu/stanford/nlp/classify/Dataset/split:

#edu/stanford/nlp/classify/Dataset/getRandomSubDataset:

#edu/stanford/nlp/classify/Dataset/readSVMLightFormat:

#edu/stanford/nlp/classify/Dataset/svmLightLineToDatum:

#edu/stanford/nlp/classify/Dataset/getFeatureCounter:

#edu/stanford/nlp/classify/Dataset/getL1NormalizedTFIDFDatum:

#edu/stanford/nlp/classify/Dataset/getL1NormalizedTFIDFDataset:

#edu/stanford/nlp/classify/Dataset/ensureSize:

#edu/stanford/nlp/classify/Dataset/addFeatures:

#edu/stanford/nlp/classify/Dataset/getRVFDatum:

#edu/stanford/nlp/classify/Dataset/toSummaryStatistics:

#edu/stanford/nlp/classify/Dataset/applyFeatureCountThreshold:

#edu/stanford/nlp/classify/Dataset/printFullFeatureMatrix:

#edu/stanford/nlp/classify/Dataset/printSparseFeatureMatrix:

#edu/stanford/nlp/classify/Dataset/changeLabelIndex:

#edu/stanford/nlp/classify/Dataset/changeFeatureIndex:

#edu/stanford/nlp/classify/Dataset/selectFeatures:

#edu/stanford/nlp/classify/Dataset/getInformationGains:

#edu/stanford/nlp/classify/Dataset/updateLabels:

#edu/stanford/nlp/classify/Dataset/printSVMLightFormat:
edu.stanford.nlp.classify.Dataset:

#edu/stanford/nlp/classify/KNNClassifier/addInstances:

#edu/stanford/nlp/classify/KNNClassifier/classOf:

#edu/stanford/nlp/classify/KNNClassifier/scoresOf:
edu.stanford.nlp.classify.KNNClassifier:

#edu/stanford/nlp/classify/LinearClassifierFactory$8/create:
edu.stanford.nlp.classify.LinearClassifierFactory$8:

#edu/stanford/nlp/classify/LogisticClassifier/toString:

#edu/stanford/nlp/classify/LogisticClassifier/weightsAsCounter:

#edu/stanford/nlp/classify/LogisticClassifier/classOf:

#edu/stanford/nlp/classify/LogisticClassifier/classOf:

#edu/stanford/nlp/classify/LogisticClassifier/classOf:

#edu/stanford/nlp/classify/LogisticClassifier/scoreOf:

#edu/stanford/nlp/classify/LogisticClassifier/scoreOf:

#edu/stanford/nlp/classify/LogisticClassifier/justificationOf:

#edu/stanford/nlp/classify/LogisticClassifier/justificationOf:

#edu/stanford/nlp/classify/LogisticClassifier/scoresOf:

#edu/stanford/nlp/classify/LogisticClassifier/probabilityOf:

#edu/stanford/nlp/classify/LogisticClassifier/probabilityOf:

#edu/stanford/nlp/classify/LogisticClassifier/probabilityOf:

#edu/stanford/nlp/classify/LogisticClassifier/trainWeightedData:

#edu/stanford/nlp/classify/LogisticClassifier/train:

#edu/stanford/nlp/classify/LogisticClassifier/main:
edu.stanford.nlp.classify.LogisticClassifier:

#edu/stanford/nlp/classify/BiasedLogConditionalObjectiveFunction/to2D:

#edu/stanford/nlp/classify/BiasedLogConditionalObjectiveFunction/calculate:
edu.stanford.nlp.classify.BiasedLogConditionalObjectiveFunction:

#edu/stanford/nlp/classify/LogisticClassifierFactory/trainWeightedData:

#edu/stanford/nlp/classify/LogisticClassifierFactory/trainClassifier:
edu.stanford.nlp.classify.LogisticClassifierFactory:
edu.stanford.nlp.classify.ProbabilisticClassifierCreator:

#edu/stanford/nlp/classify/SVMLightClassifierFactory/readModel:

#edu/stanford/nlp/classify/SVMLightClassifierFactory/getWeights:

#edu/stanford/nlp/classify/SVMLightClassifierFactory/convertWeights:

#edu/stanford/nlp/classify/SVMLightClassifierFactory/convertSVMLightWeights:

#edu/stanford/nlp/classify/SVMLightClassifierFactory/convertSVMStructWeights:

#edu/stanford/nlp/classify/SVMLightClassifierFactory/fitSigmoid:

#edu/stanford/nlp/classify/SVMLightClassifierFactory/trainClassifier:

#edu/stanford/nlp/classify/SVMLightClassifierFactory/trainClassifierBasic:

#edu/stanford/nlp/classify/SVMLightClassifierFactory/lambda$crossValidateSetC$1:
edu.stanford.nlp.classify.SVMLightClassifierFactory:
edu.stanford.nlp.classify.ClassifierFactory:

#edu/stanford/nlp/classify/NaiveBayesClassifierFactory/trainClassifier:

#edu/stanford/nlp/classify/NaiveBayesClassifierFactory/trainClassifier:

#edu/stanford/nlp/classify/NaiveBayesClassifierFactory/trainWeights:

#edu/stanford/nlp/classify/NaiveBayesClassifierFactory/trainWeightsJL:

#edu/stanford/nlp/classify/NaiveBayesClassifierFactory/trainWeightsUCL:

#edu/stanford/nlp/classify/NaiveBayesClassifierFactory/numberValues:

#edu/stanford/nlp/classify/NaiveBayesClassifierFactory/trainClassifier:
edu.stanford.nlp.classify.NaiveBayesClassifierFactory:

#edu/stanford/nlp/classify/ShiftParamsLogisticObjectiveFunction/calculate:

#edu/stanford/nlp/classify/ShiftParamsLogisticObjectiveFunction/getRegularizerParamRange:
edu.stanford.nlp.classify.ShiftParamsLogisticObjectiveFunction:

#edu/stanford/nlp/classify/PRCurve/<init>:

#edu/stanford/nlp/classify/PRCurve/<init>:

#edu/stanford/nlp/classify/PRCurve/init:

#edu/stanford/nlp/classify/PRCurve/initMC:

#edu/stanford/nlp/classify/PRCurve/init:

#edu/stanford/nlp/classify/PRCurve/precision:

#edu/stanford/nlp/classify/PRCurve/f1:

#edu/stanford/nlp/classify/PRCurve/logPrecision:

#edu/stanford/nlp/classify/PRCurve/optFmeasure:

#edu/stanford/nlp/classify/PRCurve/fmeasure:

#edu/stanford/nlp/classify/PRCurve/logLikelihood:

#edu/stanford/nlp/classify/PRCurve/cwa:

#edu/stanford/nlp/classify/PRCurve/cwaArray:

#edu/stanford/nlp/classify/PRCurve/optimalCwaArray:

#edu/stanford/nlp/classify/PRCurve/optimalCwa:

#edu/stanford/nlp/classify/PRCurve/correct:

#edu/stanford/nlp/classify/PRCurve/main:
edu.stanford.nlp.classify.PRCurve:

#edu/stanford/nlp/classify/NaiveBayesClassifier/scoresOf:

#edu/stanford/nlp/classify/NaiveBayesClassifier/<init>:

#edu/stanford/nlp/classify/NaiveBayesClassifier/accuracy:

#edu/stanford/nlp/classify/NaiveBayesClassifier/initZeros:
edu.stanford.nlp.classify.NaiveBayesClassifier:

#edu/stanford/nlp/classify/SemiSupervisedLogConditionalObjectiveFunction/calculate:

#edu/stanford/nlp/classify/SemiSupervisedLogConditionalObjectiveFunction/<init>:
edu.stanford.nlp.classify.SemiSupervisedLogConditionalObjectiveFunction:

#edu/stanford/nlp/classify/RVFDataset$1/hasNext:

#edu/stanford/nlp/classify/RVFDataset$1/next:
edu.stanford.nlp.classify.RVFDataset$1:

#edu/stanford/nlp/classify/NaiveBayesClassifierFactory$NBWeights/<init>:
edu.stanford.nlp.classify.NaiveBayesClassifierFactory$NBWeights:

#edu/stanford/nlp/classify/BiasedLogisticObjectiveFunction/calculate:

#edu/stanford/nlp/classify/BiasedLogisticObjectiveFunction/calculateRVF:
edu.stanford.nlp.classify.BiasedLogisticObjectiveFunction:

#edu/stanford/nlp/classify/LogConditionalObjectiveFunction$CLBatchDerivativeCalculation/run:
edu.stanford.nlp.classify.LogConditionalObjectiveFunction$CLBatchDerivativeCalculation:

#edu/stanford/nlp/classify/LinearClassifierFactory$LinearClassifierCreator/createLinearClassifier:
edu.stanford.nlp.classify.LinearClassifierFactory$LinearClassifierCreator:

#edu/stanford/nlp/classify/LinearClassifier/weight:

#edu/stanford/nlp/classify/LinearClassifier/scoresOf:

#edu/stanford/nlp/classify/LinearClassifier/scoresOf:

#edu/stanford/nlp/classify/LinearClassifier/scoreOf:

#edu/stanford/nlp/classify/LinearClassifier/scoresOf:

#edu/stanford/nlp/classify/LinearClassifier/scoresOfRVFDatum:

#edu/stanford/nlp/classify/LinearClassifier/scoreOfRVFDatum:

#edu/stanford/nlp/classify/LinearClassifier/scoreOfRVFDatum:

#edu/stanford/nlp/classify/LinearClassifier/scoreOf:

#edu/stanford/nlp/classify/LinearClassifier/probabilityOf:

#edu/stanford/nlp/classify/LinearClassifier/probabilityOfRVFDatum:

#edu/stanford/nlp/classify/LinearClassifier/probabilityOf:

#edu/stanford/nlp/classify/LinearClassifier/logProbabilityOf:

#edu/stanford/nlp/classify/LinearClassifier/probabilityOf:

#edu/stanford/nlp/classify/LinearClassifier/getLabelIndices:

#edu/stanford/nlp/classify/LinearClassifier/getFeatureCount:

#edu/stanford/nlp/classify/LinearClassifier/getFeatureCount:

#edu/stanford/nlp/classify/LinearClassifier/getFeatureCountLabelIndices:

#edu/stanford/nlp/classify/LinearClassifier/getTopFeatures:

#edu/stanford/nlp/classify/LinearClassifier/getTopFeaturesLabelIndices:

#edu/stanford/nlp/classify/LinearClassifier/topFeaturesToString:

#edu/stanford/nlp/classify/LinearClassifier/toBiggestWeightFeaturesString:

#edu/stanford/nlp/classify/LinearClassifier/toDistributionString:

#edu/stanford/nlp/classify/LinearClassifier/toHistogramString:

#edu/stanford/nlp/classify/LinearClassifier/toString:

#edu/stanford/nlp/classify/LinearClassifier/bucketizeValue:

#edu/stanford/nlp/classify/LinearClassifier/printHistCounts:

#edu/stanford/nlp/classify/LinearClassifier/justificationOfRVFDatum:

#edu/stanford/nlp/classify/LinearClassifier/justificationOf:

#edu/stanford/nlp/classify/LinearClassifier/justificationOf:

#edu/stanford/nlp/classify/LinearClassifier/weightsAsMapOfCounters:

#edu/stanford/nlp/classify/LinearClassifier/scoresOf:

#edu/stanford/nlp/classify/LinearClassifier/classOf:

#edu/stanford/nlp/classify/LinearClassifier/<init>:

#edu/stanford/nlp/classify/LinearClassifier/makeWeightCounter:

#edu/stanford/nlp/classify/LinearClassifier/<init>:

#edu/stanford/nlp/classify/LinearClassifier/saveToFilename:
edu.stanford.nlp.classify.LinearClassifier:

#edu/stanford/nlp/classify/LinearClassifierFactory$9/create:
edu.stanford.nlp.classify.LinearClassifierFactory$9:
edu.stanford.nlp.classify.CrossValidator$SavedState:
edu.stanford.nlp.classify.AbstractLinearClassifierFactory:

#edu/stanford/nlp/classify/demo/MnistConverter/main:
edu.stanford.nlp.classify.demo.MnistConverter:

#edu/stanford/nlp/classify/demo/ClassifierDemo/main:

#edu/stanford/nlp/classify/demo/ClassifierDemo/demonstrateSerialization:

#edu/stanford/nlp/classify/demo/ClassifierDemo/demonstrateSerializationColumnDataClassifier:
edu.stanford.nlp.classify.demo.ClassifierDemo:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass$LabelWithSeedWords/<init>:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass$LabelWithSeedWords/call:
edu.stanford.nlp.patterns.GetPatternsFromDataMultiClass$LabelWithSeedWords:

#edu/stanford/nlp/patterns/ScorePhrasesLearnFeatWt$PhrasePair/<init>:

#edu/stanford/nlp/patterns/ScorePhrasesLearnFeatWt$PhrasePair/equals:
edu.stanford.nlp.patterns.ScorePhrasesLearnFeatWt$PhrasePair:

#edu/stanford/nlp/patterns/PatternFactory/setUp:

#edu/stanford/nlp/patterns/PatternFactory/doNotUse:

#edu/stanford/nlp/patterns/PatternFactory/getPatternsAroundTokens:
edu.stanford.nlp.patterns.PatternFactory:
edu.stanford.nlp.patterns.PatternsAnnotations$PatternLabel3:
edu.stanford.nlp.patterns.PatternsAnnotations$ProcessedTextAnnotation:
edu.stanford.nlp.patterns.PatternsAnnotations$PatternLabel1:
edu.stanford.nlp.patterns.PhraseScorer$Normalization:
edu.stanford.nlp.patterns.ConstantsAndVariables$PatternIndexWay:

#edu/stanford/nlp/patterns/CandidatePhrase/createOrGet:

#edu/stanford/nlp/patterns/CandidatePhrase/createOrGet:

#edu/stanford/nlp/patterns/CandidatePhrase/createOrGet:

#edu/stanford/nlp/patterns/CandidatePhrase/<init>:

#edu/stanford/nlp/patterns/CandidatePhrase/equals:

#edu/stanford/nlp/patterns/CandidatePhrase/compareTo:

#edu/stanford/nlp/patterns/CandidatePhrase/convertStringPhrases:

#edu/stanford/nlp/patterns/CandidatePhrase/convertToString:

#edu/stanford/nlp/patterns/CandidatePhrase/addFeature:

#edu/stanford/nlp/patterns/CandidatePhrase/addFeatures:
edu.stanford.nlp.patterns.CandidatePhrase:

#edu/stanford/nlp/patterns/EditDistanceDamerauLevenshteinLike/editDistance:

#edu/stanford/nlp/patterns/EditDistanceDamerauLevenshteinLike/editDistanceWithBuffers:

#edu/stanford/nlp/patterns/EditDistanceDamerauLevenshteinLike/iterateOverStripe:

#edu/stanford/nlp/patterns/EditDistanceDamerauLevenshteinLike/initMemoiseTables:

#edu/stanford/nlp/patterns/EditDistanceDamerauLevenshteinLike/min:
edu.stanford.nlp.patterns.EditDistanceDamerauLevenshteinLike:

#edu/stanford/nlp/patterns/ScorePhrasesAverageFeatures/scorePhrases:
edu.stanford.nlp.patterns.ScorePhrasesAverageFeatures:
edu.stanford.nlp.patterns.PatternsAnnotations$MatchedPattern:
edu.stanford.nlp.patterns.PatternsAnnotations$PatternHumanLabel9:

#edu/stanford/nlp/patterns/Data/computeRawFreqIfNull:

#edu/stanford/nlp/patterns/Data/computeRawFreqIfNull:

#edu/stanford/nlp/patterns/Data/loadDomainNGrams:
edu.stanford.nlp.patterns.Data:
edu.stanford.nlp.patterns.PatternsAnnotations$PatternLabel5:

#edu/stanford/nlp/patterns/InvertedIndexByTokens/add:

#edu/stanford/nlp/patterns/InvertedIndexByTokens/add:

#edu/stanford/nlp/patterns/InvertedIndexByTokens/add:

#edu/stanford/nlp/patterns/InvertedIndexByTokens/getFileSentIds:

#edu/stanford/nlp/patterns/InvertedIndexByTokens/getFileSentIdsFromPats:

#edu/stanford/nlp/patterns/InvertedIndexByTokens/createIndex:
edu.stanford.nlp.patterns.InvertedIndexByTokens:

#edu/stanford/nlp/patterns/PhraseScorer/getPatTFIDFScore:

#edu/stanford/nlp/patterns/PhraseScorer/getGoogleNgramScore:

#edu/stanford/nlp/patterns/PhraseScorer/getDomainNgramScore:

#edu/stanford/nlp/patterns/PhraseScorer/getDistSimWtScore:

#edu/stanford/nlp/patterns/PhraseScorer/wordShape:

#edu/stanford/nlp/patterns/PhraseScorer/getWordShapeScore:

#edu/stanford/nlp/patterns/PhraseScorer/getDictOddsScore:

#edu/stanford/nlp/patterns/PhraseScorer/getPhraseWeightFromWords:
edu.stanford.nlp.patterns.PhraseScorer:

#edu/stanford/nlp/patterns/ScorePhrasesLearnFeatWt/<init>:

#edu/stanford/nlp/patterns/ScorePhrasesLearnFeatWt/learnClassifier:

#edu/stanford/nlp/patterns/ScorePhrasesLearnFeatWt/printReasonForChoosing:

#edu/stanford/nlp/patterns/ScorePhrasesLearnFeatWt/scorePhrases:

#edu/stanford/nlp/patterns/ScorePhrasesLearnFeatWt/scorePhrases:

#edu/stanford/nlp/patterns/ScorePhrasesLearnFeatWt/getRandomBoolean:

#edu/stanford/nlp/patterns/ScorePhrasesLearnFeatWt/wordClass:

#edu/stanford/nlp/patterns/ScorePhrasesLearnFeatWt/getAllLabeledWordsCluster:

#edu/stanford/nlp/patterns/ScorePhrasesLearnFeatWt/computeSimWithWordVectors:

#edu/stanford/nlp/patterns/ScorePhrasesLearnFeatWt/computeSimWithWordVectors:

#edu/stanford/nlp/patterns/ScorePhrasesLearnFeatWt/computeSimWithWordCluster:

#edu/stanford/nlp/patterns/ScorePhrasesLearnFeatWt/chooseUnknownAsNegatives:

#edu/stanford/nlp/patterns/ScorePhrasesLearnFeatWt/chooseUnknownPhrases:

#edu/stanford/nlp/patterns/ScorePhrasesLearnFeatWt/hasElement:

#edu/stanford/nlp/patterns/ScorePhrasesLearnFeatWt/numLabeledTokens:

#edu/stanford/nlp/patterns/ScorePhrasesLearnFeatWt/getAllPossibleNegativePhrases:

#edu/stanford/nlp/patterns/ScorePhrasesLearnFeatWt/choosedatums:

#edu/stanford/nlp/patterns/ScorePhrasesLearnFeatWt/getPhraseFeaturesForPattern:

#edu/stanford/nlp/patterns/ScorePhrasesLearnFeatWt/scoreUsingClassifer:

#edu/stanford/nlp/patterns/ScorePhrasesLearnFeatWt/getFeatures:

#edu/stanford/nlp/patterns/ScorePhrasesLearnFeatWt/lambda$chooseUnknownPhrases$1:

#edu/stanford/nlp/patterns/ScorePhrasesLearnFeatWt/lambda$computeSimWithWordVectors$0:
edu.stanford.nlp.patterns.ScorePhrasesLearnFeatWt:
edu.stanford.nlp.patterns.PatternsAnnotations$PatternLabel7:
edu.stanford.nlp.patterns.PatternsAnnotations:

#edu/stanford/nlp/patterns/ConstantsAndVariables/getAllOptions:

#edu/stanford/nlp/patterns/ConstantsAndVariables/hasSeedWordOrOtherSem:

#edu/stanford/nlp/patterns/ConstantsAndVariables/<init>:

#edu/stanford/nlp/patterns/ConstantsAndVariables/<init>:

#edu/stanford/nlp/patterns/ConstantsAndVariables/<init>:

#edu/stanford/nlp/patterns/ConstantsAndVariables/<init>:

#edu/stanford/nlp/patterns/ConstantsAndVariables/setUp:

#edu/stanford/nlp/patterns/ConstantsAndVariables/listFileIncludingItself:

#edu/stanford/nlp/patterns/ConstantsAndVariables/readGoldEntities:

#edu/stanford/nlp/patterns/ConstantsAndVariables/addWordShapes:

#edu/stanford/nlp/patterns/ConstantsAndVariables/getLearnedWords:

#edu/stanford/nlp/patterns/ConstantsAndVariables/getLearnedWordsAsJson:

#edu/stanford/nlp/patterns/ConstantsAndVariables/getLearnedWordsAsJsonLastIteration:

#edu/stanford/nlp/patterns/ConstantsAndVariables/getSetWordsAsJson:

#edu/stanford/nlp/patterns/ConstantsAndVariables/getEditDist:

#edu/stanford/nlp/patterns/ConstantsAndVariables/getEditDistanceFromThisClass:

#edu/stanford/nlp/patterns/ConstantsAndVariables/getEditDistanceFromOtherClasses:

#edu/stanford/nlp/patterns/ConstantsAndVariables/getEditDistanceScoresOtherClass:

#edu/stanford/nlp/patterns/ConstantsAndVariables/getEditDistanceScoresOtherClassThreshold:

#edu/stanford/nlp/patterns/ConstantsAndVariables/getEditDistanceScoresThisClassThreshold:

#edu/stanford/nlp/patterns/ConstantsAndVariables/getEditDistanceScoresThisClass:

#edu/stanford/nlp/patterns/ConstantsAndVariables/isFuzzyMatch:

#edu/stanford/nlp/patterns/ConstantsAndVariables/containsFuzzy:

#edu/stanford/nlp/patterns/ConstantsAndVariables/addSeedWords:

#edu/stanford/nlp/patterns/ConstantsAndVariables/lambda$getAllOptions$0:
edu.stanford.nlp.patterns.ConstantsAndVariables:
edu.stanford.nlp.patterns.PatternsAnnotations$PatternLabel10:

#edu/stanford/nlp/patterns/TextAnnotationPatterns/getAllAnnotations:

#edu/stanford/nlp/patterns/TextAnnotationPatterns/getAllAnnotations:

#edu/stanford/nlp/patterns/TextAnnotationPatterns/suggestPhrasesTest:

#edu/stanford/nlp/patterns/TextAnnotationPatterns/resetPatternLabelsInSents:

#edu/stanford/nlp/patterns/TextAnnotationPatterns/setProperties:

#edu/stanford/nlp/patterns/TextAnnotationPatterns/setUpProperties:

#edu/stanford/nlp/patterns/TextAnnotationPatterns/processText:

#edu/stanford/nlp/patterns/TextAnnotationPatterns/changeAnnotation:

#edu/stanford/nlp/patterns/TextAnnotationPatterns/doNewPhrases:
edu.stanford.nlp.patterns.TextAnnotationPatterns:
edu.stanford.nlp.patterns.ScorePhrasesLearnFeatWt$ClassifierType:

#edu/stanford/nlp/patterns/LuceneSentenceIndex/setIndexReaderSearcher:

#edu/stanford/nlp/patterns/LuceneSentenceIndex/queryIndexGetSentences:

#edu/stanford/nlp/patterns/LuceneSentenceIndex/add:

#edu/stanford/nlp/patterns/LuceneSentenceIndex/queryIndex:

#edu/stanford/nlp/patterns/LuceneSentenceIndex/listAllDocuments:

#edu/stanford/nlp/patterns/LuceneSentenceIndex/readProtoBufAnnotation:

#edu/stanford/nlp/patterns/LuceneSentenceIndex/getProtoBufAnnotation:

#edu/stanford/nlp/patterns/LuceneSentenceIndex/add:

#edu/stanford/nlp/patterns/LuceneSentenceIndex/finishUpdating:

#edu/stanford/nlp/patterns/LuceneSentenceIndex/setIndexWriter:

#edu/stanford/nlp/patterns/LuceneSentenceIndex/closeIndexWriter:

#edu/stanford/nlp/patterns/LuceneSentenceIndex/saveIndex:

#edu/stanford/nlp/patterns/LuceneSentenceIndex/createIndex:
edu.stanford.nlp.patterns.LuceneSentenceIndex:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass$CalculateSufficientStatsThreads/call:
edu.stanford.nlp.patterns.GetPatternsFromDataMultiClass$CalculateSufficientStatsThreads:
edu.stanford.nlp.patterns.SQLConnection:
edu.stanford.nlp.patterns.PatternsAnnotations$PatternLabel2:
edu.stanford.nlp.patterns.PatternsAnnotations$PatternLabel6:
edu.stanford.nlp.patterns.PatternsAnnotations$PatternHumanLabel8:
edu.stanford.nlp.patterns.PatternsAnnotations$LongestMatchedPhraseForEachLabel:
edu.stanford.nlp.patterns.GetPatternsFromDataMultiClass$WordScoring:
edu.stanford.nlp.patterns.PatternsAnnotations$MatchedPhrases:
edu.stanford.nlp.patterns.TextAnnotationPatternsInterface$Actions:
edu.stanford.nlp.patterns.PatternsAnnotations$SeedLabeledOrNot:
edu.stanford.nlp.patterns.SentenceIndex:
edu.stanford.nlp.patterns.PatternsAnnotations$PatternLabel4:
edu.stanford.nlp.patterns.PatternsAnnotations$PatternLabel8:

#edu/stanford/nlp/patterns/ScorePatternsRatioModifiedFreq/score:

#edu/stanford/nlp/patterns/ScorePatternsRatioModifiedFreq/convert2OneDim:
edu.stanford.nlp.patterns.ScorePatternsRatioModifiedFreq:

#edu/stanford/nlp/patterns/ConstantsAndVariables$DataSentsIterator/<init>:

#edu/stanford/nlp/patterns/ConstantsAndVariables$DataSentsIterator/hasNext:

#edu/stanford/nlp/patterns/ConstantsAndVariables$DataSentsIterator/next:
edu.stanford.nlp.patterns.ConstantsAndVariables$DataSentsIterator:
edu.stanford.nlp.patterns.PhraseScorer$Similarities:
edu.stanford.nlp.patterns.PatternsAnnotations$Features:
edu.stanford.nlp.patterns.GetPatternsFromDataMultiClass$Flags:

#edu/stanford/nlp/patterns/ScorePhrases/chooseTopWords:

#edu/stanford/nlp/patterns/ScorePhrases/removeKeys:

#edu/stanford/nlp/patterns/ScorePhrases/numNonRedundantPatterns:

#edu/stanford/nlp/patterns/ScorePhrases/learnNewPhrases:

#edu/stanford/nlp/patterns/ScorePhrases/runParallelApplyPats:

#edu/stanford/nlp/patterns/ScorePhrases/getSentences:

#edu/stanford/nlp/patterns/ScorePhrases/applyPats:

#edu/stanford/nlp/patterns/ScorePhrases/statsWithoutApplyingPatterns:

#edu/stanford/nlp/patterns/ScorePhrases/learnNewPhrasesPrivate:

#edu/stanford/nlp/patterns/ScorePhrases/lambda$learnNewPhrasesPrivate$0:
edu.stanford.nlp.patterns.ScorePhrases:
edu.stanford.nlp.patterns.PatternsAnnotations$PatternHumanLabel4:
edu.stanford.nlp.patterns.PatternsAnnotations$PatternHumanLabel6:

#edu/stanford/nlp/patterns/DataInstance/getNewInstance:
edu.stanford.nlp.patterns.DataInstance:
edu.stanford.nlp.patterns.PatternsAnnotations$MatchedPatterns:
edu.stanford.nlp.patterns.EditDistanceDamerauLevenshteinLike$2:
edu.stanford.nlp.patterns.PatternsAnnotations$PatternHumanLabel2:
edu.stanford.nlp.patterns.TextAnnotationPatternsInterface$1:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass$1/apply:
edu.stanford.nlp.patterns.GetPatternsFromDataMultiClass$1:
edu.stanford.nlp.patterns.PatternsAnnotations$PatternHumanLabel7:

#edu/stanford/nlp/patterns/Pattern/sameGenre:

#edu/stanford/nlp/patterns/Pattern/subsumes:

#edu/stanford/nlp/patterns/Pattern/getContext:

#edu/stanford/nlp/patterns/Pattern/getRelevantWordsBase:

#edu/stanford/nlp/patterns/Pattern/getRelevantWordsBase:
edu.stanford.nlp.patterns.Pattern:
edu.stanford.nlp.patterns.ScorePatterns:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/<init>:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/<init>:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/setUpConstructor:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/removeOverLappingLabels:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/runPOSNERParseOnTokens:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/runPOSNEROnTokens:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/tokenize:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/inferParentParseTag:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/getSubListIndex:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/getThreadBatches:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/runLabelSeedWords:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/getFeatures:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/addToMatchedTokensByPhrase:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/processSents:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/readSavedPatternsAndIndex:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/getPatterns:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/getPatternScoringClass:
Warning: Method:edu.stanford.nlp.patterns.GetPatternsFromDataMultiClass.splitIntoNumThreadsWithSampling has auto edges.

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/calculateSufficientStats:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/addStats:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/enforceMinSupportRequirements:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/removeLearnedPatterns:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/normalizeSoftMaxMinMaxScores:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/labelWords:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/iterateExtractApply:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/writeMatchedTokensAndSents:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/matchedTokensByPhraseJsonString:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/matchedTokensByPhraseJsonString:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/jsonArrayBuilderFromMapCounter:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/iterateExtractApply4Label:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/writePatternsToFile:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/writeWordsToFile:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/readLearnedWordsFromFile:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/countResultsPerEntity:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/countResultsPerToken:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/countResults:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/writeLabelDataSents:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/writeLabeledData:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/writeColumnOutput:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/writeColumnOutputSents:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/evaluate:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/getAllFiles:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/getPrecisionRecall:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/getNonBackgroundLabels:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/readSeedWordsFromJSONString:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/readSeedWords:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/readSeedWords:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/getAllOptions:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/processSents:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/saveModel:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/evaluate:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/run:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/runNineYards:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/addFolder:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/loadFromSavedPatternsWordsDir:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/readClassesInEnv:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/writeClassesInEnv:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/lambda$labelWords$1:

#edu/stanford/nlp/patterns/GetPatternsFromDataMultiClass/lambda$setUpConstructor$0:
edu.stanford.nlp.patterns.GetPatternsFromDataMultiClass:

#edu/stanford/nlp/patterns/TextAnnotationPatternsInterface$PerformActionUpdateModel/run:
edu.stanford.nlp.patterns.TextAnnotationPatternsInterface$PerformActionUpdateModel:

#edu/stanford/nlp/patterns/ConstantsAndVariables$ScorePhraseMeasures/create:

#edu/stanford/nlp/patterns/ConstantsAndVariables$ScorePhraseMeasures/equals:

#edu/stanford/nlp/patterns/ConstantsAndVariables$ScorePhraseMeasures/compareTo:
edu.stanford.nlp.patterns.ConstantsAndVariables$ScorePhraseMeasures:

#edu/stanford/nlp/patterns/ScorePhrasesLearnFeatWt$ComputeSim/call:
edu.stanford.nlp.patterns.ScorePhrasesLearnFeatWt$ComputeSim:
edu.stanford.nlp.patterns.PatternsAnnotations$PatternLabel9:
edu.stanford.nlp.patterns.PatternsAnnotations$PatternHumanLabel5:

#edu/stanford/nlp/patterns/SPIEDServlet/quote:

#edu/stanford/nlp/patterns/SPIEDServlet/run:

#edu/stanford/nlp/patterns/SPIEDServlet/doGet:
edu.stanford.nlp.patterns.SPIEDServlet:
edu.stanford.nlp.patterns.PatternFactory$PatternType:
edu.stanford.nlp.patterns.GetPatternsFromDataMultiClass$PatternScoring:
Warning: Subsumption vector is null for dua:(1,1, clientNumber)

#edu/stanford/nlp/patterns/TextAnnotationPatternsInterface/main:
edu.stanford.nlp.patterns.TextAnnotationPatternsInterface:
Warning: Subsumption vector is null for dua:(1,1, clientNumber)

#edu/stanford/nlp/patterns/ScorePhrasesLearnFeatWt$ChooseDatumsThread/call:
edu.stanford.nlp.patterns.ScorePhrasesLearnFeatWt$ChooseDatumsThread:
edu.stanford.nlp.patterns.PatternsAnnotations$PatternHumanLabel1:
edu.stanford.nlp.patterns.PatternsAnnotations$PatternHumanLabel10:
edu.stanford.nlp.patterns.ConstantsAndVariables$PatternForEachTokenWay:
edu.stanford.nlp.patterns.EditDistanceDamerauLevenshteinLike$1:
edu.stanford.nlp.patterns.EditDistanceDamerauLevenshteinLike$3:
edu.stanford.nlp.patterns.PatternsAnnotations$OtherSemanticLabel:
edu.stanford.nlp.patterns.PatternsAnnotations$PatternHumanLabel3:

#edu/stanford/nlp/patterns/ScorePatternsFreqBased/score:
edu.stanford.nlp.patterns.ScorePatternsFreqBased:

#edu/stanford/nlp/patterns/surface/SurfacePattern/toString:

#edu/stanford/nlp/patterns/surface/SurfacePattern/toString:

#edu/stanford/nlp/patterns/surface/SurfacePattern/getPrevContextStr:

#edu/stanford/nlp/patterns/surface/SurfacePattern/getNextContextStr:

#edu/stanford/nlp/patterns/surface/SurfacePattern/equalContext:

#edu/stanford/nlp/patterns/surface/SurfacePattern/equals:

#edu/stanford/nlp/patterns/surface/SurfacePattern/getSimplerTokens:

#edu/stanford/nlp/patterns/surface/SurfacePattern/toStringSimple:

#edu/stanford/nlp/patterns/surface/SurfacePattern/subsumesArray:

#edu/stanford/nlp/patterns/surface/SurfacePattern/subsumes:

#edu/stanford/nlp/patterns/surface/SurfacePattern/subsumesEitherWay:

#edu/stanford/nlp/patterns/surface/SurfacePattern/sameRestrictions:

#edu/stanford/nlp/patterns/surface/SurfacePattern/compareTo:

#edu/stanford/nlp/patterns/surface/SurfacePattern/getPreviousContextLen:

#edu/stanford/nlp/patterns/surface/SurfacePattern/getNextContextLen:

#edu/stanford/nlp/patterns/surface/SurfacePattern/sameLength:
edu.stanford.nlp.patterns.surface.SurfacePattern:

#edu/stanford/nlp/patterns/surface/LearnImportantFeatures/setUp:

#edu/stanford/nlp/patterns/surface/LearnImportantFeatures/getRandomBoolean:

#edu/stanford/nlp/patterns/surface/LearnImportantFeatures/sample:

#edu/stanford/nlp/patterns/surface/LearnImportantFeatures/getTopFeatures:

#edu/stanford/nlp/patterns/surface/LearnImportantFeatures/getDatum:
edu.stanford.nlp.patterns.surface.LearnImportantFeatures:
edu.stanford.nlp.patterns.surface.SurfacePatternFactory$Genre:

#edu/stanford/nlp/patterns/surface/ApplyPatternsMulti/call:

#edu/stanford/nlp/patterns/surface/ApplyPatternsMulti/containsStopWord:
edu.stanford.nlp.patterns.surface.ApplyPatternsMulti:

#edu/stanford/nlp/patterns/surface/AnnotatedTextReader/parseColumnFile:

#edu/stanford/nlp/patterns/surface/AnnotatedTextReader/parseFile:
edu.stanford.nlp.patterns.surface.AnnotatedTextReader:

#edu/stanford/nlp/patterns/surface/PatternsForEachTokenInMemory/<init>:

#edu/stanford/nlp/patterns/surface/PatternsForEachTokenInMemory/addPatterns:

#edu/stanford/nlp/patterns/surface/PatternsForEachTokenInMemory/addPatterns:

#edu/stanford/nlp/patterns/surface/PatternsForEachTokenInMemory/getPatternsForAllTokens:

#edu/stanford/nlp/patterns/surface/PatternsForEachTokenInMemory/getPatternsForAllTokens:
edu.stanford.nlp.patterns.surface.PatternsForEachTokenInMemory:
edu.stanford.nlp.patterns.surface.PatternsForEachToken$1:

#edu/stanford/nlp/patterns/surface/PatternsForEachTokenLucene/<init>:

#edu/stanford/nlp/patterns/surface/PatternsForEachTokenLucene/checkClean:

#edu/stanford/nlp/patterns/surface/PatternsForEachTokenLucene/setIndexReaderSearcher:

#edu/stanford/nlp/patterns/surface/PatternsForEachTokenLucene/addPatterns:

#edu/stanford/nlp/patterns/surface/PatternsForEachTokenLucene/setIndexWriter:

#edu/stanford/nlp/patterns/surface/PatternsForEachTokenLucene/closeIndexWriter:

#edu/stanford/nlp/patterns/surface/PatternsForEachTokenLucene/load:

#edu/stanford/nlp/patterns/surface/PatternsForEachTokenLucene/addPatterns:

#edu/stanford/nlp/patterns/surface/PatternsForEachTokenLucene/getPatternsForAllTokens:

#edu/stanford/nlp/patterns/surface/PatternsForEachTokenLucene/getPatternsForAllTokens:
edu.stanford.nlp.patterns.surface.PatternsForEachTokenLucene:

#edu/stanford/nlp/patterns/surface/ScorePatternsF1/score:
edu.stanford.nlp.patterns.surface.ScorePatternsF1:
edu.stanford.nlp.patterns.surface.Token$ClassComparator:

#edu/stanford/nlp/patterns/surface/CreatePatterns/getAllPatterns:
edu.stanford.nlp.patterns.surface.CreatePatterns:

#edu/stanford/nlp/patterns/surface/PatternToken/<init>:

#edu/stanford/nlp/patterns/surface/PatternToken/toStringToWrite:

#edu/stanford/nlp/patterns/surface/PatternToken/getTokenStr:

#edu/stanford/nlp/patterns/surface/PatternToken/equals:

#edu/stanford/nlp/patterns/surface/PatternToken/copy:
edu.stanford.nlp.patterns.surface.PatternToken:

#edu/stanford/nlp/patterns/surface/SurfacePatternFactory/setUp:

#edu/stanford/nlp/patterns/surface/SurfacePatternFactory/getContext:

#edu/stanford/nlp/patterns/surface/SurfacePatternFactory/getContextTokenStr:

#edu/stanford/nlp/patterns/surface/SurfacePatternFactory/getPatternsAroundTokens:
edu.stanford.nlp.patterns.surface.SurfacePatternFactory:
edu.stanford.nlp.patterns.surface.DataInstanceSurface:

#edu/stanford/nlp/patterns/surface/PatternsForEachToken/updatePatterns:

#edu/stanford/nlp/patterns/surface/PatternsForEachToken/getPatternsInstance:
edu.stanford.nlp.patterns.surface.PatternsForEachToken:

#edu/stanford/nlp/patterns/surface/CreatePatterns$CreatePatternsThread/call:
edu.stanford.nlp.patterns.surface.CreatePatterns$CreatePatternsThread:

#edu/stanford/nlp/patterns/surface/Token/classORRestrictionsAsString:

#edu/stanford/nlp/patterns/surface/Token/toString:

#edu/stanford/nlp/patterns/surface/Token/toStringDep:

#edu/stanford/nlp/patterns/surface/Token/toStringSurface:

#edu/stanford/nlp/patterns/surface/Token/getSimple:

#edu/stanford/nlp/patterns/surface/Token/equals:

#edu/stanford/nlp/patterns/surface/Token/addORRestriction:

#edu/stanford/nlp/patterns/surface/Token/setEnvBindRestriction:

#edu/stanford/nlp/patterns/surface/Token/isEmpty:

#edu/stanford/nlp/patterns/surface/Token/getKeyForClass:

#edu/stanford/nlp/patterns/surface/Token/toStringClass2KeyMapping:

#edu/stanford/nlp/patterns/surface/Token/setClass2KeyMapping:
edu.stanford.nlp.patterns.surface.Token:

#edu/stanford/nlp/patterns/surface/ApplyPatterns/call:

#edu/stanford/nlp/patterns/surface/ApplyPatterns/lemmaExists:

#edu/stanford/nlp/patterns/surface/ApplyPatterns/containsStopWord:
edu.stanford.nlp.patterns.surface.ApplyPatterns:

#edu/stanford/nlp/patterns/surface/PatternsForEachTokenDB/<init>:

#edu/stanford/nlp/patterns/surface/PatternsForEachTokenDB/createTable:

#edu/stanford/nlp/patterns/surface/PatternsForEachTokenDB/addPatterns:

#edu/stanford/nlp/patterns/surface/PatternsForEachTokenDB/addPattern:

#edu/stanford/nlp/patterns/surface/PatternsForEachTokenDB/getPatternsForAllTokens:

#edu/stanford/nlp/patterns/surface/PatternsForEachTokenDB/containsSentId:

#edu/stanford/nlp/patterns/surface/PatternsForEachTokenDB/createIndexIfUsingDBAndNotExists:

#edu/stanford/nlp/patterns/surface/PatternsForEachTokenDB/DBTableExists:

#edu/stanford/nlp/patterns/surface/PatternsForEachTokenDB/getPatternsForAllTokens:
edu.stanford.nlp.patterns.surface.PatternsForEachTokenDB:
edu.stanford.nlp.patterns.dep.DataInstanceDep:

#edu/stanford/nlp/patterns/dep/ApplyDepPatterns/call:

#edu/stanford/nlp/patterns/dep/ApplyDepPatterns/matchedRestriction:

#edu/stanford/nlp/patterns/dep/ApplyDepPatterns/containsStopWord:
edu.stanford.nlp.patterns.dep.ApplyDepPatterns:

#edu/stanford/nlp/patterns/dep/ApplyDepPatterns$2/apply:
edu.stanford.nlp.patterns.dep.ApplyDepPatterns$2:

#edu/stanford/nlp/patterns/dep/ExtractedPhrase/equals:
edu.stanford.nlp.patterns.dep.ExtractedPhrase:

#edu/stanford/nlp/patterns/dep/DepPatternFactory/setUp:

#edu/stanford/nlp/patterns/dep/DepPatternFactory/getPatternsForAllPhrases:

#edu/stanford/nlp/patterns/dep/DepPatternFactory/patternToDepPattern:

#edu/stanford/nlp/patterns/dep/DepPatternFactory/ifIgnoreRel:

#edu/stanford/nlp/patterns/dep/DepPatternFactory/getContext:
edu.stanford.nlp.patterns.dep.DepPatternFactory:

#edu/stanford/nlp/patterns/dep/ExtractPhraseFromPattern/checkIfSatisfiedMaxDepth:

#edu/stanford/nlp/patterns/dep/ExtractPhraseFromPattern/processSentenceForType:

#edu/stanford/nlp/patterns/dep/ExtractPhraseFromPattern/getSemGrexPatternNodes:

#edu/stanford/nlp/patterns/dep/ExtractPhraseFromPattern/printSubGraph:

#edu/stanford/nlp/patterns/dep/ExtractPhraseFromPattern/descendants:

#edu/stanford/nlp/patterns/dep/ExtractPhraseFromPattern/checkIfSatisfiesRelConstrains:

#edu/stanford/nlp/patterns/dep/ExtractPhraseFromPattern/descendantsHelper:

#edu/stanford/nlp/patterns/dep/ExtractPhraseFromPattern/descendantsWithReln:

#edu/stanford/nlp/patterns/dep/ExtractPhraseFromPattern/printMatchedGraphsForPattern:
edu.stanford.nlp.patterns.dep.ExtractPhraseFromPattern:
edu.stanford.nlp.patterns.dep.ApplyDepPatterns$1:

#edu/stanford/nlp/patterns/dep/DepPattern/getRelevantWords:

#edu/stanford/nlp/patterns/dep/DepPattern/toString:

#edu/stanford/nlp/patterns/dep/DepPattern/equals:
edu.stanford.nlp.patterns.dep.DepPattern:
edu.stanford.nlp.util.LeastRecentlyUsedCache$Node:
edu.stanford.nlp.util.CollectionFactory$LinkedListFactory:
edu.stanford.nlp.util.TypesafeMap$Key:

#edu/stanford/nlp/util/IntTuple/compareTo:

#edu/stanford/nlp/util/IntTuple/equals:

#edu/stanford/nlp/util/IntTuple/hashCode:

#edu/stanford/nlp/util/IntTuple/getIntTuple:

#edu/stanford/nlp/util/IntTuple/getIntTuple:

#edu/stanford/nlp/util/IntTuple/toString:

#edu/stanford/nlp/util/IntTuple/concat:
edu.stanford.nlp.util.IntTuple:

#edu/stanford/nlp/util/Filters$ConjFilter/test:
edu.stanford.nlp.util.Filters$ConjFilter:
edu.stanford.nlp.util.HasInterval:

#edu/stanford/nlp/util/XMLUtils/getTextContentFromTagsFromFileSAXException:

#edu/stanford/nlp/util/XMLUtils/getTagElementsFromFileSAXException:

#edu/stanford/nlp/util/XMLUtils/getTagElementTriplesFromFileNumBoundedSAXException:

#edu/stanford/nlp/util/XMLUtils/stripTags:

#edu/stanford/nlp/util/XMLUtils/readUntilTag:

#edu/stanford/nlp/util/XMLUtils/readAndParseTag:

#edu/stanford/nlp/util/XMLUtils/unescapeStringForXML:

#edu/stanford/nlp/util/XMLUtils/escapeXML:

#edu/stanford/nlp/util/XMLUtils/escapeElementXML:

#edu/stanford/nlp/util/XMLUtils/escapeAttributeXML:

#edu/stanford/nlp/util/XMLUtils/escapeTextAroundXMLTags:

#edu/stanford/nlp/util/XMLUtils/findSpace:

#edu/stanford/nlp/util/XMLUtils/readTag:

#edu/stanford/nlp/util/XMLUtils/parseTag:

#edu/stanford/nlp/util/XMLUtils/main:
edu.stanford.nlp.util.XMLUtils:
edu.stanford.nlp.util.CollectionFactory$SizedArrayListFactory:

#edu/stanford/nlp/util/Filters$CategoricalFilter/equals:
edu.stanford.nlp.util.Filters$CategoricalFilter:
edu.stanford.nlp.util.ArrayStringFilter$1:
edu.stanford.nlp.util.CollectionFactory$ArrayListFactory:

#edu/stanford/nlp/util/DeltaMap/containsKey:

#edu/stanford/nlp/util/DeltaMap/get:

#edu/stanford/nlp/util/DeltaMap/put:

#edu/stanford/nlp/util/DeltaMap/clear:
edu.stanford.nlp.util.DeltaMap:
edu.stanford.nlp.util.LuceneFieldType:

#edu/stanford/nlp/util/UnorderedPair/equals:

#edu/stanford/nlp/util/UnorderedPair/hashCode:

#edu/stanford/nlp/util/UnorderedPair/compareTo:
edu.stanford.nlp.util.UnorderedPair:
edu.stanford.nlp.util.XMLUtils$1:

#edu/stanford/nlp/util/ErasureUtils/mkT2DArray:
edu.stanford.nlp.util.ErasureUtils:

#edu/stanford/nlp/util/MetaClass/createInstance:

#edu/stanford/nlp/util/MetaClass/equals:

#edu/stanford/nlp/util/MetaClass/type2class:

#edu/stanford/nlp/util/MetaClass/cast:

#edu/stanford/nlp/util/MetaClass/castWithoutKnowingType:

#edu/stanford/nlp/util/MetaClass/argmin:

#edu/stanford/nlp/util/MetaClass/argmin:
edu.stanford.nlp.util.MetaClass:
edu.stanford.nlp.util.IntQuadruple:

#edu/stanford/nlp/util/CommandLineTokenizer/appendToBuffer:

#edu/stanford/nlp/util/CommandLineTokenizer/tokenize:
edu.stanford.nlp.util.CommandLineTokenizer:
edu.stanford.nlp.util.MapFactory$HashMapFactory:

#edu/stanford/nlp/util/CoreMaps$2/get:

#edu/stanford/nlp/util/CoreMaps$2/put:

#edu/stanford/nlp/util/CoreMaps$2/remove:
edu.stanford.nlp.util.CoreMaps$2:

#edu/stanford/nlp/util/ArrayMap/<init>:

#edu/stanford/nlp/util/ArrayMap/isEmpty:

#edu/stanford/nlp/util/ArrayMap/resize:

#edu/stanford/nlp/util/ArrayMap/put:

#edu/stanford/nlp/util/ArrayMap/get:

#edu/stanford/nlp/util/ArrayMap/remove:

#edu/stanford/nlp/util/ArrayMap/hashCode:

#edu/stanford/nlp/util/ArrayMap/equals:
edu.stanford.nlp.util.ArrayMap:
edu.stanford.nlp.util.Timing:

#edu/stanford/nlp/util/MutableDouble/equals:

#edu/stanford/nlp/util/MutableDouble/compareTo:
edu.stanford.nlp.util.MutableDouble:
edu.stanford.nlp.util.Iterables$2:
edu.stanford.nlp.util.DisabledPreferencesFactory:

#edu/stanford/nlp/util/ThreeDimensionalCollectionValuedMap/getTwoDimensionalCollectionValuedMap:
edu.stanford.nlp.util.ThreeDimensionalCollectionValuedMap:

#edu/stanford/nlp/util/IntPair/equals:
edu.stanford.nlp.util.IntPair:
edu.stanford.nlp.util.TwoDimensionalMap$Entry:

#edu/stanford/nlp/util/ConfusionMatrix$ConfusionGrid$Grid/onMouseOver:

#edu/stanford/nlp/util/ConfusionMatrix$ConfusionGrid$Grid/paintComponent:
edu.stanford.nlp.util.ConfusionMatrix$ConfusionGrid$Grid:

#edu/stanford/nlp/util/ThreeDimensionalMap/size:

#edu/stanford/nlp/util/ThreeDimensionalMap/isEmpty:

#edu/stanford/nlp/util/ThreeDimensionalMap/contains:

#edu/stanford/nlp/util/ThreeDimensionalMap/getTwoDimensionalMap:

#edu/stanford/nlp/util/ThreeDimensionalMap/values:

#edu/stanford/nlp/util/ThreeDimensionalMap/secondKeySet:

#edu/stanford/nlp/util/ThreeDimensionalMap/thirdKeySet:
edu.stanford.nlp.util.ThreeDimensionalMap:

#edu/stanford/nlp/util/FilePathProcessor/processPath:
edu.stanford.nlp.util.FilePathProcessor:
edu.stanford.nlp.util.Iterables$6:
edu.stanford.nlp.util.PropertiesUtils$Property:

#edu/stanford/nlp/util/TwoDimensionalMap$TwoDimensionalMapIterator/hasNext:

#edu/stanford/nlp/util/TwoDimensionalMap$TwoDimensionalMapIterator/next:

#edu/stanford/nlp/util/TwoDimensionalMap$TwoDimensionalMapIterator/primeNext:
edu.stanford.nlp.util.TwoDimensionalMap$TwoDimensionalMapIterator:
Warning: Method:edu.stanford.nlp.util.Iterables$6$1.hasNext has incoming edges.
edu.stanford.nlp.util.Iterables$6$1:
edu.stanford.nlp.util.Index:
edu.stanford.nlp.util.TypesafeMap:

#edu/stanford/nlp/util/Iterables$10$1$1/hasNext:

#edu/stanford/nlp/util/Iterables$10$1$1/next:
edu.stanford.nlp.util.Iterables$10$1$1:

#edu/stanford/nlp/util/OneToOneMap/put:

#edu/stanford/nlp/util/OneToOneMap/removeLeftAsKey:

#edu/stanford/nlp/util/OneToOneMap/removeRightAsKey:
edu.stanford.nlp.util.OneToOneMap:

#edu/stanford/nlp/util/TwoDimensionalCollectionValuedMap/getCollectionValuedMap:

#edu/stanford/nlp/util/TwoDimensionalCollectionValuedMap/add:

#edu/stanford/nlp/util/TwoDimensionalCollectionValuedMap/add:

#edu/stanford/nlp/util/TwoDimensionalCollectionValuedMap/addKey:

#edu/stanford/nlp/util/TwoDimensionalCollectionValuedMap/retainAll:

#edu/stanford/nlp/util/TwoDimensionalCollectionValuedMap/secondKeySet:

#edu/stanford/nlp/util/TwoDimensionalCollectionValuedMap/values:
edu.stanford.nlp.util.TwoDimensionalCollectionValuedMap:

#edu/stanford/nlp/util/StringUtils/containsIgnoreCase:

#edu/stanford/nlp/util/StringUtils/mapStringToArray:

#edu/stanford/nlp/util/StringUtils/mapStringToMap:

#edu/stanford/nlp/util/StringUtils/regexesToPatterns:

#edu/stanford/nlp/util/StringUtils/regexGroups:

#edu/stanford/nlp/util/StringUtils/stringToSet:

#edu/stanford/nlp/util/StringUtils/joinWords:

#edu/stanford/nlp/util/StringUtils/join:

#edu/stanford/nlp/util/StringUtils/joinWithOriginalWhiteSpace:

#edu/stanford/nlp/util/StringUtils/join:

#edu/stanford/nlp/util/StringUtils/join:

#edu/stanford/nlp/util/StringUtils/join:

#edu/stanford/nlp/util/StringUtils/splitLinesKeepNewlines:

#edu/stanford/nlp/util/StringUtils/splitOnChar:

#edu/stanford/nlp/util/StringUtils/splitFieldsFast:

#edu/stanford/nlp/util/StringUtils/splitOnChar:

#edu/stanford/nlp/util/StringUtils/valueSplit:

#edu/stanford/nlp/util/StringUtils/pad:

#edu/stanford/nlp/util/StringUtils/padOrTrim:

#edu/stanford/nlp/util/StringUtils/padLeftOrTrim:

#edu/stanford/nlp/util/StringUtils/padLeft:

#edu/stanford/nlp/util/StringUtils/trim:

#edu/stanford/nlp/util/StringUtils/trimWithEllipsis:

#edu/stanford/nlp/util/StringUtils/repeat:

#edu/stanford/nlp/util/StringUtils/repeat:

#edu/stanford/nlp/util/StringUtils/fileNameClean:

#edu/stanford/nlp/util/StringUtils/nthIndex:

#edu/stanford/nlp/util/StringUtils/truncate:

#edu/stanford/nlp/util/StringUtils/argsToMap:

#edu/stanford/nlp/util/StringUtils/argsToProperties:

#edu/stanford/nlp/util/StringUtils/propFileToProperties:

#edu/stanford/nlp/util/StringUtils/stringToProperties:

#edu/stanford/nlp/util/StringUtils/checkRequiredProperties:

#edu/stanford/nlp/util/StringUtils/printToFile:

#edu/stanford/nlp/util/StringUtils/printToFileLn:

#edu/stanford/nlp/util/StringUtils/parseCommandLineArguments:

#edu/stanford/nlp/util/StringUtils/stripNonAlphaNumerics:

#edu/stanford/nlp/util/StringUtils/printStringOneCharPerLine:

#edu/stanford/nlp/util/StringUtils/escapeString:

#edu/stanford/nlp/util/StringUtils/splitOnCharWithQuoting:

#edu/stanford/nlp/util/StringUtils/longestCommonSubstring:

#edu/stanford/nlp/util/StringUtils/longestCommonContiguousSubstring:

#edu/stanford/nlp/util/StringUtils/editDistance:

#edu/stanford/nlp/util/StringUtils/pennPOSToWordnetPOS:

#edu/stanford/nlp/util/StringUtils/getShortClassName:

#edu/stanford/nlp/util/StringUtils/columnStringToObject:

#edu/stanford/nlp/util/StringUtils/objectToColumnString:

#edu/stanford/nlp/util/StringUtils/capitalize:

#edu/stanford/nlp/util/StringUtils/toTitleCase:

#edu/stanford/nlp/util/StringUtils/isTitleCase:

#edu/stanford/nlp/util/StringUtils/isAllUpperCase:

#edu/stanford/nlp/util/StringUtils/makeHTMLTable:

#edu/stanford/nlp/util/StringUtils/makeTextTable:

#edu/stanford/nlp/util/StringUtils/makeAsciiTableCell:

#edu/stanford/nlp/util/StringUtils/main:

#edu/stanford/nlp/util/StringUtils/toAscii:

#edu/stanford/nlp/util/StringUtils/toCSVString:

#edu/stanford/nlp/util/StringUtils/tr:

#edu/stanford/nlp/util/StringUtils/chomp:

#edu/stanford/nlp/util/StringUtils/getBaseName:

#edu/stanford/nlp/util/StringUtils/getNotNullString:

#edu/stanford/nlp/util/StringUtils/isNullOrEmpty:

#edu/stanford/nlp/util/StringUtils/resolveVars:

#edu/stanford/nlp/util/StringUtils/argsToPropertiesWithResolve:

#edu/stanford/nlp/util/StringUtils/propFileToLinkedHashMap:

#edu/stanford/nlp/util/StringUtils/getNgrams:

#edu/stanford/nlp/util/StringUtils/getNgramsFromTokens:

#edu/stanford/nlp/util/StringUtils/getCharacterNgrams:

#edu/stanford/nlp/util/StringUtils/levenshteinDistance:

#edu/stanford/nlp/util/StringUtils/levenshteinDistance:

#edu/stanford/nlp/util/StringUtils/unescapeHtml3:

#edu/stanford/nlp/util/StringUtils/decodeArray:

#edu/stanford/nlp/util/StringUtils/decodeMap:

#edu/stanford/nlp/util/StringUtils/expandEnvironmentVariables:

#edu/stanford/nlp/util/StringUtils/logInvocationString:

#edu/stanford/nlp/util/StringUtils/containsJsonEscape:

#edu/stanford/nlp/util/StringUtils/escapeJsonString:

#edu/stanford/nlp/util/StringUtils/indexOfRegex:

#edu/stanford/nlp/util/StringUtils/indexOfRegex:

#edu/stanford/nlp/util/StringUtils/lambda$joinMultipleFields$1:

#edu/stanford/nlp/util/StringUtils/lambda$joinFields$0:
edu.stanford.nlp.util.StringUtils:

#edu/stanford/nlp/util/Quintuple/equals:

#edu/stanford/nlp/util/Quintuple/hashCode:

#edu/stanford/nlp/util/Quintuple/compareTo:
edu.stanford.nlp.util.Quintuple:

#edu/stanford/nlp/util/DeltaCollectionValuedMap$1/size:

#edu/stanford/nlp/util/DeltaCollectionValuedMap$1/lambda$iterator$1:

#edu/stanford/nlp/util/DeltaCollectionValuedMap$1/lambda$iterator$0:
edu.stanford.nlp.util.DeltaCollectionValuedMap$1:

#edu/stanford/nlp/util/IterableIterator/iterator:

#edu/stanford/nlp/util/IterableIterator/spliterator:
edu.stanford.nlp.util.IterableIterator:

#edu/stanford/nlp/util/FilteredIterator$1/test:
edu.stanford.nlp.util.FilteredIterator$1:
edu.stanford.nlp.util.ValuedInterval:

#edu/stanford/nlp/util/Iterables$10$1/hasNext:
edu.stanford.nlp.util.Iterables$10$1:

#edu/stanford/nlp/util/Trilean/<init>:

#edu/stanford/nlp/util/Trilean/isTrue:

#edu/stanford/nlp/util/Trilean/isFalse:

#edu/stanford/nlp/util/Trilean/isKnown:

#edu/stanford/nlp/util/Trilean/isUnknown:

#edu/stanford/nlp/util/Trilean/toBoolean:

#edu/stanford/nlp/util/Trilean/toBooleanOrNull:

#edu/stanford/nlp/util/Trilean/and:

#edu/stanford/nlp/util/Trilean/or:

#edu/stanford/nlp/util/Trilean/not:

#edu/stanford/nlp/util/Trilean/equals:

#edu/stanford/nlp/util/Trilean/hashCode:

#edu/stanford/nlp/util/Trilean/toString:

#edu/stanford/nlp/util/Trilean/from:

#edu/stanford/nlp/util/Trilean/fromString:
edu.stanford.nlp.util.Trilean:

#edu/stanford/nlp/util/Filters$DisjFilter/test:
edu.stanford.nlp.util.Filters$DisjFilter:

#edu/stanford/nlp/util/ArraySet/<init>:

#edu/stanford/nlp/util/ArraySet/add:
edu.stanford.nlp.util.ArraySet:

#edu/stanford/nlp/util/ScoredComparator/compare:

#edu/stanford/nlp/util/ScoredComparator/equals:

#edu/stanford/nlp/util/ScoredComparator/hashCode:

#edu/stanford/nlp/util/ScoredComparator/toString:
edu.stanford.nlp.util.ScoredComparator:
edu.stanford.nlp.util.IntervalTree$1:

#edu/stanford/nlp/util/Pair/equals:

#edu/stanford/nlp/util/Pair/hashCode:

#edu/stanford/nlp/util/Pair/compareTo:
edu.stanford.nlp.util.Pair:

#edu/stanford/nlp/util/CollectionUtils$1/hasNext:

#edu/stanford/nlp/util/CollectionUtils$1/next:

#edu/stanford/nlp/util/CollectionUtils$1/remove:
edu.stanford.nlp.util.CollectionUtils$1:
edu.stanford.nlp.util.Iterables$IncrementComparator:
edu.stanford.nlp.util.Iterables$4:
edu.stanford.nlp.util.IntUni:
edu.stanford.nlp.util.Pointer:

#edu/stanford/nlp/util/DeltaCollectionValuedMap$SimpleEntry/equals:

#edu/stanford/nlp/util/DeltaCollectionValuedMap$SimpleEntry/hashCode:

#edu/stanford/nlp/util/DeltaCollectionValuedMap$SimpleEntry/eq:
edu.stanford.nlp.util.DeltaCollectionValuedMap$SimpleEntry:
edu.stanford.nlp.util.MapFactory$LinkedHashMapFactory:

#edu/stanford/nlp/util/Iterables$4$1/hasNext:
edu.stanford.nlp.util.Iterables$4$1:
edu.stanford.nlp.util.MetaClass$ConstructorNotFoundException:

#edu/stanford/nlp/util/StreamGobbler/run:
edu.stanford.nlp.util.StreamGobbler:

#edu/stanford/nlp/util/ProcessProtobufRequest/processMultipleInputs:

#edu/stanford/nlp/util/ProcessProtobufRequest/process:

#edu/stanford/nlp/util/ProcessProtobufRequest/lambda$leftoverArgs$0:
edu.stanford.nlp.util.ProcessProtobufRequest:
edu.stanford.nlp.util.CoreMap:
edu.stanford.nlp.util.BinaryHeapPriorityQueue$1:
edu.stanford.nlp.util.Iterables$3:

#edu/stanford/nlp/util/Comparators/nullSafeCompare:

#edu/stanford/nlp/util/Comparators/compareLists:

#edu/stanford/nlp/util/Comparators/lambda$chain$1:

#edu/stanford/nlp/util/Comparators/lambda$chain$0:
edu.stanford.nlp.util.Comparators:

#edu/stanford/nlp/util/TwoDimensionalSet/add:

#edu/stanford/nlp/util/TwoDimensionalSet/addAll:

#edu/stanford/nlp/util/TwoDimensionalSet/addAllKeys:

#edu/stanford/nlp/util/TwoDimensionalSet/containsAll:

#edu/stanford/nlp/util/TwoDimensionalSet/equals:

#edu/stanford/nlp/util/TwoDimensionalSet/removeAll:
edu.stanford.nlp.util.TwoDimensionalSet:
edu.stanford.nlp.util.Iterables$1:
edu.stanford.nlp.util.HashableCoreMap$HashableCoreMapException:
edu.stanford.nlp.util.SystemUtils$ProcessOutputStream:
edu.stanford.nlp.util.FastDisjointSet$Element:

#edu/stanford/nlp/util/CollectionUtils/asList:

#edu/stanford/nlp/util/CollectionUtils/asList:

#edu/stanford/nlp/util/CollectionUtils/asIntArray:

#edu/stanford/nlp/util/CollectionUtils/asDoubleArray:

#edu/stanford/nlp/util/CollectionUtils/intersection:

#edu/stanford/nlp/util/CollectionUtils/union:

#edu/stanford/nlp/util/CollectionUtils/unionAsSet:

#edu/stanford/nlp/util/CollectionUtils/unionAsSet:

#edu/stanford/nlp/util/CollectionUtils/diff:

#edu/stanford/nlp/util/CollectionUtils/diffAsSet:

#edu/stanford/nlp/util/CollectionUtils/loadCollection:

#edu/stanford/nlp/util/CollectionUtils/loadCollection:

#edu/stanford/nlp/util/CollectionUtils/getMapFromString:

#edu/stanford/nlp/util/CollectionUtils/containsObject:

#edu/stanford/nlp/util/CollectionUtils/removeObject:

#edu/stanford/nlp/util/CollectionUtils/getIndex:

#edu/stanford/nlp/util/CollectionUtils/getIndex:

#edu/stanford/nlp/util/CollectionUtils/sampleWithoutReplacement:

#edu/stanford/nlp/util/CollectionUtils/sampleWithReplacement:

#edu/stanford/nlp/util/CollectionUtils/isSubList:

#edu/stanford/nlp/util/CollectionUtils/toVerticalString:

#edu/stanford/nlp/util/CollectionUtils/compareLists:

#edu/stanford/nlp/util/CollectionUtils/addAll:

#edu/stanford/nlp/util/CollectionUtils/getNGrams:

#edu/stanford/nlp/util/CollectionUtils/getPrefixesAndSuffixes:

#edu/stanford/nlp/util/CollectionUtils/mergeList:

#edu/stanford/nlp/util/CollectionUtils/mergeListWithSortedMatched:

#edu/stanford/nlp/util/CollectionUtils/mergeListWithSortedMatchedPreAggregated:

#edu/stanford/nlp/util/CollectionUtils/flatten:

#edu/stanford/nlp/util/CollectionUtils/uniqueNonhashableObjects:

#edu/stanford/nlp/util/CollectionUtils/containsAny:

#edu/stanford/nlp/util/CollectionUtils/partitionIntoFolds:

#edu/stanford/nlp/util/CollectionUtils/trainTestFoldsForCV:

#edu/stanford/nlp/util/CollectionUtils/transformAsSet:

#edu/stanford/nlp/util/CollectionUtils/transformAsList:

#edu/stanford/nlp/util/CollectionUtils/filterAsList:

#edu/stanford/nlp/util/CollectionUtils/getAll:

#edu/stanford/nlp/util/CollectionUtils/maxIndex:
edu.stanford.nlp.util.CollectionUtils:
edu.stanford.nlp.util.AcronymMatcher$1:
edu.stanford.nlp.util.Pair$BySecondReversePairComparator:
edu.stanford.nlp.util.IntTriple:

#edu/stanford/nlp/util/IdentityHashSet/add:

#edu/stanford/nlp/util/IdentityHashSet/clone:

#edu/stanford/nlp/util/IdentityHashSet/remove:

#edu/stanford/nlp/util/IdentityHashSet/writeObject:

#edu/stanford/nlp/util/IdentityHashSet/readObject:
edu.stanford.nlp.util.IdentityHashSet:

#edu/stanford/nlp/util/Functions/invert:
edu.stanford.nlp.util.Functions:
edu.stanford.nlp.util.Pair$ByFirstReversePairComparator:
edu.stanford.nlp.util.BinaryHeapPriorityQueue$Entry:
edu.stanford.nlp.util.CoreMaps$1:

#edu/stanford/nlp/util/DeltaIndex$1/hasNext:

#edu/stanford/nlp/util/DeltaIndex$1/next:
edu.stanford.nlp.util.DeltaIndex$1:

#edu/stanford/nlp/util/ArrayUtils/gapEncode:

#edu/stanford/nlp/util/ArrayUtils/gapEncodeList:

#edu/stanford/nlp/util/ArrayUtils/gapDecode:

#edu/stanford/nlp/util/ArrayUtils/gapDecodeList:

#edu/stanford/nlp/util/ArrayUtils/deltaEncode:

#edu/stanford/nlp/util/ArrayUtils/deltaEncodeList:

#edu/stanford/nlp/util/ArrayUtils/deltaDecode:

#edu/stanford/nlp/util/ArrayUtils/deltaDecodeList:
Warning: Method:edu.stanford.nlp.util.ArrayUtils.bitSetToByteArray has incoming edges.

#edu/stanford/nlp/util/ArrayUtils/byteArrayToBitSet:

#edu/stanford/nlp/util/ArrayUtils/flatten:

#edu/stanford/nlp/util/ArrayUtils/to2D:

#edu/stanford/nlp/util/ArrayUtils/removeAt:

#edu/stanford/nlp/util/ArrayUtils/removeAt:

#edu/stanford/nlp/util/ArrayUtils/toString:

#edu/stanford/nlp/util/ArrayUtils/equalContents:

#edu/stanford/nlp/util/ArrayUtils/equals:

#edu/stanford/nlp/util/ArrayUtils/equalContents:

#edu/stanford/nlp/util/ArrayUtils/equals:

#edu/stanford/nlp/util/ArrayUtils/contains:

#edu/stanford/nlp/util/ArrayUtils/filter:

#edu/stanford/nlp/util/ArrayUtils/asImmutableSet:

#edu/stanford/nlp/util/ArrayUtils/fill:

#edu/stanford/nlp/util/ArrayUtils/fill:

#edu/stanford/nlp/util/ArrayUtils/fill:

#edu/stanford/nlp/util/ArrayUtils/fill:

#edu/stanford/nlp/util/ArrayUtils/fill:

#edu/stanford/nlp/util/ArrayUtils/fill:

#edu/stanford/nlp/util/ArrayUtils/toDouble:

#edu/stanford/nlp/util/ArrayUtils/toDouble:

#edu/stanford/nlp/util/ArrayUtils/asList:

#edu/stanford/nlp/util/ArrayUtils/asPrimitiveDoubleArray:

#edu/stanford/nlp/util/ArrayUtils/asPrimitiveIntArray:

#edu/stanford/nlp/util/ArrayUtils/copy:

#edu/stanford/nlp/util/ArrayUtils/copy:

#edu/stanford/nlp/util/ArrayUtils/copy:

#edu/stanford/nlp/util/ArrayUtils/copy:

#edu/stanford/nlp/util/ArrayUtils/copy:

#edu/stanford/nlp/util/ArrayUtils/copy:

#edu/stanford/nlp/util/ArrayUtils/copy:

#edu/stanford/nlp/util/ArrayUtils/copy:

#edu/stanford/nlp/util/ArrayUtils/copy:

#edu/stanford/nlp/util/ArrayUtils/copy:

#edu/stanford/nlp/util/ArrayUtils/toString:

#edu/stanford/nlp/util/ArrayUtils/toString:

#edu/stanford/nlp/util/ArrayUtils/toPrimitive:

#edu/stanford/nlp/util/ArrayUtils/toPrimitive:

#edu/stanford/nlp/util/ArrayUtils/toPrimitive:

#edu/stanford/nlp/util/ArrayUtils/toPrimitive:

#edu/stanford/nlp/util/ArrayUtils/toDoubleArray:

#edu/stanford/nlp/util/ArrayUtils/toPrimitive:

#edu/stanford/nlp/util/ArrayUtils/indexOf:

#edu/stanford/nlp/util/ArrayUtils/getSubListIndex:

#edu/stanford/nlp/util/ArrayUtils/normalize:

#edu/stanford/nlp/util/ArrayUtils/subArray:

#edu/stanford/nlp/util/ArrayUtils/compareBooleanArrays:

#edu/stanford/nlp/util/ArrayUtils/toString:
edu.stanford.nlp.util.ArrayUtils:

#edu/stanford/nlp/util/Pair$MutableInternedPair/internStrings:
edu.stanford.nlp.util.Pair$MutableInternedPair:

#edu/stanford/nlp/util/ConfusionMatrix/add:

#edu/stanford/nlp/util/ConfusionMatrix/get:

#edu/stanford/nlp/util/ConfusionMatrix/uniqueLabels:

#edu/stanford/nlp/util/ConfusionMatrix/getContingency:

#edu/stanford/nlp/util/ConfusionMatrix/sortKeys:

#edu/stanford/nlp/util/ConfusionMatrix/goldMarginal:

#edu/stanford/nlp/util/ConfusionMatrix/guessMarginal:

#edu/stanford/nlp/util/ConfusionMatrix/getPlaceHolder:

#edu/stanford/nlp/util/ConfusionMatrix/printTable:
edu.stanford.nlp.util.ConfusionMatrix:

#edu/stanford/nlp/util/ConcatenationIterator/current:

#edu/stanford/nlp/util/ConcatenationIterator/main:
edu.stanford.nlp.util.ConcatenationIterator:

#edu/stanford/nlp/util/IntervalTree$TreeNodeIterator/<init>:

#edu/stanford/nlp/util/IntervalTree$TreeNodeIterator/hasNext:

#edu/stanford/nlp/util/IntervalTree$TreeNodeIterator/next:

#edu/stanford/nlp/util/IntervalTree$TreeNodeIterator/getNext:
edu.stanford.nlp.util.IntervalTree$TreeNodeIterator:
edu.stanford.nlp.util.FileProcessor:
edu.stanford.nlp.util.CollectionFactory:

#edu/stanford/nlp/util/FourDimensionalMap/getThreeDimensionalMap:

#edu/stanford/nlp/util/FourDimensionalMap/values:

#edu/stanford/nlp/util/FourDimensionalMap/secondKeySet:

#edu/stanford/nlp/util/FourDimensionalMap/thirdKeySet:

#edu/stanford/nlp/util/FourDimensionalMap/fourthKeySet:
edu.stanford.nlp.util.FourDimensionalMap:

#edu/stanford/nlp/util/Filters$RandomFilter/test:
edu.stanford.nlp.util.Filters$RandomFilter:
edu.stanford.nlp.util.Iterables$5:
Fail to analyze: ../programs/stanford-corenlp-4.4.0/target/classes/edu/stanford/nlp/util/MemoryMonitor$PeakMemoryMonitor.class

#edu/stanford/nlp/util/BinaryHeapPriorityQueue/hasNext:

#edu/stanford/nlp/util/BinaryHeapPriorityQueue/next:

#edu/stanford/nlp/util/BinaryHeapPriorityQueue/parent:

#edu/stanford/nlp/util/BinaryHeapPriorityQueue/leftChild:

#edu/stanford/nlp/util/BinaryHeapPriorityQueue/rightChild:

#edu/stanford/nlp/util/BinaryHeapPriorityQueue/compare:

#edu/stanford/nlp/util/BinaryHeapPriorityQueue/compare:
Warning: Method:edu.stanford.nlp.util.BinaryHeapPriorityQueue.heapifyUp has incoming edges.
Warning: Method:edu.stanford.nlp.util.BinaryHeapPriorityQueue.heapifyDown has incoming edges.

#edu/stanford/nlp/util/BinaryHeapPriorityQueue/getFirst:

#edu/stanford/nlp/util/BinaryHeapPriorityQueue/getPriority:

#edu/stanford/nlp/util/BinaryHeapPriorityQueue/getObject:

#edu/stanford/nlp/util/BinaryHeapPriorityQueue/getPriority:

#edu/stanford/nlp/util/BinaryHeapPriorityQueue/add:

#edu/stanford/nlp/util/BinaryHeapPriorityQueue/add:

#edu/stanford/nlp/util/BinaryHeapPriorityQueue/remove:

#edu/stanford/nlp/util/BinaryHeapPriorityQueue/removeEntry:

#edu/stanford/nlp/util/BinaryHeapPriorityQueue/relaxPriority:

#edu/stanford/nlp/util/BinaryHeapPriorityQueue/decreasePriority:

#edu/stanford/nlp/util/BinaryHeapPriorityQueue/changePriority:

#edu/stanford/nlp/util/BinaryHeapPriorityQueue/toSortedList:

#edu/stanford/nlp/util/BinaryHeapPriorityQueue/deepCopy:

#edu/stanford/nlp/util/BinaryHeapPriorityQueue/toString:

#edu/stanford/nlp/util/BinaryHeapPriorityQueue/toVerticalString:
edu.stanford.nlp.util.BinaryHeapPriorityQueue:
edu.stanford.nlp.util.TwoDimensionalSet$TwoDimensionalSetIterator:

#edu/stanford/nlp/util/Interval/<init>:

#edu/stanford/nlp/util/Interval/toInterval:

#edu/stanford/nlp/util/Interval/toValidInterval:

#edu/stanford/nlp/util/Interval/max:

#edu/stanford/nlp/util/Interval/min:

#edu/stanford/nlp/util/Interval/contains:

#edu/stanford/nlp/util/Interval/containsOpen:

#edu/stanford/nlp/util/Interval/contains:

#edu/stanford/nlp/util/Interval/expand:

#edu/stanford/nlp/util/Interval/intersect:

#edu/stanford/nlp/util/Interval/overlaps:

#edu/stanford/nlp/util/Interval/includesBegin:

#edu/stanford/nlp/util/Interval/includesEnd:

#edu/stanford/nlp/util/Interval/isIntervalComparable:

#edu/stanford/nlp/util/Interval/compareIntervalOrder:

#edu/stanford/nlp/util/Interval/toRelFlags:

#edu/stanford/nlp/util/Interval/getRelationFlags:

#edu/stanford/nlp/util/Interval/addIntervalRelationFlags:

#edu/stanford/nlp/util/Interval/checkMultipleBitSet:

#edu/stanford/nlp/util/Interval/checkFlagSet:

#edu/stanford/nlp/util/Interval/checkFlagExclusiveSet:

#edu/stanford/nlp/util/Interval/getRelation:

#edu/stanford/nlp/util/Interval/equals:
edu.stanford.nlp.util.Interval:
edu.stanford.nlp.util.OneToOneMap$OneToOneMapException:
edu.stanford.nlp.util.ArrayHeap$HeapEntry:

#edu/stanford/nlp/util/PropertiesUtils/hasProperty:

#edu/stanford/nlp/util/PropertiesUtils/hasPropertyPrefix:

#edu/stanford/nlp/util/PropertiesUtils/asProperties:

#edu/stanford/nlp/util/PropertiesUtils/printProperties:

#edu/stanford/nlp/util/PropertiesUtils/asMap:

#edu/stanford/nlp/util/PropertiesUtils/checkProperties:

#edu/stanford/nlp/util/PropertiesUtils/extractPrefixedProperties:

#edu/stanford/nlp/util/PropertiesUtils/extractSelectedProperties:

#edu/stanford/nlp/util/PropertiesUtils/get:

#edu/stanford/nlp/util/PropertiesUtils/getDirPath:

#edu/stanford/nlp/util/PropertiesUtils/getInt:

#edu/stanford/nlp/util/PropertiesUtils/getLong:

#edu/stanford/nlp/util/PropertiesUtils/getDouble:

#edu/stanford/nlp/util/PropertiesUtils/getBool:

#edu/stanford/nlp/util/PropertiesUtils/getStringArray:

#edu/stanford/nlp/util/PropertiesUtils/getStringArray:

#edu/stanford/nlp/util/PropertiesUtils/overWriteProperties:

#edu/stanford/nlp/util/PropertiesUtils/noClobberWriteProperties:

#edu/stanford/nlp/util/PropertiesUtils/getSignature:

#edu/stanford/nlp/util/PropertiesUtils/getSignature:
edu.stanford.nlp.util.PropertiesUtils:

#edu/stanford/nlp/util/Characters/asCharacterArray:

#edu/stanford/nlp/util/Characters/unicodeBlockStringOf:

#edu/stanford/nlp/util/Characters/unicodeBlockStringOf:

#edu/stanford/nlp/util/Characters/isPunctuation:

#edu/stanford/nlp/util/Characters/isSymbol:

#edu/stanford/nlp/util/Characters/isControl:
edu.stanford.nlp.util.Characters:
edu.stanford.nlp.util.ReflectionLoading:

#edu/stanford/nlp/util/TwoDimensionalMap/size:

#edu/stanford/nlp/util/TwoDimensionalMap/isEmpty:

#edu/stanford/nlp/util/TwoDimensionalMap/contains:

#edu/stanford/nlp/util/TwoDimensionalMap/getMap:

#edu/stanford/nlp/util/TwoDimensionalMap/values:

#edu/stanford/nlp/util/TwoDimensionalMap/secondKeySet:

#edu/stanford/nlp/util/TwoDimensionalMap/addAll:

#edu/stanford/nlp/util/TwoDimensionalMap/replaceAll:

#edu/stanford/nlp/util/TwoDimensionalMap/<init>:

#edu/stanford/nlp/util/TwoDimensionalMap/equals:
edu.stanford.nlp.util.TwoDimensionalMap:
Warning: Method:edu.stanford.nlp.util.Iterables$5$1.hasNext has incoming edges.
Warning: Method:edu.stanford.nlp.util.Iterables$5$1.next has incoming edges.
edu.stanford.nlp.util.Iterables$5$1:
edu.stanford.nlp.util.CollectionFactory$TreeSetFactory:
edu.stanford.nlp.util.ArgumentParser$Option:

#edu/stanford/nlp/util/ArrayMap$Entry/hashCode:

#edu/stanford/nlp/util/ArrayMap$Entry/equals:
edu.stanford.nlp.util.ArrayMap$Entry:
edu.stanford.nlp.util.CoreMaps$1$1:
edu.stanford.nlp.util.ConfusionMatrix$ConfusionGrid:
edu.stanford.nlp.util.TwoDimensionalMap$TwoDimensionalMapValueIterator:

#edu/stanford/nlp/util/Iterables$7/hasNext:
edu.stanford.nlp.util.Iterables$7:

#edu/stanford/nlp/util/EditDistance/clear:

#edu/stanford/nlp/util/EditDistance/better:

#edu/stanford/nlp/util/EditDistance/substituteCost:

#edu/stanford/nlp/util/EditDistance/transposeCost:

#edu/stanford/nlp/util/EditDistance/score:

#edu/stanford/nlp/util/EditDistance/score:

#edu/stanford/nlp/util/EditDistance/main:
edu.stanford.nlp.util.EditDistance:
edu.stanford.nlp.util.ArrayHeap$1:

#edu/stanford/nlp/util/ArrayCoreMap$1$1/hasNext:
edu.stanford.nlp.util.ArrayCoreMap$1$1:
edu.stanford.nlp.util.AbstractIterator:
edu.stanford.nlp.util.MapFactory$IdentityHashMapFactory:
edu.stanford.nlp.util.Interval$RelType:
edu.stanford.nlp.util.CollectionUtils$2:

#edu/stanford/nlp/util/XMLUtils$XMLTag/<init>:

#edu/stanford/nlp/util/XMLUtils$XMLTag/getFirstNonNullAttributeFromList:
edu.stanford.nlp.util.XMLUtils$XMLTag:

#edu/stanford/nlp/util/Maps/putIntoValueCollection:

#edu/stanford/nlp/util/Maps/compose:

#edu/stanford/nlp/util/Maps/invert:

#edu/stanford/nlp/util/Maps/invertSet:

#edu/stanford/nlp/util/Maps/toStringSorted:

#edu/stanford/nlp/util/Maps/removeKeys:

#edu/stanford/nlp/util/Maps/addAll:

#edu/stanford/nlp/util/Maps/getAll:

#edu/stanford/nlp/util/Maps/toString:
edu.stanford.nlp.util.Maps:

#edu/stanford/nlp/util/DataFilePaths/convert:
edu.stanford.nlp.util.DataFilePaths:
edu.stanford.nlp.util.MapFactory$ArrayMapFactory:

#edu/stanford/nlp/util/MemoryMonitor/getMaxAvailableMemory:

#edu/stanford/nlp/util/MemoryMonitor/getUsedMemory:

#edu/stanford/nlp/util/MemoryMonitor/getUsedMemoryString:

#edu/stanford/nlp/util/MemoryMonitor/getSystemFreeMemory:

#edu/stanford/nlp/util/MemoryMonitor/parseFields:

#edu/stanford/nlp/util/MemoryMonitor/pollFree:

#edu/stanford/nlp/util/MemoryMonitor/pollVMstat:

#edu/stanford/nlp/util/MemoryMonitor/systemIsSwapping:
edu.stanford.nlp.util.MemoryMonitor:

#edu/stanford/nlp/util/DeltaIndex/get:

#edu/stanford/nlp/util/DeltaIndex/indexOf:

#edu/stanford/nlp/util/DeltaIndex/addToIndex:

#edu/stanford/nlp/util/DeltaIndex/indexOf:

#edu/stanford/nlp/util/DeltaIndex/objectsList:

#edu/stanford/nlp/util/DeltaIndex/objects:

#edu/stanford/nlp/util/DeltaIndex/contains:

#edu/stanford/nlp/util/DeltaIndex/add:

#edu/stanford/nlp/util/DeltaIndex/addAll:

#edu/stanford/nlp/util/DeltaIndex/isEmpty:
edu.stanford.nlp.util.DeltaIndex:

#edu/stanford/nlp/util/ArrayMap$1/remove:
edu.stanford.nlp.util.ArrayMap$1:
edu.stanford.nlp.util.CollectionFactory$HashSetFactory:

#edu/stanford/nlp/util/FilteredIterator/advanceCandidate:
Warning: Method:edu.stanford.nlp.util.FilteredIterator.skipUnacceptableCandidates has incoming edges.

#edu/stanford/nlp/util/FilteredIterator/main:
edu.stanford.nlp.util.FilteredIterator:

#edu/stanford/nlp/util/GoogleNGramsSQLBacked/connect:

#edu/stanford/nlp/util/GoogleNGramsSQLBacked/existsTable:

#edu/stanford/nlp/util/GoogleNGramsSQLBacked/getCount:

#edu/stanford/nlp/util/GoogleNGramsSQLBacked/getCounts:

#edu/stanford/nlp/util/GoogleNGramsSQLBacked/populateTablesInSQL:

#edu/stanford/nlp/util/GoogleNGramsSQLBacked/getTotalCount:

#edu/stanford/nlp/util/GoogleNGramsSQLBacked/get1GramRank:

#edu/stanford/nlp/util/GoogleNGramsSQLBacked/closeConnection:

#edu/stanford/nlp/util/GoogleNGramsSQLBacked/main:
edu.stanford.nlp.util.GoogleNGramsSQLBacked:

#edu/stanford/nlp/util/Filters$CombinedFilter/test:
edu.stanford.nlp.util.Filters$CombinedFilter:

#edu/stanford/nlp/util/AcronymMatcher/getTokenStrs:

#edu/stanford/nlp/util/AcronymMatcher/getMainTokenStrs:

#edu/stanford/nlp/util/AcronymMatcher/getMainTokenStrs:

#edu/stanford/nlp/util/AcronymMatcher/isAcronymImpl:

#edu/stanford/nlp/util/AcronymMatcher/isAcronym:

#edu/stanford/nlp/util/AcronymMatcher/isAcronym:

#edu/stanford/nlp/util/AcronymMatcher/isAcronym:

#edu/stanford/nlp/util/AcronymMatcher/isFancyAcronym:

#edu/stanford/nlp/util/AcronymMatcher/isFancyAcronymImpl:

#edu/stanford/nlp/util/AcronymMatcher/lambda$isAcronymImpl$1:

#edu/stanford/nlp/util/AcronymMatcher/lambda$getMainStrs$0:
edu.stanford.nlp.util.AcronymMatcher:

#edu/stanford/nlp/util/ConfusionMatrix$Contingency/toString:
edu.stanford.nlp.util.ConfusionMatrix$Contingency:

#edu/stanford/nlp/util/HashableCoreMap/<init>:

#edu/stanford/nlp/util/HashableCoreMap/<init>:

#edu/stanford/nlp/util/HashableCoreMap/set:

#edu/stanford/nlp/util/HashableCoreMap/equals:
edu.stanford.nlp.util.HashableCoreMap:

#edu/stanford/nlp/util/ConvertByteArray/writeLongToByteArr:

#edu/stanford/nlp/util/ConvertByteArray/writeBooleanToByteArr:

#edu/stanford/nlp/util/ConvertByteArray/writeUStringToByteArr:

#edu/stanford/nlp/util/ConvertByteArray/writeUStringToByteArr:

#edu/stanford/nlp/util/ConvertByteArray/byteArrToInt:

#edu/stanford/nlp/util/ConvertByteArray/byteArrToLong:

#edu/stanford/nlp/util/ConvertByteArray/byteArrToBoolean:

#edu/stanford/nlp/util/ConvertByteArray/byteArrToUString:

#edu/stanford/nlp/util/ConvertByteArray/byteArrToUString:

#edu/stanford/nlp/util/ConvertByteArray/byteArrToAString:

#edu/stanford/nlp/util/ConvertByteArray/stringUToByteArr:

#edu/stanford/nlp/util/ConvertByteArray/intArrToByteArr:

#edu/stanford/nlp/util/ConvertByteArray/intArrToByteArr:

#edu/stanford/nlp/util/ConvertByteArray/longArrToByteArr:

#edu/stanford/nlp/util/ConvertByteArray/longArrToByteArr:

#edu/stanford/nlp/util/ConvertByteArray/booleanArrToByteArr:

#edu/stanford/nlp/util/ConvertByteArray/booleanArrToByteArr:

#edu/stanford/nlp/util/ConvertByteArray/charArrToByteArr:

#edu/stanford/nlp/util/ConvertByteArray/charArrToByteArr:

#edu/stanford/nlp/util/ConvertByteArray/floatArrToByteArr:

#edu/stanford/nlp/util/ConvertByteArray/floatArrToByteArr:

#edu/stanford/nlp/util/ConvertByteArray/doubleArrToByteArr:

#edu/stanford/nlp/util/ConvertByteArray/doubleArrToByteArr:

#edu/stanford/nlp/util/ConvertByteArray/shortArrToByteArr:

#edu/stanford/nlp/util/ConvertByteArray/shortArrToByteArr:

#edu/stanford/nlp/util/ConvertByteArray/uStringArrToByteArr:

#edu/stanford/nlp/util/ConvertByteArray/uStringArrToByteArr:

#edu/stanford/nlp/util/ConvertByteArray/aStringArrToByteArr:

#edu/stanford/nlp/util/ConvertByteArray/aStringArrToByteArr:

#edu/stanford/nlp/util/ConvertByteArray/byteArrToIntArr:

#edu/stanford/nlp/util/ConvertByteArray/byteArrToIntArr:

#edu/stanford/nlp/util/ConvertByteArray/byteArrToLongArr:

#edu/stanford/nlp/util/ConvertByteArray/byteArrToLongArr:

#edu/stanford/nlp/util/ConvertByteArray/byteArrToBooleanArr:

#edu/stanford/nlp/util/ConvertByteArray/byteArrToBooleanArr:

#edu/stanford/nlp/util/ConvertByteArray/byteArrToCharArr:

#edu/stanford/nlp/util/ConvertByteArray/byteArrToCharArr:

#edu/stanford/nlp/util/ConvertByteArray/byteArrToShortArr:

#edu/stanford/nlp/util/ConvertByteArray/byteArrToShortArr:

#edu/stanford/nlp/util/ConvertByteArray/byteArrToFloatArr:

#edu/stanford/nlp/util/ConvertByteArray/byteArrToFloatArr:

#edu/stanford/nlp/util/ConvertByteArray/byteArrToDoubleArr:

#edu/stanford/nlp/util/ConvertByteArray/byteArrToDoubleArr:

#edu/stanford/nlp/util/ConvertByteArray/byteArrToUStringArr:

#edu/stanford/nlp/util/ConvertByteArray/byteArrToUStringArr:

#edu/stanford/nlp/util/ConvertByteArray/byteArrToUStringArr:

#edu/stanford/nlp/util/ConvertByteArray/byteArrToAStringArr:

#edu/stanford/nlp/util/ConvertByteArray/byteArrToAStringArr:

#edu/stanford/nlp/util/ConvertByteArray/byteArrToAStringArr:
edu.stanford.nlp.util.ConvertByteArray:
edu.stanford.nlp.util.Lazy$2:
edu.stanford.nlp.util.CoreMaps$1$1$1:
edu.stanford.nlp.util.Iterables$9:

#edu/stanford/nlp/util/PaddedList/get:

#edu/stanford/nlp/util/PaddedList/sameInnerList:
edu.stanford.nlp.util.PaddedList:
edu.stanford.nlp.util.BijectiveFunction:
edu.stanford.nlp.util.ReflectionLoading$ReflectionLoadingException:
edu.stanford.nlp.util.CallbackFunction:
edu.stanford.nlp.util.Functions$InvertedBijection:

#edu/stanford/nlp/util/StringParsingTask/readName:

#edu/stanford/nlp/util/StringParsingTask/readJavaIdentifier:

#edu/stanford/nlp/util/StringParsingTask/readLeftParen:

#edu/stanford/nlp/util/StringParsingTask/readRightParen:

#edu/stanford/nlp/util/StringParsingTask/readDot:

#edu/stanford/nlp/util/StringParsingTask/readWhiteSpace:

#edu/stanford/nlp/util/StringParsingTask/read:

#edu/stanford/nlp/util/StringParsingTask/isWhiteSpace:

#edu/stanford/nlp/util/StringParsingTask/isPunct:

#edu/stanford/nlp/util/StringParsingTask/isLeftParen:

#edu/stanford/nlp/util/StringParsingTask/isRightParen:

#edu/stanford/nlp/util/StringParsingTask/isDot:
edu.stanford.nlp.util.StringParsingTask:

#edu/stanford/nlp/util/Filters$CollectionAcceptFilter/test:
edu.stanford.nlp.util.Filters$CollectionAcceptFilter:
edu.stanford.nlp.util.Pair$1:
edu.stanford.nlp.util.DisjointSet:
edu.stanford.nlp.util.SystemUtils$ProcessException:
edu.stanford.nlp.util.Iterables$11:
edu.stanford.nlp.util.ScoredObject:
edu.stanford.nlp.util.Scored:

#edu/stanford/nlp/util/TreeShapedStack/pop:

#edu/stanford/nlp/util/TreeShapedStack/peek:

#edu/stanford/nlp/util/TreeShapedStack/asList:

#edu/stanford/nlp/util/TreeShapedStack/internalToString:

#edu/stanford/nlp/util/TreeShapedStack/hashCode:

#edu/stanford/nlp/util/TreeShapedStack/equals:
edu.stanford.nlp.util.TreeShapedStack:
edu.stanford.nlp.util.ArrayCoreMap$1:

#edu/stanford/nlp/util/Iterables$8$1/hasNext:

#edu/stanford/nlp/util/Iterables$8$1/next:

#edu/stanford/nlp/util/Iterables$8$1/nextPair:
edu.stanford.nlp.util.Iterables$8$1:

#edu/stanford/nlp/util/MutableLong/equals:

#edu/stanford/nlp/util/MutableLong/compareTo:
edu.stanford.nlp.util.MutableLong:

#edu/stanford/nlp/util/DeltaMap$1/size:

#edu/stanford/nlp/util/DeltaMap$1/lambda$iterator$1:

#edu/stanford/nlp/util/DeltaMap$1/lambda$iterator$0:
edu.stanford.nlp.util.DeltaMap$1:

#edu/stanford/nlp/util/RegexStringFilter/equals:
edu.stanford.nlp.util.RegexStringFilter:
edu.stanford.nlp.util.Pair$ByFirstPairComparator:
edu.stanford.nlp.util.RuntimeClassNotFoundException:
edu.stanford.nlp.util.MetaClass$1:
edu.stanford.nlp.util.RuntimeInterruptedException:

#edu/stanford/nlp/util/DeltaMap$SimpleEntry/equals:

#edu/stanford/nlp/util/DeltaMap$SimpleEntry/hashCode:

#edu/stanford/nlp/util/DeltaMap$SimpleEntry/eq:
edu.stanford.nlp.util.DeltaMap$SimpleEntry:
edu.stanford.nlp.util.MapFactory$WeakHashMapFactory:

#edu/stanford/nlp/util/CacheMap/create:

#edu/stanford/nlp/util/CacheMap/write:

#edu/stanford/nlp/util/CacheMap/removeEldestEntry:

#edu/stanford/nlp/util/CacheMap/get:

#edu/stanford/nlp/util/CacheMap/put:
edu.stanford.nlp.util.CacheMap:

#edu/stanford/nlp/util/Interner/intern:

#edu/stanford/nlp/util/Interner/internAll:

#edu/stanford/nlp/util/Interner/main:
edu.stanford.nlp.util.Interner:

#edu/stanford/nlp/util/FuzzyInterval/toInterval:

#edu/stanford/nlp/util/FuzzyInterval/toValidInterval:

#edu/stanford/nlp/util/FuzzyInterval/getRelationFlags:

#edu/stanford/nlp/util/FuzzyInterval/restrictFlags:

#edu/stanford/nlp/util/FuzzyInterval/getRelation:
edu.stanford.nlp.util.FuzzyInterval:

#edu/stanford/nlp/util/ArrayCoreMap/<init>:

#edu/stanford/nlp/util/ArrayCoreMap/get:

#edu/stanford/nlp/util/ArrayCoreMap/set:

#edu/stanford/nlp/util/ArrayCoreMap/keySetNotNull:

#edu/stanford/nlp/util/ArrayCoreMap/remove:

#edu/stanford/nlp/util/ArrayCoreMap/containsKey:

#edu/stanford/nlp/util/ArrayCoreMap/compact:

#edu/stanford/nlp/util/ArrayCoreMap/setCapacity:

#edu/stanford/nlp/util/ArrayCoreMap/toString:

#edu/stanford/nlp/util/ArrayCoreMap/toShorterString:

#edu/stanford/nlp/util/ArrayCoreMap/toShortString:

#edu/stanford/nlp/util/ArrayCoreMap/equals:

#edu/stanford/nlp/util/ArrayCoreMap/equals:

#edu/stanford/nlp/util/ArrayCoreMap/hashCode:

#edu/stanford/nlp/util/ArrayCoreMap/prettyLog:
edu.stanford.nlp.util.ArrayCoreMap:

#edu/stanford/nlp/util/DeltaCollectionValuedMap/get:

#edu/stanford/nlp/util/DeltaCollectionValuedMap/add:

#edu/stanford/nlp/util/DeltaCollectionValuedMap/addAll:

#edu/stanford/nlp/util/DeltaCollectionValuedMap/removeMapping:

#edu/stanford/nlp/util/DeltaCollectionValuedMap/containsKey:

#edu/stanford/nlp/util/DeltaCollectionValuedMap/clear:

#edu/stanford/nlp/util/DeltaCollectionValuedMap/isEmpty:
edu.stanford.nlp.util.DeltaCollectionValuedMap:
edu.stanford.nlp.util.Functions$ComposedFunction:
edu.stanford.nlp.util.Filters$NegatedFilter:
edu.stanford.nlp.util.ConfusionMatrix$ConfusionGrid$Grid$1:

#edu/stanford/nlp/util/MutableInteger/equals:

#edu/stanford/nlp/util/MutableInteger/compareTo:
edu.stanford.nlp.util.MutableInteger:
edu.stanford.nlp.util.PriorityQueue:

#edu/stanford/nlp/util/UTF8EquivalenceFunction/apply:
edu.stanford.nlp.util.UTF8EquivalenceFunction:
edu.stanford.nlp.util.HashIndex$1:
edu.stanford.nlp.util.Iterables$8:

#edu/stanford/nlp/util/MaxSizeConcurrentHashSet/add:

#edu/stanford/nlp/util/MaxSizeConcurrentHashSet/remove:

#edu/stanford/nlp/util/MaxSizeConcurrentHashSet/addAll:
edu.stanford.nlp.util.MaxSizeConcurrentHashSet:

#edu/stanford/nlp/util/Quadruple/equals:

#edu/stanford/nlp/util/Quadruple/hashCode:

#edu/stanford/nlp/util/Quadruple/compareTo:
edu.stanford.nlp.util.Quadruple:
edu.stanford.nlp.util.DisabledPreferences:
edu.stanford.nlp.util.Pair$BySecondPairComparator:
edu.stanford.nlp.util.Lazy$3:

#edu/stanford/nlp/util/SystemUtils$WriterThread/run:
edu.stanford.nlp.util.SystemUtils$WriterThread:

#edu/stanford/nlp/util/HashIndex/indices:

#edu/stanford/nlp/util/HashIndex/get:

#edu/stanford/nlp/util/HashIndex/indexOf:

#edu/stanford/nlp/util/HashIndex/addToIndex:

#edu/stanford/nlp/util/HashIndex/addToIndexUnsafe:

#edu/stanford/nlp/util/HashIndex/indexOf:

#edu/stanford/nlp/util/HashIndex/addAll:

#edu/stanford/nlp/util/HashIndex/add:

#edu/stanford/nlp/util/HashIndex/saveToFilename:

#edu/stanford/nlp/util/HashIndex/loadFromFilename:

#edu/stanford/nlp/util/HashIndex/saveToWriter:

#edu/stanford/nlp/util/HashIndex/loadFromReader:

#edu/stanford/nlp/util/HashIndex/toString:

#edu/stanford/nlp/util/HashIndex/toStringOneEntryPerLine:

#edu/stanford/nlp/util/HashIndex/loadFromFileWithList:

#edu/stanford/nlp/util/HashIndex/equals:
edu.stanford.nlp.util.HashIndex:

#edu/stanford/nlp/util/Filters/filter:

#edu/stanford/nlp/util/Filters/retainAll:
edu.stanford.nlp.util.Filters:

#edu/stanford/nlp/util/XMLUtils$SAXErrorHandler/makeBetterErrorString:
edu.stanford.nlp.util.XMLUtils$SAXErrorHandler:
edu.stanford.nlp.util.FuzzyInterval$FuzzyComparable:
edu.stanford.nlp.util.IntervalTree$PartialScoredList:

#edu/stanford/nlp/util/IntervalTree$TreeNode/isEmpty:
edu.stanford.nlp.util.IntervalTree$TreeNode:

#edu/stanford/nlp/util/ByteStreamGobbler/<init>:

#edu/stanford/nlp/util/ByteStreamGobbler/run:
edu.stanford.nlp.util.ByteStreamGobbler:
edu.stanford.nlp.util.Heap:

#edu/stanford/nlp/util/FiveDimensionalMap/getFourDimensionalMap:

#edu/stanford/nlp/util/FiveDimensionalMap/values:

#edu/stanford/nlp/util/FiveDimensionalMap/secondKeySet:

#edu/stanford/nlp/util/FiveDimensionalMap/thirdKeySet:

#edu/stanford/nlp/util/FiveDimensionalMap/fourthKeySet:

#edu/stanford/nlp/util/FiveDimensionalMap/fifthKeySet:
edu.stanford.nlp.util.FiveDimensionalMap:
edu.stanford.nlp.util.ArrayStringFilter$Mode:

#edu/stanford/nlp/util/IntervalTree/add:

#edu/stanford/nlp/util/IntervalTree/removeAll:

#edu/stanford/nlp/util/IntervalTree/remove:
Fail to analyze: ../programs/stanford-corenlp-4.4.0/target/classes/edu/stanford/nlp/util/IntervalTree.class
edu.stanford.nlp.util.Lazy$1:

#edu/stanford/nlp/util/Generics/getHashSetClass:

#edu/stanford/nlp/util/Generics/newHashSet:

#edu/stanford/nlp/util/Generics/getHashMapClass:

#edu/stanford/nlp/util/Generics/newHashMap:
edu.stanford.nlp.util.Generics:
edu.stanford.nlp.util.MetaClass$ClassCreationException:
edu.stanford.nlp.util.MapFactory$ConcurrentMapFactory:

#edu/stanford/nlp/util/FixedPrioritiesPriorityQueue/<init>:

#edu/stanford/nlp/util/FixedPrioritiesPriorityQueue/hasNext:

#edu/stanford/nlp/util/FixedPrioritiesPriorityQueue/add:

#edu/stanford/nlp/util/FixedPrioritiesPriorityQueue/getFirst:

#edu/stanford/nlp/util/FixedPrioritiesPriorityQueue/getPriority:

#edu/stanford/nlp/util/FixedPrioritiesPriorityQueue/getPriority:

#edu/stanford/nlp/util/FixedPrioritiesPriorityQueue/toSortedList:

#edu/stanford/nlp/util/FixedPrioritiesPriorityQueue/grow:

#edu/stanford/nlp/util/FixedPrioritiesPriorityQueue/heapifyUp:

#edu/stanford/nlp/util/FixedPrioritiesPriorityQueue/heapifyDown:

#edu/stanford/nlp/util/FixedPrioritiesPriorityQueue/toString:

#edu/stanford/nlp/util/FixedPrioritiesPriorityQueue/clone:
edu.stanford.nlp.util.FixedPrioritiesPriorityQueue:

#edu/stanford/nlp/util/Triple/equals:

#edu/stanford/nlp/util/Triple/hashCode:

#edu/stanford/nlp/util/Triple/compareTo:
edu.stanford.nlp.util.Triple:

#edu/stanford/nlp/util/MapList/size:

#edu/stanford/nlp/util/MapList/get:

#edu/stanford/nlp/util/MapList/ensureList:
edu.stanford.nlp.util.MapList:

#edu/stanford/nlp/util/SystemUtils/run:

#edu/stanford/nlp/util/SystemUtils/consume:

#edu/stanford/nlp/util/SystemUtils/runShellCommand:

#edu/stanford/nlp/util/SystemUtils/main:
edu.stanford.nlp.util.SystemUtils:

#edu/stanford/nlp/util/Sets/map:

#edu/stanford/nlp/util/Sets/cross:

#edu/stanford/nlp/util/Sets/diff:

#edu/stanford/nlp/util/Sets/symmetricDiff:

#edu/stanford/nlp/util/Sets/intersects:

#edu/stanford/nlp/util/Sets/powerSet:

#edu/stanford/nlp/util/Sets/assertEquals:
edu.stanford.nlp.util.Sets:

#edu/stanford/nlp/util/Beam/asSortedList:

#edu/stanford/nlp/util/Beam/add:
edu.stanford.nlp.util.Beam:

#edu/stanford/nlp/util/ArrayStringFilter/<init>:

#edu/stanford/nlp/util/ArrayStringFilter/test:

#edu/stanford/nlp/util/ArrayStringFilter/hashCode:

#edu/stanford/nlp/util/ArrayStringFilter/equals:
edu.stanford.nlp.util.ArrayStringFilter:
edu.stanford.nlp.util.StringParsingTask$ParserException:

#edu/stanford/nlp/util/ArgumentParser/fillField:

#edu/stanford/nlp/util/ArgumentParser/filePathToClass:

#edu/stanford/nlp/util/ArgumentParser/getVisibleClasses:

#edu/stanford/nlp/util/ArgumentParser/scrapeFields:

#edu/stanford/nlp/util/ArgumentParser/threadRootClass:

#edu/stanford/nlp/util/ArgumentParser/bufferString:

#edu/stanford/nlp/util/ArgumentParser/fillOptionsImpl:

#edu/stanford/nlp/util/ArgumentParser/fillOptions:

#edu/stanford/nlp/util/ArgumentParser/fillOptions:

#edu/stanford/nlp/util/ArgumentParser/updatePropertiesWithOptions:

#edu/stanford/nlp/util/ArgumentParser/usage:

#edu/stanford/nlp/util/ArgumentParser/lambda$usage$11:

#edu/stanford/nlp/util/ArgumentParser/lambda$usage$4:

#edu/stanford/nlp/util/ArgumentParser/lambda$listOptions$3:

#edu/stanford/nlp/util/ArgumentParser/lambda$listOptions$2:
edu.stanford.nlp.util.ArgumentParser:

#edu/stanford/nlp/util/FastDisjointSet/linkElements:

#edu/stanford/nlp/util/FastDisjointSet/findElement:

#edu/stanford/nlp/util/FastDisjointSet/find:

#edu/stanford/nlp/util/FastDisjointSet/union:

#edu/stanford/nlp/util/FastDisjointSet/<init>:
edu.stanford.nlp.util.FastDisjointSet:

#edu/stanford/nlp/util/MapFactory$TreeMapFactory/newMap:

#edu/stanford/nlp/util/MapFactory$TreeMapFactory/newSet:

#edu/stanford/nlp/util/MapFactory$TreeMapFactory/setMap:

#edu/stanford/nlp/util/MapFactory$TreeMapFactory/setMap:
edu.stanford.nlp.util.MapFactory$TreeMapFactory:
edu.stanford.nlp.util.IntArray:
edu.stanford.nlp.util.MapFactory:

#edu/stanford/nlp/util/Iterables/chain:

#edu/stanford/nlp/util/Iterables/toString:

#edu/stanford/nlp/util/Iterables/sample:
Warning: Method:edu.stanford.nlp.util.Iterables.addAll has incoming edges.
edu.stanford.nlp.util.Iterables:

#edu/stanford/nlp/util/CoreMaps/merge:

#edu/stanford/nlp/util/CoreMaps/merge:

#edu/stanford/nlp/util/CoreMaps/asMap:

#edu/stanford/nlp/util/CoreMaps/dumpCoreMapToStringBuilder:
edu.stanford.nlp.util.CoreMaps:

#edu/stanford/nlp/util/MetaClass$ClassFactory/samePrimitive:

#edu/stanford/nlp/util/MetaClass$ClassFactory/superDistance:

#edu/stanford/nlp/util/MetaClass$ClassFactory/construct:

#edu/stanford/nlp/util/MetaClass$ClassFactory/<init>:

#edu/stanford/nlp/util/MetaClass$ClassFactory/<init>:

#edu/stanford/nlp/util/MetaClass$ClassFactory/createInstance:

#edu/stanford/nlp/util/MetaClass$ClassFactory/toString:

#edu/stanford/nlp/util/MetaClass$ClassFactory/equals:
edu.stanford.nlp.util.MetaClass$ClassFactory:
edu.stanford.nlp.util.IntervalTree$ContainsValueFunction:

#edu/stanford/nlp/util/LeastRecentlyUsedCache/getOrDefault:

#edu/stanford/nlp/util/LeastRecentlyUsedCache/add:
edu.stanford.nlp.util.LeastRecentlyUsedCache:

#edu/stanford/nlp/util/BoundedPriorityQueue/add:
edu.stanford.nlp.util.BoundedPriorityQueue:

#edu/stanford/nlp/util/ArrayHeap/parent:

#edu/stanford/nlp/util/ArrayHeap/leftChild:

#edu/stanford/nlp/util/ArrayHeap/rightChild:

#edu/stanford/nlp/util/ArrayHeap/getEntry:

#edu/stanford/nlp/util/ArrayHeap/heapifyUp:
Warning: Method:edu.stanford.nlp.util.ArrayHeap.heapifyDown has incoming edges.

#edu/stanford/nlp/util/ArrayHeap/extractMin:

#edu/stanford/nlp/util/ArrayHeap/decreaseKey:

#edu/stanford/nlp/util/ArrayHeap/iterator:

#edu/stanford/nlp/util/ArrayHeap/dump:

#edu/stanford/nlp/util/ArrayHeap/verify:

#edu/stanford/nlp/util/ArrayHeap/toString:
edu.stanford.nlp.util.ArrayHeap:

#edu/stanford/nlp/util/Iterables$2$1/next:

#edu/stanford/nlp/util/Iterables$2$1/prepare:
edu.stanford.nlp.util.Iterables$2$1:
edu.stanford.nlp.util.Factory:
edu.stanford.nlp.util.HashIndex$2:
edu.stanford.nlp.util.Iterables$10:

#edu/stanford/nlp/util/IntervalTree$ContainsIntervalFunction/test:
edu.stanford.nlp.util.IntervalTree$ContainsIntervalFunction:

#edu/stanford/nlp/util/Lazy/simulateGC:

#edu/stanford/nlp/util/Lazy/get:

#edu/stanford/nlp/util/Lazy/getIfDefined:

#edu/stanford/nlp/util/Lazy/isGarbageCollected:
edu.stanford.nlp.util.Lazy:

#edu/stanford/nlp/util/CollectionValuedMap/get:

#edu/stanford/nlp/util/CollectionValuedMap/add:

#edu/stanford/nlp/util/CollectionValuedMap/addAll:

#edu/stanford/nlp/util/CollectionValuedMap/addKey:

#edu/stanford/nlp/util/CollectionValuedMap/addAll:

#edu/stanford/nlp/util/CollectionValuedMap/addAll:

#edu/stanford/nlp/util/CollectionValuedMap/removeAll:

#edu/stanford/nlp/util/CollectionValuedMap/removeMapping:

#edu/stanford/nlp/util/CollectionValuedMap/allValues:

#edu/stanford/nlp/util/CollectionValuedMap/equals:

#edu/stanford/nlp/util/CollectionValuedMap/toString:

#edu/stanford/nlp/util/CollectionValuedMap/<init>:

#edu/stanford/nlp/util/CollectionValuedMap/<init>:
edu.stanford.nlp.util.CollectionValuedMap:

#edu/stanford/nlp/util/DeltaMap$1$1NullingIterator/next:
edu.stanford.nlp.util.DeltaMap$1$1NullingIterator:

#edu/stanford/nlp/util/LeastRecentlyUsedCache$LinkedList/pop:
edu.stanford.nlp.util.LeastRecentlyUsedCache$LinkedList:
edu.stanford.nlp.util.MapFactory$1:

#edu/stanford/nlp/util/concurrent/ConcurrentHashIndex$2/hasNext:
edu.stanford.nlp.util.concurrent.ConcurrentHashIndex$2:
Warning: Method:edu.stanford.nlp.util.concurrent.AtomicDouble.getAndAdd has incoming edges.
Warning: Method:edu.stanford.nlp.util.concurrent.AtomicDouble.addAndGet has incoming edges.
edu.stanford.nlp.util.concurrent.AtomicDouble:
edu.stanford.nlp.util.concurrent.ConcurrentHashCounter$3$1$1:
edu.stanford.nlp.util.concurrent.MulticoreWrapper$JobCallback:

#edu/stanford/nlp/util/concurrent/ConcurrentHashIndex/get:

#edu/stanford/nlp/util/concurrent/ConcurrentHashIndex/indexOf:

#edu/stanford/nlp/util/concurrent/ConcurrentHashIndex/addToIndex:

#edu/stanford/nlp/util/concurrent/ConcurrentHashIndex/indexOf:

#edu/stanford/nlp/util/concurrent/ConcurrentHashIndex/add:

#edu/stanford/nlp/util/concurrent/ConcurrentHashIndex/addAll:

#edu/stanford/nlp/util/concurrent/ConcurrentHashIndex/saveToWriter:

#edu/stanford/nlp/util/concurrent/ConcurrentHashIndex/saveToFilename:

#edu/stanford/nlp/util/concurrent/ConcurrentHashIndex/toString:

#edu/stanford/nlp/util/concurrent/ConcurrentHashIndex/contains:
edu.stanford.nlp.util.concurrent.ConcurrentHashIndex:
edu.stanford.nlp.util.concurrent.ThreadsafeProcessor:

#edu/stanford/nlp/util/concurrent/MulticoreWrapper$QueueItem/equals:
edu.stanford.nlp.util.concurrent.MulticoreWrapper$QueueItem:
edu.stanford.nlp.util.concurrent.ConcurrentHashCounter$1:
edu.stanford.nlp.util.concurrent.ConcurrentHashCounter$3:

#edu/stanford/nlp/util/concurrent/InterruptibleMulticoreWrapper$NamedTask/<init>:
edu.stanford.nlp.util.concurrent.InterruptibleMulticoreWrapper$NamedTask:
edu.stanford.nlp.util.concurrent.ConcurrentHashCounter$2$1:
edu.stanford.nlp.util.concurrent.ConcurrentHashIndex$1:

#edu/stanford/nlp/util/concurrent/ConcurrentHashCounter$2/isEmpty:

#edu/stanford/nlp/util/concurrent/ConcurrentHashCounter$2/contains:
edu.stanford.nlp.util.concurrent.ConcurrentHashCounter$2:

#edu/stanford/nlp/util/concurrent/MulticoreWrapper/<init>:

#edu/stanford/nlp/util/concurrent/MulticoreWrapper/put:

#edu/stanford/nlp/util/concurrent/MulticoreWrapper/join:

#edu/stanford/nlp/util/concurrent/MulticoreWrapper/peek:

#edu/stanford/nlp/util/concurrent/MulticoreWrapper/poll:
edu.stanford.nlp.util.concurrent.MulticoreWrapper:
edu.stanford.nlp.util.concurrent.InterruptibleMulticoreWrapper$FixedNamedThreadPoolExecutor:

#edu/stanford/nlp/util/concurrent/ConcurrentHashCounter/getCount:
Warning: Method:edu.stanford.nlp.util.concurrent.ConcurrentHashCounter.setCount has incoming edges.
Warning: Method:edu.stanford.nlp.util.concurrent.ConcurrentHashCounter.incrementCount has incoming edges.
Warning: Method:edu.stanford.nlp.util.concurrent.ConcurrentHashCounter.logIncrementCount has incoming edges.

#edu/stanford/nlp/util/concurrent/ConcurrentHashCounter/remove:
Warning: Method:edu.stanford.nlp.util.concurrent.ConcurrentHashCounter.clear has auto edges.

#edu/stanford/nlp/util/concurrent/ConcurrentHashCounter/equals:
edu.stanford.nlp.util.concurrent.ConcurrentHashCounter:
edu.stanford.nlp.util.concurrent.ConcurrentHashCounter$3$1:

#edu/stanford/nlp/util/concurrent/InterruptibleMulticoreWrapper/getProcessor:

#edu/stanford/nlp/util/concurrent/InterruptibleMulticoreWrapper/joinWithTimeout:

#edu/stanford/nlp/util/concurrent/InterruptibleMulticoreWrapper/shutdownNow:
edu.stanford.nlp.util.concurrent.InterruptibleMulticoreWrapper:

#edu/stanford/nlp/util/concurrent/SynchronizedInterner/<init>:

#edu/stanford/nlp/util/concurrent/SynchronizedInterner/<init>:

#edu/stanford/nlp/util/concurrent/SynchronizedInterner/main:

#edu/stanford/nlp/util/concurrent/SynchronizedInterner/lambda$main$0:
edu.stanford.nlp.util.concurrent.SynchronizedInterner:
edu.stanford.nlp.util.concurrent.MulticoreWrapper$CallableJob:

#edu/stanford/nlp/util/logging/RedwoodConfiguration$1/matches:
edu.stanford.nlp.util.logging.RedwoodConfiguration$1:

#edu/stanford/nlp/util/logging/Redwood$Util/revConcat:

#edu/stanford/nlp/util/logging/Redwood$Util/fail:

#edu/stanford/nlp/util/logging/Redwood$Util/endTrackIfOpen:
Warning: Method:edu.stanford.nlp.util.logging.Redwood$Util.endTracksUntil has incoming edges.

#edu/stanford/nlp/util/logging/Redwood$Util/threadAndRun:

#edu/stanford/nlp/util/logging/Redwood$Util/printChannels:
edu.stanford.nlp.util.logging.Redwood$Util:

#edu/stanford/nlp/util/logging/RepeatedRecordHandler$ExactRepeatSemantics/equals:
edu.stanford.nlp.util.logging.RepeatedRecordHandler$ExactRepeatSemantics:

#edu/stanford/nlp/util/logging/RedwoodConfiguration$Handlers$6/<init>:
edu.stanford.nlp.util.logging.RedwoodConfiguration$Handlers$6:
edu.stanford.nlp.util.logging.VisibilityHandler$State:
edu.stanford.nlp.util.logging.LogRecordHandler:
edu.stanford.nlp.util.logging.RedwoodConfiguration$Handlers$4:

#edu/stanford/nlp/util/logging/JavaUtilLoggingAdaptor$RedwoodHandler/publish:
edu.stanford.nlp.util.logging.JavaUtilLoggingAdaptor$RedwoodHandler:
edu.stanford.nlp.util.logging.Redwood$MessageType:
edu.stanford.nlp.util.logging.OutputHandler$TrackInfo:
edu.stanford.nlp.util.logging.RedwoodConfiguration$3:
edu.stanford.nlp.util.logging.RedwoodConfiguration$Handlers$2$1:
edu.stanford.nlp.util.logging.RedwoodConfiguration$Handlers$2:
edu.stanford.nlp.util.logging.SLF4JHandler$1:

#edu/stanford/nlp/util/logging/RedwoodConfiguration$Handlers$5/<init>:
edu.stanford.nlp.util.logging.RedwoodConfiguration$Handlers$5:

#edu/stanford/nlp/util/logging/Redwood$Util$1/next:

#edu/stanford/nlp/util/logging/Redwood$Util$1/lambda$next$0:
edu.stanford.nlp.util.logging.Redwood$Util$1:

#edu/stanford/nlp/util/logging/RedwoodPrintStream/log:

#edu/stanford/nlp/util/logging/RedwoodPrintStream/logf:

#edu/stanford/nlp/util/logging/RedwoodPrintStream/logB:

#edu/stanford/nlp/util/logging/RedwoodPrintStream/println:

#edu/stanford/nlp/util/logging/RedwoodPrintStream/println:
edu.stanford.nlp.util.logging.RedwoodPrintStream:
edu.stanford.nlp.util.logging.RedwoodConfiguration$2:

#edu/stanford/nlp/util/logging/RepeatedRecordHandler$ApproximateRepeatSemantics/equals:
edu.stanford.nlp.util.logging.RepeatedRecordHandler$ApproximateRepeatSemantics:

#edu/stanford/nlp/util/logging/RedwoodConfiguration$Handlers/lambda$branch$5:
edu.stanford.nlp.util.logging.RedwoodConfiguration$Handlers:
edu.stanford.nlp.util.logging.NewlineLogFormatter:

#edu/stanford/nlp/util/logging/RedwoodConfiguration$Handlers$7/buildChain:

#edu/stanford/nlp/util/logging/RedwoodConfiguration$Handlers$7/apply:
edu.stanford.nlp.util.logging.RedwoodConfiguration$Handlers$7:
edu.stanford.nlp.util.logging.RedwoodConfiguration$Handlers$3:

#edu/stanford/nlp/util/logging/Redwood$FileHandler/print:
edu.stanford.nlp.util.logging.Redwood$FileHandler:

#edu/stanford/nlp/util/logging/RepeatedRecordHandler/flush:

#edu/stanford/nlp/util/logging/RepeatedRecordHandler/flushParents:

#edu/stanford/nlp/util/logging/RepeatedRecordHandler/recordVerdict:

#edu/stanford/nlp/util/logging/RepeatedRecordHandler/internalHandle:

#edu/stanford/nlp/util/logging/RepeatedRecordHandler/handle:

#edu/stanford/nlp/util/logging/RepeatedRecordHandler/signalStartTrack:

#edu/stanford/nlp/util/logging/RepeatedRecordHandler/signalEndTrack:
edu.stanford.nlp.util.logging.RepeatedRecordHandler:
edu.stanford.nlp.util.logging.Redwood$Flag:
edu.stanford.nlp.util.logging.RedwoodConfiguration$Handlers$1:
edu.stanford.nlp.util.logging.RedwoodConfiguration$Handlers$1$1:

#edu/stanford/nlp/util/logging/Redwood$Record/sort:

#edu/stanford/nlp/util/logging/Redwood$Record/force:

#edu/stanford/nlp/util/logging/Redwood$Record/lambda$sort$0:
edu.stanford.nlp.util.logging.Redwood$Record:

#edu/stanford/nlp/util/logging/JavaUtilLoggingAdaptor/adapt:

#edu/stanford/nlp/util/logging/JavaUtilLoggingAdaptor/main:
edu.stanford.nlp.util.logging.JavaUtilLoggingAdaptor:

#edu/stanford/nlp/util/logging/OutputHandler/getSourceStringAndLevel:

#edu/stanford/nlp/util/logging/OutputHandler/colorChannel:

#edu/stanford/nlp/util/logging/OutputHandler/styleChannel:

#edu/stanford/nlp/util/logging/OutputHandler/setColorChannels:

#edu/stanford/nlp/util/logging/OutputHandler/style:

#edu/stanford/nlp/util/logging/OutputHandler/formatChannel:

#edu/stanford/nlp/util/logging/OutputHandler/writeContent:
Warning: Method:edu.stanford.nlp.util.logging.OutputHandler.updateTracks has incoming edges.

#edu/stanford/nlp/util/logging/OutputHandler/handle:

#edu/stanford/nlp/util/logging/OutputHandler/signalStartTrack:

#edu/stanford/nlp/util/logging/OutputHandler/signalEndTrack:
edu.stanford.nlp.util.logging.OutputHandler:

#edu/stanford/nlp/util/logging/JavaUtilLoggingHandler/print:
edu.stanford.nlp.util.logging.JavaUtilLoggingHandler:

#edu/stanford/nlp/util/logging/LogFilter$HasChannel/matches:
edu.stanford.nlp.util.logging.LogFilter$HasChannel:
edu.stanford.nlp.util.logging.RepeatedRecordHandler$RepeatSemantics:
edu.stanford.nlp.util.logging.Redwood$RedwoodChannels:

#edu/stanford/nlp/util/logging/StanfordRedwoodConfiguration/apply:
edu.stanford.nlp.util.logging.StanfordRedwoodConfiguration:

#edu/stanford/nlp/util/logging/Redwood/queueTask:

#edu/stanford/nlp/util/logging/Redwood/releaseThreadControl:

#edu/stanford/nlp/util/logging/Redwood/attemptThreadControl:

#edu/stanford/nlp/util/logging/Redwood/attemptThreadControlThreadsafe:

#edu/stanford/nlp/util/logging/Redwood/getHandler:

#edu/stanford/nlp/util/logging/Redwood/captureSystemStreams:

#edu/stanford/nlp/util/logging/Redwood/log:

#edu/stanford/nlp/util/logging/Redwood/startTrack:

#edu/stanford/nlp/util/logging/Redwood/endTrack:

#edu/stanford/nlp/util/logging/Redwood/startThreads:

#edu/stanford/nlp/util/logging/Redwood/finishThread:

#edu/stanford/nlp/util/logging/Redwood/endThreads:

#edu/stanford/nlp/util/logging/Redwood/hideChannelsEverywhere:

#edu/stanford/nlp/util/logging/Redwood/stop:

#edu/stanford/nlp/util/logging/Redwood/formatTimeDifference:

#edu/stanford/nlp/util/logging/Redwood/main:

#edu/stanford/nlp/util/logging/Redwood/lambda$main$8:

#edu/stanford/nlp/util/logging/Redwood/lambda$endTrack$4:

#edu/stanford/nlp/util/logging/Redwood/lambda$startTrack$3:

#edu/stanford/nlp/util/logging/Redwood/lambda$log$0:
edu.stanford.nlp.util.logging.Redwood:
edu.stanford.nlp.util.logging.RepeatedRecordHandler$RepeatedRecordInfo:

#edu/stanford/nlp/util/logging/Style/apply:
edu.stanford.nlp.util.logging.Style:

#edu/stanford/nlp/util/logging/SLF4JHandler/handle:

#edu/stanford/nlp/util/logging/SLF4JHandler/print:
edu.stanford.nlp.util.logging.SLF4JHandler:
edu.stanford.nlp.util.logging.JavaUtilLoggingHandler$1:
edu.stanford.nlp.util.logging.LogFilter$ContainsMessage:

#edu/stanford/nlp/util/logging/VisibilityHandler/<init>:

#edu/stanford/nlp/util/logging/VisibilityHandler/alsoShow:

#edu/stanford/nlp/util/logging/VisibilityHandler/alsoHide:

#edu/stanford/nlp/util/logging/VisibilityHandler/handle:
edu.stanford.nlp.util.logging.VisibilityHandler:

#edu/stanford/nlp/util/logging/PrettyLogger/log:

#edu/stanford/nlp/util/logging/PrettyLogger/dispatchable:

#edu/stanford/nlp/util/logging/PrettyLogger/log:

#edu/stanford/nlp/util/logging/PrettyLogger/log:

#edu/stanford/nlp/util/logging/PrettyLogger/log:

#edu/stanford/nlp/util/logging/PrettyLogger/log:

#edu/stanford/nlp/util/logging/PrettyLogger/lambda$log$0:
edu.stanford.nlp.util.logging.PrettyLogger:

#edu/stanford/nlp/util/logging/RedirectOutputHandler/shouldLogChannels:

#edu/stanford/nlp/util/logging/RedirectOutputHandler/print:

#edu/stanford/nlp/util/logging/RedirectOutputHandler/formatChannel:
edu.stanford.nlp.util.logging.RedirectOutputHandler:

#edu/stanford/nlp/util/logging/RerouteChannel/handle:
edu.stanford.nlp.util.logging.RerouteChannel:
edu.stanford.nlp.util.logging.Redwood$ConsoleHandler:
edu.stanford.nlp.util.logging.LogFilter:

#edu/stanford/nlp/util/logging/Redwood$RecordHandlerTree$1/<init>:
Warning: Method:edu.stanford.nlp.util.logging.Redwood$RecordHandlerTree$1.hasNext has incoming edges.

#edu/stanford/nlp/util/logging/Redwood$RecordHandlerTree$1/next:

#edu/stanford/nlp/util/logging/Redwood$RecordHandlerTree$1/remove:
edu.stanford.nlp.util.logging.Redwood$RecordHandlerTree$1:
edu.stanford.nlp.util.logging.RepeatedRecordHandler$1:

#edu/stanford/nlp/util/logging/BooleanLogRecordHandler/handle:
edu.stanford.nlp.util.logging.BooleanLogRecordHandler:

#edu/stanford/nlp/util/logging/Redwood$RecordHandlerTree/addChild:

#edu/stanford/nlp/util/logging/Redwood$RecordHandlerTree/addChildTree:

#edu/stanford/nlp/util/logging/Redwood$RecordHandlerTree/removeChild:

#edu/stanford/nlp/util/logging/Redwood$RecordHandlerTree/find:

#edu/stanford/nlp/util/logging/Redwood$RecordHandlerTree/append:

#edu/stanford/nlp/util/logging/Redwood$RecordHandlerTree/process:

#edu/stanford/nlp/util/logging/Redwood$RecordHandlerTree/toStringHelper:
edu.stanford.nlp.util.logging.Redwood$RecordHandlerTree:
edu.stanford.nlp.util.logging.RedwoodConfiguration$Thunk:
edu.stanford.nlp.util.logging.LogFilter$MatchesMessage:
edu.stanford.nlp.util.logging.Redwood$1:
edu.stanford.nlp.util.logging.VisibilityHandler$1:

#edu/stanford/nlp/util/logging/FilterHandler/propagateRecord:
edu.stanford.nlp.util.logging.FilterHandler:
edu.stanford.nlp.util.logging.PrettyLoggable:
edu.stanford.nlp.util.logging.OutputHandler$1:

#edu/stanford/nlp/util/logging/RedwoodConfiguration/capture:

#edu/stanford/nlp/util/logging/RedwoodConfiguration/restore:

#edu/stanford/nlp/util/logging/RedwoodConfiguration/output:

#edu/stanford/nlp/util/logging/RedwoodConfiguration/handlers:

#edu/stanford/nlp/util/logging/RedwoodConfiguration/parse:

#edu/stanford/nlp/util/logging/RedwoodConfiguration/lambda$restore$3:

#edu/stanford/nlp/util/logging/RedwoodConfiguration/lambda$restore$2:

#edu/stanford/nlp/util/logging/RedwoodConfiguration/lambda$capture$1:

#edu/stanford/nlp/util/logging/RedwoodConfiguration/lambda$capture$0:
edu.stanford.nlp.util.logging.RedwoodConfiguration:
edu.stanford.nlp.util.logging.RepeatedRecordHandler$PendingType:

#edu/stanford/nlp/util/logging/Color/apply:
edu.stanford.nlp.util.logging.Color:
edu.stanford.nlp.naturalli.QuestionToStatementTranslator$4:
edu.stanford.nlp.naturalli.RelationTripleSegmenter$6:
edu.stanford.nlp.naturalli.ClauseSplitterSearchProblem$1$8:
edu.stanford.nlp.naturalli.ClauseSplitterSearchProblem$Featurizer:
edu.stanford.nlp.naturalli.NaturalLogicAnnotations$PolarityDirectionAnnotation:
edu.stanford.nlp.naturalli.NaturalLogicAnnotator$5:
edu.stanford.nlp.naturalli.NaturalLogicRelation$2:

#edu/stanford/nlp/naturalli/QuestionToStatementTranslator/processWhatIs:

#edu/stanford/nlp/naturalli/QuestionToStatementTranslator/processWhNNWill:

#edu/stanford/nlp/naturalli/QuestionToStatementTranslator/processWhNNIs:

#edu/stanford/nlp/naturalli/QuestionToStatementTranslator/processWhNNHaveIs:

#edu/stanford/nlp/naturalli/QuestionToStatementTranslator/processWhNNHaveNN:

#edu/stanford/nlp/naturalli/QuestionToStatementTranslator/processWhatIsThere:

#edu/stanford/nlp/naturalli/QuestionToStatementTranslator/processWhereDo:

#edu/stanford/nlp/naturalli/QuestionToStatementTranslator/processWhereIs:

#edu/stanford/nlp/naturalli/QuestionToStatementTranslator/processWhoIs:

#edu/stanford/nlp/naturalli/QuestionToStatementTranslator/processWhoDid:

#edu/stanford/nlp/naturalli/QuestionToStatementTranslator/processWhatDo:

#edu/stanford/nlp/naturalli/QuestionToStatementTranslator/processWhenDo:

#edu/stanford/nlp/naturalli/QuestionToStatementTranslator/processWhatHave:

#edu/stanford/nlp/naturalli/QuestionToStatementTranslator/processHow:

#edu/stanford/nlp/naturalli/QuestionToStatementTranslator/processHowMuchDo:

#edu/stanford/nlp/naturalli/QuestionToStatementTranslator/postProcess:

#edu/stanford/nlp/naturalli/QuestionToStatementTranslator/toStatement:

#edu/stanford/nlp/naturalli/QuestionToStatementTranslator/main:

#edu/stanford/nlp/naturalli/QuestionToStatementTranslator/lambda$main$5:

#edu/stanford/nlp/naturalli/QuestionToStatementTranslator/lambda$main$4:

#edu/stanford/nlp/naturalli/QuestionToStatementTranslator/lambda$postProcess$3:

#edu/stanford/nlp/naturalli/QuestionToStatementTranslator/lambda$processWhatIs$0:
edu.stanford.nlp.naturalli.QuestionToStatementTranslator:
edu.stanford.nlp.naturalli.ForwardEntailerSearchProblem$1:
edu.stanford.nlp.naturalli.ClauseSplitterSearchProblem$Action:

#edu/stanford/nlp/naturalli/RelationTripleSegmenter$4/<init>:
edu.stanford.nlp.naturalli.RelationTripleSegmenter$4:
edu.stanford.nlp.naturalli.QuestionToStatementTranslator$6:
edu.stanford.nlp.naturalli.ClauseSplitter:
edu.stanford.nlp.naturalli.QuestionToStatementTranslator$2:
edu.stanford.nlp.naturalli.NaturalLogicAnnotator$3:

#edu/stanford/nlp/naturalli/NaturalLogicRelation/byFixedIndex:

#edu/stanford/nlp/naturalli/NaturalLogicRelation/join:

#edu/stanford/nlp/naturalli/NaturalLogicRelation/applyToTruthValue:

#edu/stanford/nlp/naturalli/NaturalLogicRelation/forDependencyInsertion:

#edu/stanford/nlp/naturalli/NaturalLogicRelation/insertionToDeletion:
edu.stanford.nlp.naturalli.NaturalLogicRelation:
edu.stanford.nlp.naturalli.NaturalLogicAnnotator$1:
edu.stanford.nlp.naturalli.OpenIE$2:

#edu/stanford/nlp/naturalli/NaturalLogicAnnotator/getGeneralizedSubtreeSpan:

#edu/stanford/nlp/naturalli/NaturalLogicAnnotator/getModifierSubtreeSpan:

#edu/stanford/nlp/naturalli/NaturalLogicAnnotator/excludeFromSpan:

#edu/stanford/nlp/naturalli/NaturalLogicAnnotator/computeScope:

#edu/stanford/nlp/naturalli/NaturalLogicAnnotator/validateQuantifierByHead:

#edu/stanford/nlp/naturalli/NaturalLogicAnnotator/addNegationToDependencyGraph:

#edu/stanford/nlp/naturalli/NaturalLogicAnnotator/annotateOperators:

#edu/stanford/nlp/naturalli/NaturalLogicAnnotator/annotateUnaries:

#edu/stanford/nlp/naturalli/NaturalLogicAnnotator/annotatePolarity:

#edu/stanford/nlp/naturalli/NaturalLogicAnnotator/doOneSentence:

#edu/stanford/nlp/naturalli/NaturalLogicAnnotator/requirementsSatisfied:

#edu/stanford/nlp/naturalli/NaturalLogicAnnotator/lambda$validateQuantifierByHead$2:

#edu/stanford/nlp/naturalli/NaturalLogicAnnotator/lambda$getGeneralizedSubtreeSpan$0:
edu.stanford.nlp.naturalli.NaturalLogicAnnotator:
edu.stanford.nlp.naturalli.QuestionToStatementTranslator$UnknownTokenMarker:

#edu/stanford/nlp/naturalli/RelationTripleSegmenter$2/<init>:
edu.stanford.nlp.naturalli.RelationTripleSegmenter$2:

#edu/stanford/nlp/naturalli/ForwardEntailer/apply:
edu.stanford.nlp.naturalli.ForwardEntailer:
edu.stanford.nlp.naturalli.NaturalLogicAnnotations:
edu.stanford.nlp.naturalli.NaturalLogicRelation$1:
edu.stanford.nlp.naturalli.QuestionToStatementTranslator$7:

#edu/stanford/nlp/naturalli/ClauseSplitterSearchProblem$8/isSimpleSplit:

#edu/stanford/nlp/naturalli/ClauseSplitterSearchProblem$8/apply:
edu.stanford.nlp.naturalli.ClauseSplitterSearchProblem$8:
edu.stanford.nlp.naturalli.RelationTripleSegmenter$5:

#edu/stanford/nlp/naturalli/Operator/isUnary:

#edu/stanford/nlp/naturalli/Operator/monoFromString:

#edu/stanford/nlp/naturalli/Operator/monotonicitySignature:

#edu/stanford/nlp/naturalli/Operator/fromString:
edu.stanford.nlp.naturalli.Operator:
edu.stanford.nlp.naturalli.ClauseSplitterSearchProblem$1$9:
edu.stanford.nlp.naturalli.RelationTripleSegmenter$7:
edu.stanford.nlp.naturalli.QuestionToStatementTranslator$5:
edu.stanford.nlp.naturalli.NaturalLogicAnnotator$4:
edu.stanford.nlp.naturalli.NaturalLogicAnnotations$EntailedSentencesAnnotation:
edu.stanford.nlp.naturalli.NaturalLogicAnnotations$RelationTriplesAnnotation:
edu.stanford.nlp.naturalli.RelationTripleSegmenter$3:
edu.stanford.nlp.naturalli.Monotonicity:
edu.stanford.nlp.naturalli.QuestionToStatementTranslator$1:
edu.stanford.nlp.naturalli.QuestionToStatementTranslator$3:
edu.stanford.nlp.naturalli.RelationTripleSegmenter$1:
edu.stanford.nlp.naturalli.MonotonicityType:
edu.stanford.nlp.naturalli.OpenIE$OutputFormat:

#edu/stanford/nlp/naturalli/ClauseSplitterSearchProblem$State/withIsDone:
edu.stanford.nlp.naturalli.ClauseSplitterSearchProblem$State:
edu.stanford.nlp.naturalli.OpenIE$1:
edu.stanford.nlp.naturalli.NaturalLogicAnnotator$2:
edu.stanford.nlp.naturalli.NaturalLogicAnnotations$OperatorAnnotation:
edu.stanford.nlp.naturalli.ClauseSplitterSearchProblem$TrainingOptions:
edu.stanford.nlp.naturalli.ClauseSplitterSearchProblem$1$3:

#edu/stanford/nlp/naturalli/ForwardEntailerSearchProblem/searchImplementation:

#edu/stanford/nlp/naturalli/ForwardEntailerSearchProblem/aggregateDeletedEdges:

#edu/stanford/nlp/naturalli/ForwardEntailerSearchProblem/lambda$searchImplementation$5:

#edu/stanford/nlp/naturalli/ForwardEntailerSearchProblem/lambda$searchImplementation$4:

#edu/stanford/nlp/naturalli/ForwardEntailerSearchProblem/lambda$searchImplementation$3:

#edu/stanford/nlp/naturalli/ForwardEntailerSearchProblem/lambda$searchImplementation$2:

#edu/stanford/nlp/naturalli/ForwardEntailerSearchProblem/lambda$search$1:
edu.stanford.nlp.naturalli.ForwardEntailerSearchProblem:

#edu/stanford/nlp/naturalli/Util/guessNER:

#edu/stanford/nlp/naturalli/Util/extractNER:

#edu/stanford/nlp/naturalli/Util/verifyRemoval:

#edu/stanford/nlp/naturalli/Util/cleanTree:

#edu/stanford/nlp/naturalli/Util/stripPrepCases:

#edu/stanford/nlp/naturalli/Util/isCyclic:

#edu/stanford/nlp/naturalli/Util/isTree:

#edu/stanford/nlp/naturalli/Util/tokensToSpan:

#edu/stanford/nlp/naturalli/Util/lambda$dumpAccuracy$1:

#edu/stanford/nlp/naturalli/Util/lambda$dumpAccuracy$0:
edu.stanford.nlp.naturalli.Util:
edu.stanford.nlp.naturalli.ClauseSplitterSearchProblem$1$1:

#edu/stanford/nlp/naturalli/OpenIEDemo/main:
edu.stanford.nlp.naturalli.OpenIEDemo:
edu.stanford.nlp.naturalli.ClauseSplitterSearchProblem$2:

#edu/stanford/nlp/naturalli/SentenceFragment/<init>:

#edu/stanford/nlp/naturalli/SentenceFragment/paddedWords:

#edu/stanford/nlp/naturalli/SentenceFragment/equals:

#edu/stanford/nlp/naturalli/SentenceFragment/toString:
edu.stanford.nlp.naturalli.SentenceFragment:

#edu/stanford/nlp/naturalli/OpenIE/<init>:

#edu/stanford/nlp/naturalli/OpenIE/clausesInSentence:

#edu/stanford/nlp/naturalli/OpenIE/entailmentsFromClause:

#edu/stanford/nlp/naturalli/OpenIE/entailmentsFromClauses:

#edu/stanford/nlp/naturalli/OpenIE/canonicalizeCoref:

#edu/stanford/nlp/naturalli/OpenIE/annotateSentence:

#edu/stanford/nlp/naturalli/OpenIE/annotate:

#edu/stanford/nlp/naturalli/OpenIE/requires:

#edu/stanford/nlp/naturalli/OpenIE/tripleToString:

#edu/stanford/nlp/naturalli/OpenIE/processDocument:

#edu/stanford/nlp/naturalli/OpenIE/main:

#edu/stanford/nlp/naturalli/OpenIE/lambda$main$9:

#edu/stanford/nlp/naturalli/OpenIE/lambda$main$7:

#edu/stanford/nlp/naturalli/OpenIE/lambda$grokCorefMention$5:

#edu/stanford/nlp/naturalli/OpenIE/lambda$grokCorefMention$3:
edu.stanford.nlp.naturalli.OpenIE:
edu.stanford.nlp.naturalli.Operator$4:

#edu/stanford/nlp/naturalli/CreateClauseDataset/toSpan:

#edu/stanford/nlp/naturalli/CreateClauseDataset/process:

#edu/stanford/nlp/naturalli/CreateClauseDataset/subjectObjectPairs:

#edu/stanford/nlp/naturalli/CreateClauseDataset/findTraceTargets:

#edu/stanford/nlp/naturalli/CreateClauseDataset/findTraceSources:

#edu/stanford/nlp/naturalli/CreateClauseDataset/countDatums:

#edu/stanford/nlp/naturalli/CreateClauseDataset/processDirectory:
edu.stanford.nlp.naturalli.CreateClauseDataset:
edu.stanford.nlp.naturalli.QuestionToStatementTranslator$10:
edu.stanford.nlp.naturalli.QuestionToStatementTranslator$9:

#edu/stanford/nlp/naturalli/Polarity/<init>:

#edu/stanford/nlp/naturalli/Polarity/<init>:

#edu/stanford/nlp/naturalli/Polarity/project:

#edu/stanford/nlp/naturalli/Polarity/isUpwards:

#edu/stanford/nlp/naturalli/Polarity/isDownwards:

#edu/stanford/nlp/naturalli/Polarity/toString:

#edu/stanford/nlp/naturalli/Polarity/equals:

#edu/stanford/nlp/naturalli/Polarity/hashCode:
edu.stanford.nlp.naturalli.Polarity:

#edu/stanford/nlp/naturalli/ClauseSplitterSearchProblem$6/prerequisitesMet:

#edu/stanford/nlp/naturalli/ClauseSplitterSearchProblem$6/applyTo:

#edu/stanford/nlp/naturalli/ClauseSplitterSearchProblem$6/lambda$applyTo$0:
edu.stanford.nlp.naturalli.ClauseSplitterSearchProblem$6:
edu.stanford.nlp.naturalli.ClauseSplitterSearchProblem$1$5:

#edu/stanford/nlp/naturalli/ClauseSplitterSearchProblem$4/prerequisitesMet:

#edu/stanford/nlp/naturalli/ClauseSplitterSearchProblem$4/applyTo:

#edu/stanford/nlp/naturalli/ClauseSplitterSearchProblem$4/lambda$applyTo$0:
edu.stanford.nlp.naturalli.ClauseSplitterSearchProblem$4:
edu.stanford.nlp.naturalli.NaturalLogicAnnotations$EntailedClausesAnnotation:
edu.stanford.nlp.naturalli.ClauseSplitterSearchProblem$1$7:
edu.stanford.nlp.naturalli.NaturalLogicAnnotations$PolarityAnnotation:

#edu/stanford/nlp/naturalli/Operator$2/<init>:
edu.stanford.nlp.naturalli.Operator$2:
edu.stanford.nlp.naturalli.Polarity$1:

#edu/stanford/nlp/naturalli/ClauseSplitterSearchProblem$3/prerequisitesMet:

#edu/stanford/nlp/naturalli/ClauseSplitterSearchProblem$3/applyTo:

#edu/stanford/nlp/naturalli/ClauseSplitterSearchProblem$3/lambda$applyTo$0:
edu.stanford.nlp.naturalli.ClauseSplitterSearchProblem$3:
edu.stanford.nlp.naturalli.ForwardEntailerSearchProblem$SearchState:

#edu/stanford/nlp/naturalli/ClauseSplitterSearchProblem/<init>:

#edu/stanford/nlp/naturalli/ClauseSplitterSearchProblem/splitToChildOfEdge:

#edu/stanford/nlp/naturalli/ClauseSplitterSearchProblem/simpleClause:

#edu/stanford/nlp/naturalli/ClauseSplitterSearchProblem/addSubtree:

#edu/stanford/nlp/naturalli/ClauseSplitterSearchProblem/stripAuxMark:

#edu/stanford/nlp/naturalli/ClauseSplitterSearchProblem/search:

#edu/stanford/nlp/naturalli/ClauseSplitterSearchProblem/search:

#edu/stanford/nlp/naturalli/ClauseSplitterSearchProblem/orderActions:

#edu/stanford/nlp/naturalli/ClauseSplitterSearchProblem/search:

#edu/stanford/nlp/naturalli/ClauseSplitterSearchProblem/lambda$null$2:

#edu/stanford/nlp/naturalli/ClauseSplitterSearchProblem/lambda$topClauses$0:
edu.stanford.nlp.naturalli.ClauseSplitterSearchProblem:

#edu/stanford/nlp/naturalli/OperatorSpec/<init>:

#edu/stanford/nlp/naturalli/OperatorSpec/isExplicit:

#edu/stanford/nlp/naturalli/OperatorSpec/isBinary:

#edu/stanford/nlp/naturalli/OperatorSpec/merge:

#edu/stanford/nlp/naturalli/OperatorSpec/equals:

#edu/stanford/nlp/naturalli/OperatorSpec/hashCode:
edu.stanford.nlp.naturalli.OperatorSpec:
edu.stanford.nlp.naturalli.ClauseSplitterSearchProblem$1$10:
edu.stanford.nlp.naturalli.NotTreeException:
edu.stanford.nlp.naturalli.ForwardEntailerSearchProblem$SearchResult:
edu.stanford.nlp.naturalli.ClauseSplitterSearchProblem$1:
edu.stanford.nlp.naturalli.ClauseSplitterSearchProblem$1$2:

#edu/stanford/nlp/naturalli/ClauseSplitter$ClauseClassifierLabel/fromIndex:
edu.stanford.nlp.naturalli.ClauseSplitter$ClauseClassifierLabel:
edu.stanford.nlp.naturalli.ClauseSplitterSearchProblem$1$6:

#edu/stanford/nlp/naturalli/ClauseSplitterSearchProblem$5/prerequisitesMet:

#edu/stanford/nlp/naturalli/ClauseSplitterSearchProblem$5/applyTo:

#edu/stanford/nlp/naturalli/ClauseSplitterSearchProblem$5/lambda$applyTo$0:
edu.stanford.nlp.naturalli.ClauseSplitterSearchProblem$5:

#edu/stanford/nlp/naturalli/NaturalLogicWeights/<init>:

#edu/stanford/nlp/naturalli/NaturalLogicWeights/deletionProbability:

#edu/stanford/nlp/naturalli/NaturalLogicWeights/subjDeletionProbability:

#edu/stanford/nlp/naturalli/NaturalLogicWeights/objDeletionProbability:

#edu/stanford/nlp/naturalli/NaturalLogicWeights/ppDeletionProbability:

#edu/stanford/nlp/naturalli/NaturalLogicWeights/deletionProbability:
edu.stanford.nlp.naturalli.NaturalLogicWeights:

#edu/stanford/nlp/naturalli/VerbTense/of:

#edu/stanford/nlp/naturalli/VerbTense/conjugateEnglish:

#edu/stanford/nlp/naturalli/VerbTense/lambda$static$0:
edu.stanford.nlp.naturalli.VerbTense:

#edu/stanford/nlp/naturalli/Operator$3/<init>:
edu.stanford.nlp.naturalli.Operator$3:
edu.stanford.nlp.naturalli.Util$1:

#edu/stanford/nlp/naturalli/RelationTripleSegmenter/extract:

#edu/stanford/nlp/naturalli/RelationTripleSegmenter/getValidChunk:

#edu/stanford/nlp/naturalli/RelationTripleSegmenter/segmentVerb:

#edu/stanford/nlp/naturalli/RelationTripleSegmenter/segmentACL:

#edu/stanford/nlp/naturalli/RelationTripleSegmenter/segment:

#edu/stanford/nlp/naturalli/RelationTripleSegmenter/lambda$segmentACL$1:

#edu/stanford/nlp/naturalli/RelationTripleSegmenter/lambda$extract$0:
edu.stanford.nlp.naturalli.RelationTripleSegmenter:
edu.stanford.nlp.naturalli.CreateClauseDataset$1:
edu.stanford.nlp.naturalli.QuestionToStatementTranslator$11:

#edu/stanford/nlp/naturalli/Operator$1/<init>:
edu.stanford.nlp.naturalli.Operator$1:
edu.stanford.nlp.naturalli.ClauseSplitterSearchProblem$1$4:
edu.stanford.nlp.naturalli.ClauseSplitterSearchProblem$7:
edu.stanford.nlp.naturalli.QuestionToStatementTranslator$8:
edu.stanford.nlp.naturalli.demo.CORSFilter$1:
edu.stanford.nlp.naturalli.demo.OpenIEServlet$1:

#edu/stanford/nlp/naturalli/demo/CORSFilter/doFilter:

#edu/stanford/nlp/naturalli/demo/CORSFilter/init:

#edu/stanford/nlp/naturalli/demo/CORSFilter/handleSimpleCORS:

#edu/stanford/nlp/naturalli/demo/CORSFilter/handlePreflightCORS:

#edu/stanford/nlp/naturalli/demo/CORSFilter/handleInvalidCORS:

#edu/stanford/nlp/naturalli/demo/CORSFilter/decorateCORSProperties:

#edu/stanford/nlp/naturalli/demo/CORSFilter/join:

#edu/stanford/nlp/naturalli/demo/CORSFilter/checkRequestType:

#edu/stanford/nlp/naturalli/demo/CORSFilter/isOriginAllowed:

#edu/stanford/nlp/naturalli/demo/CORSFilter/log:

#edu/stanford/nlp/naturalli/demo/CORSFilter/parseAndStore:

#edu/stanford/nlp/naturalli/demo/CORSFilter/parseStringToSet:

#edu/stanford/nlp/naturalli/demo/CORSFilter/isValidOrigin:
edu.stanford.nlp.naturalli.demo.CORSFilter:
edu.stanford.nlp.naturalli.demo.CORSFilter$CORSRequestType:

#edu/stanford/nlp/naturalli/demo/OpenIEServlet/init:

#edu/stanford/nlp/naturalli/demo/OpenIEServlet/annotate:

#edu/stanford/nlp/naturalli/demo/OpenIEServlet/quote:

#edu/stanford/nlp/naturalli/demo/OpenIEServlet/runWithPipeline:

#edu/stanford/nlp/naturalli/demo/OpenIEServlet/doGet:

#edu/stanford/nlp/naturalli/demo/OpenIEServlet/doGet:
edu.stanford.nlp.naturalli.demo.OpenIEServlet:

#edu/stanford/nlp/wordseg/Gale2007ChineseSegmenterFeatureFactory/createTADetector:

#edu/stanford/nlp/wordseg/Gale2007ChineseSegmenterFeatureFactory/createOutDict:

#edu/stanford/nlp/wordseg/Gale2007ChineseSegmenterFeatureFactory/createNonDict:

#edu/stanford/nlp/wordseg/Gale2007ChineseSegmenterFeatureFactory/getCliqueFeatures:

#edu/stanford/nlp/wordseg/Gale2007ChineseSegmenterFeatureFactory/isEnglish:

#edu/stanford/nlp/wordseg/Gale2007ChineseSegmenterFeatureFactory/isEngPU:

#edu/stanford/nlp/wordseg/Gale2007ChineseSegmenterFeatureFactory/featuresC:

#edu/stanford/nlp/wordseg/Gale2007ChineseSegmenterFeatureFactory/dictionaryFeaturesCpC:

#edu/stanford/nlp/wordseg/Gale2007ChineseSegmenterFeatureFactory/featuresCpC:

#edu/stanford/nlp/wordseg/Gale2007ChineseSegmenterFeatureFactory/featuresCnC:

#edu/stanford/nlp/wordseg/Gale2007ChineseSegmenterFeatureFactory/featuresCpCp2C:

#edu/stanford/nlp/wordseg/Gale2007ChineseSegmenterFeatureFactory/featuresCpCp2Cp3C:
edu.stanford.nlp.wordseg.Gale2007ChineseSegmenterFeatureFactory:
edu.stanford.nlp.wordseg.Sighan2005DocumentReaderAndWriter$1:

#edu/stanford/nlp/wordseg/NonDict2/<init>:

#edu/stanford/nlp/wordseg/NonDict2/checkDic:

#edu/stanford/nlp/wordseg/NonDict2/main:
edu.stanford.nlp.wordseg.NonDict2:

#edu/stanford/nlp/wordseg/ChineseStringUtils$HKPostProcessor/postProcessingAnswer:
edu.stanford.nlp.wordseg.ChineseStringUtils$HKPostProcessor:
edu.stanford.nlp.wordseg.MaxMatchSegmenter$MatchHeuristic:

#edu/stanford/nlp/wordseg/Sighan2005DocumentReaderAndWriter/init:

#edu/stanford/nlp/wordseg/Sighan2005DocumentReaderAndWriter/shapeOf:

#edu/stanford/nlp/wordseg/Sighan2005DocumentReaderAndWriter/addDictionaryFeatures:

#edu/stanford/nlp/wordseg/Sighan2005DocumentReaderAndWriter/printConlluAnswer:

#edu/stanford/nlp/wordseg/Sighan2005DocumentReaderAndWriter/printAnswers:

#edu/stanford/nlp/wordseg/Sighan2005DocumentReaderAndWriter/tagLatticeToAnswerLattice:
edu.stanford.nlp.wordseg.Sighan2005DocumentReaderAndWriter:

#edu/stanford/nlp/wordseg/Sighan2005DocumentReaderAndWriter$CTBDocumentParser/apply:
edu.stanford.nlp.wordseg.Sighan2005DocumentReaderAndWriter$CTBDocumentParser:

#edu/stanford/nlp/wordseg/ChineseStringUtils$PKPostProcessor/postProcessingAnswer:
edu.stanford.nlp.wordseg.ChineseStringUtils$PKPostProcessor:

#edu/stanford/nlp/wordseg/CorpusChar/readDict:

#edu/stanford/nlp/wordseg/CorpusChar/getTag:
edu.stanford.nlp.wordseg.CorpusChar:

#edu/stanford/nlp/wordseg/CorpusDictionary/<init>:

#edu/stanford/nlp/wordseg/CorpusDictionary/readDict:

#edu/stanford/nlp/wordseg/CorpusDictionary/getW:
edu.stanford.nlp.wordseg.CorpusDictionary:

#edu/stanford/nlp/wordseg/TagAffixDetector/<init>:

#edu/stanford/nlp/wordseg/TagAffixDetector/checkDic:

#edu/stanford/nlp/wordseg/TagAffixDetector/checkInDic:
edu.stanford.nlp.wordseg.TagAffixDetector:

#edu/stanford/nlp/wordseg/ChineseStringUtils/isLetterASCII:

#edu/stanford/nlp/wordseg/ChineseStringUtils/combineSegmentedSentence:

#edu/stanford/nlp/wordseg/ChineseStringUtils/postProcessingAnswer:
edu.stanford.nlp.wordseg.ChineseStringUtils:
edu.stanford.nlp.wordseg.Sighan2005DocumentReaderAndWriter$OutputFormat:
edu.stanford.nlp.wordseg.ChineseStringUtils$ASPostProcessor:

#edu/stanford/nlp/wordseg/ChineseStringUtils$BaseChinesePostProcessor/separatePuncs:

#edu/stanford/nlp/wordseg/ChineseStringUtils$BaseChinesePostProcessor/compilePunctuationPatterns:

#edu/stanford/nlp/wordseg/ChineseStringUtils$BaseChinesePostProcessor/getEscapedPuncPattern:

#edu/stanford/nlp/wordseg/ChineseStringUtils$BaseChinesePostProcessor/processColons:

#edu/stanford/nlp/wordseg/ChineseStringUtils$BaseChinesePostProcessor/compileColonsWhitePatterns:

#edu/stanford/nlp/wordseg/ChineseStringUtils$BaseChinesePostProcessor/compileColonPatterns:

#edu/stanford/nlp/wordseg/ChineseStringUtils$BaseChinesePostProcessor/processDots:

#edu/stanford/nlp/wordseg/ChineseStringUtils$BaseChinesePostProcessor/processCommas:
edu.stanford.nlp.wordseg.ChineseStringUtils$BaseChinesePostProcessor:

#edu/stanford/nlp/wordseg/ChineseSegmenterFeatureFactory/getCliqueFeatures:

#edu/stanford/nlp/wordseg/ChineseSegmenterFeatureFactory/isEnglish:

#edu/stanford/nlp/wordseg/ChineseSegmenterFeatureFactory/isEngPU:

#edu/stanford/nlp/wordseg/ChineseSegmenterFeatureFactory/featuresC:

#edu/stanford/nlp/wordseg/ChineseSegmenterFeatureFactory/featuresCpC:

#edu/stanford/nlp/wordseg/ChineseSegmenterFeatureFactory/featuresCnC:
edu.stanford.nlp.wordseg.ChineseSegmenterFeatureFactory:

#edu/stanford/nlp/wordseg/AffixDictionary/readDict:

#edu/stanford/nlp/wordseg/AffixDictionary/getInDict:
edu.stanford.nlp.wordseg.AffixDictionary:

#edu/stanford/nlp/wordseg/ChineseDictionary/loadDictionary:

#edu/stanford/nlp/wordseg/ChineseDictionary/<init>:

#edu/stanford/nlp/wordseg/ChineseDictionary/addDict:

#edu/stanford/nlp/wordseg/ChineseDictionary/addOneDict:

#edu/stanford/nlp/wordseg/ChineseDictionary/contains:

#edu/stanford/nlp/wordseg/ChineseDictionary/main:
edu.stanford.nlp.wordseg.ChineseDictionary:

#edu/stanford/nlp/wordseg/ChineseStringUtils$CTPPostProcessor/postProcessingAnswer:
edu.stanford.nlp.wordseg.ChineseStringUtils$CTPPostProcessor:

#edu/stanford/nlp/wordseg/MaxMatchSegmenter/train:

#edu/stanford/nlp/wordseg/MaxMatchSegmenter/train:

#edu/stanford/nlp/wordseg/MaxMatchSegmenter/segment:

#edu/stanford/nlp/wordseg/MaxMatchSegmenter/addStringToLexicon:

#edu/stanford/nlp/wordseg/MaxMatchSegmenter/addLexicon:

#edu/stanford/nlp/wordseg/MaxMatchSegmenter/buildSegmentationLattice:

#edu/stanford/nlp/wordseg/MaxMatchSegmenter/segmentWords:

#edu/stanford/nlp/wordseg/MaxMatchSegmenter/greedilySegmentWords:

#edu/stanford/nlp/wordseg/MaxMatchSegmenter/main:

#edu/stanford/nlp/wordseg/MaxMatchSegmenter/postProcessSentence:
edu.stanford.nlp.wordseg.MaxMatchSegmenter:

#edu/stanford/nlp/wordseg/demo/SegDemo/main:
edu.stanford.nlp.wordseg.demo.SegDemo:

#edu/stanford/nlp/optimization/SMDMinimizer/init:

#edu/stanford/nlp/optimization/SMDMinimizer/takeStep:

#edu/stanford/nlp/optimization/SMDMinimizer/main:
edu.stanford.nlp.optimization.SMDMinimizer:
edu.stanford.nlp.optimization.Evaluator:
edu.stanford.nlp.optimization.FloatFunction:
edu.stanford.nlp.optimization.MemoryEvaluator:
edu.stanford.nlp.optimization.DiffFunction:
edu.stanford.nlp.optimization.ScaledSGDMinimizer$Weights:

#edu/stanford/nlp/optimization/ResultStoringMonitor/<init>:

#edu/stanford/nlp/optimization/ResultStoringMonitor/valueAt:
edu.stanford.nlp.optimization.ResultStoringMonitor:

#edu/stanford/nlp/optimization/GoldenSectionLineSearch/minimize:

#edu/stanford/nlp/optimization/GoldenSectionLineSearch/dumpMemory:

#edu/stanford/nlp/optimization/GoldenSectionLineSearch/discretizeCompute:

#edu/stanford/nlp/optimization/GoldenSectionLineSearch/goldenMean:

#edu/stanford/nlp/optimization/GoldenSectionLineSearch/lambda$main$1:
edu.stanford.nlp.optimization.GoldenSectionLineSearch:
edu.stanford.nlp.optimization.QNMinimizer$SurpriseConvergence:

#edu/stanford/nlp/optimization/AbstractStochasticCachingDiffUpdateFunction/getSample:
edu.stanford.nlp.optimization.AbstractStochasticCachingDiffUpdateFunction:

#edu/stanford/nlp/optimization/QNMinimizer/<init>:

#edu/stanford/nlp/optimization/QNMinimizer/terminateOnMaxItr:

#edu/stanford/nlp/optimization/QNMinimizer/newQNInfo:

#edu/stanford/nlp/optimization/QNMinimizer/computeDir:

#edu/stanford/nlp/optimization/QNMinimizer/plusAndConstMult:

#edu/stanford/nlp/optimization/QNMinimizer/doEvaluation:

#edu/stanford/nlp/optimization/QNMinimizer/minimize:

#edu/stanford/nlp/optimization/QNMinimizer/projectOWL:

#edu/stanford/nlp/optimization/QNMinimizer/l1NormOWL:

#edu/stanford/nlp/optimization/QNMinimizer/constrainSearchDir:

#edu/stanford/nlp/optimization/QNMinimizer/pseudoGradientOWL:

#edu/stanford/nlp/optimization/QNMinimizer/lineSearchBacktrackOWL:

#edu/stanford/nlp/optimization/QNMinimizer/lineSearchBacktrack:

#edu/stanford/nlp/optimization/QNMinimizer/lineSearchMinPack:

#edu/stanford/nlp/optimization/QNMinimizer/getStep:
edu.stanford.nlp.optimization.QNMinimizer:

#edu/stanford/nlp/optimization/CGMinimizer/arrayToString:

#edu/stanford/nlp/optimization/CGMinimizer/fabs:

#edu/stanford/nlp/optimization/CGMinimizer/fmax:

#edu/stanford/nlp/optimization/CGMinimizer/sign:

#edu/stanford/nlp/optimization/CGMinimizer/mnbrak:

#edu/stanford/nlp/optimization/CGMinimizer/dbrent:

#edu/stanford/nlp/optimization/CGMinimizer/lineMinimize:

#edu/stanford/nlp/optimization/CGMinimizer/minimize:
edu.stanford.nlp.optimization.CGMinimizer:

#edu/stanford/nlp/optimization/StochasticCalculateMethods/parseMethod:
edu.stanford.nlp.optimization.StochasticCalculateMethods:

#edu/stanford/nlp/optimization/SQNMinimizer/plusAndConstMult:

#edu/stanford/nlp/optimization/SQNMinimizer/computeDir:

#edu/stanford/nlp/optimization/SQNMinimizer/takeStep:
edu.stanford.nlp.optimization.SQNMinimizer:
edu.stanford.nlp.optimization.SMDMinimizer$setLam:
edu.stanford.nlp.optimization.ScaledSGDMinimizer$setFixedGain:

#edu/stanford/nlp/optimization/ScaledSGDMinimizer$lagrange/applyAsDouble:
edu.stanford.nlp.optimization.ScaledSGDMinimizer$lagrange:

#edu/stanford/nlp/optimization/InefficientSGDMinimizer$1/derivativeAt:

#edu/stanford/nlp/optimization/InefficientSGDMinimizer$1/valuePow:
edu.stanford.nlp.optimization.InefficientSGDMinimizer$1:

#edu/stanford/nlp/optimization/SGDWithAdaGradAndFOBOS/toContinue:

#edu/stanford/nlp/optimization/SGDWithAdaGradAndFOBOS/getPrior:

#edu/stanford/nlp/optimization/SGDWithAdaGradAndFOBOS/<init>:

#edu/stanford/nlp/optimization/SGDWithAdaGradAndFOBOS/getNorm:

#edu/stanford/nlp/optimization/SGDWithAdaGradAndFOBOS/doEvaluation:

#edu/stanford/nlp/optimization/SGDWithAdaGradAndFOBOS/pospart:

#edu/stanford/nlp/optimization/SGDWithAdaGradAndFOBOS/computeLearningRate:

#edu/stanford/nlp/optimization/SGDWithAdaGradAndFOBOS/minimize:

#edu/stanford/nlp/optimization/SGDWithAdaGradAndFOBOS/sayln:

#edu/stanford/nlp/optimization/SGDWithAdaGradAndFOBOS/say:
edu.stanford.nlp.optimization.SGDWithAdaGradAndFOBOS:

#edu/stanford/nlp/optimization/StochasticDiffFunctionTester/<init>:

#edu/stanford/nlp/optimization/StochasticDiffFunctionTester/sayln:

#edu/stanford/nlp/optimization/StochasticDiffFunctionTester/primeFactors:

#edu/stanford/nlp/optimization/StochasticDiffFunctionTester/getTestBatchSize:

#edu/stanford/nlp/optimization/StochasticDiffFunctionTester/testSumOfBatches:

#edu/stanford/nlp/optimization/StochasticDiffFunctionTester/testDerivatives:

#edu/stanford/nlp/optimization/StochasticDiffFunctionTester/testConditionNumber:

#edu/stanford/nlp/optimization/StochasticDiffFunctionTester/getVariance:

#edu/stanford/nlp/optimization/StochasticDiffFunctionTester/testVariance:

#edu/stanford/nlp/optimization/StochasticDiffFunctionTester/listToFile:

#edu/stanford/nlp/optimization/StochasticDiffFunctionTester/arrayToFile:
edu.stanford.nlp.optimization.StochasticDiffFunctionTester:

#edu/stanford/nlp/optimization/HybridMinimizer/setEvaluators:
edu.stanford.nlp.optimization.HybridMinimizer:
edu.stanford.nlp.optimization.HasRegularizerParamRange:

#edu/stanford/nlp/optimization/CGMinimizer$OneDimDiffFunction/vectorOf:

#edu/stanford/nlp/optimization/CGMinimizer$OneDimDiffFunction/derivativeAt:
edu.stanford.nlp.optimization.CGMinimizer$OneDimDiffFunction:

#edu/stanford/nlp/optimization/AbstractCachingDiffFloatFunction/ensure:

#edu/stanford/nlp/optimization/AbstractCachingDiffFloatFunction/norm2:
edu.stanford.nlp.optimization.AbstractCachingDiffFloatFunction:
edu.stanford.nlp.optimization.HasEvaluators:
edu.stanford.nlp.optimization.QNMinimizer$eScaling:
edu.stanford.nlp.optimization.StochasticMinimizer$PropertySetter:
edu.stanford.nlp.optimization.SMDMinimizer$setMu:

#edu/stanford/nlp/optimization/SparseAdaGradMinimizer/minimize:

#edu/stanford/nlp/optimization/SparseAdaGradMinimizer/getSample:

#edu/stanford/nlp/optimization/SparseAdaGradMinimizer/sayln:
edu.stanford.nlp.optimization.SparseAdaGradMinimizer:

#edu/stanford/nlp/optimization/CmdEvaluator/getCmd:

#edu/stanford/nlp/optimization/CmdEvaluator/evaluateCmd:
edu.stanford.nlp.optimization.CmdEvaluator:
edu.stanford.nlp.optimization.QNMinimizer$eState:
edu.stanford.nlp.optimization.AbstractStochasticCachingDiffFunction$SamplingMethod:
edu.stanford.nlp.optimization.QNMinimizer$eLineSearch:
edu.stanford.nlp.optimization.QNMinimizer$1:
edu.stanford.nlp.optimization.CGMinimizer$Triple:
edu.stanford.nlp.optimization.SQNMinimizer$SurpriseConvergence:
edu.stanford.nlp.optimization.LineSearcher:
edu.stanford.nlp.optimization.StochasticMinimizer$setGain:

#edu/stanford/nlp/optimization/SGDToQNMinimizer/minimize:

#edu/stanford/nlp/optimization/SGDToQNMinimizer/sayln:

#edu/stanford/nlp/optimization/SGDToQNMinimizer/say:
edu.stanford.nlp.optimization.SGDToQNMinimizer:
edu.stanford.nlp.optimization.SGDWithAdaGradAndFOBOS$Prior:

#edu/stanford/nlp/optimization/SMDMinimizer$1/derivativeAt:

#edu/stanford/nlp/optimization/SMDMinimizer$1/valuePow:
edu.stanford.nlp.optimization.SMDMinimizer$1:
edu.stanford.nlp.optimization.DiffFloatFunction:

#edu/stanford/nlp/optimization/StochasticMinimizer/smooth:

#edu/stanford/nlp/optimization/StochasticMinimizer/initFiles:

#edu/stanford/nlp/optimization/StochasticMinimizer/tuneDouble:

#edu/stanford/nlp/optimization/StochasticMinimizer/tuneBatch:

#edu/stanford/nlp/optimization/StochasticMinimizer/tune:

#edu/stanford/nlp/optimization/StochasticMinimizer/doEvaluation:

#edu/stanford/nlp/optimization/StochasticMinimizer/minimize:

#edu/stanford/nlp/optimization/StochasticMinimizer/sayln:

#edu/stanford/nlp/optimization/StochasticMinimizer/say:
edu.stanford.nlp.optimization.StochasticMinimizer:
edu.stanford.nlp.optimization.HasInitial:

#edu/stanford/nlp/optimization/QNMinimizer$QNInfo/<init>:

#edu/stanford/nlp/optimization/QNMinimizer$QNInfo/setHistory:

#edu/stanford/nlp/optimization/QNMinimizer$QNInfo/update:
edu.stanford.nlp.optimization.QNMinimizer$QNInfo:

#edu/stanford/nlp/optimization/ScaledSGDMinimizer/tuneFixedGain:

#edu/stanford/nlp/optimization/ScaledSGDMinimizer/tune:

#edu/stanford/nlp/optimization/ScaledSGDMinimizer/takeStep:

#edu/stanford/nlp/optimization/ScaledSGDMinimizer/init:

#edu/stanford/nlp/optimization/ScaledSGDMinimizer/updateDiag:

#edu/stanford/nlp/optimization/ScaledSGDMinimizer/updateDiagBFGS:

#edu/stanford/nlp/optimization/ScaledSGDMinimizer/updateDiagMinErr:

#edu/stanford/nlp/optimization/ScaledSGDMinimizer/getRoot:
edu.stanford.nlp.optimization.ScaledSGDMinimizer:
edu.stanford.nlp.optimization.Minimizer:
edu.stanford.nlp.optimization.QNMinimizer$MaxEvaluationsExceeded:

#edu/stanford/nlp/optimization/AbstractCachingDiffFunction/gradientCheck:

#edu/stanford/nlp/optimization/AbstractCachingDiffFunction/clearCache:

#edu/stanford/nlp/optimization/AbstractCachingDiffFunction/randomInitial:

#edu/stanford/nlp/optimization/AbstractCachingDiffFunction/ensure:
edu.stanford.nlp.optimization.AbstractCachingDiffFunction:

#edu/stanford/nlp/optimization/QNMinimizer$Record/start:

#edu/stanford/nlp/optimization/QNMinimizer$Record/writeToFile:

#edu/stanford/nlp/optimization/QNMinimizer$Record/add:

#edu/stanford/nlp/optimization/QNMinimizer$Record/monitorX:

#edu/stanford/nlp/optimization/QNMinimizer$Record/toContinue:
edu.stanford.nlp.optimization.QNMinimizer$Record:
edu.stanford.nlp.optimization.Function:

#edu/stanford/nlp/optimization/QNMinimizer$DiagonalQNInfo/applyInitialHessian:

#edu/stanford/nlp/optimization/QNMinimizer$DiagonalQNInfo/update:
edu.stanford.nlp.optimization.QNMinimizer$DiagonalQNInfo:
edu.stanford.nlp.optimization.HasFeatureGrouping:

#edu/stanford/nlp/optimization/ResultStoringFloatMonitor/<init>:

#edu/stanford/nlp/optimization/ResultStoringFloatMonitor/valueAt:
edu.stanford.nlp.optimization.ResultStoringFloatMonitor:
edu.stanford.nlp.optimization.SparseMinimizer:

#edu/stanford/nlp/optimization/SGDMinimizer/<init>:

#edu/stanford/nlp/optimization/SGDMinimizer/<init>:

#edu/stanford/nlp/optimization/SGDMinimizer/tryEta:

#edu/stanford/nlp/optimization/SGDMinimizer/tune:

#edu/stanford/nlp/optimization/SGDMinimizer/getNorm:

#edu/stanford/nlp/optimization/SGDMinimizer/rescale:

#edu/stanford/nlp/optimization/SGDMinimizer/doEvaluation:

#edu/stanford/nlp/optimization/SGDMinimizer/minimize:

#edu/stanford/nlp/optimization/SGDMinimizer/sayln:
edu.stanford.nlp.optimization.SGDMinimizer:

#edu/stanford/nlp/optimization/QNMinimizer$ScalarQNInfo/update:
edu.stanford.nlp.optimization.QNMinimizer$ScalarQNInfo:

#edu/stanford/nlp/optimization/AbstractStochasticCachingDiffFunction/incrementRandom:

#edu/stanford/nlp/optimization/AbstractStochasticCachingDiffFunction/clearCache:

#edu/stanford/nlp/optimization/AbstractStochasticCachingDiffFunction/decrementBatch:

#edu/stanford/nlp/optimization/AbstractStochasticCachingDiffFunction/getBatch:

#edu/stanford/nlp/optimization/AbstractStochasticCachingDiffFunction/stochasticEnsure:

#edu/stanford/nlp/optimization/AbstractStochasticCachingDiffFunction/getHdotVFiniteDifference:

#edu/stanford/nlp/optimization/AbstractStochasticCachingDiffFunction/HdotVAt:

#edu/stanford/nlp/optimization/AbstractStochasticCachingDiffFunction/HdotVAt:

#edu/stanford/nlp/optimization/AbstractStochasticCachingDiffFunction/HdotVAt:
edu.stanford.nlp.optimization.AbstractStochasticCachingDiffFunction:
edu.stanford.nlp.optimization.HasFloatInitial:

#edu/stanford/nlp/optimization/InefficientSGDMinimizer/takeStep:

#edu/stanford/nlp/optimization/InefficientSGDMinimizer/main:
edu.stanford.nlp.optimization.InefficientSGDMinimizer:
edu.stanford.nlp.optimization.SparseOnlineFunction:

#edu/stanford/nlp/swing/FontDetector/supportedFonts:

#edu/stanford/nlp/swing/FontDetector/hasFont:

#edu/stanford/nlp/swing/FontDetector/main:
edu.stanford.nlp.swing.FontDetector:

#edu/stanford/nlp/swing/TooltipJList/getToolTipText:
edu.stanford.nlp.swing.TooltipJList:

#edu/stanford/nlp/io/IOUtils$GetLinesIterable/getStream:
edu.stanford.nlp.io.IOUtils$GetLinesIterable:

#edu/stanford/nlp/io/NumberRangesFileFilter/<init>:

#edu/stanford/nlp/io/NumberRangesFileFilter/accept:

#edu/stanford/nlp/io/NumberRangesFileFilter/accept:

#edu/stanford/nlp/io/NumberRangesFileFilter/toString:
edu.stanford.nlp.io.NumberRangesFileFilter:
edu.stanford.nlp.io.RuntimeIOException:
edu.stanford.nlp.io.Lexer:

#edu/stanford/nlp/io/IOUtils$GetLinesIterable$1/hasNext:

#edu/stanford/nlp/io/IOUtils$GetLinesIterable$1/next:

#edu/stanford/nlp/io/IOUtils$GetLinesIterable$1/getLine:

#edu/stanford/nlp/io/IOUtils$GetLinesIterable$1/getReader:

#edu/stanford/nlp/io/IOUtils$GetLinesIterable$1/finalize:
edu.stanford.nlp.io.IOUtils$GetLinesIterable$1:
edu.stanford.nlp.io.BZip2PipedOutputStream:
edu.stanford.nlp.io.IOUtils$LineReaderIterable:
edu.stanford.nlp.io.IOUtils$1:
edu.stanford.nlp.io.StringOutputStream:

#edu/stanford/nlp/io/IOUtils$LineReaderIterable$1/hasNext:

#edu/stanford/nlp/io/IOUtils$LineReaderIterable$1/next:
edu.stanford.nlp.io.IOUtils$LineReaderIterable$1:

#edu/stanford/nlp/io/ReaderInputStream/<init>:

#edu/stanford/nlp/io/ReaderInputStream/read:

#edu/stanford/nlp/io/ReaderInputStream/read:

#edu/stanford/nlp/io/ReaderInputStream/available:

#edu/stanford/nlp/io/ReaderInputStream/reset:

#edu/stanford/nlp/io/ReaderInputStream/close:
edu.stanford.nlp.io.ReaderInputStream:

#edu/stanford/nlp/io/FileFilters$ConjunctionFileFilter/accept:
edu.stanford.nlp.io.FileFilters$ConjunctionFileFilter:

#edu/stanford/nlp/io/EncodingPrintWriter$out/setupOutWriter:
edu.stanford.nlp.io.EncodingPrintWriter$out:
edu.stanford.nlp.io.NullOutputStream:
edu.stanford.nlp.io.PrintFile:
Warning: Method:edu.stanford.nlp.io.IOUtils$EolPreservingLineReaderIterable$1.getNext has incoming edges.

#edu/stanford/nlp/io/IOUtils$EolPreservingLineReaderIterable$1/copyUntilEol:

#edu/stanford/nlp/io/IOUtils$EolPreservingLineReaderIterable$1/hasNext:

#edu/stanford/nlp/io/IOUtils$EolPreservingLineReaderIterable$1/next:
edu.stanford.nlp.io.IOUtils$EolPreservingLineReaderIterable$1:

#edu/stanford/nlp/io/FileSystem/copyFile:

#edu/stanford/nlp/io/FileSystem/gzipFile:

#edu/stanford/nlp/io/FileSystem/deleteDir:

#edu/stanford/nlp/io/FileSystem/existsAndNonEmpty:

#edu/stanford/nlp/io/FileSystem/mkdirOrFail:

#edu/stanford/nlp/io/FileSystem/checkExistsOrFail:

#edu/stanford/nlp/io/FileSystem/checkNotExistsOrFail:

#edu/stanford/nlp/io/FileSystem/main:
edu.stanford.nlp.io.FileSystem:

#edu/stanford/nlp/io/NumberRangeFileFilter/accept:
edu.stanford.nlp.io.NumberRangeFileFilter:
edu.stanford.nlp.io.IOUtils$2:
edu.stanford.nlp.io.FileFilters$FindRegexFileFilter:
edu.stanford.nlp.io.FileFilters:
edu.stanford.nlp.io.CopySerializedObject:
edu.stanford.nlp.io.EncodingPrintWriter:

#edu/stanford/nlp/io/RecordIterator/<init>:

#edu/stanford/nlp/io/RecordIterator/hasNext:

#edu/stanford/nlp/io/RecordIterator/firstRecord:

#edu/stanford/nlp/io/RecordIterator/determineNumFields:

#edu/stanford/nlp/io/RecordIterator/advance:

#edu/stanford/nlp/io/RecordIterator/main:
edu.stanford.nlp.io.RecordIterator:

#edu/stanford/nlp/io/IOUtils/writeObjectToFile:

#edu/stanford/nlp/io/IOUtils/getBufferedOutputStream:

#edu/stanford/nlp/io/IOUtils/writeStringToFileNoExceptions:

#edu/stanford/nlp/io/IOUtils/writeStringToTempFile:

#edu/stanford/nlp/io/IOUtils/writeStringToTempFileNoExceptions:

#edu/stanford/nlp/io/IOUtils/readObjectFromFile:

#edu/stanford/nlp/io/IOUtils/readObjectFromURLOrClasspathOrFileSystem:

#edu/stanford/nlp/io/IOUtils/lineCount:

#edu/stanford/nlp/io/IOUtils/writeStreamFromString:

#edu/stanford/nlp/io/IOUtils/findStreamInClassLoader:

#edu/stanford/nlp/io/IOUtils/findStreamInClasspathOrFileSystem:

#edu/stanford/nlp/io/IOUtils/existsInClasspathOrFileSystem:

#edu/stanford/nlp/io/IOUtils/getInputStreamFromURLOrClasspathOrFileSystem:

#edu/stanford/nlp/io/IOUtils/inputStreamFromFile:

#edu/stanford/nlp/io/IOUtils/readerFromFile:

#edu/stanford/nlp/io/IOUtils/readerFromStdin:

#edu/stanford/nlp/io/IOUtils/readerFromString:

#edu/stanford/nlp/io/IOUtils/getLineIterable:

#edu/stanford/nlp/io/IOUtils/getLineIterable:

#edu/stanford/nlp/io/IOUtils/closeIgnoringExceptions:

#edu/stanford/nlp/io/IOUtils/slurpURL:

#edu/stanford/nlp/io/IOUtils/getUrlEncoding:

#edu/stanford/nlp/io/IOUtils/slurpURL:

#edu/stanford/nlp/io/IOUtils/slurpReader:

#edu/stanford/nlp/io/IOUtils/writeStreamToStream:

#edu/stanford/nlp/io/IOUtils/readCSVWithHeader:

#edu/stanford/nlp/io/IOUtils/readCSVStrictly:

#edu/stanford/nlp/io/IOUtils/getFileInputStream:

#edu/stanford/nlp/io/IOUtils/getFileOutputStream:

#edu/stanford/nlp/io/IOUtils/getFileOutputStream:

#edu/stanford/nlp/io/IOUtils/getPrintWriter:

#edu/stanford/nlp/io/IOUtils/getPrintWriter:

#edu/stanford/nlp/io/IOUtils/readColumnSet:

#edu/stanford/nlp/io/IOUtils/readObjectFromColumns:

#edu/stanford/nlp/io/IOUtils/readMap:

#edu/stanford/nlp/io/IOUtils/stringFromFile:

#edu/stanford/nlp/io/IOUtils/linesFromFile:

#edu/stanford/nlp/io/IOUtils/ensureDir:

#edu/stanford/nlp/io/IOUtils/deleteDirRecursively:

#edu/stanford/nlp/io/IOUtils/getExtension:

#edu/stanford/nlp/io/IOUtils/encodedInputStreamReader:

#edu/stanford/nlp/io/IOUtils/encodedOutputStreamWriter:

#edu/stanford/nlp/io/IOUtils/encodedOutputStreamPrintWriter:

#edu/stanford/nlp/io/IOUtils/copyFile:

#edu/stanford/nlp/io/IOUtils/cp:

#edu/stanford/nlp/io/IOUtils/tail:

#edu/stanford/nlp/io/IOUtils/deleteRecursively:

#edu/stanford/nlp/io/IOUtils/console:

#edu/stanford/nlp/io/IOUtils/throwableToStackTrace:
edu.stanford.nlp.io.IOUtils:
edu.stanford.nlp.io.TeeStream:
edu.stanford.nlp.io.RegExFileFilter:

#edu/stanford/nlp/io/FileSequentialCollection$FileSequentialCollectionIterator/<init>:

#edu/stanford/nlp/io/FileSequentialCollection$FileSequentialCollectionIterator/hasNext:

#edu/stanford/nlp/io/FileSequentialCollection$FileSequentialCollectionIterator/next:
Warning: Method:edu.stanford.nlp.io.FileSequentialCollection$FileSequentialCollectionIterator.primeNextFile has incoming edges.
edu.stanford.nlp.io.FileSequentialCollection$FileSequentialCollectionIterator:

#edu/stanford/nlp/io/EncodingFileReader/<init>:

#edu/stanford/nlp/io/EncodingFileReader/<init>:
edu.stanford.nlp.io.EncodingFileReader:

#edu/stanford/nlp/io/FileFilters$NegationFileFilter/accept:
edu.stanford.nlp.io.FileFilters$NegationFileFilter:
edu.stanford.nlp.io.ByteArrayUtils:
edu.stanford.nlp.io.IOUtils$EolPreservingLineReaderIterable:

#edu/stanford/nlp/io/EncodingPrintWriter$err/setupErrWriter:
edu.stanford.nlp.io.EncodingPrintWriter$err:

#edu/stanford/nlp/io/ExtensionFileFilter/<init>:

#edu/stanford/nlp/io/ExtensionFileFilter/accept:
edu.stanford.nlp.io.ExtensionFileFilter:

#edu/stanford/nlp/io/FileSequentialCollection/<init>:

#edu/stanford/nlp/io/FileSequentialCollection/size:

#edu/stanford/nlp/io/FileSequentialCollection/main:
edu.stanford.nlp.io.FileSequentialCollection:

#edu/stanford/nlp/io/IOUtils$1$1/hasNext:

#edu/stanford/nlp/io/IOUtils$1$1/next:

#edu/stanford/nlp/io/IOUtils$1$1/findNext:
edu.stanford.nlp.io.IOUtils$1$1:
edu.stanford.nlp.io.ui.OpenPageDialog$1:
edu.stanford.nlp.io.ui.OpenPageDialog$3:

#edu/stanford/nlp/io/ui/OpenPageDialog/browseFiles:

#edu/stanford/nlp/io/ui/OpenPageDialog/enableOpenButton:

#edu/stanford/nlp/io/ui/OpenPageDialog/urlTextFieldActionPerformed:
edu.stanford.nlp.io.ui.OpenPageDialog:
edu.stanford.nlp.io.ui.OpenPageDialog$2:

#edu/stanford/nlp/graph/DirectedMultiGraph/<init>:

#edu/stanford/nlp/graph/DirectedMultiGraph/equals:

#edu/stanford/nlp/graph/DirectedMultiGraph/addVertex:

#edu/stanford/nlp/graph/DirectedMultiGraph/getOutgoingEdgesMap:

#edu/stanford/nlp/graph/DirectedMultiGraph/getIncomingEdgesMap:

#edu/stanford/nlp/graph/DirectedMultiGraph/add:

#edu/stanford/nlp/graph/DirectedMultiGraph/removeEdges:

#edu/stanford/nlp/graph/DirectedMultiGraph/removeEdge:

#edu/stanford/nlp/graph/DirectedMultiGraph/removeVertex:

#edu/stanford/nlp/graph/DirectedMultiGraph/removeVertices:

#edu/stanford/nlp/graph/DirectedMultiGraph/getOutgoingEdges:

#edu/stanford/nlp/graph/DirectedMultiGraph/getIncomingEdges:

#edu/stanford/nlp/graph/DirectedMultiGraph/getNumEdges:

#edu/stanford/nlp/graph/DirectedMultiGraph/getParents:

#edu/stanford/nlp/graph/DirectedMultiGraph/getChildren:

#edu/stanford/nlp/graph/DirectedMultiGraph/getNeighbors:

#edu/stanford/nlp/graph/DirectedMultiGraph/isEdge:

#edu/stanford/nlp/graph/DirectedMultiGraph/isNeighbor:

#edu/stanford/nlp/graph/DirectedMultiGraph/getAllEdges:

#edu/stanford/nlp/graph/DirectedMultiGraph/removeZeroDegreeNodes:

#edu/stanford/nlp/graph/DirectedMultiGraph/getEdges:

#edu/stanford/nlp/graph/DirectedMultiGraph/getShortestPath:

#edu/stanford/nlp/graph/DirectedMultiGraph/getShortestPath:

#edu/stanford/nlp/graph/DirectedMultiGraph/convertPath:

#edu/stanford/nlp/graph/DirectedMultiGraph/getInDegree:

#edu/stanford/nlp/graph/DirectedMultiGraph/getOutDegree:

#edu/stanford/nlp/graph/DirectedMultiGraph/deleteDuplicateEdges:

#edu/stanford/nlp/graph/DirectedMultiGraph/topologicalSort:

#edu/stanford/nlp/graph/DirectedMultiGraph/topologicalSortHelper:

#edu/stanford/nlp/graph/DirectedMultiGraph/toMap:

#edu/stanford/nlp/graph/DirectedMultiGraph/toString:
edu.stanford.nlp.graph.DirectedMultiGraph:

#edu/stanford/nlp/graph/DirectedMultiGraph$EdgeIterator/<init>:

#edu/stanford/nlp/graph/DirectedMultiGraph$EdgeIterator/next:

#edu/stanford/nlp/graph/DirectedMultiGraph$EdgeIterator/primeIterator:

#edu/stanford/nlp/graph/DirectedMultiGraph$EdgeIterator/remove:
edu.stanford.nlp.graph.DirectedMultiGraph$EdgeIterator:
edu.stanford.nlp.graph.Graph:

#edu/stanford/nlp/graph/ConnectedComponents/getConnectedComponents:

#edu/stanford/nlp/graph/ConnectedComponents/bfs:
edu.stanford.nlp.graph.ConnectedComponents:
edu.stanford.nlp.graph.DirectedEdge:

#edu/stanford/nlp/graph/DijkstraShortestPath/getShortestPath:
edu.stanford.nlp.graph.DijkstraShortestPath:

#edu/stanford/nlp/quoteattribution/QuoteAttributionTest/testPP:

#edu/stanford/nlp/quoteattribution/QuoteAttributionTest/main:
edu.stanford.nlp.quoteattribution.QuoteAttributionTest:
edu.stanford.nlp.quoteattribution.QuoteAttributionEvaluation$Result:

#edu/stanford/nlp/quoteattribution/ChapterAnnotator/annotate:
edu.stanford.nlp.quoteattribution.ChapterAnnotator:

#edu/stanford/nlp/quoteattribution/ExtractQuotesUtil/rangeContains:
edu.stanford.nlp.quoteattribution.ExtractQuotesUtil:

#edu/stanford/nlp/quoteattribution/QuoteAttributionUtils/getRemainderInSentence:

#edu/stanford/nlp/quoteattribution/QuoteAttributionUtils/addEnhancedSentences:

#edu/stanford/nlp/quoteattribution/QuoteAttributionUtils/getTokenRangePrecedingQuote:

#edu/stanford/nlp/quoteattribution/QuoteAttributionUtils/getTokenRangeFollowingQuote:

#edu/stanford/nlp/quoteattribution/QuoteAttributionUtils/constructCoreMap:

#edu/stanford/nlp/quoteattribution/QuoteAttributionUtils/annotateForDependencyParse:

#edu/stanford/nlp/quoteattribution/QuoteAttributionUtils/getParagraphRank:

#edu/stanford/nlp/quoteattribution/QuoteAttributionUtils/getSentsInParagraph:

#edu/stanford/nlp/quoteattribution/QuoteAttributionUtils/getSentsForQuoteParagraphs:

#edu/stanford/nlp/quoteattribution/QuoteAttributionUtils/readGenderedNounList:

#edu/stanford/nlp/quoteattribution/QuoteAttributionUtils/readFamilyRelations:

#edu/stanford/nlp/quoteattribution/QuoteAttributionUtils/readAnimacyList:

#edu/stanford/nlp/quoteattribution/QuoteAttributionUtils/readPersonMap:

#edu/stanford/nlp/quoteattribution/QuoteAttributionUtils/readCharacterList:

#edu/stanford/nlp/quoteattribution/QuoteAttributionUtils/isPronominal:

#edu/stanford/nlp/quoteattribution/QuoteAttributionUtils/setupCoref:

#edu/stanford/nlp/quoteattribution/QuoteAttributionUtils/mapBammanToCharacterMap:

#edu/stanford/nlp/quoteattribution/QuoteAttributionUtils/rangeContains:
edu.stanford.nlp.quoteattribution.QuoteAttributionUtils:

#edu/stanford/nlp/quoteattribution/ExtractQuotesClassifier/scoreBestMentionNew:
edu.stanford.nlp.quoteattribution.ExtractQuotesClassifier:
edu.stanford.nlp.quoteattribution.XMLToAnnotation$Data:

#edu/stanford/nlp/quoteattribution/Person/<init>:
edu.stanford.nlp.quoteattribution.Person:

#edu/stanford/nlp/quoteattribution/XMLToAnnotation/getJustText:

#edu/stanford/nlp/quoteattribution/XMLToAnnotation/processCoreNLPIfDoesNotExist:

#edu/stanford/nlp/quoteattribution/XMLToAnnotation/readConnection:

#edu/stanford/nlp/quoteattribution/XMLToAnnotation/getEndIndex:

#edu/stanford/nlp/quoteattribution/XMLToAnnotation/readXMLCharacterList:

#edu/stanford/nlp/quoteattribution/XMLToAnnotation/writeCharacterList:

#edu/stanford/nlp/quoteattribution/XMLToAnnotation/readXMLFormat:
edu.stanford.nlp.quoteattribution.XMLToAnnotation:
edu.stanford.nlp.quoteattribution.ChapterAnnotator$ChapterAnnotation:
edu.stanford.nlp.quoteattribution.XMLToAnnotation$GoldQuoteInfo:

#edu/stanford/nlp/quoteattribution/BammanCorefReader/readTokenFile:
edu.stanford.nlp.quoteattribution.BammanCorefReader:

#edu/stanford/nlp/quoteattribution/QuoteAttributionEvaluation/outputMapResultsDefaultKeys:

#edu/stanford/nlp/quoteattribution/QuoteAttributionEvaluation/evaluate:

#edu/stanford/nlp/quoteattribution/QuoteAttributionEvaluation/main:
edu.stanford.nlp.quoteattribution.QuoteAttributionEvaluation:
edu.stanford.nlp.quoteattribution.XMLToAnnotation$1:
edu.stanford.nlp.quoteattribution.XMLToAnnotation$Mention:
edu.stanford.nlp.quoteattribution.QuoteAttributionUtils$EnhancedSentenceAnnotation:
edu.stanford.nlp.quoteattribution.Person$Gender:

#edu/stanford/nlp/quoteattribution/Sieves/Sieve$MentionData/equals:
edu.stanford.nlp.quoteattribution.Sieves.Sieve$MentionData:

#edu/stanford/nlp/quoteattribution/Sieves/Sieve/resolveAmbiguities:

#edu/stanford/nlp/quoteattribution/Sieves/Sieve/getNamesInParagraph:

#edu/stanford/nlp/quoteattribution/Sieves/Sieve/doCoreference:

#edu/stanford/nlp/quoteattribution/Sieves/Sieve/createNameMatcher:

#edu/stanford/nlp/quoteattribution/Sieves/Sieve/scanForNamesNew:

#edu/stanford/nlp/quoteattribution/Sieves/Sieve/scanForNames:

#edu/stanford/nlp/quoteattribution/Sieves/Sieve/scanForPronouns:

#edu/stanford/nlp/quoteattribution/Sieves/Sieve/scanForPronouns:

#edu/stanford/nlp/quoteattribution/Sieves/Sieve/tokenRangeToString:

#edu/stanford/nlp/quoteattribution/Sieves/Sieve/findClosestMentionInSpanForward:

#edu/stanford/nlp/quoteattribution/Sieves/Sieve/findClosestMentionInSpanBackward:

#edu/stanford/nlp/quoteattribution/Sieves/Sieve/findClosestMentionsInSpanForward:

#edu/stanford/nlp/quoteattribution/Sieves/Sieve/findClosestMentionsInSpanBackward:

#edu/stanford/nlp/quoteattribution/Sieves/Sieve/scanForAnimates:

#edu/stanford/nlp/quoteattribution/Sieves/Sieve/oneSpeakerSentence:

#edu/stanford/nlp/quoteattribution/Sieves/Sieve/rangeContainsCharIndex:
edu.stanford.nlp.quoteattribution.Sieves.Sieve:
edu.stanford.nlp.quoteattribution.Sieves.Sieve$TokenNode:
edu.stanford.nlp.quoteattribution.Sieves.Sieve$Mention:

#edu/stanford/nlp/quoteattribution/Sieves/MSSieves/MajoritySpeakerSieve/getTopSpeakerList:

#edu/stanford/nlp/quoteattribution/Sieves/MSSieves/MajoritySpeakerSieve/doMentionToSpeaker:
edu.stanford.nlp.quoteattribution.Sieves.MSSieves.MajoritySpeakerSieve:

#edu/stanford/nlp/quoteattribution/Sieves/MSSieves/LooseConversationalSpeakerSieve/doMentionToSpeaker:
edu.stanford.nlp.quoteattribution.Sieves.MSSieves.LooseConversationalSpeakerSieve:

#edu/stanford/nlp/quoteattribution/Sieves/MSSieves/BaselineTopSpeakerSieve/makeMentionData:

#edu/stanford/nlp/quoteattribution/Sieves/MSSieves/BaselineTopSpeakerSieve/topSpeakerInRange:

#edu/stanford/nlp/quoteattribution/Sieves/MSSieves/BaselineTopSpeakerSieve/removeQuoteNames:

#edu/stanford/nlp/quoteattribution/Sieves/MSSieves/BaselineTopSpeakerSieve/getGender:

#edu/stanford/nlp/quoteattribution/Sieves/MSSieves/BaselineTopSpeakerSieve/getTopSpeakers:

#edu/stanford/nlp/quoteattribution/Sieves/MSSieves/BaselineTopSpeakerSieve/updatePredictions:

#edu/stanford/nlp/quoteattribution/Sieves/MSSieves/BaselineTopSpeakerSieve/getFamilyAnimateVocative:

#edu/stanford/nlp/quoteattribution/Sieves/MSSieves/BaselineTopSpeakerSieve/getConversationalPreviousPrediction:

#edu/stanford/nlp/quoteattribution/Sieves/MSSieves/BaselineTopSpeakerSieve/getConversationalNextPrediction:

#edu/stanford/nlp/quoteattribution/Sieves/MSSieves/BaselineTopSpeakerSieve/getQuoteContainingRange:
edu.stanford.nlp.quoteattribution.Sieves.MSSieves.BaselineTopSpeakerSieve:
edu.stanford.nlp.quoteattribution.Sieves.MSSieves.MSSieve:

#edu/stanford/nlp/quoteattribution/Sieves/MSSieves/DeterministicSpeakerSieve/doMentionToSpeaker:
edu.stanford.nlp.quoteattribution.Sieves.MSSieves.DeterministicSpeakerSieve:

#edu/stanford/nlp/quoteattribution/Sieves/QMSieves/SupervisedSieve/doQuoteToMention:
edu.stanford.nlp.quoteattribution.Sieves.QMSieves.SupervisedSieve:

#edu/stanford/nlp/quoteattribution/Sieves/QMSieves/ConversationalSieve/doQuoteToMention:
edu.stanford.nlp.quoteattribution.Sieves.QMSieves.ConversationalSieve:

#edu/stanford/nlp/quoteattribution/Sieves/QMSieves/TrigramSieve/trigramPatterns:
edu.stanford.nlp.quoteattribution.Sieves.QMSieves.TrigramSieve:

#edu/stanford/nlp/quoteattribution/Sieves/QMSieves/VocativeSieve/vocativeQuoteToMention:
edu.stanford.nlp.quoteattribution.Sieves.QMSieves.VocativeSieve:

#edu/stanford/nlp/quoteattribution/Sieves/QMSieves/ClosestMentionSieve/getClosestMention:

#edu/stanford/nlp/quoteattribution/Sieves/QMSieves/ClosestMentionSieve/doQuoteToMention:
edu.stanford.nlp.quoteattribution.Sieves.QMSieves.ClosestMentionSieve:

#edu/stanford/nlp/quoteattribution/Sieves/QMSieves/DependencyParseSieve/inRange:

#edu/stanford/nlp/quoteattribution/Sieves/QMSieves/DependencyParseSieve/dependencyParses:
edu.stanford.nlp.quoteattribution.Sieves.QMSieves.DependencyParseSieve:

#edu/stanford/nlp/quoteattribution/Sieves/QMSieves/LooseConversationalSieve/doQuoteToMention:
edu.stanford.nlp.quoteattribution.Sieves.QMSieves.LooseConversationalSieve:

#edu/stanford/nlp/quoteattribution/Sieves/QMSieves/ParagraphEndQuoteClosestSieve/paragraphEndQuoteClosestBefore:
edu.stanford.nlp.quoteattribution.Sieves.QMSieves.ParagraphEndQuoteClosestSieve:
edu.stanford.nlp.quoteattribution.Sieves.QMSieves.QMSieve:

#edu/stanford/nlp/quoteattribution/Sieves/QMSieves/OneNameSentenceSieve/oneNameSentence:
edu.stanford.nlp.quoteattribution.Sieves.QMSieves.OneNameSentenceSieve:
edu.stanford.nlp.quoteattribution.Sieves.training.SupervisedSieveTraining$SieveData:
edu.stanford.nlp.quoteattribution.Sieves.training.SupervisedSieveTraining$FeaturesData:

#edu/stanford/nlp/quoteattribution/Sieves/training/SupervisedSieveTraining/getParagraphBeginToken:

#edu/stanford/nlp/quoteattribution/Sieves/training/SupervisedSieveTraining/getParagraphEndToken:

#edu/stanford/nlp/quoteattribution/Sieves/training/SupervisedSieveTraining/getQuotesInParagraph:

#edu/stanford/nlp/quoteattribution/Sieves/training/SupervisedSieveTraining/getRangeExclusion:

#edu/stanford/nlp/quoteattribution/Sieves/training/SupervisedSieveTraining/featurize:

#edu/stanford/nlp/quoteattribution/Sieves/training/SupervisedSieveTraining/eliminateDuplicates:

#edu/stanford/nlp/quoteattribution/Sieves/training/SupervisedSieveTraining/main:
edu.stanford.nlp.quoteattribution.Sieves.training.SupervisedSieveTraining:

#edu/stanford/nlp/maxent/CGRunner$MonitorFunction/valueAt:
edu.stanford.nlp.maxent.CGRunner$MonitorFunction:

#edu/stanford/nlp/maxent/Feature/<init>:

#edu/stanford/nlp/maxent/Feature/<init>:

#edu/stanford/nlp/maxent/Feature/print:

#edu/stanford/nlp/maxent/Feature/setSum:

#edu/stanford/nlp/maxent/Feature/len:

#edu/stanford/nlp/maxent/Feature/getVal:

#edu/stanford/nlp/maxent/Feature/initHashVals:

#edu/stanford/nlp/maxent/Feature/ftilde:
edu.stanford.nlp.maxent.Feature:

#edu/stanford/nlp/maxent/Problem/print:

#edu/stanford/nlp/maxent/Problem/print:
edu.stanford.nlp.maxent.Problem:

#edu/stanford/nlp/maxent/CGRunner/<init>:

#edu/stanford/nlp/maxent/CGRunner/<init>:

#edu/stanford/nlp/maxent/CGRunner/printOptimizationResults:
edu.stanford.nlp.maxent.CGRunner:

#edu/stanford/nlp/maxent/CGRunner$LikelihoodFunction/<init>:

#edu/stanford/nlp/maxent/CGRunner$LikelihoodFunction/valueAt:

#edu/stanford/nlp/maxent/CGRunner$LikelihoodFunction/derivativeAt:
edu.stanford.nlp.maxent.CGRunner$LikelihoodFunction:

#edu/stanford/nlp/maxent/Experiments/createIndex:

#edu/stanford/nlp/maxent/Experiments/<init>:

#edu/stanford/nlp/maxent/Experiments/ptilde:

#edu/stanford/nlp/maxent/Experiments/ptilde:

#edu/stanford/nlp/maxent/Experiments/ptildeX:

#edu/stanford/nlp/maxent/Experiments/ptildeY:

#edu/stanford/nlp/maxent/Experiments/ptildeXY:

#edu/stanford/nlp/maxent/Experiments/print:

#edu/stanford/nlp/maxent/Experiments/print:
edu.stanford.nlp.maxent.Experiments:

#edu/stanford/nlp/maxent/Features/print:
Warning: Method:edu.stanford.nlp.maxent.Features.<init> has auto edges.
edu.stanford.nlp.maxent.Features:
edu.stanford.nlp.maxent.DataGeneric:

#edu/stanford/nlp/maxent/iis/LambdaSolve/<init>:

#edu/stanford/nlp/maxent/iis/LambdaSolve/transformValues:

#edu/stanford/nlp/maxent/iis/LambdaSolve/initCondsZlambdaEtc:

#edu/stanford/nlp/maxent/iis/LambdaSolve/improvedIterative:

#edu/stanford/nlp/maxent/iis/LambdaSolve/improvedIterative:

#edu/stanford/nlp/maxent/iis/LambdaSolve/iterate:

#edu/stanford/nlp/maxent/iis/LambdaSolve/newton:
Warning: Method:edu.stanford.nlp.maxent.iis.LambdaSolve.updateConds has auto edges.

#edu/stanford/nlp/maxent/iis/LambdaSolve/g:

#edu/stanford/nlp/maxent/iis/LambdaSolve/gprime:

#edu/stanford/nlp/maxent/iis/LambdaSolve/fExpected:

#edu/stanford/nlp/maxent/iis/LambdaSolve/checkCorrectness:

#edu/stanford/nlp/maxent/iis/LambdaSolve/ZAlfa:

#edu/stanford/nlp/maxent/iis/LambdaSolve/GSF:

#edu/stanford/nlp/maxent/iis/LambdaSolve/GSF:

#edu/stanford/nlp/maxent/iis/LambdaSolve/GSFPrime:

#edu/stanford/nlp/maxent/iis/LambdaSolve/GSFPrime:

#edu/stanford/nlp/maxent/iis/LambdaSolve/GSFSecond:

#edu/stanford/nlp/maxent/iis/LambdaSolve/GainCompute:

#edu/stanford/nlp/maxent/iis/LambdaSolve/print:

#edu/stanford/nlp/maxent/iis/LambdaSolve/read_lambdas:

#edu/stanford/nlp/maxent/iis/LambdaSolve/save_problem:

#edu/stanford/nlp/maxent/iis/LambdaSolve/logLikelihood:

#edu/stanford/nlp/maxent/iis/LambdaSolve/main:

#edu/stanford/nlp/maxent/iis/LambdaSolve/logLikelihoodNeg:

#edu/stanford/nlp/maxent/iis/LambdaSolve/logLikelihoodScratch:

#edu/stanford/nlp/maxent/iis/LambdaSolve/getDerivatives:

#edu/stanford/nlp/maxent/iis/LambdaSolve/getDerivativesNeg:

#edu/stanford/nlp/maxent/iis/LambdaSolve/expectedValue:

#edu/stanford/nlp/maxent/iis/LambdaSolve/getDerivativesExpectedValue:

#edu/stanford/nlp/maxent/iis/LambdaSolve/lossDomination:

#edu/stanford/nlp/maxent/iis/LambdaSolve/getDerivativesLossDomination:
edu.stanford.nlp.maxent.iis.LambdaSolve:
edu.stanford.nlp.fsm.FastExactAutomatonMinimizer$Block:
edu.stanford.nlp.fsm.AutomatonMinimizer:
edu.stanford.nlp.fsm.FastExactAutomatonMinimizer$Split:
edu.stanford.nlp.fsm.TransducerGraph$InputSplittingProcessor:
edu.stanford.nlp.fsm.TransducerGraph$GraphProcessor:

#edu/stanford/nlp/fsm/TransducerGraph$Arc/equals:
edu.stanford.nlp.fsm.TransducerGraph$Arc:

#edu/stanford/nlp/fsm/TransducerGraph$NormalizingGraphProcessor/processGraph:
edu.stanford.nlp.fsm.TransducerGraph$NormalizingGraphProcessor:

#edu/stanford/nlp/fsm/TransducerGraph$SetToStringNodeProcessor/processNode:
edu.stanford.nlp.fsm.TransducerGraph$SetToStringNodeProcessor:
edu.stanford.nlp.fsm.TransducerGraph$NodeProcessorWrappingArcProcessor:

#edu/stanford/nlp/fsm/QuasiDeterminizer/computeLambda:

#edu/stanford/nlp/fsm/QuasiDeterminizer/pushLambdas:
edu.stanford.nlp.fsm.QuasiDeterminizer:
edu.stanford.nlp.fsm.Block:
edu.stanford.nlp.fsm.DFSATransition:
edu.stanford.nlp.fsm.DFSAMinimizer$IntPair:

#edu/stanford/nlp/fsm/DFSAMinimizer/unweightedMinimize:

#edu/stanford/nlp/fsm/DFSAMinimizer/unweightedMinimizeOld:
edu.stanford.nlp.fsm.DFSAMinimizer:
edu.stanford.nlp.fsm.TransducerGraph$OutputCombiningProcessor:

#edu/stanford/nlp/fsm/FastExactAutomatonMinimizer/buildMinimizedFA:

#edu/stanford/nlp/fsm/FastExactAutomatonMinimizer/hasSplit:

#edu/stanford/nlp/fsm/FastExactAutomatonMinimizer/sortIntoBlocks:

#edu/stanford/nlp/fsm/FastExactAutomatonMinimizer/makeBlock:

#edu/stanford/nlp/fsm/FastExactAutomatonMinimizer/addSplits:

#edu/stanford/nlp/fsm/FastExactAutomatonMinimizer/removeAll:

#edu/stanford/nlp/fsm/FastExactAutomatonMinimizer/difference:

#edu/stanford/nlp/fsm/FastExactAutomatonMinimizer/getBlock:

#edu/stanford/nlp/fsm/FastExactAutomatonMinimizer/getInverseImages:

#edu/stanford/nlp/fsm/FastExactAutomatonMinimizer/getInverseArcs:

#edu/stanford/nlp/fsm/FastExactAutomatonMinimizer/getInverseArcs:

#edu/stanford/nlp/fsm/FastExactAutomatonMinimizer/minimize:
edu.stanford.nlp.fsm.FastExactAutomatonMinimizer:
Warning: Method:edu.stanford.nlp.fsm.DFSA.exploreStates has incoming edges.

#edu/stanford/nlp/fsm/DFSA/printTrieDFSAHelper:

#edu/stanford/nlp/fsm/DFSA/printAttFsmFormat:

#edu/stanford/nlp/fsm/DFSA/printTrieAsRulesHelper:
edu.stanford.nlp.fsm.DFSA:
edu.stanford.nlp.fsm.TransducerGraph$ObjectToSetNodeProcessor:

#edu/stanford/nlp/fsm/DFSAState/successorStates:

#edu/stanford/nlp/fsm/DFSAState/isContinuable:

#edu/stanford/nlp/fsm/DFSAState/hashCode:

#edu/stanford/nlp/fsm/DFSAState/equals:
Warning: Method:edu.stanford.nlp.fsm.DFSAState.exploreStates has incoming edges.
edu.stanford.nlp.fsm.DFSAState:
edu.stanford.nlp.fsm.TransducerGraph$NodeProcessor:
edu.stanford.nlp.fsm.AutomatonCompactor:
edu.stanford.nlp.fsm.TransducerGraph$ArcProcessor:

#edu/stanford/nlp/fsm/ExactAutomatonMinimizer/buildMinimizedFA:

#edu/stanford/nlp/fsm/ExactAutomatonMinimizer/hasActivePair:

#edu/stanford/nlp/fsm/ExactAutomatonMinimizer/sortIntoBlocks:

#edu/stanford/nlp/fsm/ExactAutomatonMinimizer/makeBlock:

#edu/stanford/nlp/fsm/ExactAutomatonMinimizer/removeAll:

#edu/stanford/nlp/fsm/ExactAutomatonMinimizer/difference:

#edu/stanford/nlp/fsm/ExactAutomatonMinimizer/getBlock:

#edu/stanford/nlp/fsm/ExactAutomatonMinimizer/getInverseImages:

#edu/stanford/nlp/fsm/ExactAutomatonMinimizer/minimize:
edu.stanford.nlp.fsm.ExactAutomatonMinimizer:

#edu/stanford/nlp/fsm/TransducerGraph/<init>:

#edu/stanford/nlp/fsm/TransducerGraph/ensure:

#edu/stanford/nlp/fsm/TransducerGraph/getArc:

#edu/stanford/nlp/fsm/TransducerGraph/addArc:

#edu/stanford/nlp/fsm/TransducerGraph/removeArc:

#edu/stanford/nlp/fsm/TransducerGraph/canAddArc:

#edu/stanford/nlp/fsm/TransducerGraph/asDOTString:

#edu/stanford/nlp/fsm/TransducerGraph/sumOutputs:

#edu/stanford/nlp/fsm/TransducerGraph/getSourceTotal:

#edu/stanford/nlp/fsm/TransducerGraph/getOutputOfPathInGraph:

#edu/stanford/nlp/fsm/TransducerGraph/sampleUniformPathFromGraph:

#edu/stanford/nlp/fsm/TransducerGraph/samplePathsFromGraph:

#edu/stanford/nlp/fsm/TransducerGraph/printPathOutputs:

#edu/stanford/nlp/fsm/TransducerGraph/getPathOutputs:

#edu/stanford/nlp/fsm/TransducerGraph/testGraphPaths:

#edu/stanford/nlp/fsm/TransducerGraph/canAddPath:

#edu/stanford/nlp/fsm/TransducerGraph/createGraphFromPaths:

#edu/stanford/nlp/fsm/TransducerGraph/createGraphFromPaths:

#edu/stanford/nlp/fsm/TransducerGraph/addOnePathToGraph:

#edu/stanford/nlp/fsm/TransducerGraph/createRandomGraph:

#edu/stanford/nlp/fsm/TransducerGraph/createRandomPaths:

#edu/stanford/nlp/fsm/TransducerGraph/depthFirstSearch:

#edu/stanford/nlp/fsm/TransducerGraph/depthFirstSearchHelper:
edu.stanford.nlp.fsm.TransducerGraph:

#edu/stanford/nlp/fsm/ExactAutomatonMinimizer$ExactBlock/<init>:
edu.stanford.nlp.fsm.ExactAutomatonMinimizer$ExactBlock:
edu.stanford.nlp.parser.ViterbiParserWithOptions:
edu.stanford.nlp.parser.KBestViterbiParser:
edu.stanford.nlp.parser.Parser:
edu.stanford.nlp.parser.ViterbiParser:

#edu/stanford/nlp/parser/dvparser/DVParserCostAndGradient/getContextWords:

#edu/stanford/nlp/parser/dvparser/DVParserCostAndGradient/concatenateContextWords:

#edu/stanford/nlp/parser/dvparser/DVParserCostAndGradient/score:

#edu/stanford/nlp/parser/dvparser/DVParserCostAndGradient/forwardPropagateTree:

#edu/stanford/nlp/parser/dvparser/DVParserCostAndGradient/getAllHighestScoringTreesTest:

#edu/stanford/nlp/parser/dvparser/DVParserCostAndGradient/getHighestScoringTree:

#edu/stanford/nlp/parser/dvparser/DVParserCostAndGradient/calculate:

#edu/stanford/nlp/parser/dvparser/DVParserCostAndGradient/backpropDerivative:
edu.stanford.nlp.parser.dvparser.DVParserCostAndGradient:
edu.stanford.nlp.parser.dvparser.CacheParseHypotheses$DecompressionProcessor:

#edu/stanford/nlp/parser/dvparser/FilterConfusingRules/<init>:

#edu/stanford/nlp/parser/dvparser/FilterConfusingRules/test:
edu.stanford.nlp.parser.dvparser.FilterConfusingRules:

#edu/stanford/nlp/parser/dvparser/DVParser/getTopParsesForOneTree:

#edu/stanford/nlp/parser/dvparser/DVParser/getTopParses:

#edu/stanford/nlp/parser/dvparser/DVParser/train:

#edu/stanford/nlp/parser/dvparser/DVParser/executeOneTrainingBatch:

#edu/stanford/nlp/parser/dvparser/DVParser/<init>:

#edu/stanford/nlp/parser/dvparser/DVParser/getModelFromLexicalizedParser:

#edu/stanford/nlp/parser/dvparser/DVParser/main:
edu.stanford.nlp.parser.dvparser.DVParser:

#edu/stanford/nlp/parser/dvparser/CacheParseHypotheses/convertToBytes:

#edu/stanford/nlp/parser/dvparser/CacheParseHypotheses/convertToBytes:

#edu/stanford/nlp/parser/dvparser/CacheParseHypotheses/convertToTrees:

#edu/stanford/nlp/parser/dvparser/CacheParseHypotheses/convertToTrees:

#edu/stanford/nlp/parser/dvparser/CacheParseHypotheses/main:
edu.stanford.nlp.parser.dvparser.CacheParseHypotheses:
edu.stanford.nlp.parser.dvparser.DVModelReranker:

#edu/stanford/nlp/parser/dvparser/DumpMatrices/dumpMatrix:

#edu/stanford/nlp/parser/dvparser/DumpMatrices/main:
edu.stanford.nlp.parser.dvparser.DumpMatrices:

#edu/stanford/nlp/parser/dvparser/AverageDVModels/getBinaryMatrixNames:

#edu/stanford/nlp/parser/dvparser/AverageDVModels/getUnaryMatrixNames:

#edu/stanford/nlp/parser/dvparser/AverageDVModels/averageBinaryMatrices:

#edu/stanford/nlp/parser/dvparser/AverageDVModels/averageUnaryMatrices:

#edu/stanford/nlp/parser/dvparser/AverageDVModels/main:
edu.stanford.nlp.parser.dvparser.AverageDVModels:

#edu/stanford/nlp/parser/dvparser/DVModelReranker$Query/score:
edu.stanford.nlp.parser.dvparser.DVModelReranker$Query:

#edu/stanford/nlp/parser/dvparser/CombinedDVModelReranker$Query/<init>:

#edu/stanford/nlp/parser/dvparser/CombinedDVModelReranker$Query/score:
edu.stanford.nlp.parser.dvparser.CombinedDVModelReranker$Query:
edu.stanford.nlp.parser.dvparser.DVModel$1:

#edu/stanford/nlp/parser/dvparser/CombineDVModels/main:
edu.stanford.nlp.parser.dvparser.CombineDVModels:
edu.stanford.nlp.parser.dvparser.CombinedDVModelReranker:

#edu/stanford/nlp/parser/dvparser/DVModel/<init>:

#edu/stanford/nlp/parser/dvparser/DVModel/<init>:

#edu/stanford/nlp/parser/dvparser/DVModel/randomTransformMatrix:

#edu/stanford/nlp/parser/dvparser/DVModel/addRandomUnaryMatrix:

#edu/stanford/nlp/parser/dvparser/DVModel/addRandomBinaryMatrix:

#edu/stanford/nlp/parser/dvparser/DVModel/setRulesForTrainingSet:

#edu/stanford/nlp/parser/dvparser/DVModel/filterRulesForBatch:

#edu/stanford/nlp/parser/dvparser/DVModel/filterRulesForBatch:

#edu/stanford/nlp/parser/dvparser/DVModel/filterRulesForBatch:

#edu/stanford/nlp/parser/dvparser/DVModel/searchRulesForBatch:

#edu/stanford/nlp/parser/dvparser/DVModel/basicCategory:

#edu/stanford/nlp/parser/dvparser/DVModel/readWordVectors:

#edu/stanford/nlp/parser/dvparser/DVModel/totalParamSize:

#edu/stanford/nlp/parser/dvparser/DVModel/paramsToVector:

#edu/stanford/nlp/parser/dvparser/DVModel/paramsToVector:

#edu/stanford/nlp/parser/dvparser/DVModel/vectorToParams:

#edu/stanford/nlp/parser/dvparser/DVModel/getWForNode:

#edu/stanford/nlp/parser/dvparser/DVModel/getScoreWForNode:

#edu/stanford/nlp/parser/dvparser/DVModel/getVocabWord:

#edu/stanford/nlp/parser/dvparser/DVModel/printMatrixNames:

#edu/stanford/nlp/parser/dvparser/DVModel/printMatrixStats:

#edu/stanford/nlp/parser/dvparser/DVModel/printAllMatrices:

#edu/stanford/nlp/parser/dvparser/DVModel/binaryTransformIndex:

#edu/stanford/nlp/parser/dvparser/DVModel/unaryTransformIndex:

#edu/stanford/nlp/parser/dvparser/DVModel/binaryScoreIndex:

#edu/stanford/nlp/parser/dvparser/DVModel/unaryScoreIndex:

#edu/stanford/nlp/parser/dvparser/DVModel/indexToBinaryTransform:

#edu/stanford/nlp/parser/dvparser/DVModel/indexToUnaryTransform:

#edu/stanford/nlp/parser/dvparser/DVModel/indexToBinaryScore:

#edu/stanford/nlp/parser/dvparser/DVModel/indexToUnaryScore:

#edu/stanford/nlp/parser/dvparser/DVModel/printParameterType:
edu.stanford.nlp.parser.dvparser.DVModel:

#edu/stanford/nlp/parser/dvparser/ParseAndPrintMatrices/outputMatrix:

#edu/stanford/nlp/parser/dvparser/ParseAndPrintMatrices/outputTreeMatrices:

#edu/stanford/nlp/parser/dvparser/ParseAndPrintMatrices/findRootTree:

#edu/stanford/nlp/parser/dvparser/ParseAndPrintMatrices/main:
edu.stanford.nlp.parser.dvparser.ParseAndPrintMatrices:

#edu/stanford/nlp/parser/dvparser/UnknownWordPrinter/evaluate:

#edu/stanford/nlp/parser/dvparser/UnknownWordPrinter/display:
edu.stanford.nlp.parser.dvparser.UnknownWordPrinter:

#edu/stanford/nlp/parser/dvparser/FindNearestNeighbors/main:
edu.stanford.nlp.parser.dvparser.FindNearestNeighbors:

#edu/stanford/nlp/parser/dvparser/CacheParseHypotheses$CacheProcessor/process:
edu.stanford.nlp.parser.dvparser.CacheParseHypotheses$CacheProcessor:

#edu/stanford/nlp/parser/dvparser/CrossValidateTestOptions/main:
edu.stanford.nlp.parser.dvparser.CrossValidateTestOptions:
edu.stanford.nlp.parser.dvparser.DVParserCostAndGradient$ScoringProcessor:
edu.stanford.nlp.parser.dvparser.FindNearestNeighbors$ParseRecord:

#edu/stanford/nlp/parser/metrics/EvaluateExternalParser/getGoldTrees:

#edu/stanford/nlp/parser/metrics/EvaluateExternalParser/getResults:

#edu/stanford/nlp/parser/metrics/EvaluateExternalParser/convertDataset:

#edu/stanford/nlp/parser/metrics/EvaluateExternalParser/buildResponse:

#edu/stanford/nlp/parser/metrics/EvaluateExternalParser/scoreDataset:
edu.stanford.nlp.parser.metrics.EvaluateExternalParser:

#edu/stanford/nlp/parser/metrics/ExternalParserQuery/<init>:

#edu/stanford/nlp/parser/metrics/ExternalParserQuery/getPCFGScore:

#edu/stanford/nlp/parser/metrics/ExternalParserQuery/getBestParse:

#edu/stanford/nlp/parser/metrics/ExternalParserQuery/getKBestParses:

#edu/stanford/nlp/parser/metrics/ExternalParserQuery/restoreOriginalWords:

#edu/stanford/nlp/parser/metrics/ExternalParserQuery/parseUnparsable:
edu.stanford.nlp.parser.metrics.ExternalParserQuery:

#edu/stanford/nlp/parser/metrics/EvalbFormatWriter/writeTree:

#edu/stanford/nlp/parser/metrics/EvalbFormatWriter/writeTrees:

#edu/stanford/nlp/parser/metrics/EvalbFormatWriter/closeFiles:
edu.stanford.nlp.parser.metrics.EvalbFormatWriter:

#edu/stanford/nlp/parser/metrics/EvaluateTreebank$TreebankEvaluationDataset/getInputSentence:

#edu/stanford/nlp/parser/metrics/EvaluateTreebank$TreebankEvaluationDataset/dataset:
edu.stanford.nlp.parser.metrics.EvaluateTreebank$TreebankEvaluationDataset:
edu.stanford.nlp.parser.metrics.EvaluateTreebank$PreparsedEvaluationDataset:

#edu/stanford/nlp/parser/metrics/EvaluationMetric/update:

#edu/stanford/nlp/parser/metrics/EvaluationMetric/toString:
edu.stanford.nlp.parser.metrics.EvaluationMetric:

#edu/stanford/nlp/parser/metrics/TopMatchEval/makeObjects:
edu.stanford.nlp.parser.metrics.TopMatchEval:

#edu/stanford/nlp/parser/metrics/BestOfTopKEval/evaluate:
edu.stanford.nlp.parser.metrics.BestOfTopKEval:

#edu/stanford/nlp/parser/metrics/Evalb/makeObjects:

#edu/stanford/nlp/parser/metrics/Evalb/evaluate:

#edu/stanford/nlp/parser/metrics/Evalb/main:

#edu/stanford/nlp/parser/metrics/Evalb/emitSortedTrees:

#edu/stanford/nlp/parser/metrics/Evalb/storeTrees:
edu.stanford.nlp.parser.metrics.Evalb:

#edu/stanford/nlp/parser/metrics/EvaluateTreebank/<init>:

#edu/stanford/nlp/parser/metrics/EvaluateTreebank/getLBScore:

#edu/stanford/nlp/parser/metrics/EvaluateTreebank/getTagScore:

#edu/stanford/nlp/parser/metrics/EvaluateTreebank/getPCFGTopKF1:

#edu/stanford/nlp/parser/metrics/EvaluateTreebank/hasPCFGTopKF1:

#edu/stanford/nlp/parser/metrics/EvaluateTreebank/processResults:

#edu/stanford/nlp/parser/metrics/EvaluateTreebank/testOnTreebank:
edu.stanford.nlp.parser.metrics.EvaluateTreebank:
edu.stanford.nlp.parser.metrics.Eval:

#edu/stanford/nlp/parser/metrics/TaggingEval/<init>:

#edu/stanford/nlp/parser/metrics/TaggingEval/makeObjects:

#edu/stanford/nlp/parser/metrics/TaggingEval/makeObjectsByCat:

#edu/stanford/nlp/parser/metrics/TaggingEval/evaluate:

#edu/stanford/nlp/parser/metrics/TaggingEval/measureOOV:

#edu/stanford/nlp/parser/metrics/TaggingEval/display:

#edu/stanford/nlp/parser/metrics/TaggingEval/main:
edu.stanford.nlp.parser.metrics.TaggingEval:
edu.stanford.nlp.parser.metrics.EvaluateTreebank$EvaluationDataset:

#edu/stanford/nlp/parser/metrics/CollinsDepEval/makeCollinsObjects:

#edu/stanford/nlp/parser/metrics/CollinsDepEval/evaluate:

#edu/stanford/nlp/parser/metrics/CollinsDepEval/display:

#edu/stanford/nlp/parser/metrics/CollinsDepEval/main:
edu.stanford.nlp.parser.metrics.CollinsDepEval:
edu.stanford.nlp.parser.metrics.Evalb$1:

#edu/stanford/nlp/parser/metrics/TsarfatyEval/makeObjects:

#edu/stanford/nlp/parser/metrics/TsarfatyEval/extractDeps:

#edu/stanford/nlp/parser/metrics/TsarfatyEval/main:
edu.stanford.nlp.parser.metrics.TsarfatyEval:

#edu/stanford/nlp/parser/metrics/AbstractEval/precision:

#edu/stanford/nlp/parser/metrics/AbstractEval/evaluate:
edu.stanford.nlp.parser.metrics.AbstractEval:
edu.stanford.nlp.parser.metrics.ParserQueryEval:

#edu/stanford/nlp/parser/metrics/AbstractEval$RuleErrorEval/localize:

#edu/stanford/nlp/parser/metrics/AbstractEval$RuleErrorEval/makeObjects:

#edu/stanford/nlp/parser/metrics/AbstractEval$RuleErrorEval/evaluate:

#edu/stanford/nlp/parser/metrics/AbstractEval$RuleErrorEval/display:

#edu/stanford/nlp/parser/metrics/AbstractEval$RuleErrorEval/display:
edu.stanford.nlp.parser.metrics.AbstractEval$RuleErrorEval:

#edu/stanford/nlp/parser/metrics/EvalbByCat/<init>:

#edu/stanford/nlp/parser/metrics/EvalbByCat/makeObjectsByCat:

#edu/stanford/nlp/parser/metrics/EvalbByCat/evaluate:

#edu/stanford/nlp/parser/metrics/EvalbByCat/getEvalLabelSet:

#edu/stanford/nlp/parser/metrics/EvalbByCat/display:
edu.stanford.nlp.parser.metrics.EvalbByCat:
edu.stanford.nlp.parser.metrics.UnlabeledAttachmentEval$1:

#edu/stanford/nlp/parser/metrics/UnlabeledAttachmentEval/evaluate:

#edu/stanford/nlp/parser/metrics/UnlabeledAttachmentEval/makeObjects:

#edu/stanford/nlp/parser/metrics/UnlabeledAttachmentEval/main:
edu.stanford.nlp.parser.metrics.UnlabeledAttachmentEval:

#edu/stanford/nlp/parser/metrics/Evalb$F1Comparator/compare:
edu.stanford.nlp.parser.metrics.Evalb$F1Comparator:

#edu/stanford/nlp/parser/metrics/Evalb$CBEval/checkCrossing:

#edu/stanford/nlp/parser/metrics/Evalb$CBEval/evaluate:
edu.stanford.nlp.parser.metrics.Evalb$CBEval:

#edu/stanford/nlp/parser/metrics/TreeSpanScoring/countSpanErrors:

#edu/stanford/nlp/parser/metrics/TreeSpanScoring/simplifyConstituents:
edu.stanford.nlp.parser.metrics.TreeSpanScoring:

#edu/stanford/nlp/parser/metrics/LeafAncestorEval/makeLineages:

#edu/stanford/nlp/parser/metrics/LeafAncestorEval/updateCatAverages:

#edu/stanford/nlp/parser/metrics/LeafAncestorEval/evaluate:

#edu/stanford/nlp/parser/metrics/LeafAncestorEval/editDistance:

#edu/stanford/nlp/parser/metrics/LeafAncestorEval/toString:

#edu/stanford/nlp/parser/metrics/LeafAncestorEval/display:

#edu/stanford/nlp/parser/metrics/LeafAncestorEval/validateCommandLine:

#edu/stanford/nlp/parser/metrics/LeafAncestorEval/main:
edu.stanford.nlp.parser.metrics.LeafAncestorEval:

#edu/stanford/nlp/parser/metrics/FilteredEval/makeObjects:
edu.stanford.nlp.parser.metrics.FilteredEval:

#edu/stanford/nlp/parser/metrics/AbstractEval$ScoreEval/recordScore:

#edu/stanford/nlp/parser/metrics/AbstractEval$ScoreEval/display:
edu.stanford.nlp.parser.metrics.AbstractEval$ScoreEval:

#edu/stanford/nlp/parser/metrics/AbstractEval$CatErrorEval/myMakeObjects:

#edu/stanford/nlp/parser/metrics/AbstractEval$CatErrorEval/evaluate:

#edu/stanford/nlp/parser/metrics/AbstractEval$CatErrorEval/display:
edu.stanford.nlp.parser.metrics.AbstractEval$CatErrorEval:

#edu/stanford/nlp/parser/ui/TreeJPanel/nodeToString:

#edu/stanford/nlp/parser/ui/TreeJPanel/widthResult:

#edu/stanford/nlp/parser/ui/TreeJPanel/height:

#edu/stanford/nlp/parser/ui/TreeJPanel/pickFont:

#edu/stanford/nlp/parser/ui/TreeJPanel/paintTree:

#edu/stanford/nlp/parser/ui/TreeJPanel/paintComponent:

#edu/stanford/nlp/parser/ui/TreeJPanel/main:
edu.stanford.nlp.parser.ui.TreeJPanel:
edu.stanford.nlp.parser.ui.ParserPanel$3:
edu.stanford.nlp.parser.ui.TreeJPanel$WidthResult:

#edu/stanford/nlp/parser/ui/ParserPanel/highlightText:

#edu/stanford/nlp/parser/ui/ParserPanel/highlightSentence:

#edu/stanford/nlp/parser/ui/ParserPanel/nearestDelimiter:

#edu/stanford/nlp/parser/ui/ParserPanel/setFont:

#edu/stanford/nlp/parser/ui/ParserPanel/setChineseFont:

#edu/stanford/nlp/parser/ui/ParserPanel/parse:

#edu/stanford/nlp/parser/ui/ParserPanel/loadFile:

#edu/stanford/nlp/parser/ui/ParserPanel/loadFile:

#edu/stanford/nlp/parser/ui/ParserPanel/saveOutput:

#edu/stanford/nlp/parser/ui/ParserPanel/saveOutput:

#edu/stanford/nlp/parser/ui/ParserPanel/loadParser:

#edu/stanford/nlp/parser/ui/ParserPanel/loadParser:

#edu/stanford/nlp/parser/ui/ParserPanel/startProgressMonitor:

#edu/stanford/nlp/parser/ui/ParserPanel/stopProgressMonitor:

#edu/stanford/nlp/parser/ui/ParserPanel/initComponents:
edu.stanford.nlp.parser.ui.ParserPanel:

#edu/stanford/nlp/parser/ui/ParserPanel$LoadParserThread/run:
edu.stanford.nlp.parser.ui.ParserPanel$LoadParserThread:
edu.stanford.nlp.parser.ui.ParserPanel$1:
edu.stanford.nlp.parser.ui.ParserPanel$JFileChooserLocation:
edu.stanford.nlp.parser.ui.ParserPanel$4:
edu.stanford.nlp.parser.ui.ParserPanel$TimerListener:
edu.stanford.nlp.parser.ui.ParserPanel$2:

#edu/stanford/nlp/parser/ui/ParserPanel$ParseThread/run:
edu.stanford.nlp.parser.ui.ParserPanel$ParseThread:
edu.stanford.nlp.parser.ui.TreeJPanel$1:

#edu/stanford/nlp/parser/ui/ParserPanel$SaveOutputThread/run:
edu.stanford.nlp.parser.ui.ParserPanel$SaveOutputThread:

#edu/stanford/nlp/parser/ui/Parser/<init>:

#edu/stanford/nlp/parser/ui/Parser/main:
edu.stanford.nlp.parser.ui.Parser:
edu.stanford.nlp.parser.ui.Parser$1:

#edu/stanford/nlp/parser/tools/RuleBranchingFactor/treeToRuleString:

#edu/stanford/nlp/parser/tools/RuleBranchingFactor/main:

#edu/stanford/nlp/parser/tools/RuleBranchingFactor/standardDeviation:
edu.stanford.nlp.parser.tools.RuleBranchingFactor:

#edu/stanford/nlp/parser/tools/UpdateParserOptions/main:
edu.stanford.nlp.parser.tools.UpdateParserOptions:

#edu/stanford/nlp/parser/tools/VocabFrequency/main:
edu.stanford.nlp.parser.tools.VocabFrequency:
edu.stanford.nlp.parser.tools.ParseAndSetLabels$1:

#edu/stanford/nlp/parser/tools/PunctFrequencyDist/main:
edu.stanford.nlp.parser.tools.PunctFrequencyDist:
edu.stanford.nlp.parser.tools.ParseAndSetLabels$MissingLabels:

#edu/stanford/nlp/parser/tools/PrintTagList/main:
edu.stanford.nlp.parser.tools.PrintTagList:

#edu/stanford/nlp/parser/tools/ParseAndSetLabels/setLabels:

#edu/stanford/nlp/parser/tools/ParseAndSetLabels/setLabels:

#edu/stanford/nlp/parser/tools/ParseAndSetLabels/writeTrees:

#edu/stanford/nlp/parser/tools/ParseAndSetLabels/readLabelMap:

#edu/stanford/nlp/parser/tools/ParseAndSetLabels/readSentences:

#edu/stanford/nlp/parser/tools/ParseAndSetLabels/loadParser:

#edu/stanford/nlp/parser/tools/ParseAndSetLabels/parseSentences:

#edu/stanford/nlp/parser/tools/ParseAndSetLabels/main:
edu.stanford.nlp.parser.tools.ParseAndSetLabels:
Warning: Method:edu.stanford.nlp.parser.tools.OntoNotesFilePreparation.main has auto edges.
edu.stanford.nlp.parser.tools.OntoNotesFilePreparation:

#edu/stanford/nlp/parser/tools/RHSFrequency/main:
edu.stanford.nlp.parser.tools.RHSFrequency:

#edu/stanford/nlp/parser/tools/CountTrees/main:
edu.stanford.nlp.parser.tools.CountTrees:

#edu/stanford/nlp/parser/tools/PunctEquivalenceClasser/getPunctClass:
edu.stanford.nlp.parser.tools.PunctEquivalenceClasser:

#edu/stanford/nlp/parser/tools/ManipulateTopBracket/main:
edu.stanford.nlp.parser.tools.ManipulateTopBracket:

#edu/stanford/nlp/parser/lexparser/AbstractTreebankParserParams/pw:

#edu/stanford/nlp/parser/lexparser/AbstractTreebankParserParams/parsevalObjectify:

#edu/stanford/nlp/parser/lexparser/AbstractTreebankParserParams/dependencyObjectify:

#edu/stanford/nlp/parser/lexparser/AbstractTreebankParserParams/dependencyObjectifyHelper:

#edu/stanford/nlp/parser/lexparser/AbstractTreebankParserParams/subcategoryStripper:

#edu/stanford/nlp/parser/lexparser/AbstractTreebankParserParams/setGenerateOriginalDependencies:

#edu/stanford/nlp/parser/lexparser/AbstractTreebankParserParams/lambda$typedDependencyClasser$0:
edu.stanford.nlp.parser.lexparser.AbstractTreebankParserParams:

#edu/stanford/nlp/parser/lexparser/NodePruner/prune:

#edu/stanford/nlp/parser/lexparser/NodePruner/helper:

#edu/stanford/nlp/parser/lexparser/NodePruner/prune:
edu.stanford.nlp.parser.lexparser.NodePruner:
edu.stanford.nlp.parser.lexparser.Scorer:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser$Arc/equals:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser$Arc/hashCode:
edu.stanford.nlp.parser.lexparser.ExhaustivePCFGParser$Arc:
edu.stanford.nlp.parser.lexparser.UnknownWordModel:
edu.stanford.nlp.parser.lexparser.HebrewTreebankParserParams:

#edu/stanford/nlp/parser/lexparser/TreeCollinizer/transformTree:
edu.stanford.nlp.parser.lexparser.TreeCollinizer:
edu.stanford.nlp.parser.lexparser.EnglishTreebankParserParams$EnglishTest:

#edu/stanford/nlp/parser/lexparser/MLEDependencyGrammar/<init>:

#edu/stanford/nlp/parser/lexparser/MLEDependencyGrammar/pruneTW:

#edu/stanford/nlp/parser/lexparser/MLEDependencyGrammar/treeToDependencyHelper:

#edu/stanford/nlp/parser/lexparser/MLEDependencyGrammar/scoreAll:

#edu/stanford/nlp/parser/lexparser/MLEDependencyGrammar/tune:

#edu/stanford/nlp/parser/lexparser/MLEDependencyGrammar/addRule:

#edu/stanford/nlp/parser/lexparser/MLEDependencyGrammar/getCachedITW:

#edu/stanford/nlp/parser/lexparser/MLEDependencyGrammar/expandDependency:

#edu/stanford/nlp/parser/lexparser/MLEDependencyGrammar/tagProject:

#edu/stanford/nlp/parser/lexparser/MLEDependencyGrammar/expandArg:

#edu/stanford/nlp/parser/lexparser/MLEDependencyGrammar/expandStop:

#edu/stanford/nlp/parser/lexparser/MLEDependencyGrammar/probTB:

#edu/stanford/nlp/parser/lexparser/MLEDependencyGrammar/getStopProb:

#edu/stanford/nlp/parser/lexparser/MLEDependencyGrammar/readObject:

#edu/stanford/nlp/parser/lexparser/MLEDependencyGrammar/writeObject:

#edu/stanford/nlp/parser/lexparser/MLEDependencyGrammar/readData:

#edu/stanford/nlp/parser/lexparser/MLEDependencyGrammar/writeData:
edu.stanford.nlp.parser.lexparser.MLEDependencyGrammar:

#edu/stanford/nlp/parser/lexparser/HungarianTreebankParserParams/treeReaderFactory:

#edu/stanford/nlp/parser/lexparser/HungarianTreebankParserParams/defaultTestSentence:
edu.stanford.nlp.parser.lexparser.HungarianTreebankParserParams:

#edu/stanford/nlp/parser/lexparser/NegraPennTreebankParserParams/lex:

#edu/stanford/nlp/parser/lexparser/NegraPennTreebankParserParams/treeReaderFactory:

#edu/stanford/nlp/parser/lexparser/NegraPennTreebankParserParams/setOptionFlag:

#edu/stanford/nlp/parser/lexparser/NegraPennTreebankParserParams/transformTree:
Warning: Method:edu.stanford.nlp.parser.lexparser.NegraPennTreebankParserParams.leftPhrasal has incoming edges.

#edu/stanford/nlp/parser/lexparser/NegraPennTreebankParserParams/containsVP:

#edu/stanford/nlp/parser/lexparser/NegraPennTreebankParserParams/childBasicCats:
edu.stanford.nlp.parser.lexparser.NegraPennTreebankParserParams:

#edu/stanford/nlp/parser/lexparser/SpanishUnknownWordModelTrainer/train:

#edu/stanford/nlp/parser/lexparser/SpanishUnknownWordModelTrainer/finishTraining:
edu.stanford.nlp.parser.lexparser.SpanishUnknownWordModelTrainer:

#edu/stanford/nlp/parser/lexparser/LexicalizedParserQuery/<init>:

#edu/stanford/nlp/parser/lexparser/LexicalizedParserQuery/setConstraints:

#edu/stanford/nlp/parser/lexparser/LexicalizedParserQuery/parseInternal:

#edu/stanford/nlp/parser/lexparser/LexicalizedParserQuery/restoreOriginalWords:

#edu/stanford/nlp/parser/lexparser/LexicalizedParserQuery/parse:

#edu/stanford/nlp/parser/lexparser/LexicalizedParserQuery/getBestParse:

#edu/stanford/nlp/parser/lexparser/LexicalizedParserQuery/getKBestParses:

#edu/stanford/nlp/parser/lexparser/LexicalizedParserQuery/getBestScore:

#edu/stanford/nlp/parser/lexparser/LexicalizedParserQuery/hasFactoredParse:

#edu/stanford/nlp/parser/lexparser/LexicalizedParserQuery/getKGoodFactoredParses:

#edu/stanford/nlp/parser/lexparser/LexicalizedParserQuery/getKBestPCFGParses:

#edu/stanford/nlp/parser/lexparser/LexicalizedParserQuery/getBestPCFGParse:

#edu/stanford/nlp/parser/lexparser/LexicalizedParserQuery/getBestDependencyParse:

#edu/stanford/nlp/parser/lexparser/LexicalizedParserQuery/parse:

#edu/stanford/nlp/parser/lexparser/LexicalizedParserQuery/parseAndReport:

#edu/stanford/nlp/parser/lexparser/LexicalizedParserQuery/addSentenceFinalPunctIfNeeded:
edu.stanford.nlp.parser.lexparser.LexicalizedParserQuery:

#edu/stanford/nlp/parser/lexparser/IntDependency/hashCode:

#edu/stanford/nlp/parser/lexparser/IntDependency/equals:

#edu/stanford/nlp/parser/lexparser/IntDependency/toString:

#edu/stanford/nlp/parser/lexparser/IntDependency/toString:
edu.stanford.nlp.parser.lexparser.IntDependency:

#edu/stanford/nlp/parser/lexparser/BaseLexicon/<init>:

#edu/stanford/nlp/parser/lexparser/BaseLexicon/isKnown:

#edu/stanford/nlp/parser/lexparser/BaseLexicon/isKnown:

#edu/stanford/nlp/parser/lexparser/BaseLexicon/tagSet:

#edu/stanford/nlp/parser/lexparser/BaseLexicon/ruleIteratorByWord:

#edu/stanford/nlp/parser/lexparser/BaseLexicon/initRulesWithWord:

#edu/stanford/nlp/parser/lexparser/BaseLexicon/listToEvents:

#edu/stanford/nlp/parser/lexparser/BaseLexicon/train:

#edu/stanford/nlp/parser/lexparser/BaseLexicon/train:

#edu/stanford/nlp/parser/lexparser/BaseLexicon/trainUnannotated:

#edu/stanford/nlp/parser/lexparser/BaseLexicon/train:

#edu/stanford/nlp/parser/lexparser/BaseLexicon/addTagging:

#edu/stanford/nlp/parser/lexparser/BaseLexicon/buildPT_T:

#edu/stanford/nlp/parser/lexparser/BaseLexicon/score:

#edu/stanford/nlp/parser/lexparser/BaseLexicon/tune:

#edu/stanford/nlp/parser/lexparser/BaseLexicon/readData:

#edu/stanford/nlp/parser/lexparser/BaseLexicon/writeData:

#edu/stanford/nlp/parser/lexparser/BaseLexicon/numRules:

#edu/stanford/nlp/parser/lexparser/BaseLexicon/examineIntersection:

#edu/stanford/nlp/parser/lexparser/BaseLexicon/printLexStats:

#edu/stanford/nlp/parser/lexparser/BaseLexicon/evaluateCoverage:

#edu/stanford/nlp/parser/lexparser/BaseLexicon/getBaseTag:

#edu/stanford/nlp/parser/lexparser/BaseLexicon/populateTagsToBaseTags:

#edu/stanford/nlp/parser/lexparser/BaseLexicon/main:
edu.stanford.nlp.parser.lexparser.BaseLexicon:
Warning: Method:edu.stanford.nlp.parser.lexparser.GrammarCoverageChecker.testOnTreebank has auto edges.

#edu/stanford/nlp/parser/lexparser/GrammarCoverageChecker/localTreeToRule:

#edu/stanford/nlp/parser/lexparser/GrammarCoverageChecker/computeLocalTreeScore:
edu.stanford.nlp.parser.lexparser.GrammarCoverageChecker:

#edu/stanford/nlp/parser/lexparser/Options/setOptions:

#edu/stanford/nlp/parser/lexparser/Options/setOptionsOrWarn:

#edu/stanford/nlp/parser/lexparser/Options/setOptionOrWarn:

#edu/stanford/nlp/parser/lexparser/Options/setOption:

#edu/stanford/nlp/parser/lexparser/Options/setOptionFlag:

#edu/stanford/nlp/parser/lexparser/Options/readData:
edu.stanford.nlp.parser.lexparser.Options:

#edu/stanford/nlp/parser/lexparser/HTKLatticeReader$LatticeWord/merge:

#edu/stanford/nlp/parser/lexparser/HTKLatticeReader$LatticeWord/equals:

#edu/stanford/nlp/parser/lexparser/HTKLatticeReader$LatticeWord/compareTo:
edu.stanford.nlp.parser.lexparser.HTKLatticeReader$LatticeWord:
edu.stanford.nlp.parser.lexparser.Extractor:
edu.stanford.nlp.parser.lexparser.HookChart$1:

#edu/stanford/nlp/parser/lexparser/Lattice/addEdge:

#edu/stanford/nlp/parser/lexparser/Lattice/getEdgesOverSpan:

#edu/stanford/nlp/parser/lexparser/Lattice/toString:
edu.stanford.nlp.parser.lexparser.Lattice:

#edu/stanford/nlp/parser/lexparser/ChineseSimWordAvgDepGrammar/getMap:

#edu/stanford/nlp/parser/lexparser/ChineseSimWordAvgDepGrammar/probTBwithSimWords:

#edu/stanford/nlp/parser/lexparser/ChineseSimWordAvgDepGrammar/probSimilarWordAvg:
edu.stanford.nlp.parser.lexparser.ChineseSimWordAvgDepGrammar:

#edu/stanford/nlp/parser/lexparser/TaggerReranker$Query/score:
edu.stanford.nlp.parser.lexparser.TaggerReranker$Query:

#edu/stanford/nlp/parser/lexparser/UnaryGrammar/purgeRules:

#edu/stanford/nlp/parser/lexparser/UnaryGrammar/closeRulesUnderMax:

#edu/stanford/nlp/parser/lexparser/UnaryGrammar/relaxRule:

#edu/stanford/nlp/parser/lexparser/UnaryGrammar/scoreRule:

#edu/stanford/nlp/parser/lexparser/UnaryGrammar/makeCRArrays:

#edu/stanford/nlp/parser/lexparser/UnaryGrammar/closedRulesByParent:

#edu/stanford/nlp/parser/lexparser/UnaryGrammar/closedRulesByChild:

#edu/stanford/nlp/parser/lexparser/UnaryGrammar/closedRuleIteratorByParent:

#edu/stanford/nlp/parser/lexparser/UnaryGrammar/closedRuleIteratorByChild:

#edu/stanford/nlp/parser/lexparser/UnaryGrammar/ruleIteratorByParent:

#edu/stanford/nlp/parser/lexparser/UnaryGrammar/ruleIteratorByChild:

#edu/stanford/nlp/parser/lexparser/UnaryGrammar/rulesByParent:

#edu/stanford/nlp/parser/lexparser/UnaryGrammar/rulesByChild:

#edu/stanford/nlp/parser/lexparser/UnaryGrammar/readObject:

#edu/stanford/nlp/parser/lexparser/UnaryGrammar/init:

#edu/stanford/nlp/parser/lexparser/UnaryGrammar/readData:

#edu/stanford/nlp/parser/lexparser/UnaryGrammar/writeData:

#edu/stanford/nlp/parser/lexparser/UnaryGrammar/writeAllData:
edu.stanford.nlp.parser.lexparser.UnaryGrammar:

#edu/stanford/nlp/parser/lexparser/ParentAnnotationStats/kidLabels:

#edu/stanford/nlp/parser/lexparser/ParentAnnotationStats/processTreeHelper:

#edu/stanford/nlp/parser/lexparser/ParentAnnotationStats/printStats:

#edu/stanford/nlp/parser/lexparser/ParentAnnotationStats/getSplitters:

#edu/stanford/nlp/parser/lexparser/ParentAnnotationStats/main:
edu.stanford.nlp.parser.lexparser.ParentAnnotationStats:

#edu/stanford/nlp/parser/lexparser/CNFTransformers$FromCNFTransformer/transformTree:
edu.stanford.nlp.parser.lexparser.CNFTransformers$FromCNFTransformer:

#edu/stanford/nlp/parser/lexparser/AbstractTreebankParserParams$UntypedDependencyTyper/makeDependency:
edu.stanford.nlp.parser.lexparser.AbstractTreebankParserParams$UntypedDependencyTyper:

#edu/stanford/nlp/parser/lexparser/EnglishUnknownWordModelTrainer/train:

#edu/stanford/nlp/parser/lexparser/EnglishUnknownWordModelTrainer/finishTraining:
edu.stanford.nlp.parser.lexparser.EnglishUnknownWordModelTrainer:

#edu/stanford/nlp/parser/lexparser/AbstractTreeExtractor/tallyLocalTree:

#edu/stanford/nlp/parser/lexparser/AbstractTreeExtractor/tallyTree:

#edu/stanford/nlp/parser/lexparser/AbstractTreeExtractor/tallyTrees:
Warning: Method:edu.stanford.nlp.parser.lexparser.AbstractTreeExtractor.tallyTreeIterator has incoming edges.
edu.stanford.nlp.parser.lexparser.AbstractTreeExtractor:
edu.stanford.nlp.parser.lexparser.TaggerReranker:

#edu/stanford/nlp/parser/lexparser/CNFTransformers/main:
edu.stanford.nlp.parser.lexparser.CNFTransformers:

#edu/stanford/nlp/parser/lexparser/Edge/equals:
edu.stanford.nlp.parser.lexparser.Edge:
edu.stanford.nlp.parser.lexparser.EnglishTreebankParserParams$EnglishTrain:
edu.stanford.nlp.parser.lexparser.UnknownWordModelTrainer:
edu.stanford.nlp.parser.lexparser.ArabicTreebankParserParams$1:

#edu/stanford/nlp/parser/lexparser/ArabicTreebankParserParams$AddEquivalencedConjNode/apply:
edu.stanford.nlp.parser.lexparser.ArabicTreebankParserParams$AddEquivalencedConjNode:

#edu/stanford/nlp/parser/lexparser/ChineseLexicon/score:
edu.stanford.nlp.parser.lexparser.ChineseLexicon:
edu.stanford.nlp.parser.lexparser.LatticeScorer:

#edu/stanford/nlp/parser/lexparser/ItalianTreebankParserParams/treeReaderFactory:

#edu/stanford/nlp/parser/lexparser/ItalianTreebankParserParams/defaultTestSentence:
edu.stanford.nlp.parser.lexparser.ItalianTreebankParserParams:

#edu/stanford/nlp/parser/lexparser/ArabicTreebankParserParams$AnnotatePunctuationFunction2/apply:
edu.stanford.nlp.parser.lexparser.ArabicTreebankParserParams$AnnotatePunctuationFunction2:

#edu/stanford/nlp/parser/lexparser/ArabicTreebankParserParams$AddRelativeNodeRegexFunction/apply:
edu.stanford.nlp.parser.lexparser.ArabicTreebankParserParams$AddRelativeNodeRegexFunction:
edu.stanford.nlp.parser.lexparser.ItalianTreebankParserParams$ItalianSubcategoryStripper:

#edu/stanford/nlp/parser/lexparser/TueBaDZParserParams/lex:

#edu/stanford/nlp/parser/lexparser/TueBaDZParserParams/setOptionFlag:

#edu/stanford/nlp/parser/lexparser/TueBaDZParserParams/transformTree:
Warning: Method:edu.stanford.nlp.parser.lexparser.TueBaDZParserParams.leftPhrasal has incoming edges.

#edu/stanford/nlp/parser/lexparser/TueBaDZParserParams/childBasicCats:

#edu/stanford/nlp/parser/lexparser/TueBaDZParserParams/containsV:
edu.stanford.nlp.parser.lexparser.TueBaDZParserParams:
edu.stanford.nlp.parser.lexparser.TagProjection:

#edu/stanford/nlp/parser/lexparser/ChineseWordFeatureExtractor/setFeatureLevel:

#edu/stanford/nlp/parser/lexparser/ChineseWordFeatureExtractor/train:

#edu/stanford/nlp/parser/lexparser/ChineseWordFeatureExtractor/train:

#edu/stanford/nlp/parser/lexparser/ChineseWordFeatureExtractor/loadFeatures:

#edu/stanford/nlp/parser/lexparser/ChineseWordFeatureExtractor/applyFeatureCountThreshold:

#edu/stanford/nlp/parser/lexparser/ChineseWordFeatureExtractor/makeFeatures:
edu.stanford.nlp.parser.lexparser.ChineseWordFeatureExtractor:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser/getCoreLabel:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser/oPossible:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser/iPossible:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser/buildOFilter:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser/validateBinarizedTree:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser/scoreNonBinarizedTree:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser/scoreBinarizedTree:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser/parse:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser/parse:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser/initializePossibles:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser/doOutsideScores:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser/doInsideScores:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser/doInsideChartCell:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser/initializeChart:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser/initializeChart:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser/hasParse:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser/matches:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser/getBestScore:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser/getBestParse:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser/extractBestParse:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser/extractBestParses:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser/getKBestParses:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser/getTree:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser/getBackwardsStar:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser/getCandidates:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser/lazyKthBest:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser/lazyNext:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser/getBestParses:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser/setConstraints:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser/<init>:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser/nudgeDownArraySize:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser/considerCreatingArrays:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser/createArrays:
edu.stanford.nlp.parser.lexparser.ExhaustivePCFGParser:

#edu/stanford/nlp/parser/lexparser/AbstractTreebankParserParams$RemoveGFSubcategoryStripper/transformTree:
edu.stanford.nlp.parser.lexparser.AbstractTreebankParserParams$RemoveGFSubcategoryStripper:

#edu/stanford/nlp/parser/lexparser/Item/score:
edu.stanford.nlp.parser.lexparser.Item:

#edu/stanford/nlp/parser/lexparser/AddTaggerToParser/main:
edu.stanford.nlp.parser.lexparser.AddTaggerToParser:

#edu/stanford/nlp/parser/lexparser/FastFactoredParser/hasParse:

#edu/stanford/nlp/parser/lexparser/FastFactoredParser/getKGoodParses:

#edu/stanford/nlp/parser/lexparser/FastFactoredParser/parse:
edu.stanford.nlp.parser.lexparser.FastFactoredParser:

#edu/stanford/nlp/parser/lexparser/ArabicTreebankParserParams$AddEquivalencedNodeFunction/apply:
edu.stanford.nlp.parser.lexparser.ArabicTreebankParserParams$AddEquivalencedNodeFunction:

#edu/stanford/nlp/parser/lexparser/HookChart/registerEdgeIndexes:

#edu/stanford/nlp/parser/lexparser/HookChart/registerRealEdge:

#edu/stanford/nlp/parser/lexparser/HookChart/getRealEdgesWithL:

#edu/stanford/nlp/parser/lexparser/HookChart/getRealEdgesWithR:

#edu/stanford/nlp/parser/lexparser/HookChart/getPreHooks:

#edu/stanford/nlp/parser/lexparser/HookChart/getPostHooks:

#edu/stanford/nlp/parser/lexparser/HookChart/getEdges:

#edu/stanford/nlp/parser/lexparser/HookChart/insert:

#edu/stanford/nlp/parser/lexparser/HookChart/addEdge:

#edu/stanford/nlp/parser/lexparser/HookChart/addHook:
edu.stanford.nlp.parser.lexparser.HookChart:

#edu/stanford/nlp/parser/lexparser/FactoredParser/main:

#edu/stanford/nlp/parser/lexparser/FactoredParser/cleanTags:

#edu/stanford/nlp/parser/lexparser/FactoredParser/wordify:
edu.stanford.nlp.parser.lexparser.FactoredParser:

#edu/stanford/nlp/parser/lexparser/TreeAnnotator/transformTree:

#edu/stanford/nlp/parser/lexparser/TreeAnnotator/transformTreeHelper:

#edu/stanford/nlp/parser/lexparser/TreeAnnotator/listBasicCategories:

#edu/stanford/nlp/parser/lexparser/TreeAnnotator/rightRec:
Warning: Method:edu.stanford.nlp.parser.lexparser.TreeAnnotator.leftRec has incoming edges.

#edu/stanford/nlp/parser/lexparser/TreeAnnotator/markStrahler:
edu.stanford.nlp.parser.lexparser.TreeAnnotator:

#edu/stanford/nlp/parser/lexparser/TreeAnnotatorAndBinarizer/<init>:

#edu/stanford/nlp/parser/lexparser/TreeAnnotatorAndBinarizer/dumpStats:

#edu/stanford/nlp/parser/lexparser/TreeAnnotatorAndBinarizer/addRoot:

#edu/stanford/nlp/parser/lexparser/TreeAnnotatorAndBinarizer/transformTree:

#edu/stanford/nlp/parser/lexparser/TreeAnnotatorAndBinarizer/printRuleCounts:

#edu/stanford/nlp/parser/lexparser/TreeAnnotatorAndBinarizer/printStateCounts:

#edu/stanford/nlp/parser/lexparser/TreeAnnotatorAndBinarizer/numSubArgs:

#edu/stanford/nlp/parser/lexparser/TreeAnnotatorAndBinarizer/removeDeleteSplittersFromSplitters:

#edu/stanford/nlp/parser/lexparser/TreeAnnotatorAndBinarizer/getAnnotatedBinaryTreebankFromTreebank:

#edu/stanford/nlp/parser/lexparser/TreeAnnotatorAndBinarizer/main:
edu.stanford.nlp.parser.lexparser.TreeAnnotatorAndBinarizer:
edu.stanford.nlp.parser.lexparser.SpanishTreebankParserParams$MarkConjTypeFunction:
edu.stanford.nlp.parser.lexparser.RerankerQuery:

#edu/stanford/nlp/parser/lexparser/FrenchTreebankParserParams/headFinder:

#edu/stanford/nlp/parser/lexparser/FrenchTreebankParserParams/setHeadFinder:

#edu/stanford/nlp/parser/lexparser/FrenchTreebankParserParams/lex:

#edu/stanford/nlp/parser/lexparser/FrenchTreebankParserParams/treeReaderFactory:

#edu/stanford/nlp/parser/lexparser/FrenchTreebankParserParams/transformTree:

#edu/stanford/nlp/parser/lexparser/FrenchTreebankParserParams/loadMWMap:

#edu/stanford/nlp/parser/lexparser/FrenchTreebankParserParams/setupMorphoFeatures:

#edu/stanford/nlp/parser/lexparser/FrenchTreebankParserParams/setOptionFlag:
edu.stanford.nlp.parser.lexparser.FrenchTreebankParserParams:

#edu/stanford/nlp/parser/lexparser/UnknownGTTrainer/train:

#edu/stanford/nlp/parser/lexparser/UnknownGTTrainer/train:

#edu/stanford/nlp/parser/lexparser/UnknownGTTrainer/finishTraining:
edu.stanford.nlp.parser.lexparser.UnknownGTTrainer:

#edu/stanford/nlp/parser/lexparser/CollinsPuncTransformer/isPunc:

#edu/stanford/nlp/parser/lexparser/CollinsPuncTransformer/preTermHelper:

#edu/stanford/nlp/parser/lexparser/CollinsPuncTransformer/transformRoot:

#edu/stanford/nlp/parser/lexparser/CollinsPuncTransformer/transformNode:
edu.stanford.nlp.parser.lexparser.CollinsPuncTransformer:
edu.stanford.nlp.parser.lexparser.WordFeatureExtractor:

#edu/stanford/nlp/parser/lexparser/TregexPoweredTreebankParserParams/compileAnnotations:

#edu/stanford/nlp/parser/lexparser/TregexPoweredTreebankParserParams/addFeature:

#edu/stanford/nlp/parser/lexparser/TregexPoweredTreebankParserParams/transformTree:

#edu/stanford/nlp/parser/lexparser/TregexPoweredTreebankParserParams/getAnnotationString:

#edu/stanford/nlp/parser/lexparser/TregexPoweredTreebankParserParams/display:
edu.stanford.nlp.parser.lexparser.TregexPoweredTreebankParserParams:

#edu/stanford/nlp/parser/lexparser/ExhaustiveDependencyParser/oPossible:

#edu/stanford/nlp/parser/lexparser/ExhaustiveDependencyParser/iPossible:

#edu/stanford/nlp/parser/lexparser/ExhaustiveDependencyParser/parse:

#edu/stanford/nlp/parser/lexparser/ExhaustiveDependencyParser/hasParse:

#edu/stanford/nlp/parser/lexparser/ExhaustiveDependencyParser/getBestScore:

#edu/stanford/nlp/parser/lexparser/ExhaustiveDependencyParser/displayHeadScores:

#edu/stanford/nlp/parser/lexparser/ExhaustiveDependencyParser/matches:

#edu/stanford/nlp/parser/lexparser/ExhaustiveDependencyParser/extractBestParse:

#edu/stanford/nlp/parser/lexparser/ExhaustiveDependencyParser/flatten:

#edu/stanford/nlp/parser/lexparser/ExhaustiveDependencyParser/getBestParse:
edu.stanford.nlp.parser.lexparser.ExhaustiveDependencyParser:

#edu/stanford/nlp/parser/lexparser/ArabicTreebankParserParams$AddRelativeNodeFunction/apply:

#edu/stanford/nlp/parser/lexparser/ArabicTreebankParserParams$AddRelativeNodeFunction/toString:
edu.stanford.nlp.parser.lexparser.ArabicTreebankParserParams$AddRelativeNodeFunction:

#edu/stanford/nlp/parser/lexparser/TrainOptions/outsideFactor:

#edu/stanford/nlp/parser/lexparser/TrainOptions/compactGrammar:

#edu/stanford/nlp/parser/lexparser/TrainOptions/toString:

#edu/stanford/nlp/parser/lexparser/TrainOptions/printTrainTree:
edu.stanford.nlp.parser.lexparser.TrainOptions:
edu.stanford.nlp.parser.lexparser.BasicCategoryTagProjection:
edu.stanford.nlp.parser.lexparser.GrammarProjection:

#edu/stanford/nlp/parser/lexparser/GrammarCompactionTester/extractPaths:

#edu/stanford/nlp/parser/lexparser/GrammarCompactionTester/runTest:

#edu/stanford/nlp/parser/lexparser/GrammarCompactionTester/translateAndSort:

#edu/stanford/nlp/parser/lexparser/GrammarCompactionTester/changeIfNecessary:

#edu/stanford/nlp/parser/lexparser/GrammarCompactionTester/equalsBinary:

#edu/stanford/nlp/parser/lexparser/GrammarCompactionTester/equalsUnary:

#edu/stanford/nlp/parser/lexparser/GrammarCompactionTester/equalSets:

#edu/stanford/nlp/parser/lexparser/GrammarCompactionTester/numTokens:

#edu/stanford/nlp/parser/lexparser/GrammarCompactionTester/buildAndCompactToyGrammars:

#edu/stanford/nlp/parser/lexparser/GrammarCompactionTester/removeLowCountPaths:

#edu/stanford/nlp/parser/lexparser/GrammarCompactionTester/testGrammarCompaction:
edu.stanford.nlp.parser.lexparser.GrammarCompactionTester:

#edu/stanford/nlp/parser/lexparser/BinaryGrammar/splitRules:

#edu/stanford/nlp/parser/lexparser/BinaryGrammar/scoreRule:

#edu/stanford/nlp/parser/lexparser/BinaryGrammar/ruleIteratorByParent:

#edu/stanford/nlp/parser/lexparser/BinaryGrammar/ruleIteratorByRightChild:

#edu/stanford/nlp/parser/lexparser/BinaryGrammar/ruleIteratorByLeftChild:

#edu/stanford/nlp/parser/lexparser/BinaryGrammar/ruleListByParent:

#edu/stanford/nlp/parser/lexparser/BinaryGrammar/ruleListByRightChild:

#edu/stanford/nlp/parser/lexparser/BinaryGrammar/ruleListByLeftChild:

#edu/stanford/nlp/parser/lexparser/BinaryGrammar/readObject:

#edu/stanford/nlp/parser/lexparser/BinaryGrammar/init:

#edu/stanford/nlp/parser/lexparser/BinaryGrammar/readData:

#edu/stanford/nlp/parser/lexparser/BinaryGrammar/writeData:
edu.stanford.nlp.parser.lexparser.BinaryGrammar:

#edu/stanford/nlp/parser/lexparser/SpanishUnknownWordModel/score:

#edu/stanford/nlp/parser/lexparser/SpanishUnknownWordModel/getSignature:

#edu/stanford/nlp/parser/lexparser/SpanishUnknownWordModel/isUpperCase:
edu.stanford.nlp.parser.lexparser.SpanishUnknownWordModel:

#edu/stanford/nlp/parser/lexparser/LinearGrammarSmoother/apply:

#edu/stanford/nlp/parser/lexparser/LinearGrammarSmoother/postBasicCategoryIndex:

#edu/stanford/nlp/parser/lexparser/LinearGrammarSmoother/basicCategory:
edu.stanford.nlp.parser.lexparser.LinearGrammarSmoother:

#edu/stanford/nlp/parser/lexparser/TregexPoweredTreebankParserParams$AnnotateHeadFunction/apply:
edu.stanford.nlp.parser.lexparser.TregexPoweredTreebankParserParams$AnnotateHeadFunction:

#edu/stanford/nlp/parser/lexparser/RerankingParserQuery/parse:

#edu/stanford/nlp/parser/lexparser/RerankingParserQuery/parseAndReport:

#edu/stanford/nlp/parser/lexparser/RerankingParserQuery/rerank:

#edu/stanford/nlp/parser/lexparser/RerankingParserQuery/getBestParse:

#edu/stanford/nlp/parser/lexparser/RerankingParserQuery/getPCFGScore:

#edu/stanford/nlp/parser/lexparser/RerankingParserQuery/getBestPCFGParses:

#edu/stanford/nlp/parser/lexparser/RerankingParserQuery/getKBestPCFGParses:
edu.stanford.nlp.parser.lexparser.RerankingParserQuery:

#edu/stanford/nlp/parser/lexparser/BaseUnknownWordModelTrainer/initializeTraining:

#edu/stanford/nlp/parser/lexparser/BaseUnknownWordModelTrainer/train:

#edu/stanford/nlp/parser/lexparser/BaseUnknownWordModelTrainer/finishTraining:

#edu/stanford/nlp/parser/lexparser/BaseUnknownWordModelTrainer/buildUWM:
edu.stanford.nlp.parser.lexparser.BaseUnknownWordModelTrainer:

#edu/stanford/nlp/parser/lexparser/RandomWalk/score:

#edu/stanford/nlp/parser/lexparser/RandomWalk/step:

#edu/stanford/nlp/parser/lexparser/RandomWalk/train:

#edu/stanford/nlp/parser/lexparser/RandomWalk/<init>:
edu.stanford.nlp.parser.lexparser.RandomWalk:
edu.stanford.nlp.parser.lexparser.FrenchTreebankParserParams$AnnotatePunctuationFunction:

#edu/stanford/nlp/parser/lexparser/ParseFiles/<init>:

#edu/stanford/nlp/parser/lexparser/ParseFiles/parseFiles:

#edu/stanford/nlp/parser/lexparser/ParseFiles/processResults:
edu.stanford.nlp.parser.lexparser.ParseFiles:

#edu/stanford/nlp/parser/lexparser/FrenchUnknownWordModelTrainer/train:

#edu/stanford/nlp/parser/lexparser/FrenchUnknownWordModelTrainer/finishTraining:
edu.stanford.nlp.parser.lexparser.FrenchUnknownWordModelTrainer:

#edu/stanford/nlp/parser/lexparser/AbstractDependencyGrammar/tagBin:

#edu/stanford/nlp/parser/lexparser/AbstractDependencyGrammar/rootTW:

#edu/stanford/nlp/parser/lexparser/AbstractDependencyGrammar/valenceBin:

#edu/stanford/nlp/parser/lexparser/AbstractDependencyGrammar/numDistBins:

#edu/stanford/nlp/parser/lexparser/AbstractDependencyGrammar/distanceBin:

#edu/stanford/nlp/parser/lexparser/AbstractDependencyGrammar/regDistanceBin:

#edu/stanford/nlp/parser/lexparser/AbstractDependencyGrammar/coarseDistanceBin:

#edu/stanford/nlp/parser/lexparser/AbstractDependencyGrammar/setCoarseDistanceBins:

#edu/stanford/nlp/parser/lexparser/AbstractDependencyGrammar/setRegDistanceBins:

#edu/stanford/nlp/parser/lexparser/AbstractDependencyGrammar/initTagBins:

#edu/stanford/nlp/parser/lexparser/AbstractDependencyGrammar/intern:
edu.stanford.nlp.parser.lexparser.AbstractDependencyGrammar:

#edu/stanford/nlp/parser/lexparser/HookChart$ChartIndex/equals:
edu.stanford.nlp.parser.lexparser.HookChart$ChartIndex:

#edu/stanford/nlp/parser/lexparser/BiLexPCFGParser$N5BiLexPCFGParser/relaxTempHook:
edu.stanford.nlp.parser.lexparser.BiLexPCFGParser$N5BiLexPCFGParser:

#edu/stanford/nlp/parser/lexparser/ChineseCharacterBasedLexiconTraining/printStats:

#edu/stanford/nlp/parser/lexparser/ChineseCharacterBasedLexiconTraining/main:
edu.stanford.nlp.parser.lexparser.ChineseCharacterBasedLexiconTraining:

#edu/stanford/nlp/parser/lexparser/ArabicUnknownWordModel/<init>:

#edu/stanford/nlp/parser/lexparser/ArabicUnknownWordModel/score:

#edu/stanford/nlp/parser/lexparser/ArabicUnknownWordModel/getSignature:
edu.stanford.nlp.parser.lexparser.ArabicUnknownWordModel:

#edu/stanford/nlp/parser/lexparser/ArabicUnknownWordSignatures/allDigitPlus:

#edu/stanford/nlp/parser/lexparser/ArabicUnknownWordSignatures/likelyAdjectivalSuffix:

#edu/stanford/nlp/parser/lexparser/ArabicUnknownWordSignatures/pastTenseVerbNumberSuffix:

#edu/stanford/nlp/parser/lexparser/ArabicUnknownWordSignatures/presentTenseVerbNumberSuffix:

#edu/stanford/nlp/parser/lexparser/ArabicUnknownWordSignatures/taaMarbuuTaSuffix:

#edu/stanford/nlp/parser/lexparser/ArabicUnknownWordSignatures/abstractionNounSuffix:

#edu/stanford/nlp/parser/lexparser/ArabicUnknownWordSignatures/masdarPrefix:
edu.stanford.nlp.parser.lexparser.ArabicUnknownWordSignatures:
edu.stanford.nlp.parser.lexparser.NullGrammarProjection:

#edu/stanford/nlp/parser/lexparser/SpanishTreebankParserParams/lex:

#edu/stanford/nlp/parser/lexparser/SpanishTreebankParserParams/setOptionFlag:
edu.stanford.nlp.parser.lexparser.SpanishTreebankParserParams:

#edu/stanford/nlp/parser/lexparser/ArabicTreebankParserParams/headFinder:

#edu/stanford/nlp/parser/lexparser/ArabicTreebankParserParams/lex:

#edu/stanford/nlp/parser/lexparser/ArabicTreebankParserParams/collinizer:

#edu/stanford/nlp/parser/lexparser/ArabicTreebankParserParams/transformTree:

#edu/stanford/nlp/parser/lexparser/ArabicTreebankParserParams/setHeadFinder:

#edu/stanford/nlp/parser/lexparser/ArabicTreebankParserParams/setupMorphoFeatures:

#edu/stanford/nlp/parser/lexparser/ArabicTreebankParserParams/removeBaselineFeature:

#edu/stanford/nlp/parser/lexparser/ArabicTreebankParserParams/setOptionFlag:

#edu/stanford/nlp/parser/lexparser/ArabicTreebankParserParams/main:
edu.stanford.nlp.parser.lexparser.ArabicTreebankParserParams:

#edu/stanford/nlp/parser/lexparser/FrenchTreebankParserParams$AddPOSSequenceFunction/apply:
edu.stanford.nlp.parser.lexparser.FrenchTreebankParserParams$AddPOSSequenceFunction:

#edu/stanford/nlp/parser/lexparser/EnglishTreebankParserParams/typedDependencyHeadFinder:

#edu/stanford/nlp/parser/lexparser/EnglishTreebankParserParams/collinizer:

#edu/stanford/nlp/parser/lexparser/EnglishTreebankParserParams/collinizerEvalb:

#edu/stanford/nlp/parser/lexparser/EnglishTreebankParserParams/lex:

#edu/stanford/nlp/parser/lexparser/EnglishTreebankParserParams/sisterSplitters:

#edu/stanford/nlp/parser/lexparser/EnglishTreebankParserParams/transformTree:

#edu/stanford/nlp/parser/lexparser/EnglishTreebankParserParams/containsVP:

#edu/stanford/nlp/parser/lexparser/EnglishTreebankParserParams/firstOfSeveralNNP:

#edu/stanford/nlp/parser/lexparser/EnglishTreebankParserParams/lastOfSeveralNNP:

#edu/stanford/nlp/parser/lexparser/EnglishTreebankParserParams/deduceTag:
Warning: Method:edu.stanford.nlp.parser.lexparser.EnglishTreebankParserParams.rightPhrasal has incoming edges.

#edu/stanford/nlp/parser/lexparser/EnglishTreebankParserParams/subCatify:

#edu/stanford/nlp/parser/lexparser/EnglishTreebankParserParams/ditrans:

#edu/stanford/nlp/parser/lexparser/EnglishTreebankParserParams/changeBaseCat:

#edu/stanford/nlp/parser/lexparser/EnglishTreebankParserParams/hasClausalV:

#edu/stanford/nlp/parser/lexparser/EnglishTreebankParserParams/hasV:

#edu/stanford/nlp/parser/lexparser/EnglishTreebankParserParams/hasI:

#edu/stanford/nlp/parser/lexparser/EnglishTreebankParserParams/hasC:

#edu/stanford/nlp/parser/lexparser/EnglishTreebankParserParams/setOptionFlag:

#edu/stanford/nlp/parser/lexparser/EnglishTreebankParserParams/defaultTestSentence:

#edu/stanford/nlp/parser/lexparser/EnglishTreebankParserParams/readGrammaticalStructureFromFile:

#edu/stanford/nlp/parser/lexparser/EnglishTreebankParserParams/getGrammaticalStructure:

#edu/stanford/nlp/parser/lexparser/EnglishTreebankParserParams/lambda$treeReaderFactory$0:
edu.stanford.nlp.parser.lexparser.EnglishTreebankParserParams:

#edu/stanford/nlp/parser/lexparser/SisterAnnotationStats/recurse:

#edu/stanford/nlp/parser/lexparser/SisterAnnotationStats/leftSisterLabels:

#edu/stanford/nlp/parser/lexparser/SisterAnnotationStats/rightSisterLabels:

#edu/stanford/nlp/parser/lexparser/SisterAnnotationStats/kidLabels:

#edu/stanford/nlp/parser/lexparser/SisterAnnotationStats/sisterCounters:

#edu/stanford/nlp/parser/lexparser/SisterAnnotationStats/sideCounters:
Warning: Method:edu.stanford.nlp.parser.lexparser.SisterAnnotationStats.printStats has auto edges.

#edu/stanford/nlp/parser/lexparser/SisterAnnotationStats/main:
edu.stanford.nlp.parser.lexparser.SisterAnnotationStats:
edu.stanford.nlp.parser.lexparser.TregexPoweredTreebankParserParams$SimpleStringFunction:

#edu/stanford/nlp/parser/lexparser/ChineseUnknownWordModelTrainer/initializeTraining:

#edu/stanford/nlp/parser/lexparser/ChineseUnknownWordModelTrainer/train:

#edu/stanford/nlp/parser/lexparser/ChineseUnknownWordModelTrainer/finishTraining:
edu.stanford.nlp.parser.lexparser.ChineseUnknownWordModelTrainer:

#edu/stanford/nlp/parser/lexparser/ChineseCharacterBasedLexicon$Symbol/<init>:

#edu/stanford/nlp/parser/lexparser/ChineseCharacterBasedLexicon$Symbol/cannonicalSymbol:

#edu/stanford/nlp/parser/lexparser/ChineseCharacterBasedLexicon$Symbol/getCh:

#edu/stanford/nlp/parser/lexparser/ChineseCharacterBasedLexicon$Symbol/toString:

#edu/stanford/nlp/parser/lexparser/ChineseCharacterBasedLexicon$Symbol/readResolve:

#edu/stanford/nlp/parser/lexparser/ChineseCharacterBasedLexicon$Symbol/equals:

#edu/stanford/nlp/parser/lexparser/ChineseCharacterBasedLexicon$Symbol/hashCode:
edu.stanford.nlp.parser.lexparser.ChineseCharacterBasedLexicon$Symbol:

#edu/stanford/nlp/parser/lexparser/EnglishTreebankParserParams$EnglishSubcategoryStripper/transformTree:
edu.stanford.nlp.parser.lexparser.EnglishTreebankParserParams$EnglishSubcategoryStripper:

#edu/stanford/nlp/parser/lexparser/FrenchTreebankParserParams$AddRelativeNodeFunction/apply:

#edu/stanford/nlp/parser/lexparser/FrenchTreebankParserParams$AddRelativeNodeFunction/toString:
edu.stanford.nlp.parser.lexparser.FrenchTreebankParserParams$AddRelativeNodeFunction:
edu.stanford.nlp.parser.lexparser.GenericTreebankParserParams:
edu.stanford.nlp.parser.lexparser.TrainOptions$TransformMatrixType:

#edu/stanford/nlp/parser/lexparser/FrenchUnknownWordModel/score:

#edu/stanford/nlp/parser/lexparser/FrenchUnknownWordModel/getSignature:
edu.stanford.nlp.parser.lexparser.FrenchUnknownWordModel:

#edu/stanford/nlp/parser/lexparser/NegraPennCollinizer/transformTree:
edu.stanford.nlp.parser.lexparser.NegraPennCollinizer:

#edu/stanford/nlp/parser/lexparser/IntTaggedWord/wordString:

#edu/stanford/nlp/parser/lexparser/IntTaggedWord/tagString:

#edu/stanford/nlp/parser/lexparser/IntTaggedWord/equals:

#edu/stanford/nlp/parser/lexparser/IntTaggedWord/compareTo:

#edu/stanford/nlp/parser/lexparser/IntTaggedWord/toString:

#edu/stanford/nlp/parser/lexparser/IntTaggedWord/<init>:
edu.stanford.nlp.parser.lexparser.IntTaggedWord:

#edu/stanford/nlp/parser/lexparser/TwinScorer/oPossible:

#edu/stanford/nlp/parser/lexparser/TwinScorer/iPossible:

#edu/stanford/nlp/parser/lexparser/TwinScorer/parse:
edu.stanford.nlp.parser.lexparser.TwinScorer:

#edu/stanford/nlp/parser/lexparser/MLEDependencyGrammarExtractor/tallyRoot:

#edu/stanford/nlp/parser/lexparser/MLEDependencyGrammarExtractor/formResult:
edu.stanford.nlp.parser.lexparser.MLEDependencyGrammarExtractor:

#edu/stanford/nlp/parser/lexparser/UnaryRule/equals:

#edu/stanford/nlp/parser/lexparser/UnaryRule/compareTo:

#edu/stanford/nlp/parser/lexparser/UnaryRule/toStringNoScore:
edu.stanford.nlp.parser.lexparser.UnaryRule:

#edu/stanford/nlp/parser/lexparser/ArabicTreebankParserParams$ArabicSubcategoryStripper/transformTree:
edu.stanford.nlp.parser.lexparser.ArabicTreebankParserParams$ArabicSubcategoryStripper:
edu.stanford.nlp.parser.lexparser.ProjectionScorer:

#edu/stanford/nlp/parser/lexparser/Hook/isPreHook:

#edu/stanford/nlp/parser/lexparser/Hook/isPostHook:

#edu/stanford/nlp/parser/lexparser/Hook/toString:

#edu/stanford/nlp/parser/lexparser/Hook/equals:
edu.stanford.nlp.parser.lexparser.Hook:

#edu/stanford/nlp/parser/lexparser/BiLexPCFGParser/better:

#edu/stanford/nlp/parser/lexparser/BiLexPCFGParser/getBestScore:

#edu/stanford/nlp/parser/lexparser/BiLexPCFGParser/extractParse:

#edu/stanford/nlp/parser/lexparser/BiLexPCFGParser/hasParse:

#edu/stanford/nlp/parser/lexparser/BiLexPCFGParser/getKGoodParses:

#edu/stanford/nlp/parser/lexparser/BiLexPCFGParser/combine:

#edu/stanford/nlp/parser/lexparser/BiLexPCFGParser/relaxTempEdge:

#edu/stanford/nlp/parser/lexparser/BiLexPCFGParser/discoverHook:

#edu/stanford/nlp/parser/lexparser/BiLexPCFGParser/buildOScore:

#edu/stanford/nlp/parser/lexparser/BiLexPCFGParser/projectHooks:

#edu/stanford/nlp/parser/lexparser/BiLexPCFGParser/triggerHooks:

#edu/stanford/nlp/parser/lexparser/BiLexPCFGParser/triggerAllHooks:

#edu/stanford/nlp/parser/lexparser/BiLexPCFGParser/relaxTempHook:

#edu/stanford/nlp/parser/lexparser/BiLexPCFGParser/projectUnaries:

#edu/stanford/nlp/parser/lexparser/BiLexPCFGParser/processEdge:

#edu/stanford/nlp/parser/lexparser/BiLexPCFGParser/processHook:

#edu/stanford/nlp/parser/lexparser/BiLexPCFGParser/processItem:

#edu/stanford/nlp/parser/lexparser/BiLexPCFGParser/discoverItem:

#edu/stanford/nlp/parser/lexparser/BiLexPCFGParser/makeInitialItems:

#edu/stanford/nlp/parser/lexparser/BiLexPCFGParser/initialize:

#edu/stanford/nlp/parser/lexparser/BiLexPCFGParser/parse:

#edu/stanford/nlp/parser/lexparser/BiLexPCFGParser/postMortem:
edu.stanford.nlp.parser.lexparser.BiLexPCFGParser:

#edu/stanford/nlp/parser/lexparser/Options$LexOptions/readData:
edu.stanford.nlp.parser.lexparser.Options$LexOptions:
edu.stanford.nlp.parser.lexparser.Lexicon:

#edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor/DEBUG:

#edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor/neginfDoubles:

#edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor/outputTransitions:

#edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor/outputBetas:

#edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor/state:

#edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor/countOriginalStates:

#edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor/countOriginalStates:

#edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor/initialBetasAndLexicon:

#edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor/initialBetasAndLexicon:

#edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor/splitStateCounts:

#edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor/splitBetas:

#edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor/recalculateBetas:

#edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor/useNewBetas:

#edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor/recalculateTemporaryBetas:

#edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor/testConvergence:

#edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor/recalculateTemporaryBetas:

#edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor/recalculateTemporaryBetas:

#edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor/rescaleTemporaryBetas:

#edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor/recountTree:

#edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor/recountWeights:

#edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor/recurseOutside:

#edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor/recountOutside:

#edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor/recountOutside:

#edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor/recountInside:

#edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor/mergeStates:

#edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor/recalculateMergedBetas:

#edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor/mergeTransitions:

#edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor/buildMergeCorrespondence:

#edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor/countMergeEffects:

#edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor/countMergeEffects:

#edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor/buildStateIndex:

#edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor/buildGrammars:

#edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor/saveTrees:

#edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor/extract:
edu.stanford.nlp.parser.lexparser.SplittingGrammarExtractor:

#edu/stanford/nlp/parser/lexparser/AbstractUnknownWordModelTrainer/train:

#edu/stanford/nlp/parser/lexparser/AbstractUnknownWordModelTrainer/train:
edu.stanford.nlp.parser.lexparser.AbstractUnknownWordModelTrainer:

#edu/stanford/nlp/parser/lexparser/LatticeXMLReader/load:

#edu/stanford/nlp/parser/lexparser/LatticeXMLReader/load:

#edu/stanford/nlp/parser/lexparser/LatticeXMLReader/main:
edu.stanford.nlp.parser.lexparser.LatticeXMLReader:

#edu/stanford/nlp/parser/lexparser/ChineseLexiconAndWordSegmenter/train:

#edu/stanford/nlp/parser/lexparser/ChineseLexiconAndWordSegmenter/numSubArgs:

#edu/stanford/nlp/parser/lexparser/ChineseLexiconAndWordSegmenter/getSegmenterDataFromTreebank:

#edu/stanford/nlp/parser/lexparser/ChineseLexiconAndWordSegmenter/printArgs:

#edu/stanford/nlp/parser/lexparser/ChineseLexiconAndWordSegmenter/saveSegmenterDataToText:

#edu/stanford/nlp/parser/lexparser/ChineseLexiconAndWordSegmenter/makeTreebank:
Warning: Method:edu.stanford.nlp.parser.lexparser.ChineseLexiconAndWordSegmenter.getSegmenterDataFromFile has auto edges.

#edu/stanford/nlp/parser/lexparser/ChineseLexiconAndWordSegmenter/getSegmenterDataFromSerializedFile:
Warning: Method:edu.stanford.nlp.parser.lexparser.ChineseLexiconAndWordSegmenter.main has auto edges.
edu.stanford.nlp.parser.lexparser.ChineseLexiconAndWordSegmenter:
edu.stanford.nlp.parser.lexparser.Reranker:

#edu/stanford/nlp/parser/lexparser/AbstractTreebankParserParams$SubcategoryStripper/transformTree:
edu.stanford.nlp.parser.lexparser.AbstractTreebankParserParams$SubcategoryStripper:

#edu/stanford/nlp/parser/lexparser/HungarianTreebankParserParams$HungarianSubcategoryStripper/normalizeNonterminal:
edu.stanford.nlp.parser.lexparser.HungarianTreebankParserParams$HungarianSubcategoryStripper:

#edu/stanford/nlp/parser/lexparser/Interner/intern:
edu.stanford.nlp.parser.lexparser.Interner:

#edu/stanford/nlp/parser/lexparser/HookChart$WeakChartIndex/equals:
edu.stanford.nlp.parser.lexparser.HookChart$WeakChartIndex:

#edu/stanford/nlp/parser/lexparser/Debinarizer/transformTreeHelper:

#edu/stanford/nlp/parser/lexparser/Debinarizer/transformTree:
edu.stanford.nlp.parser.lexparser.Debinarizer:

#edu/stanford/nlp/parser/lexparser/ChineseMarkovWordSegmenter/train:

#edu/stanford/nlp/parser/lexparser/ChineseMarkovWordSegmenter/train:

#edu/stanford/nlp/parser/lexparser/ChineseMarkovWordSegmenter/finishTraining:

#edu/stanford/nlp/parser/lexparser/ChineseMarkovWordSegmenter/basicSegmentWords:

#edu/stanford/nlp/parser/lexparser/ChineseMarkovWordSegmenter/segmentWordsWithMarkov:

#edu/stanford/nlp/parser/lexparser/ChineseMarkovWordSegmenter/getSegmentedWordLengthDistribution:
edu.stanford.nlp.parser.lexparser.ChineseMarkovWordSegmenter:
edu.stanford.nlp.parser.lexparser.Rule:

#edu/stanford/nlp/parser/lexparser/GermanUnknownWordModel/score:
edu.stanford.nlp.parser.lexparser.GermanUnknownWordModel:
edu.stanford.nlp.parser.lexparser.AbstractTreebankParserParams$UnorderedTypedDependencyTyper:

#edu/stanford/nlp/parser/lexparser/PathExtractor/getList:

#edu/stanford/nlp/parser/lexparser/PathExtractor/tallyInternalNode:
edu.stanford.nlp.parser.lexparser.PathExtractor:

#edu/stanford/nlp/parser/lexparser/BoundaryRemover/transformTree:
edu.stanford.nlp.parser.lexparser.BoundaryRemover:

#edu/stanford/nlp/parser/lexparser/PostSplitter/transformTreeHelper:

#edu/stanford/nlp/parser/lexparser/PostSplitter/dumpStats:
edu.stanford.nlp.parser.lexparser.PostSplitter:

#edu/stanford/nlp/parser/lexparser/ArabicUnknownWordModelTrainer/train:

#edu/stanford/nlp/parser/lexparser/ArabicUnknownWordModelTrainer/finishTraining:
edu.stanford.nlp.parser.lexparser.ArabicUnknownWordModelTrainer:

#edu/stanford/nlp/parser/lexparser/ChineseTreebankParserParams$1/formResult:
edu.stanford.nlp.parser.lexparser.ChineseTreebankParserParams$1:

#edu/stanford/nlp/parser/lexparser/ChineseCharacterBasedLexicon/train:

#edu/stanford/nlp/parser/lexparser/ChineseCharacterBasedLexicon/train:

#edu/stanford/nlp/parser/lexparser/ChineseCharacterBasedLexicon/finishTraining:

#edu/stanford/nlp/parser/lexparser/ChineseCharacterBasedLexicon/isForeign:

#edu/stanford/nlp/parser/lexparser/ChineseCharacterBasedLexicon/unknownCharClass:

#edu/stanford/nlp/parser/lexparser/ChineseCharacterBasedLexicon/score:

#edu/stanford/nlp/parser/lexparser/ChineseCharacterBasedLexicon/getBackedOffDist:

#edu/stanford/nlp/parser/lexparser/ChineseCharacterBasedLexicon/sampleFrom:

#edu/stanford/nlp/parser/lexparser/ChineseCharacterBasedLexicon/getWordLengthDistribution:

#edu/stanford/nlp/parser/lexparser/ChineseCharacterBasedLexicon/tagSet:
edu.stanford.nlp.parser.lexparser.ChineseCharacterBasedLexicon:

#edu/stanford/nlp/parser/lexparser/FactoredLexicon/ruleIteratorByWord:

#edu/stanford/nlp/parser/lexparser/FactoredLexicon/score:

#edu/stanford/nlp/parser/lexparser/FactoredLexicon/probWordTag:

#edu/stanford/nlp/parser/lexparser/FactoredLexicon/probLemmaTag:

#edu/stanford/nlp/parser/lexparser/FactoredLexicon/probMorphTag:

#edu/stanford/nlp/parser/lexparser/FactoredLexicon/train:

#edu/stanford/nlp/parser/lexparser/FactoredLexicon/initRulesWithWord:

#edu/stanford/nlp/parser/lexparser/FactoredLexicon/treebankToLexiconEvents:

#edu/stanford/nlp/parser/lexparser/FactoredLexicon/getTuningSet:

#edu/stanford/nlp/parser/lexparser/FactoredLexicon/getOptions:

#edu/stanford/nlp/parser/lexparser/FactoredLexicon/main:
edu.stanford.nlp.parser.lexparser.FactoredLexicon:

#edu/stanford/nlp/parser/lexparser/OutsideRuleFilter/reverse:

#edu/stanford/nlp/parser/lexparser/OutsideRuleFilter/buildFA:

#edu/stanford/nlp/parser/lexparser/OutsideRuleFilter/init:

#edu/stanford/nlp/parser/lexparser/OutsideRuleFilter/advanceRight:

#edu/stanford/nlp/parser/lexparser/OutsideRuleFilter/leftAccepting:

#edu/stanford/nlp/parser/lexparser/OutsideRuleFilter/advanceLeft:

#edu/stanford/nlp/parser/lexparser/OutsideRuleFilter/rightAccepting:

#edu/stanford/nlp/parser/lexparser/OutsideRuleFilter/<init>:
edu.stanford.nlp.parser.lexparser.OutsideRuleFilter:
edu.stanford.nlp.parser.lexparser.FactoredLexiconEvent:
edu.stanford.nlp.parser.lexparser.ArabicTreebankParserParams$SimpleStringFunction:

#edu/stanford/nlp/parser/lexparser/ArabicTreebankParserParams$AddEquivalencedNodeFunctionVar/apply:
edu.stanford.nlp.parser.lexparser.ArabicTreebankParserParams$AddEquivalencedNodeFunctionVar:

#edu/stanford/nlp/parser/lexparser/ExactGrammarCompactor/doCompaction:
edu.stanford.nlp.parser.lexparser.ExactGrammarCompactor:

#edu/stanford/nlp/parser/lexparser/TreeBinarizer/setDoSelectiveSplit:

#edu/stanford/nlp/parser/lexparser/TreeBinarizer/join:

#edu/stanford/nlp/parser/lexparser/TreeBinarizer/localTreeString:

#edu/stanford/nlp/parser/lexparser/TreeBinarizer/isSynthetic:

#edu/stanford/nlp/parser/lexparser/TreeBinarizer/binarizeLocalTree:

#edu/stanford/nlp/parser/lexparser/TreeBinarizer/markovOutsideBinarizeLocalTree:

#edu/stanford/nlp/parser/lexparser/TreeBinarizer/markovInsideBinarizeLocalTreeNew:

#edu/stanford/nlp/parser/lexparser/TreeBinarizer/makeSyntheticLabel:

#edu/stanford/nlp/parser/lexparser/TreeBinarizer/makeSyntheticLabel1:

#edu/stanford/nlp/parser/lexparser/TreeBinarizer/makeSyntheticLabel2:

#edu/stanford/nlp/parser/lexparser/TreeBinarizer/insideBinarizeLocalTree:

#edu/stanford/nlp/parser/lexparser/TreeBinarizer/outsideBinarizeLocalTree:

#edu/stanford/nlp/parser/lexparser/TreeBinarizer/transformTree:

#edu/stanford/nlp/parser/lexparser/TreeBinarizer/main:
edu.stanford.nlp.parser.lexparser.TreeBinarizer:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser$Vertex/equals:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser$Vertex/hashCode:
edu.stanford.nlp.parser.lexparser.ExhaustivePCFGParser$Vertex:

#edu/stanford/nlp/parser/lexparser/CNFTransformers$ToCNFTransformer/transformTree:
edu.stanford.nlp.parser.lexparser.CNFTransformers$ToCNFTransformer:
edu.stanford.nlp.parser.lexparser.AbstractTreebankParserParams$UnorderedUntypedDependencyTyper:

#edu/stanford/nlp/parser/lexparser/SplittingGrammarExtractor$1/equals:
edu.stanford.nlp.parser.lexparser.SplittingGrammarExtractor$1:

#edu/stanford/nlp/parser/lexparser/EnglishUnknownWordModel/<init>:

#edu/stanford/nlp/parser/lexparser/EnglishUnknownWordModel/score:

#edu/stanford/nlp/parser/lexparser/EnglishUnknownWordModel/scoreProbTagGivenWordSignature:

#edu/stanford/nlp/parser/lexparser/EnglishUnknownWordModel/getSignature:

#edu/stanford/nlp/parser/lexparser/EnglishUnknownWordModel/getSignature7:

#edu/stanford/nlp/parser/lexparser/EnglishUnknownWordModel/getSignature6:

#edu/stanford/nlp/parser/lexparser/EnglishUnknownWordModel/getSignature5:

#edu/stanford/nlp/parser/lexparser/EnglishUnknownWordModel/getSignature4:

#edu/stanford/nlp/parser/lexparser/EnglishUnknownWordModel/getSignature3:

#edu/stanford/nlp/parser/lexparser/EnglishUnknownWordModel/getSignature2:

#edu/stanford/nlp/parser/lexparser/EnglishUnknownWordModel/getSignature1:

#edu/stanford/nlp/parser/lexparser/EnglishUnknownWordModel/getSignature8:
edu.stanford.nlp.parser.lexparser.EnglishUnknownWordModel:
edu.stanford.nlp.parser.lexparser.TreebankLangParserParams:

#edu/stanford/nlp/parser/lexparser/ChineseUnknownWordModel/<init>:

#edu/stanford/nlp/parser/lexparser/ChineseUnknownWordModel/score:

#edu/stanford/nlp/parser/lexparser/ChineseUnknownWordModel/main:
edu.stanford.nlp.parser.lexparser.ChineseUnknownWordModel:

#edu/stanford/nlp/parser/lexparser/AbstractTreebankParserParams$AnnotatePunctuationFunction/apply:
edu.stanford.nlp.parser.lexparser.AbstractTreebankParserParams$AnnotatePunctuationFunction:

#edu/stanford/nlp/parser/lexparser/StringUnaryRule/equals:

#edu/stanford/nlp/parser/lexparser/StringUnaryRule/hashCode:
edu.stanford.nlp.parser.lexparser.StringUnaryRule:

#edu/stanford/nlp/parser/lexparser/LexicalizedParser/loadModel:

#edu/stanford/nlp/parser/lexparser/LexicalizedParser/loadModel:

#edu/stanford/nlp/parser/lexparser/LexicalizedParser/loadModel:

#edu/stanford/nlp/parser/lexparser/LexicalizedParser/parseStrings:

#edu/stanford/nlp/parser/lexparser/LexicalizedParser/parse:

#edu/stanford/nlp/parser/lexparser/LexicalizedParser/parseMultiple:

#edu/stanford/nlp/parser/lexparser/LexicalizedParser/parseMultiple:

#edu/stanford/nlp/parser/lexparser/LexicalizedParser/parseTree:

#edu/stanford/nlp/parser/lexparser/LexicalizedParser/getExtraEvals:

#edu/stanford/nlp/parser/lexparser/LexicalizedParser/parserQuery:

#edu/stanford/nlp/parser/lexparser/LexicalizedParser/getParserFromFile:

#edu/stanford/nlp/parser/lexparser/LexicalizedParser/makeTreebank:

#edu/stanford/nlp/parser/lexparser/LexicalizedParser/makeSecondaryTreebank:

#edu/stanford/nlp/parser/lexparser/LexicalizedParser/saveParserToTextFile:

#edu/stanford/nlp/parser/lexparser/LexicalizedParser/confirmBeginBlock:

#edu/stanford/nlp/parser/lexparser/LexicalizedParser/getParserFromTextFile:

#edu/stanford/nlp/parser/lexparser/LexicalizedParser/printOptions:

#edu/stanford/nlp/parser/lexparser/LexicalizedParser/buildTrainBinarizer:

#edu/stanford/nlp/parser/lexparser/LexicalizedParser/buildTrainTransformer:

#edu/stanford/nlp/parser/lexparser/LexicalizedParser/getAnnotatedBinaryTreebankFromTreebank:

#edu/stanford/nlp/parser/lexparser/LexicalizedParser/removeDeleteSplittersFromSplitters:

#edu/stanford/nlp/parser/lexparser/LexicalizedParser/getParserFromTreebank:

#edu/stanford/nlp/parser/lexparser/LexicalizedParser/main:
edu.stanford.nlp.parser.lexparser.LexicalizedParser:

#edu/stanford/nlp/parser/lexparser/HTKLatticeReader/readInput:

#edu/stanford/nlp/parser/lexparser/HTKLatticeReader/mergeSimultaneousNodes:

#edu/stanford/nlp/parser/lexparser/HTKLatticeReader/removeEmptyNodes:

#edu/stanford/nlp/parser/lexparser/HTKLatticeReader/buildWordsAtTime:

#edu/stanford/nlp/parser/lexparser/HTKLatticeReader/buildWordsStartAt:

#edu/stanford/nlp/parser/lexparser/HTKLatticeReader/buildWordsEndAt:

#edu/stanford/nlp/parser/lexparser/HTKLatticeReader/removeRedundency:

#edu/stanford/nlp/parser/lexparser/HTKLatticeReader/removeRedundentPair:

#edu/stanford/nlp/parser/lexparser/HTKLatticeReader/changeStartTimes:

#edu/stanford/nlp/parser/lexparser/HTKLatticeReader/changeEndTimes:

#edu/stanford/nlp/parser/lexparser/HTKLatticeReader/removeSilence:

#edu/stanford/nlp/parser/lexparser/HTKLatticeReader/mergeDuplicates:

#edu/stanford/nlp/parser/lexparser/HTKLatticeReader/printWords:

#edu/stanford/nlp/parser/lexparser/HTKLatticeReader/processLattice:

#edu/stanford/nlp/parser/lexparser/HTKLatticeReader/<init>:

#edu/stanford/nlp/parser/lexparser/HTKLatticeReader/getWordsOverSpan:

#edu/stanford/nlp/parser/lexparser/HTKLatticeReader/main:
edu.stanford.nlp.parser.lexparser.HTKLatticeReader:

#edu/stanford/nlp/parser/lexparser/IterativeCKYPCFGParser/doInsideScores:

#edu/stanford/nlp/parser/lexparser/IterativeCKYPCFGParser/doInsideScoresHelper:
edu.stanford.nlp.parser.lexparser.IterativeCKYPCFGParser:

#edu/stanford/nlp/parser/lexparser/GermanUnknownWordModelTrainer/buildUWM:
edu.stanford.nlp.parser.lexparser.GermanUnknownWordModelTrainer:
edu.stanford.nlp.parser.lexparser.LexicalizedParser$1:

#edu/stanford/nlp/parser/lexparser/ChineseTreebankParserParams/headFinder:

#edu/stanford/nlp/parser/lexparser/ChineseTreebankParserParams/typedDependencyHeadFinder:

#edu/stanford/nlp/parser/lexparser/ChineseTreebankParserParams/lex:

#edu/stanford/nlp/parser/lexparser/ChineseTreebankParserParams/diskTreebank:

#edu/stanford/nlp/parser/lexparser/ChineseTreebankParserParams/memoryTreebank:

#edu/stanford/nlp/parser/lexparser/ChineseTreebankParserParams/transformTree:

#edu/stanford/nlp/parser/lexparser/ChineseTreebankParserParams/display:

#edu/stanford/nlp/parser/lexparser/ChineseTreebankParserParams/listBasicCategories:

#edu/stanford/nlp/parser/lexparser/ChineseTreebankParserParams/hasV:

#edu/stanford/nlp/parser/lexparser/ChineseTreebankParserParams/setOptionFlag:

#edu/stanford/nlp/parser/lexparser/ChineseTreebankParserParams/dependencyGrammarExtractor:

#edu/stanford/nlp/parser/lexparser/ChineseTreebankParserParams/readGrammaticalStructureFromFile:

#edu/stanford/nlp/parser/lexparser/ChineseTreebankParserParams/getGrammaticalStructure:

#edu/stanford/nlp/parser/lexparser/ChineseTreebankParserParams/main:
edu.stanford.nlp.parser.lexparser.ChineseTreebankParserParams:

#edu/stanford/nlp/parser/lexparser/BinaryRule/hashCode:

#edu/stanford/nlp/parser/lexparser/BinaryRule/equals:

#edu/stanford/nlp/parser/lexparser/BinaryRule/toStringNoScore:

#edu/stanford/nlp/parser/lexparser/BinaryRule/compareTo:
edu.stanford.nlp.parser.lexparser.BinaryRule:

#edu/stanford/nlp/parser/lexparser/TreeAnnotatorAndBinarizer$TreeNullAnnotator/transformTreeHelper:
edu.stanford.nlp.parser.lexparser.TreeAnnotatorAndBinarizer$TreeNullAnnotator:

#edu/stanford/nlp/parser/lexparser/GrammarCompactor/compactGrammar:

#edu/stanford/nlp/parser/lexparser/GrammarCompactor/computeInputPrior:

#edu/stanford/nlp/parser/lexparser/GrammarCompactor/smartNegate:

#edu/stanford/nlp/parser/lexparser/GrammarCompactor/writeFile:

#edu/stanford/nlp/parser/lexparser/GrammarCompactor/convertGrammarToGraphs:

#edu/stanford/nlp/parser/lexparser/GrammarCompactor/getGraphFromMap:

#edu/stanford/nlp/parser/lexparser/GrammarCompactor/getTopCategoryOfSyntheticState:

#edu/stanford/nlp/parser/lexparser/GrammarCompactor/addOneUnaryRule:

#edu/stanford/nlp/parser/lexparser/GrammarCompactor/addOneBinaryRule:

#edu/stanford/nlp/parser/lexparser/GrammarCompactor/isSyntheticState:

#edu/stanford/nlp/parser/lexparser/GrammarCompactor/convertGraphsToGrammar:
edu.stanford.nlp.parser.lexparser.GrammarCompactor:

#edu/stanford/nlp/parser/lexparser/BaseUnknownWordModel/<init>:

#edu/stanford/nlp/parser/lexparser/BaseUnknownWordModel/score:

#edu/stanford/nlp/parser/lexparser/BaseUnknownWordModel/scoreGT:

#edu/stanford/nlp/parser/lexparser/BaseUnknownWordModel/getSignature:

#edu/stanford/nlp/parser/lexparser/BaseUnknownWordModel/addTagging:
edu.stanford.nlp.parser.lexparser.BaseUnknownWordModel:

#edu/stanford/nlp/parser/lexparser/LatticeEdge/toString:
edu.stanford.nlp.parser.lexparser.LatticeEdge:
edu.stanford.nlp.parser.lexparser.SpanishTreebankParserParams$1:
edu.stanford.nlp.parser.lexparser.MLEDependencyGrammar$EndHead:
edu.stanford.nlp.parser.lexparser.DependencyGrammar:

#edu/stanford/nlp/parser/lexparser/OutsideRuleFilter$FA/input:

#edu/stanford/nlp/parser/lexparser/OutsideRuleFilter$FA/advance:
edu.stanford.nlp.parser.lexparser.OutsideRuleFilter$FA:
edu.stanford.nlp.parser.lexparser.FrenchTreebankParserParams$1:

#edu/stanford/nlp/parser/lexparser/TestTagProjection/project:
edu.stanford.nlp.parser.lexparser.TestTagProjection:

#edu/stanford/nlp/parser/lexparser/BinaryGrammarExtractor/tallyInternalNode:

#edu/stanford/nlp/parser/lexparser/BinaryGrammarExtractor/formResult:
edu.stanford.nlp.parser.lexparser.BinaryGrammarExtractor:

#edu/stanford/nlp/parser/lexparser/MaxMatchSegmenter/train:

#edu/stanford/nlp/parser/lexparser/MaxMatchSegmenter/train:

#edu/stanford/nlp/parser/lexparser/MaxMatchSegmenter/segment:
edu.stanford.nlp.parser.lexparser.MaxMatchSegmenter:

#edu/stanford/nlp/parser/lexparser/AbstractTreebankParserParams$TypedDependencyTyper/makeDependency:
edu.stanford.nlp.parser.lexparser.AbstractTreebankParserParams$TypedDependencyTyper:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser$Derivation/equals:

#edu/stanford/nlp/parser/lexparser/ExhaustivePCFGParser$Derivation/hashCode:
edu.stanford.nlp.parser.lexparser.ExhaustivePCFGParser$Derivation:

#edu/stanford/nlp/parser/lexparser/ChineseMaxentLexicon/tagSet:

#edu/stanford/nlp/parser/lexparser/ChineseMaxentLexicon/ensureProbs:

#edu/stanford/nlp/parser/lexparser/ChineseMaxentLexicon/ruleIteratorByWord:

#edu/stanford/nlp/parser/lexparser/ChineseMaxentLexicon/numRules:

#edu/stanford/nlp/parser/lexparser/ChineseMaxentLexicon/initializeTraining:

#edu/stanford/nlp/parser/lexparser/ChineseMaxentLexicon/train:

#edu/stanford/nlp/parser/lexparser/ChineseMaxentLexicon/train:

#edu/stanford/nlp/parser/lexparser/ChineseMaxentLexicon/finishTraining:

#edu/stanford/nlp/parser/lexparser/ChineseMaxentLexicon/applyThresholds:

#edu/stanford/nlp/parser/lexparser/ChineseMaxentLexicon/main:

#edu/stanford/nlp/parser/lexparser/ChineseMaxentLexicon/testOnTreebank:

#edu/stanford/nlp/parser/lexparser/ChineseMaxentLexicon/score:
edu.stanford.nlp.parser.lexparser.ChineseMaxentLexicon:
edu.stanford.nlp.parser.lexparser.SpanishTreebankParserParams$MarkPrefixFunction:

#edu/stanford/nlp/parser/lexparser/StringBinaryRule/equals:

#edu/stanford/nlp/parser/lexparser/StringBinaryRule/hashCode:
edu.stanford.nlp.parser.lexparser.StringBinaryRule:
edu.stanford.nlp.parser.lexparser.TestOptions:

#edu/stanford/nlp/parser/lexparser/BinaryHeadFinder/determineHead:

#edu/stanford/nlp/parser/lexparser/BinaryHeadFinder/determineHead:

#edu/stanford/nlp/parser/lexparser/BinaryHeadFinder/determineBinaryHead:
edu.stanford.nlp.parser.lexparser.BinaryHeadFinder:

#edu/stanford/nlp/parser/lexparser/TreebankAnnotator/annotateTrees:

#edu/stanford/nlp/parser/lexparser/TreebankAnnotator/deannotateTrees:

#edu/stanford/nlp/parser/lexparser/TreebankAnnotator/getTrees:

#edu/stanford/nlp/parser/lexparser/TreebankAnnotator/removeDependencyRoots:

#edu/stanford/nlp/parser/lexparser/TreebankAnnotator/removeDependencyRoot:

#edu/stanford/nlp/parser/lexparser/TreebankAnnotator/<init>:
edu.stanford.nlp.parser.lexparser.TreebankAnnotator:

#edu/stanford/nlp/parser/lexparser/demo/ParserDemo/main:

#edu/stanford/nlp/parser/lexparser/demo/ParserDemo/demoDP:
edu.stanford.nlp.parser.lexparser.demo.ParserDemo:

#edu/stanford/nlp/parser/lexparser/demo/ParserDemo2/main:
edu.stanford.nlp.parser.lexparser.demo.ParserDemo2:

#edu/stanford/nlp/parser/charniak/CharniakScoredParsesReaderWriter$ScoredParsesIterator/<init>:

#edu/stanford/nlp/parser/charniak/CharniakScoredParsesReaderWriter$ScoredParsesIterator/getNext:

#edu/stanford/nlp/parser/charniak/CharniakScoredParsesReaderWriter$ScoredParsesIterator/hasNext:

#edu/stanford/nlp/parser/charniak/CharniakScoredParsesReaderWriter$ScoredParsesIterator/next:
edu.stanford.nlp.parser.charniak.CharniakScoredParsesReaderWriter$ScoredParsesIterator:

#edu/stanford/nlp/parser/charniak/CharniakScoredParsesReaderWriter/stringToParses:

#edu/stanford/nlp/parser/charniak/CharniakScoredParsesReaderWriter/parsesToString:

#edu/stanford/nlp/parser/charniak/CharniakScoredParsesReaderWriter/printScoredTrees:

#edu/stanford/nlp/parser/charniak/CharniakScoredParsesReaderWriter/printScoredTrees:
edu.stanford.nlp.parser.charniak.CharniakScoredParsesReaderWriter:
edu.stanford.nlp.parser.charniak.CharniakScoredParsesReaderWriter$1:

#edu/stanford/nlp/parser/charniak/CharniakParser/getBestParse:

#edu/stanford/nlp/parser/charniak/CharniakParser/getBestScoredParse:

#edu/stanford/nlp/parser/charniak/CharniakParser/getKBestParses:

#edu/stanford/nlp/parser/charniak/CharniakParser/getKBestParses:

#edu/stanford/nlp/parser/charniak/CharniakParser/printSentences:

#edu/stanford/nlp/parser/charniak/CharniakParser/runCharniak:
edu.stanford.nlp.parser.charniak.CharniakParser:

#edu/stanford/nlp/parser/shiftreduce/WeightMap/writeObject:

#edu/stanford/nlp/parser/shiftreduce/WeightMap/readObject:
edu.stanford.nlp.parser.shiftreduce.WeightMap:
edu.stanford.nlp.parser.shiftreduce.FeatureFactory$Transition:

#edu/stanford/nlp/parser/shiftreduce/CompoundUnaryTransition/<init>:

#edu/stanford/nlp/parser/shiftreduce/CompoundUnaryTransition/isLegal:

#edu/stanford/nlp/parser/shiftreduce/CompoundUnaryTransition/apply:

#edu/stanford/nlp/parser/shiftreduce/CompoundUnaryTransition/equals:

#edu/stanford/nlp/parser/shiftreduce/CompoundUnaryTransition/toString:
edu.stanford.nlp.parser.shiftreduce.CompoundUnaryTransition:

#edu/stanford/nlp/parser/shiftreduce/PerceptronModel/<init>:

#edu/stanford/nlp/parser/shiftreduce/PerceptronModel/<init>:

#edu/stanford/nlp/parser/shiftreduce/PerceptronModel/averageScoredModels:

#edu/stanford/nlp/parser/shiftreduce/PerceptronModel/averageModels:

#edu/stanford/nlp/parser/shiftreduce/PerceptronModel/condenseFeatures:

#edu/stanford/nlp/parser/shiftreduce/PerceptronModel/filterFeatures:

#edu/stanford/nlp/parser/shiftreduce/PerceptronModel/numWeights:

#edu/stanford/nlp/parser/shiftreduce/PerceptronModel/maxAbs:

#edu/stanford/nlp/parser/shiftreduce/PerceptronModel/outputStats:

#edu/stanford/nlp/parser/shiftreduce/PerceptronModel/tagSet:

#edu/stanford/nlp/parser/shiftreduce/PerceptronModel/findHighestScoringTransition:

#edu/stanford/nlp/parser/shiftreduce/PerceptronModel/findHighestScoringTransitions:

#edu/stanford/nlp/parser/shiftreduce/PerceptronModel/trainTree:

#edu/stanford/nlp/parser/shiftreduce/PerceptronModel/trainBatch:

#edu/stanford/nlp/parser/shiftreduce/PerceptronModel/augmentSubsentences:

#edu/stanford/nlp/parser/shiftreduce/PerceptronModel/outputFirstErrors:

#edu/stanford/nlp/parser/shiftreduce/PerceptronModel/outputReordererStats:

#edu/stanford/nlp/parser/shiftreduce/PerceptronModel/outputTransitionStats:

#edu/stanford/nlp/parser/shiftreduce/PerceptronModel/trainModel:

#edu/stanford/nlp/parser/shiftreduce/PerceptronModel/pruneFeatures:

#edu/stanford/nlp/parser/shiftreduce/PerceptronModel/trainModel:
edu.stanford.nlp.parser.shiftreduce.PerceptronModel:

#edu/stanford/nlp/parser/shiftreduce/TransitionTypeEval/evaluate:

#edu/stanford/nlp/parser/shiftreduce/TransitionTypeEval/display:
edu.stanford.nlp.parser.shiftreduce.TransitionTypeEval:
edu.stanford.nlp.parser.shiftreduce.ShiftReduceParser$RetagProcessor:
edu.stanford.nlp.parser.shiftreduce.BinaryTransition$Side:

#edu/stanford/nlp/parser/shiftreduce/FeatureFactory/getFeatureFromCoreLabel:

#edu/stanford/nlp/parser/shiftreduce/FeatureFactory/getRecentDependent:

#edu/stanford/nlp/parser/shiftreduce/FeatureFactory/getStackLabel:

#edu/stanford/nlp/parser/shiftreduce/FeatureFactory/getQueueLabel:

#edu/stanford/nlp/parser/shiftreduce/FeatureFactory/getCoreLabel:
edu.stanford.nlp.parser.shiftreduce.FeatureFactory:

#edu/stanford/nlp/parser/shiftreduce/Weight/<init>:

#edu/stanford/nlp/parser/shiftreduce/Weight/pack:

#edu/stanford/nlp/parser/shiftreduce/Weight/pack:

#edu/stanford/nlp/parser/shiftreduce/Weight/score:

#edu/stanford/nlp/parser/shiftreduce/Weight/addScaled:

#edu/stanford/nlp/parser/shiftreduce/Weight/condense:

#edu/stanford/nlp/parser/shiftreduce/Weight/getScore:

#edu/stanford/nlp/parser/shiftreduce/Weight/updateWeight:

#edu/stanford/nlp/parser/shiftreduce/Weight/maxAbs:

#edu/stanford/nlp/parser/shiftreduce/Weight/l1Reg:

#edu/stanford/nlp/parser/shiftreduce/Weight/l2Reg:

#edu/stanford/nlp/parser/shiftreduce/Weight/toString:

#edu/stanford/nlp/parser/shiftreduce/Weight/writeBytes:

#edu/stanford/nlp/parser/shiftreduce/Weight/readBytes:
edu.stanford.nlp.parser.shiftreduce.Weight:
edu.stanford.nlp.parser.shiftreduce.BinaryTransition$1:

#edu/stanford/nlp/parser/shiftreduce/FinalizeTransition/isLegal:

#edu/stanford/nlp/parser/shiftreduce/FinalizeTransition/equals:
edu.stanford.nlp.parser.shiftreduce.FinalizeTransition:

#edu/stanford/nlp/parser/shiftreduce/ShiftReduceParserQuery/parseInternal:

#edu/stanford/nlp/parser/shiftreduce/ShiftReduceParserQuery/restoreOriginalWords:
edu.stanford.nlp.parser.shiftreduce.ShiftReduceParserQuery:

#edu/stanford/nlp/parser/shiftreduce/BinaryTransition/isLegal:

#edu/stanford/nlp/parser/shiftreduce/BinaryTransition/isBinarized:

#edu/stanford/nlp/parser/shiftreduce/BinaryTransition/apply:

#edu/stanford/nlp/parser/shiftreduce/BinaryTransition/equals:

#edu/stanford/nlp/parser/shiftreduce/BinaryTransition/hashCode:

#edu/stanford/nlp/parser/shiftreduce/BinaryTransition/toString:
edu.stanford.nlp.parser.shiftreduce.BinaryTransition:

#edu/stanford/nlp/parser/shiftreduce/State/getStackNode:

#edu/stanford/nlp/parser/shiftreduce/State/getQueueNode:

#edu/stanford/nlp/parser/shiftreduce/State/getSeparatorBetween:

#edu/stanford/nlp/parser/shiftreduce/State/getSeparatorBetween:

#edu/stanford/nlp/parser/shiftreduce/State/getSeparatorCount:

#edu/stanford/nlp/parser/shiftreduce/State/getSeparatorCount:

#edu/stanford/nlp/parser/shiftreduce/State/getSeparator:

#edu/stanford/nlp/parser/shiftreduce/State/findSeparators:

#edu/stanford/nlp/parser/shiftreduce/State/endOfQueue:

#edu/stanford/nlp/parser/shiftreduce/State/toString:
edu.stanford.nlp.parser.shiftreduce.State:

#edu/stanford/nlp/parser/shiftreduce/TrainingResult/<init>:

#edu/stanford/nlp/parser/shiftreduce/TrainingResult/<init>:
edu.stanford.nlp.parser.shiftreduce.TrainingResult:

#edu/stanford/nlp/parser/shiftreduce/CreateTransitionSequence/createTransitionSequences:

#edu/stanford/nlp/parser/shiftreduce/CreateTransitionSequence/createTransitionSequenceHelper:
edu.stanford.nlp.parser.shiftreduce.CreateTransitionSequence:
edu.stanford.nlp.parser.shiftreduce.PerceptronModel$1:

#edu/stanford/nlp/parser/shiftreduce/ShiftTransition/isLegal:

#edu/stanford/nlp/parser/shiftreduce/ShiftTransition/apply:

#edu/stanford/nlp/parser/shiftreduce/ShiftTransition/equals:
edu.stanford.nlp.parser.shiftreduce.ShiftTransition:

#edu/stanford/nlp/parser/shiftreduce/BasicFeatureFactory/addUnaryStackFeatures:

#edu/stanford/nlp/parser/shiftreduce/BasicFeatureFactory/addUnaryQueueFeatures:

#edu/stanford/nlp/parser/shiftreduce/BasicFeatureFactory/addBinaryFeatures:

#edu/stanford/nlp/parser/shiftreduce/BasicFeatureFactory/addPositionFeatures:

#edu/stanford/nlp/parser/shiftreduce/BasicFeatureFactory/addSeparatorFeature:

#edu/stanford/nlp/parser/shiftreduce/BasicFeatureFactory/addSeparatorFeature:

#edu/stanford/nlp/parser/shiftreduce/BasicFeatureFactory/addSeparatorFeatures:

#edu/stanford/nlp/parser/shiftreduce/BasicFeatureFactory/addSeparatorFeatures:

#edu/stanford/nlp/parser/shiftreduce/BasicFeatureFactory/addEdgeFeatures:

#edu/stanford/nlp/parser/shiftreduce/BasicFeatureFactory/addEdgeFeatures2:
edu.stanford.nlp.parser.shiftreduce.BasicFeatureFactory:
edu.stanford.nlp.parser.shiftreduce.TrainingUpdate:

#edu/stanford/nlp/parser/shiftreduce/IdleTransition/equals:
edu.stanford.nlp.parser.shiftreduce.IdleTransition:

#edu/stanford/nlp/parser/shiftreduce/CombinationFeatureFactory/featurize:
edu.stanford.nlp.parser.shiftreduce.CombinationFeatureFactory:

#edu/stanford/nlp/parser/shiftreduce/ReorderingOracle/reorder:

#edu/stanford/nlp/parser/shiftreduce/ReorderingOracle/reorderIncorrectBinaryTransition:

#edu/stanford/nlp/parser/shiftreduce/ReorderingOracle/reorderIncorrectShiftTransition:
edu.stanford.nlp.parser.shiftreduce.ReorderingOracle:
edu.stanford.nlp.parser.shiftreduce.PerceptronModel$TrainTreeProcessor:
edu.stanford.nlp.parser.shiftreduce.State$HeadPosition:

#edu/stanford/nlp/parser/shiftreduce/TrainingExample/trainTransitions:

#edu/stanford/nlp/parser/shiftreduce/TrainingExample/initialStateFromGoldTagTree:
edu.stanford.nlp.parser.shiftreduce.TrainingExample:

#edu/stanford/nlp/parser/shiftreduce/BaseModel/findEmergencyTransition:
edu.stanford.nlp.parser.shiftreduce.BaseModel:
edu.stanford.nlp.parser.shiftreduce.TreeRecorder$1:

#edu/stanford/nlp/parser/shiftreduce/ShiftReduceUtils/getBinarySide:

#edu/stanford/nlp/parser/shiftreduce/ShiftReduceUtils/isEquivalentCategory:

#edu/stanford/nlp/parser/shiftreduce/ShiftReduceUtils/leftIndex:

#edu/stanford/nlp/parser/shiftreduce/ShiftReduceUtils/rightIndex:
Warning: Method:edu.stanford.nlp.parser.shiftreduce.ShiftReduceUtils.constraintMatchesTreeTop has incoming edges.

#edu/stanford/nlp/parser/shiftreduce/ShiftReduceUtils/findStateOnAgenda:

#edu/stanford/nlp/parser/shiftreduce/ShiftReduceUtils/transitionShortName:
edu.stanford.nlp.parser.shiftreduce.ShiftReduceUtils:

#edu/stanford/nlp/parser/shiftreduce/ShiftReduceOptions/setOptionFlag:
edu.stanford.nlp.parser.shiftreduce.ShiftReduceOptions:
edu.stanford.nlp.parser.shiftreduce.ShiftReduceTrainOptions$TrainingMethod:

#edu/stanford/nlp/parser/shiftreduce/UnaryTransition/isLegal:

#edu/stanford/nlp/parser/shiftreduce/UnaryTransition/addUnaryNode:

#edu/stanford/nlp/parser/shiftreduce/UnaryTransition/createNode:

#edu/stanford/nlp/parser/shiftreduce/UnaryTransition/equals:

#edu/stanford/nlp/parser/shiftreduce/UnaryTransition/toString:
edu.stanford.nlp.parser.shiftreduce.UnaryTransition:
edu.stanford.nlp.parser.shiftreduce.Transition:
edu.stanford.nlp.parser.shiftreduce.FeatureFactory$FeatureComponent:
edu.stanford.nlp.parser.shiftreduce.ShiftReduceTrainOptions:

#edu/stanford/nlp/parser/shiftreduce/TreeRecorder/evaluate:
edu.stanford.nlp.parser.shiftreduce.TreeRecorder:
edu.stanford.nlp.parser.shiftreduce.ShiftReduceTestOptions:
edu.stanford.nlp.parser.shiftreduce.FeatureFactory$1:

#edu/stanford/nlp/parser/shiftreduce/ShiftReduceParser/defaultCoreNLPFlags:

#edu/stanford/nlp/parser/shiftreduce/ShiftReduceParser/parse:

#edu/stanford/nlp/parser/shiftreduce/ShiftReduceParser/parse:

#edu/stanford/nlp/parser/shiftreduce/ShiftReduceParser/parseTree:

#edu/stanford/nlp/parser/shiftreduce/ShiftReduceParser/getParserQueryEvals:

#edu/stanford/nlp/parser/shiftreduce/ShiftReduceParser/initialStateFromTaggedSentence:

#edu/stanford/nlp/parser/shiftreduce/ShiftReduceParser/buildTrainingOptions:

#edu/stanford/nlp/parser/shiftreduce/ShiftReduceParser/checkLeafBranching:

#edu/stanford/nlp/parser/shiftreduce/ShiftReduceParser/checkRootTransition:

#edu/stanford/nlp/parser/shiftreduce/ShiftReduceParser/filterTreebank:

#edu/stanford/nlp/parser/shiftreduce/ShiftReduceParser/binarizeTreebank:

#edu/stanford/nlp/parser/shiftreduce/ShiftReduceParser/findKnownStates:

#edu/stanford/nlp/parser/shiftreduce/ShiftReduceParser/findKnownStates:

#edu/stanford/nlp/parser/shiftreduce/ShiftReduceParser/redoTags:

#edu/stanford/nlp/parser/shiftreduce/ShiftReduceParser/redoTags:

#edu/stanford/nlp/parser/shiftreduce/ShiftReduceParser/findRootStates:

#edu/stanford/nlp/parser/shiftreduce/ShiftReduceParser/findRootOnlyStates:

#edu/stanford/nlp/parser/shiftreduce/ShiftReduceParser/findRootOnlyStatesHelper:

#edu/stanford/nlp/parser/shiftreduce/ShiftReduceParser/verifyTransitions:

#edu/stanford/nlp/parser/shiftreduce/ShiftReduceParser/train:

#edu/stanford/nlp/parser/shiftreduce/ShiftReduceParser/loadModel:

#edu/stanford/nlp/parser/shiftreduce/ShiftReduceParser/main:
edu.stanford.nlp.parser.shiftreduce.ShiftReduceParser:

#edu/stanford/nlp/parser/shiftreduce/DistsimFeatureFactory/addDistsimFeatures:
edu.stanford.nlp.parser.shiftreduce.DistsimFeatureFactory:
edu.stanford.nlp.parser.shiftreduce.TreeRecorder$Mode:

#edu/stanford/nlp/parser/shiftreduce/demo/ShiftReduceDemo/main:
edu.stanford.nlp.parser.shiftreduce.demo.ShiftReduceDemo:

#edu/stanford/nlp/parser/server/LexicalizedParserClient/readResult:

#edu/stanford/nlp/parser/server/LexicalizedParserClient/getParse:

#edu/stanford/nlp/parser/server/LexicalizedParserClient/getTree:
edu.stanford.nlp.parser.server.LexicalizedParserClient:

#edu/stanford/nlp/parser/server/LexicalizedParserServer/loadModel:
Warning: Method:edu.stanford.nlp.parser.server.LexicalizedParserServer.listen has incoming edges.

#edu/stanford/nlp/parser/server/LexicalizedParserServer/processRequest:

#edu/stanford/nlp/parser/server/LexicalizedParserServer/handleTokenize:

#edu/stanford/nlp/parser/server/LexicalizedParserServer/handleLemma:

#edu/stanford/nlp/parser/server/LexicalizedParserServer/handleDependencies:

#edu/stanford/nlp/parser/server/LexicalizedParserServer/handleTree:

#edu/stanford/nlp/parser/server/LexicalizedParserServer/handleParse:

#edu/stanford/nlp/parser/server/LexicalizedParserServer/parse:

#edu/stanford/nlp/parser/server/LexicalizedParserServer/main:
edu.stanford.nlp.parser.server.LexicalizedParserServer:

#edu/stanford/nlp/parser/nndep/ParsingSystem/<init>:

#edu/stanford/nlp/parser/nndep/ParsingSystem/getTransitionID:

#edu/stanford/nlp/parser/nndep/ParsingSystem/getPunctuationTags:

#edu/stanford/nlp/parser/nndep/ParsingSystem/evaluate:

#edu/stanford/nlp/parser/nndep/ParsingSystem/getUAS:

#edu/stanford/nlp/parser/nndep/ParsingSystem/getUASnoPunc:
edu.stanford.nlp.parser.nndep.ParsingSystem:

#edu/stanford/nlp/parser/nndep/DependencyTree/getHead:

#edu/stanford/nlp/parser/nndep/DependencyTree/getLabel:

#edu/stanford/nlp/parser/nndep/DependencyTree/getRoot:

#edu/stanford/nlp/parser/nndep/DependencyTree/isSingleRoot:

#edu/stanford/nlp/parser/nndep/DependencyTree/isTree:

#edu/stanford/nlp/parser/nndep/DependencyTree/isProjective:

#edu/stanford/nlp/parser/nndep/DependencyTree/visitTree:

#edu/stanford/nlp/parser/nndep/DependencyTree/equal:

#edu/stanford/nlp/parser/nndep/DependencyTree/print:
edu.stanford.nlp.parser.nndep.DependencyTree:

#edu/stanford/nlp/parser/nndep/Classifier$CostFunction/process:

#edu/stanford/nlp/parser/nndep/Classifier$CostFunction/lambda$process$0:
edu.stanford.nlp.parser.nndep.Classifier$CostFunction:

#edu/stanford/nlp/parser/nndep/DependencyParserCache/loadFromModelFile:
edu.stanford.nlp.parser.nndep.DependencyParserCache:

#edu/stanford/nlp/parser/nndep/Classifier/<init>:

#edu/stanford/nlp/parser/nndep/Classifier/getToPreCompute:

#edu/stanford/nlp/parser/nndep/Classifier/computeCostFunction:

#edu/stanford/nlp/parser/nndep/Classifier/takeAdaGradientStep:

#edu/stanford/nlp/parser/nndep/Classifier/validateTraining:

#edu/stanford/nlp/parser/nndep/Classifier/preCompute:

#edu/stanford/nlp/parser/nndep/Classifier/computeScores:

#edu/stanford/nlp/parser/nndep/Classifier/matrixMultiply:

#edu/stanford/nlp/parser/nndep/Classifier/matrixMultiplySlice:

#edu/stanford/nlp/parser/nndep/Classifier/matrixMultiply:

#edu/stanford/nlp/parser/nndep/Classifier/matrixMultiplySliceSum:

#edu/stanford/nlp/parser/nndep/Classifier/addCubeInPlace:
edu.stanford.nlp.parser.nndep.Classifier:
edu.stanford.nlp.parser.nndep.Example:

#edu/stanford/nlp/parser/nndep/Config/setProperties:

#edu/stanford/nlp/parser/nndep/Config/getLanguage:
edu.stanford.nlp.parser.nndep.Config:
edu.stanford.nlp.parser.nndep.Classifier$FeedforwardParams:

#edu/stanford/nlp/parser/nndep/CoNLLUTagUpdater/main:
edu.stanford.nlp.parser.nndep.CoNLLUTagUpdater:

#edu/stanford/nlp/parser/nndep/Util/scaling:

#edu/stanford/nlp/parser/nndep/Util/generateDict:

#edu/stanford/nlp/parser/nndep/Util/getRandom:

#edu/stanford/nlp/parser/nndep/Util/getRandomSubList:

#edu/stanford/nlp/parser/nndep/Util/loadConllFile:

#edu/stanford/nlp/parser/nndep/Util/writeConllFile:

#edu/stanford/nlp/parser/nndep/Util/printTreeStats:
edu.stanford.nlp.parser.nndep.Util:

#edu/stanford/nlp/parser/nndep/ArcStandard/isTerminal:

#edu/stanford/nlp/parser/nndep/ArcStandard/makeTransitions:

#edu/stanford/nlp/parser/nndep/ArcStandard/initialConfiguration:

#edu/stanford/nlp/parser/nndep/ArcStandard/canApply:

#edu/stanford/nlp/parser/nndep/ArcStandard/apply:

#edu/stanford/nlp/parser/nndep/ArcStandard/getOracle:

#edu/stanford/nlp/parser/nndep/ArcStandard/canReach:

#edu/stanford/nlp/parser/nndep/ArcStandard/isOracle:
edu.stanford.nlp.parser.nndep.ArcStandard:
edu.stanford.nlp.parser.nndep.Dataset:
edu.stanford.nlp.parser.nndep.Classifier$1:

#edu/stanford/nlp/parser/nndep/DependencyParserCache$DependencyParserSpecification/<init>:

#edu/stanford/nlp/parser/nndep/DependencyParserCache$DependencyParserSpecification/equals:
edu.stanford.nlp.parser.nndep.DependencyParserCache$DependencyParserSpecification:

#edu/stanford/nlp/parser/nndep/DependencyParser/getWordID:

#edu/stanford/nlp/parser/nndep/DependencyParser/getPosID:

#edu/stanford/nlp/parser/nndep/DependencyParser/getFeatures:

#edu/stanford/nlp/parser/nndep/DependencyParser/getFeatureArray:

#edu/stanford/nlp/parser/nndep/DependencyParser/genTrainExamples:

#edu/stanford/nlp/parser/nndep/DependencyParser/generateIDs:

#edu/stanford/nlp/parser/nndep/DependencyParser/genDictionaries:

#edu/stanford/nlp/parser/nndep/DependencyParser/writeModelFile:

#edu/stanford/nlp/parser/nndep/DependencyParser/writeEmbedding:

#edu/stanford/nlp/parser/nndep/DependencyParser/loadModelFile:

#edu/stanford/nlp/parser/nndep/DependencyParser/readEmbedFile:

#edu/stanford/nlp/parser/nndep/DependencyParser/train:

#edu/stanford/nlp/parser/nndep/DependencyParser/setupClassifierForTraining:

#edu/stanford/nlp/parser/nndep/DependencyParser/predictInner:

#edu/stanford/nlp/parser/nndep/DependencyParser/predict:

#edu/stanford/nlp/parser/nndep/DependencyParser/makeGrammaticalRelation:

#edu/stanford/nlp/parser/nndep/DependencyParser/makeGrammaticalStructure:

#edu/stanford/nlp/parser/nndep/DependencyParser/predict:

#edu/stanford/nlp/parser/nndep/DependencyParser/testCoNLLReturnScores:

#edu/stanford/nlp/parser/nndep/DependencyParser/parseTextFile:

#edu/stanford/nlp/parser/nndep/DependencyParser/initialize:

#edu/stanford/nlp/parser/nndep/DependencyParser/main:
edu.stanford.nlp.parser.nndep.DependencyParser:
edu.stanford.nlp.parser.nndep.DependencyParser$1:

#edu/stanford/nlp/parser/nndep/Configuration/shift:

#edu/stanford/nlp/parser/nndep/Configuration/removeSecondTopStack:

#edu/stanford/nlp/parser/nndep/Configuration/removeTopStack:

#edu/stanford/nlp/parser/nndep/Configuration/getStack:

#edu/stanford/nlp/parser/nndep/Configuration/getBuffer:

#edu/stanford/nlp/parser/nndep/Configuration/getWord:

#edu/stanford/nlp/parser/nndep/Configuration/getPOS:

#edu/stanford/nlp/parser/nndep/Configuration/getLeftChild:

#edu/stanford/nlp/parser/nndep/Configuration/getRightChild:

#edu/stanford/nlp/parser/nndep/Configuration/hasOtherChild:

#edu/stanford/nlp/parser/nndep/Configuration/getLeftValency:

#edu/stanford/nlp/parser/nndep/Configuration/getRightValency:

#edu/stanford/nlp/parser/nndep/Configuration/getLeftLabelSet:

#edu/stanford/nlp/parser/nndep/Configuration/getRightLabelSet:

#edu/stanford/nlp/parser/nndep/Configuration/makeLabelSetString:

#edu/stanford/nlp/parser/nndep/Configuration/getStr:
edu.stanford.nlp.parser.nndep.Configuration:

#edu/stanford/nlp/parser/nndep/Classifier$Cost/backpropSaved:

#edu/stanford/nlp/parser/nndep/Classifier$Cost/addL2Regularization:
edu.stanford.nlp.parser.nndep.Classifier$Cost:

#edu/stanford/nlp/parser/nndep/demo/DependencyParserDemo/main:
edu.stanford.nlp.parser.nndep.demo.DependencyParserDemo:

#edu/stanford/nlp/parser/nndep/demo/DependencyParserCoreNLPDemo/main:
edu.stanford.nlp.parser.nndep.demo.DependencyParserCoreNLPDemo:

#edu/stanford/nlp/parser/common/ParsingThreadsafeProcessor/process:
edu.stanford.nlp.parser.common.ParsingThreadsafeProcessor:
edu.stanford.nlp.parser.common.ParserQueryFactory:
edu.stanford.nlp.parser.common.ParserConstraint:
edu.stanford.nlp.parser.common.NoSuchParseException:

#edu/stanford/nlp/parser/common/ParserGrammar/parse:

#edu/stanford/nlp/parser/common/ParserGrammar/loadTagger:

#edu/stanford/nlp/parser/common/ParserGrammar/lemmatize:

#edu/stanford/nlp/parser/common/ParserGrammar/loadModel:

#edu/stanford/nlp/parser/common/ParserGrammar/loadModelFromZip:
edu.stanford.nlp.parser.common.ParserGrammar:
edu.stanford.nlp.parser.common.ParserQuery:
edu.stanford.nlp.parser.common.ParserAnnotations$ConstraintAnnotation:
edu.stanford.nlp.parser.common.ParserAnnotations$CandidatePartOfSpeechAnnotation:
edu.stanford.nlp.parser.common.ParserAnnotations:

#edu/stanford/nlp/parser/common/ParserUtils/xTree:

#edu/stanford/nlp/parser/common/ParserUtils/flattenTallTrees:

#edu/stanford/nlp/parser/common/ParserUtils/lambda$flattenTallTrees$0:
edu.stanford.nlp.parser.common.ParserUtils:

#edu/stanford/nlp/parser/common/ArgUtils/numSubArgs:

#edu/stanford/nlp/parser/common/ArgUtils/printArgs:

#edu/stanford/nlp/parser/common/ArgUtils/getWeightedTreebankDescription:
edu.stanford.nlp.parser.common.ArgUtils:

#edu/stanford/nlp/parser/eval/TreebankStats$ObservedCorpusStats/addStatsForTree:

#edu/stanford/nlp/parser/eval/TreebankStats$ObservedCorpusStats/getPercLensLessThan:

#edu/stanford/nlp/parser/eval/TreebankStats$ObservedCorpusStats/display:

#edu/stanford/nlp/parser/eval/TreebankStats$ObservedCorpusStats/computeFinalValues:
edu.stanford.nlp.parser.eval.TreebankStats$ObservedCorpusStats:

#edu/stanford/nlp/parser/eval/UNKPrinter/main:
edu.stanford.nlp.parser.eval.UNKPrinter:
edu.stanford.nlp.parser.eval.TreebankStats$Split:
edu.stanford.nlp.parser.eval.TreebankStats$SplitFilter:

#edu/stanford/nlp/parser/eval/TreebankStats/useSplit:

#edu/stanford/nlp/parser/eval/TreebankStats/gatherStats:

#edu/stanford/nlp/parser/eval/TreebankStats/dissectTree:

#edu/stanford/nlp/parser/eval/TreebankStats/aggregateStats:

#edu/stanford/nlp/parser/eval/TreebankStats/run:

#edu/stanford/nlp/parser/eval/TreebankStats/main:

#edu/stanford/nlp/parser/eval/TreebankStats/lambda$run$1:
edu.stanford.nlp.parser.eval.TreebankStats:

#edu/stanford/nlp/parser/eval/TreebankFactoredLexiconStats/main:

#edu/stanford/nlp/parser/eval/TreebankFactoredLexiconStats/setToString:
edu.stanford.nlp.parser.eval.TreebankFactoredLexiconStats:

#edu/stanford/nlp/math/ArrayMath/range:

#edu/stanford/nlp/math/ArrayMath/range:

#edu/stanford/nlp/math/ArrayMath/doubleArrayToFloatArray:

#edu/stanford/nlp/math/ArrayMath/floatArrayToDoubleArray:

#edu/stanford/nlp/math/ArrayMath/floatArrayToDoubleArray:

#edu/stanford/nlp/math/ArrayMath/doubleArrayToFloatArray:

#edu/stanford/nlp/math/ArrayMath/exp:

#edu/stanford/nlp/math/ArrayMath/log:

#edu/stanford/nlp/math/ArrayMath/expInPlace:

#edu/stanford/nlp/math/ArrayMath/logInPlace:

#edu/stanford/nlp/math/ArrayMath/softmax:

#edu/stanford/nlp/math/ArrayMath/addInPlace:

#edu/stanford/nlp/math/ArrayMath/addInPlace:

#edu/stanford/nlp/math/ArrayMath/addMultInPlace:

#edu/stanford/nlp/math/ArrayMath/multiplyInPlace:

#edu/stanford/nlp/math/ArrayMath/multiplyInPlace:

#edu/stanford/nlp/math/ArrayMath/divideInPlace:

#edu/stanford/nlp/math/ArrayMath/powInPlace:

#edu/stanford/nlp/math/ArrayMath/powInPlace:

#edu/stanford/nlp/math/ArrayMath/add:

#edu/stanford/nlp/math/ArrayMath/add:

#edu/stanford/nlp/math/ArrayMath/multiply:

#edu/stanford/nlp/math/ArrayMath/multiply:

#edu/stanford/nlp/math/ArrayMath/pow:

#edu/stanford/nlp/math/ArrayMath/pow:

#edu/stanford/nlp/math/ArrayMath/pairwiseAddInPlace:

#edu/stanford/nlp/math/ArrayMath/pairwiseAddInPlace:

#edu/stanford/nlp/math/ArrayMath/pairwiseAddInPlace:

#edu/stanford/nlp/math/ArrayMath/pairwiseAddInPlace:

#edu/stanford/nlp/math/ArrayMath/pairwiseAddInPlace:

#edu/stanford/nlp/math/ArrayMath/addInPlace:

#edu/stanford/nlp/math/ArrayMath/pairwiseSubtractInPlace:

#edu/stanford/nlp/math/ArrayMath/pairwiseScaleAddInPlace:

#edu/stanford/nlp/math/ArrayMath/pairwiseAdd:

#edu/stanford/nlp/math/ArrayMath/pairwiseAdd:

#edu/stanford/nlp/math/ArrayMath/pairwiseAdd:

#edu/stanford/nlp/math/ArrayMath/pairwiseScaleAdd:

#edu/stanford/nlp/math/ArrayMath/pairwiseSubtract:

#edu/stanford/nlp/math/ArrayMath/pairwiseSubtract:

#edu/stanford/nlp/math/ArrayMath/dotProduct:

#edu/stanford/nlp/math/ArrayMath/dotProduct:

#edu/stanford/nlp/math/ArrayMath/dotProduct:

#edu/stanford/nlp/math/ArrayMath/pairwiseMultiply:

#edu/stanford/nlp/math/ArrayMath/pairwiseMultiply:

#edu/stanford/nlp/math/ArrayMath/pairwiseMultiply:

#edu/stanford/nlp/math/ArrayMath/pairwiseMultiply:

#edu/stanford/nlp/math/ArrayMath/pairwiseDivideInPlace:

#edu/stanford/nlp/math/ArrayMath/hasNaN:

#edu/stanford/nlp/math/ArrayMath/hasInfinite:

#edu/stanford/nlp/math/ArrayMath/hasNaN:

#edu/stanford/nlp/math/ArrayMath/countNaN:

#edu/stanford/nlp/math/ArrayMath/filterNaN:

#edu/stanford/nlp/math/ArrayMath/countInfinite:

#edu/stanford/nlp/math/ArrayMath/countNonZero:

#edu/stanford/nlp/math/ArrayMath/countCloseToZero:

#edu/stanford/nlp/math/ArrayMath/countPositive:

#edu/stanford/nlp/math/ArrayMath/countNegative:

#edu/stanford/nlp/math/ArrayMath/filterInfinite:

#edu/stanford/nlp/math/ArrayMath/sum:

#edu/stanford/nlp/math/ArrayMath/sum:

#edu/stanford/nlp/math/ArrayMath/sum:

#edu/stanford/nlp/math/ArrayMath/sum:

#edu/stanford/nlp/math/ArrayMath/diag:

#edu/stanford/nlp/math/ArrayMath/iterativeAverage:

#edu/stanford/nlp/math/ArrayMath/norm_inf:

#edu/stanford/nlp/math/ArrayMath/norm_inf:

#edu/stanford/nlp/math/ArrayMath/norm_1:

#edu/stanford/nlp/math/ArrayMath/norm_1:

#edu/stanford/nlp/math/ArrayMath/norm:

#edu/stanford/nlp/math/ArrayMath/norm:

#edu/stanford/nlp/math/ArrayMath/argmax:

#edu/stanford/nlp/math/ArrayMath/argmax_tieLast:

#edu/stanford/nlp/math/ArrayMath/max:

#edu/stanford/nlp/math/ArrayMath/argmax:

#edu/stanford/nlp/math/ArrayMath/argmin:

#edu/stanford/nlp/math/ArrayMath/min:

#edu/stanford/nlp/math/ArrayMath/safeMin:

#edu/stanford/nlp/math/ArrayMath/argmin:

#edu/stanford/nlp/math/ArrayMath/argmin:

#edu/stanford/nlp/math/ArrayMath/min:

#edu/stanford/nlp/math/ArrayMath/argmax:

#edu/stanford/nlp/math/ArrayMath/max:

#edu/stanford/nlp/math/ArrayMath/min:

#edu/stanford/nlp/math/ArrayMath/max:

#edu/stanford/nlp/math/ArrayMath/safeMax:

#edu/stanford/nlp/math/ArrayMath/logSum:

#edu/stanford/nlp/math/ArrayMath/logSum:

#edu/stanford/nlp/math/ArrayMath/logSum:

#edu/stanford/nlp/math/ArrayMath/logSum:

#edu/stanford/nlp/math/ArrayMath/innerProduct:

#edu/stanford/nlp/math/ArrayMath/innerProduct:

#edu/stanford/nlp/math/ArrayMath/load2DMatrixFromFile:

#edu/stanford/nlp/math/ArrayMath/box:

#edu/stanford/nlp/math/ArrayMath/unboxToInt:

#edu/stanford/nlp/math/ArrayMath/box:

#edu/stanford/nlp/math/ArrayMath/unbox:

#edu/stanford/nlp/math/ArrayMath/indexOf:

#edu/stanford/nlp/math/ArrayMath/castToInt:

#edu/stanford/nlp/math/ArrayMath/normalize:

#edu/stanford/nlp/math/ArrayMath/L1normalize:

#edu/stanford/nlp/math/ArrayMath/L2normalize:

#edu/stanford/nlp/math/ArrayMath/normalize:

#edu/stanford/nlp/math/ArrayMath/L2normalize:

#edu/stanford/nlp/math/ArrayMath/standardize:

#edu/stanford/nlp/math/ArrayMath/L2Norm:

#edu/stanford/nlp/math/ArrayMath/L2Norm:

#edu/stanford/nlp/math/ArrayMath/L1Norm:

#edu/stanford/nlp/math/ArrayMath/logNormalize:

#edu/stanford/nlp/math/ArrayMath/sampleFromDistribution:

#edu/stanford/nlp/math/ArrayMath/sampleFromDistribution:

#edu/stanford/nlp/math/ArrayMath/klDivergence:

#edu/stanford/nlp/math/ArrayMath/median:

#edu/stanford/nlp/math/ArrayMath/safeMean:

#edu/stanford/nlp/math/ArrayMath/sumSquaredError:

#edu/stanford/nlp/math/ArrayMath/sumSquared:

#edu/stanford/nlp/math/ArrayMath/safeStdev:

#edu/stanford/nlp/math/ArrayMath/sampleWithoutReplacement:

#edu/stanford/nlp/math/ArrayMath/shuffle:

#edu/stanford/nlp/math/ArrayMath/reverse:

#edu/stanford/nlp/math/ArrayMath/contains:

#edu/stanford/nlp/math/ArrayMath/containsInSubarray:

#edu/stanford/nlp/math/ArrayMath/pearsonCorrelation:

#edu/stanford/nlp/math/ArrayMath/sigLevelByApproxRand:

#edu/stanford/nlp/math/ArrayMath/sigLevelByApproxRand:

#edu/stanford/nlp/math/ArrayMath/sigLevelByApproxRand:

#edu/stanford/nlp/math/ArrayMath/absDiffOfMeans:

#edu/stanford/nlp/math/ArrayMath/toBinaryString:

#edu/stanford/nlp/math/ArrayMath/toString:

#edu/stanford/nlp/math/ArrayMath/toString:

#edu/stanford/nlp/math/ArrayMath/toString:

#edu/stanford/nlp/math/ArrayMath/toString:

#edu/stanford/nlp/math/ArrayMath/toString:

#edu/stanford/nlp/math/ArrayMath/toString:

#edu/stanford/nlp/math/ArrayMath/toString:

#edu/stanford/nlp/math/ArrayMath/main:

#edu/stanford/nlp/math/ArrayMath/deepCopy:

#edu/stanford/nlp/math/ArrayMath/addMultInto:

#edu/stanford/nlp/math/ArrayMath/multiplyInto:

#edu/stanford/nlp/math/ArrayMath/entropy:

#edu/stanford/nlp/math/ArrayMath/assertFinite:
edu.stanford.nlp.math.ArrayMath:

#edu/stanford/nlp/math/DoubleAD/equals:

#edu/stanford/nlp/math/DoubleAD/equals:

#edu/stanford/nlp/math/DoubleAD/equals:
edu.stanford.nlp.math.DoubleAD:
edu.stanford.nlp.math.ArrayMath$InvalidElementException:

#edu/stanford/nlp/math/ADMath/logSum:
edu.stanford.nlp.math.ADMath:
edu.stanford.nlp.math.NumberMatchingRegex:

#edu/stanford/nlp/math/SloppyMath/max:

#edu/stanford/nlp/math/SloppyMath/max:

#edu/stanford/nlp/math/SloppyMath/max:

#edu/stanford/nlp/math/SloppyMath/max:

#edu/stanford/nlp/math/SloppyMath/min:

#edu/stanford/nlp/math/SloppyMath/min:

#edu/stanford/nlp/math/SloppyMath/min:

#edu/stanford/nlp/math/SloppyMath/lgamma:

#edu/stanford/nlp/math/SloppyMath/isDangerous:

#edu/stanford/nlp/math/SloppyMath/isVeryDangerous:

#edu/stanford/nlp/math/SloppyMath/isCloseTo:

#edu/stanford/nlp/math/SloppyMath/logAdd:

#edu/stanford/nlp/math/SloppyMath/logAdd:

#edu/stanford/nlp/math/SloppyMath/nChooseK:

#edu/stanford/nlp/math/SloppyMath/intPow:

#edu/stanford/nlp/math/SloppyMath/intPow:

#edu/stanford/nlp/math/SloppyMath/intPow:

#edu/stanford/nlp/math/SloppyMath/hypergeometric:

#edu/stanford/nlp/math/SloppyMath/exactBinomial:

#edu/stanford/nlp/math/SloppyMath/oneTailedFishersExact:

#edu/stanford/nlp/math/SloppyMath/chiSquare2by2:

#edu/stanford/nlp/math/SloppyMath/sigmoid:

#edu/stanford/nlp/math/SloppyMath/acos:

#edu/stanford/nlp/math/SloppyMath/poisson:

#edu/stanford/nlp/math/SloppyMath/factorial:

#edu/stanford/nlp/math/SloppyMath/parseDouble:

#edu/stanford/nlp/math/SloppyMath/segmentDouble:

#edu/stanford/nlp/math/SloppyMath/parseInt:

#edu/stanford/nlp/math/SloppyMath/main:
edu.stanford.nlp.math.SloppyMath:
edu.stanford.nlp.simple.Sentence$3:

#edu/stanford/nlp/simple/SpanishSentence$2/<init>:
edu.stanford.nlp.simple.SpanishSentence$2:
edu.stanford.nlp.simple.ArabicSentence:

#edu/stanford/nlp/simple/Sentence$1/<init>:
edu.stanford.nlp.simple.Sentence$1:
edu.stanford.nlp.simple.GermanDocument:

#edu/stanford/nlp/simple/FrenchDocument$1/<init>:
edu.stanford.nlp.simple.FrenchDocument$1:

#edu/stanford/nlp/simple/ArabicDocument$1/<init>:
edu.stanford.nlp.simple.ArabicDocument$1:
edu.stanford.nlp.simple.ArabicDocument:
edu.stanford.nlp.simple.Document$8:

#edu/stanford/nlp/simple/ChineseSentence$2/<init>:
edu.stanford.nlp.simple.ChineseSentence$2:

#edu/stanford/nlp/simple/GermanSentence$2/<init>:
edu.stanford.nlp.simple.GermanSentence$2:
edu.stanford.nlp.simple.GermanSentence:
edu.stanford.nlp.simple.ChineseSentence:

#edu/stanford/nlp/simple/SpanishSentence$1/<init>:
edu.stanford.nlp.simple.SpanishSentence$1:

#edu/stanford/nlp/simple/Sentence$2/<init>:
edu.stanford.nlp.simple.Sentence$2:
edu.stanford.nlp.simple.ChineseDocument:
edu.stanford.nlp.simple.Sentence$4:

#edu/stanford/nlp/simple/GermanSentence$1/<init>:
edu.stanford.nlp.simple.GermanSentence$1:

#edu/stanford/nlp/simple/ChineseSentence$1/<init>:
edu.stanford.nlp.simple.ChineseSentence$1:
edu.stanford.nlp.simple.Document$9:
edu.stanford.nlp.simple.Document$5:

#edu/stanford/nlp/simple/SentenceAlgorithms$1/<init>:

#edu/stanford/nlp/simple/SentenceAlgorithms$1/hasNext:

#edu/stanford/nlp/simple/SentenceAlgorithms$1/next:
edu.stanford.nlp.simple.SentenceAlgorithms$1:

#edu/stanford/nlp/simple/ArabicSentence$1/<init>:
edu.stanford.nlp.simple.ArabicSentence$1:
edu.stanford.nlp.simple.SpanishDocument:

#edu/stanford/nlp/simple/ChineseDocument$2/<init>:
edu.stanford.nlp.simple.ChineseDocument$2:
edu.stanford.nlp.simple.Document$11:

#edu/stanford/nlp/simple/Sentence/<init>:

#edu/stanford/nlp/simple/Sentence/<init>:

#edu/stanford/nlp/simple/Sentence/<init>:

#edu/stanford/nlp/simple/Sentence/<init>:

#edu/stanford/nlp/simple/Sentence/<init>:

#edu/stanford/nlp/simple/Sentence/<init>:

#edu/stanford/nlp/simple/Sentence/serialize:

#edu/stanford/nlp/simple/Sentence/tokens:

#edu/stanford/nlp/simple/Sentence/regexner:

#edu/stanford/nlp/simple/Sentence/mentions:

#edu/stanford/nlp/simple/Sentence/mentions:

#edu/stanford/nlp/simple/Sentence/dependencies:

#edu/stanford/nlp/simple/Sentence/governor:

#edu/stanford/nlp/simple/Sentence/governors:

#edu/stanford/nlp/simple/Sentence/incomingDependencyLabel:

#edu/stanford/nlp/simple/Sentence/incomingDependencyLabels:

#edu/stanford/nlp/simple/Sentence/sentiment:

#edu/stanford/nlp/simple/Sentence/coref:

#edu/stanford/nlp/simple/Sentence/asCoreMap:

#edu/stanford/nlp/simple/Sentence/asCoreLabels:

#edu/stanford/nlp/simple/Sentence/updateTokens:

#edu/stanford/nlp/simple/Sentence/updateParse:

#edu/stanford/nlp/simple/Sentence/equals:

#edu/stanford/nlp/simple/Sentence/hashCode:

#edu/stanford/nlp/simple/Sentence/substring:

#edu/stanford/nlp/simple/Sentence/sentenceid:

#edu/stanford/nlp/simple/Sentence/find:

#edu/stanford/nlp/simple/Sentence/semgrex:

#edu/stanford/nlp/simple/Sentence/lambda$coref$11:

#edu/stanford/nlp/simple/Sentence/lambda$kbp$10:

#edu/stanford/nlp/simple/Sentence/lambda$kbp$9:

#edu/stanford/nlp/simple/Sentence/lambda$openie$7:

#edu/stanford/nlp/simple/Sentence/lambda$openie$6:

#edu/stanford/nlp/simple/Sentence/lambda$operators$3:
edu.stanford.nlp.simple.Sentence:
edu.stanford.nlp.simple.Document$7:
edu.stanford.nlp.simple.Document$3:
edu.stanford.nlp.simple.SpanishSentence:

#edu/stanford/nlp/simple/FrenchSentence$1/<init>:
edu.stanford.nlp.simple.FrenchSentence$1:

#edu/stanford/nlp/simple/Document/useServer:

#edu/stanford/nlp/simple/Document/useServer:

#edu/stanford/nlp/simple/Document/<init>:

#edu/stanford/nlp/simple/Document/<init>:

#edu/stanford/nlp/simple/Document/serialize:

#edu/stanford/nlp/simple/Document/json:

#edu/stanford/nlp/simple/Document/jsonMinified:

#edu/stanford/nlp/simple/Document/xml:

#edu/stanford/nlp/simple/Document/xmlMinified:

#edu/stanford/nlp/simple/Document/sentences:

#edu/stanford/nlp/simple/Document/sentences:

#edu/stanford/nlp/simple/Document/coref:

#edu/stanford/nlp/simple/Document/docid:

#edu/stanford/nlp/simple/Document/forceSentences:

#edu/stanford/nlp/simple/Document/runPOS:

#edu/stanford/nlp/simple/Document/runLemma:

#edu/stanford/nlp/simple/Document/mockLemma:

#edu/stanford/nlp/simple/Document/runNER:

#edu/stanford/nlp/simple/Document/runRegexner:

#edu/stanford/nlp/simple/Document/runParse:

#edu/stanford/nlp/simple/Document/runDepparse:

#edu/stanford/nlp/simple/Document/runNatlog:

#edu/stanford/nlp/simple/Document/runOpenie:

#edu/stanford/nlp/simple/Document/runKBP:

#edu/stanford/nlp/simple/Document/runSentiment:

#edu/stanford/nlp/simple/Document/asAnnotation:

#edu/stanford/nlp/simple/Document/fromProto:

#edu/stanford/nlp/simple/Document/equals:

#edu/stanford/nlp/simple/Document/hashCode:
edu.stanford.nlp.simple.Document:
edu.stanford.nlp.simple.Document$1:
edu.stanford.nlp.simple.Document$10:

#edu/stanford/nlp/simple/ArabicSentence$2/<init>:
edu.stanford.nlp.simple.ArabicSentence$2:

#edu/stanford/nlp/simple/Token/pad:

#edu/stanford/nlp/simple/Token/padOpt:

#edu/stanford/nlp/simple/Token/characterOffsetBegin:

#edu/stanford/nlp/simple/Token/characterOffsetEnd:

#edu/stanford/nlp/simple/Token/before:

#edu/stanford/nlp/simple/Token/after:
edu.stanford.nlp.simple.Token:
edu.stanford.nlp.simple.Document$6:
edu.stanford.nlp.simple.Document$4:
edu.stanford.nlp.simple.FrenchDocument:
edu.stanford.nlp.simple.Document$12:

#edu/stanford/nlp/simple/SentenceAlgorithms/keyphraseSpans:

#edu/stanford/nlp/simple/SentenceAlgorithms/headOfSpan:

#edu/stanford/nlp/simple/SentenceAlgorithms/modeInSpan:

#edu/stanford/nlp/simple/SentenceAlgorithms/loopyDependencyPathBetween:

#edu/stanford/nlp/simple/SentenceAlgorithms/dependencyPathBetween:

#edu/stanford/nlp/simple/SentenceAlgorithms/unescapeHTML:

#edu/stanford/nlp/simple/SentenceAlgorithms/lambda$keyphraseSpans$0:
edu.stanford.nlp.simple.SentenceAlgorithms:
edu.stanford.nlp.simple.ChineseDocument$1:

#edu/stanford/nlp/simple/GermanDocument$1/<init>:
edu.stanford.nlp.simple.GermanDocument$1:

#edu/stanford/nlp/simple/SpanishDocument$1/<init>:
edu.stanford.nlp.simple.SpanishDocument$1:
edu.stanford.nlp.simple.Document$2:
edu.stanford.nlp.simple.FrenchSentence:

#edu/stanford/nlp/simple/FrenchSentence$2/<init>:
edu.stanford.nlp.simple.FrenchSentence$2:

#edu/stanford/nlp/simple/SentimentClass/isPositive:

#edu/stanford/nlp/simple/SentimentClass/isNegative:

#edu/stanford/nlp/simple/SentimentClass/isExtreme:

#edu/stanford/nlp/simple/SentimentClass/isMild:

#edu/stanford/nlp/simple/SentimentClass/isNeutral:

#edu/stanford/nlp/simple/SentimentClass/fromInt:
edu.stanford.nlp.simple.SentimentClass:

#edu/stanford/nlp/time/TimeFormatter$ApplyActionWrapper/apply:
edu.stanford.nlp.time.TimeFormatter$ApplyActionWrapper:
edu.stanford.nlp.time.HeidelTimeKBPAnnotator$HeidelTimeOutputReader$TimexNode:

#edu/stanford/nlp/time/TimeFormatter/makeRegex:

#edu/stanford/nlp/time/TimeFormatter/parsePatternTo:

#edu/stanford/nlp/time/TimeFormatter/isSpecialRegexChar:

#edu/stanford/nlp/time/TimeFormatter/parseToken:

#edu/stanford/nlp/time/TimeFormatter/isNumericToken:

#edu/stanford/nlp/time/TimeFormatter/lambda$static$0:
edu.stanford.nlp.time.TimeFormatter:
edu.stanford.nlp.time.SUTime$13:
edu.stanford.nlp.time.SUTime$TimexType:

#edu/stanford/nlp/time/SUTime$TemporalOp$14/apply:

#edu/stanford/nlp/time/SUTime$TemporalOp$14/apply:

#edu/stanford/nlp/time/SUTime$TemporalOp$14/apply:
edu.stanford.nlp.time.SUTime$TemporalOp$14:

#edu/stanford/nlp/time/SUTime$TemporalOp$6/apply:
edu.stanford.nlp.time.SUTime$TemporalOp$6:
edu.stanford.nlp.time.TimeFormatter$LiteralComponent:
edu.stanford.nlp.time.SUTime$6:

#edu/stanford/nlp/time/XMLUtils/printNode:

#edu/stanford/nlp/time/XMLUtils/getAttribute:

#edu/stanford/nlp/time/XMLUtils/removeChildren:

#edu/stanford/nlp/time/XMLUtils/getMatchingNodes:

#edu/stanford/nlp/time/XMLUtils/getNodeText:

#edu/stanford/nlp/time/XMLUtils/getNode:

#edu/stanford/nlp/time/XMLUtils/getMatchingNodes:

#edu/stanford/nlp/time/XMLUtils/getNodeTexts:

#edu/stanford/nlp/time/XMLUtils/getNodeText:

#edu/stanford/nlp/time/XMLUtils/getAttributeValue:

#edu/stanford/nlp/time/XMLUtils/getNode:
edu.stanford.nlp.time.XMLUtils:
edu.stanford.nlp.time.JodaTimeUtils$8:
edu.stanford.nlp.time.TimeFormatter$1:

#edu/stanford/nlp/time/SUTime$TemporalOp$4/apply:
edu.stanford.nlp.time.SUTime$TemporalOp$4:
edu.stanford.nlp.time.SUTime$4:

#edu/stanford/nlp/time/SUTime$OrdinalTime/toFormattedString:

#edu/stanford/nlp/time/SUTime$OrdinalTime/intersect:

#edu/stanford/nlp/time/SUTime$OrdinalTime/resolve:
edu.stanford.nlp.time.SUTime$OrdinalTime:
edu.stanford.nlp.time.SUTime$StandardTemporalType$9:

#edu/stanford/nlp/time/SUTime$TemporalOp$16/apply:
edu.stanford.nlp.time.SUTime$TemporalOp$16:
edu.stanford.nlp.time.SUTime$11:

#edu/stanford/nlp/time/SUTime$TemporalOp/apply:
edu.stanford.nlp.time.SUTime$TemporalOp:

#edu/stanford/nlp/time/SUTimeMain/processTimebankCsvSent:

#edu/stanford/nlp/time/SUTimeMain/processTimebankCsv:

#edu/stanford/nlp/time/SUTimeMain/processTempEval2Doc:

#edu/stanford/nlp/time/SUTimeMain/wordsToSentence:

#edu/stanford/nlp/time/SUTimeMain/sentencesToDocument:

#edu/stanford/nlp/time/SUTimeMain/findTimex:

#edu/stanford/nlp/time/SUTimeMain/updateTimexText:

#edu/stanford/nlp/time/SUTimeMain/readTimexAttrExts:

#edu/stanford/nlp/time/SUTimeMain/processTempEval2Tab:

#edu/stanford/nlp/time/SUTimeMain/processTempEval2:
Warning: Method:edu.stanford.nlp.time.SUTimeMain.processTempEval3 has auto edges.

#edu/stanford/nlp/time/SUTimeMain/processTempEval3File:

#edu/stanford/nlp/time/SUTimeMain/getPipeline:

#edu/stanford/nlp/time/SUTimeMain/configLogger:

#edu/stanford/nlp/time/SUTimeMain/createTimexNodes:

#edu/stanford/nlp/time/SUTimeMain/createTimexNodesPresorted:

#edu/stanford/nlp/time/SUTimeMain/processTextFile:

#edu/stanford/nlp/time/SUTimeMain/processText:

#edu/stanford/nlp/time/SUTimeMain/annotationToTmlTextElement:

#edu/stanford/nlp/time/SUTimeMain/main:

#edu/stanford/nlp/time/SUTimeMain/lambda$processTimebankCsvSent$0:
edu.stanford.nlp.time.SUTimeMain:

#edu/stanford/nlp/time/Options/<init>:
edu.stanford.nlp.time.Options:

#edu/stanford/nlp/time/TimeFormatter$FormatComponent/appendQuantifier:

#edu/stanford/nlp/time/TimeFormatter$FormatComponent/appendRegex:
edu.stanford.nlp.time.TimeFormatter$FormatComponent:
edu.stanford.nlp.time.TimeExpression$Annotation:
edu.stanford.nlp.time.SUTime$15:

#edu/stanford/nlp/time/SUTime$TemporalOp$12/apply:
edu.stanford.nlp.time.SUTime$TemporalOp$12:

#edu/stanford/nlp/time/SUTime$Duration/toTime:

#edu/stanford/nlp/time/SUTime$Duration/toFormattedString:

#edu/stanford/nlp/time/SUTime$Duration/getPeriod:

#edu/stanford/nlp/time/SUTime$Duration/compareTo:

#edu/stanford/nlp/time/SUTime$Duration/intersect:

#edu/stanford/nlp/time/SUTime$Duration/intersect:

#edu/stanford/nlp/time/SUTime$Duration/min:

#edu/stanford/nlp/time/SUTime$Duration/max:
edu.stanford.nlp.time.SUTime$Duration:

#edu/stanford/nlp/time/SUTime$IsoDate/<init>:

#edu/stanford/nlp/time/SUTime$IsoDate/<init>:

#edu/stanford/nlp/time/SUTime$IsoDate/initBase:

#edu/stanford/nlp/time/SUTime$IsoDate/toString:
edu.stanford.nlp.time.SUTime$IsoDate:

#edu/stanford/nlp/time/SUTime$StandardTemporalType/createTemporal:

#edu/stanford/nlp/time/SUTime$StandardTemporalType/create:
edu.stanford.nlp.time.SUTime$StandardTemporalType:
edu.stanford.nlp.time.SUTime$2:

#edu/stanford/nlp/time/SUTime$DurationWithFields/multiplyBy:

#edu/stanford/nlp/time/SUTime$DurationWithFields/divideBy:

#edu/stanford/nlp/time/SUTime$DurationWithFields/getJodaTimePeriod:

#edu/stanford/nlp/time/SUTime$DurationWithFields/getJodaTimeDuration:

#edu/stanford/nlp/time/SUTime$DurationWithFields/resolve:

#edu/stanford/nlp/time/SUTime$DurationWithFields/add:
edu.stanford.nlp.time.SUTime$DurationWithFields:

#edu/stanford/nlp/time/SUTime$TemporalOp$2/apply:
edu.stanford.nlp.time.SUTime$TemporalOp$2:
edu.stanford.nlp.time.SUTimeMain$1:

#edu/stanford/nlp/time/JollyDayHolidays$JollyHoliday/toFormattedString:

#edu/stanford/nlp/time/JollyDayHolidays$JollyHoliday/intersect:

#edu/stanford/nlp/time/JollyDayHolidays$JollyHoliday/resolveWithYear:

#edu/stanford/nlp/time/JollyDayHolidays$JollyHoliday/resolve:
edu.stanford.nlp.time.JollyDayHolidays$JollyHoliday:

#edu/stanford/nlp/time/SUTime/parseInstant:

#edu/stanford/nlp/time/SUTime/parseDateTime:
edu.stanford.nlp.time.SUTime:

#edu/stanford/nlp/time/TimeFormatter$TextDateComponent/<init>:

#edu/stanford/nlp/time/TimeFormatter$TextDateComponent/appendRegex0:
edu.stanford.nlp.time.TimeFormatter$TextDateComponent:
edu.stanford.nlp.time.HeidelTimeKBPAnnotator$HeidelTimeOutputReader$Node:

#edu/stanford/nlp/time/SUTime$PartialTime/<init>:

#edu/stanford/nlp/time/SUTime$PartialTime/hasTime:

#edu/stanford/nlp/time/SUTime$PartialTime/getTimexType:

#edu/stanford/nlp/time/SUTime$PartialTime/appendDateFormats:

#edu/stanford/nlp/time/SUTime$PartialTime/appendTimeFormats:

#edu/stanford/nlp/time/SUTime$PartialTime/getFormatter:

#edu/stanford/nlp/time/SUTime$PartialTime/getDuration:

#edu/stanford/nlp/time/SUTime$PartialTime/getRange:

#edu/stanford/nlp/time/SUTime$PartialTime/withStandardFields:

#edu/stanford/nlp/time/SUTime$PartialTime/reduceGranularityTo:

#edu/stanford/nlp/time/SUTime$PartialTime/padMoreSpecificFields:

#edu/stanford/nlp/time/SUTime$PartialTime/toFormattedString:

#edu/stanford/nlp/time/SUTime$PartialTime/resolve:

#edu/stanford/nlp/time/SUTime$PartialTime/getCompatible:

#edu/stanford/nlp/time/SUTime$PartialTime/getPeriod:

#edu/stanford/nlp/time/SUTime$PartialTime/toList:

#edu/stanford/nlp/time/SUTime$PartialTime/intersect:

#edu/stanford/nlp/time/SUTime$PartialTime/add:
edu.stanford.nlp.time.SUTime$PartialTime:

#edu/stanford/nlp/time/ParsedGigawordReader/toAnnotation:

#edu/stanford/nlp/time/ParsedGigawordReader/preTerminals:

#edu/stanford/nlp/time/ParsedGigawordReader/isPreterminal:
edu.stanford.nlp.time.ParsedGigawordReader:
edu.stanford.nlp.time.JodaTimeUtils$11:
edu.stanford.nlp.time.TimexTreeAnnotator$MatchType:

#edu/stanford/nlp/time/SUTime$TemporalOp$10/apply:
edu.stanford.nlp.time.SUTime$TemporalOp$10:
edu.stanford.nlp.time.SUTime$5:
edu.stanford.nlp.time.SUTime$StandardTemporalType$8:
edu.stanford.nlp.time.TimeFormatter$JavaDateFormatExtractor:

#edu/stanford/nlp/time/GenericTimeExpressionPatterns/<init>:

#edu/stanford/nlp/time/GenericTimeExpressionPatterns/initEnv:

#edu/stanford/nlp/time/GenericTimeExpressionPatterns/determineRelFlags:
edu.stanford.nlp.time.GenericTimeExpressionPatterns:

#edu/stanford/nlp/time/HeidelTimeAnnotator/annotate:

#edu/stanford/nlp/time/HeidelTimeAnnotator/toTimexCoreMaps:
edu.stanford.nlp.time.HeidelTimeAnnotator:

#edu/stanford/nlp/time/SUTime$TemporalOp$5/apply:
edu.stanford.nlp.time.SUTime$TemporalOp$5:

#edu/stanford/nlp/time/TimeFormatter$TimePatternExtractRuleCreator/create:
edu.stanford.nlp.time.TimeFormatter$TimePatternExtractRuleCreator:
edu.stanford.nlp.time.HeidelTimeKBPAnnotator$1:
edu.stanford.nlp.time.SUTime$TemporalSet:
edu.stanford.nlp.time.SUTime$TimeUnit:
edu.stanford.nlp.time.TimeExpression$TimeIndexAnnotation:

#edu/stanford/nlp/time/SUTime$TemporalOp$17/apply:
edu.stanford.nlp.time.SUTime$TemporalOp$17:

#edu/stanford/nlp/time/SUTime$PeriodicTemporalSet/isGrounded:

#edu/stanford/nlp/time/SUTime$PeriodicTemporalSet/getTimexAttributes:

#edu/stanford/nlp/time/SUTime$PeriodicTemporalSet/resolve:

#edu/stanford/nlp/time/SUTime$PeriodicTemporalSet/toFormattedString:

#edu/stanford/nlp/time/SUTime$PeriodicTemporalSet/intersect:
edu.stanford.nlp.time.SUTime$PeriodicTemporalSet:
edu.stanford.nlp.time.SUTime$10:

#edu/stanford/nlp/time/SUTime$Range/isGrounded:

#edu/stanford/nlp/time/SUTime$Range/getTimexAttributes:

#edu/stanford/nlp/time/SUTime$Range/toFormattedString:

#edu/stanford/nlp/time/SUTime$Range/resolve:

#edu/stanford/nlp/time/SUTime$Range/offset:

#edu/stanford/nlp/time/SUTime$Range/add:

#edu/stanford/nlp/time/SUTime$Range/beginTime:

#edu/stanford/nlp/time/SUTime$Range/mid:

#edu/stanford/nlp/time/SUTime$Range/intersect:

#edu/stanford/nlp/time/SUTime$Range/contains:
edu.stanford.nlp.time.SUTime$Range:
edu.stanford.nlp.time.SUTime$12:

#edu/stanford/nlp/time/SUTime$TemporalOp$15/apply:

#edu/stanford/nlp/time/SUTime$TemporalOp$15/apply:

#edu/stanford/nlp/time/SUTime$TemporalOp$15/apply:
edu.stanford.nlp.time.SUTime$TemporalOp$15:

#edu/stanford/nlp/time/TimeAnnotator/annotate:

#edu/stanford/nlp/time/TimeAnnotator/annotateSingleSentence:
edu.stanford.nlp.time.TimeAnnotator:
edu.stanford.nlp.time.JollyDayHolidays$MyXMLManager:
edu.stanford.nlp.time.TimeExpression$ChildrenAnnotation:
edu.stanford.nlp.time.JodaTimeUtils$9:

#edu/stanford/nlp/time/JodaTimeUtils/hasField:

#edu/stanford/nlp/time/JodaTimeUtils/hasYYYYMMDD:

#edu/stanford/nlp/time/JodaTimeUtils/hasYYMMDD:

#edu/stanford/nlp/time/JodaTimeUtils/hasField:

#edu/stanford/nlp/time/JodaTimeUtils/setField:

#edu/stanford/nlp/time/JodaTimeUtils/getSupportedDurationFields:

#edu/stanford/nlp/time/JodaTimeUtils/getUnsupportedDurationPeriod:

#edu/stanford/nlp/time/JodaTimeUtils/combine:

#edu/stanford/nlp/time/JodaTimeUtils/getMostGeneral:

#edu/stanford/nlp/time/JodaTimeUtils/getMostSpecific:

#edu/stanford/nlp/time/JodaTimeUtils/getMostGeneral:

#edu/stanford/nlp/time/JodaTimeUtils/getMostSpecific:

#edu/stanford/nlp/time/JodaTimeUtils/getJodaTimePeriod:

#edu/stanford/nlp/time/JodaTimeUtils/combineMoreGeneralFields:

#edu/stanford/nlp/time/JodaTimeUtils/discardMoreSpecificFields:

#edu/stanford/nlp/time/JodaTimeUtils/discardMoreSpecificFields:

#edu/stanford/nlp/time/JodaTimeUtils/discardMoreSpecificFields:

#edu/stanford/nlp/time/JodaTimeUtils/padMoreSpecificFields:

#edu/stanford/nlp/time/JodaTimeUtils/isCompatible:

#edu/stanford/nlp/time/JodaTimeUtils/resolveDowToDay:

#edu/stanford/nlp/time/JodaTimeUtils/withWeekYear:

#edu/stanford/nlp/time/JodaTimeUtils/resolveDowToDay:

#edu/stanford/nlp/time/JodaTimeUtils/resolveWeek:

#edu/stanford/nlp/time/JodaTimeUtils/resolveWeek:

#edu/stanford/nlp/time/JodaTimeUtils/getInstant:

#edu/stanford/nlp/time/JodaTimeUtils/fromTimezone:

#edu/stanford/nlp/time/JodaTimeUtils/getPartial:

#edu/stanford/nlp/time/JodaTimeUtils/isMoreGeneral:

#edu/stanford/nlp/time/JodaTimeUtils/isMoreSpecific:

#edu/stanford/nlp/time/JodaTimeUtils/zeroPad:

#edu/stanford/nlp/time/JodaTimeUtils/noFurtherFields:

#edu/stanford/nlp/time/JodaTimeUtils/timexDateValue:

#edu/stanford/nlp/time/JodaTimeUtils/consistentWithForced:

#edu/stanford/nlp/time/JodaTimeUtils/timexDurationValue:
edu.stanford.nlp.time.JodaTimeUtils:
edu.stanford.nlp.time.SUTime$7:

#edu/stanford/nlp/time/SUTime$TemporalOp$7/apply:
edu.stanford.nlp.time.SUTime$TemporalOp$7:

#edu/stanford/nlp/time/SUTimeMain$TimebankTimex/<init>:
edu.stanford.nlp.time.SUTimeMain$TimebankTimex:

#edu/stanford/nlp/time/SUTime$TemporalOp$3/apply:
edu.stanford.nlp.time.SUTime$TemporalOp$3:

#edu/stanford/nlp/time/SUTime$IsoTime/<init>:

#edu/stanford/nlp/time/SUTime$IsoTime/<init>:

#edu/stanford/nlp/time/SUTime$IsoTime/initBase:
edu.stanford.nlp.time.SUTime$IsoTime:
edu.stanford.nlp.time.TimeAnnotations:
edu.stanford.nlp.time.SUTime$3:

#edu/stanford/nlp/time/SUTime$TimeWithRange/getDuration:

#edu/stanford/nlp/time/SUTime$TimeWithRange/getRange:

#edu/stanford/nlp/time/SUTime$TimeWithRange/add:

#edu/stanford/nlp/time/SUTime$TimeWithRange/intersect:

#edu/stanford/nlp/time/SUTime$TimeWithRange/resolve:

#edu/stanford/nlp/time/SUTime$TimeWithRange/toFormattedString:
edu.stanford.nlp.time.SUTime$TimeWithRange:
edu.stanford.nlp.time.SUTime$TimexAttr:

#edu/stanford/nlp/time/SUTime$TemporalOp$11/apply:
edu.stanford.nlp.time.SUTime$TemporalOp$11:
edu.stanford.nlp.time.TimeFormatter$RegexComponent:
edu.stanford.nlp.time.TimeExpressionPatterns:
edu.stanford.nlp.time.JodaTimeUtils$10:

#edu/stanford/nlp/time/GenericTimeExpressionPatterns$MatchedExpressionValueTypeMatchNodePattern/match:
edu.stanford.nlp.time.GenericTimeExpressionPatterns$MatchedExpressionValueTypeMatchNodePattern:
edu.stanford.nlp.time.SUTime$14:

#edu/stanford/nlp/time/SUTime$TemporalOp$13/apply:
edu.stanford.nlp.time.SUTime$TemporalOp$13:

#edu/stanford/nlp/time/SUTime$TemporalOp$1/apply:
edu.stanford.nlp.time.SUTime$TemporalOp$1:

#edu/stanford/nlp/time/TimeExpressionExtractorImpl/init:

#edu/stanford/nlp/time/TimeExpressionExtractorImpl/extractTimeExpressionCoreMaps:

#edu/stanford/nlp/time/TimeExpressionExtractorImpl/toCoreMaps:

#edu/stanford/nlp/time/TimeExpressionExtractorImpl/extractTimeExpressions:

#edu/stanford/nlp/time/TimeExpressionExtractorImpl/extractTimeExpressions:

#edu/stanford/nlp/time/TimeExpressionExtractorImpl/resolveTimeExpression:

#edu/stanford/nlp/time/TimeExpressionExtractorImpl/resolveTimeExpressions:

#edu/stanford/nlp/time/TimeExpressionExtractorImpl/findReferenceDate:
edu.stanford.nlp.time.TimeExpressionExtractorImpl:
edu.stanford.nlp.time.SUTime$1:

#edu/stanford/nlp/time/TimeExpression/addMod:

#edu/stanford/nlp/time/TimeExpression/extractAnnotation:

#edu/stanford/nlp/time/TimeExpression/extractAnnotation:

#edu/stanford/nlp/time/TimeExpression/getTemporal:

#edu/stanford/nlp/time/TimeExpression/lambda$static$0:
edu.stanford.nlp.time.TimeExpression:
edu.stanford.nlp.time.TimexTreeAnnotator$1:

#edu/stanford/nlp/time/SUTime$RefTime/toFormattedString:

#edu/stanford/nlp/time/SUTime$RefTime/offset:

#edu/stanford/nlp/time/SUTime$RefTime/resolve:
edu.stanford.nlp.time.SUTime$RefTime:

#edu/stanford/nlp/time/SUTimeSimpleParser/parseOrNull:

#edu/stanford/nlp/time/SUTimeSimpleParser/parse:

#edu/stanford/nlp/time/SUTimeSimpleParser/parseUsingCache:
edu.stanford.nlp.time.SUTimeSimpleParser:

#edu/stanford/nlp/time/HeidelTimeKBPAnnotator/annotate:

#edu/stanford/nlp/time/HeidelTimeKBPAnnotator/getPubDate:

#edu/stanford/nlp/time/HeidelTimeKBPAnnotator/prepareHeidelTimeInput:
edu.stanford.nlp.time.HeidelTimeKBPAnnotator:
edu.stanford.nlp.time.JodaTimeUtils$3:
edu.stanford.nlp.time.Options$RelativeHeuristicLevel:
edu.stanford.nlp.time.SUTime$InexactDuration:

#edu/stanford/nlp/time/TimeFormatter$CustomDateFormatExtractor/<init>:

#edu/stanford/nlp/time/TimeFormatter$CustomDateFormatExtractor/apply:

#edu/stanford/nlp/time/TimeFormatter$CustomDateFormatExtractor/apply:
edu.stanford.nlp.time.TimeFormatter$CustomDateFormatExtractor:

#edu/stanford/nlp/time/TimeFormatter$NumericDateComponent/appendRegex0:

#edu/stanford/nlp/time/TimeFormatter$NumericDateComponent/parseValue:
edu.stanford.nlp.time.TimeFormatter$NumericDateComponent:

#edu/stanford/nlp/time/GenericTimeExpressionPatterns$5/checkArgs:

#edu/stanford/nlp/time/GenericTimeExpressionPatterns$5/apply:
edu.stanford.nlp.time.GenericTimeExpressionPatterns$5:
edu.stanford.nlp.time.SUTimeMain$EvalStats:
edu.stanford.nlp.time.SUTime$StandardTemporalType$2:
edu.stanford.nlp.time.JodaTimeUtils$1:
edu.stanford.nlp.time.SUTime$StandardTemporalType$6:

#edu/stanford/nlp/time/SUTime$CompositePartialTime/getJodaTimeInstant:

#edu/stanford/nlp/time/SUTime$CompositePartialTime/getDuration:

#edu/stanford/nlp/time/SUTime$CompositePartialTime/getPeriod:

#edu/stanford/nlp/time/SUTime$CompositePartialTime/getIntersectedRange:

#edu/stanford/nlp/time/SUTime$CompositePartialTime/getRange:

#edu/stanford/nlp/time/SUTime$CompositePartialTime/intersect:

#edu/stanford/nlp/time/SUTime$CompositePartialTime/resolve:

#edu/stanford/nlp/time/SUTime$CompositePartialTime/getFormatter:

#edu/stanford/nlp/time/SUTime$CompositePartialTime/getTimexType:
edu.stanford.nlp.time.SUTime$CompositePartialTime:

#edu/stanford/nlp/time/SUTime$RelativeTime/isGrounded:

#edu/stanford/nlp/time/SUTime$RelativeTime/getTimexAttributes:

#edu/stanford/nlp/time/SUTime$RelativeTime/toFormattedString:

#edu/stanford/nlp/time/SUTime$RelativeTime/resolve:

#edu/stanford/nlp/time/SUTime$RelativeTime/equals:

#edu/stanford/nlp/time/SUTime$RelativeTime/hashCode:

#edu/stanford/nlp/time/SUTime$RelativeTime/add:

#edu/stanford/nlp/time/SUTime$RelativeTime/intersect:
edu.stanford.nlp.time.SUTime$RelativeTime:

#edu/stanford/nlp/time/SUTime$GroundedTime/intersect:

#edu/stanford/nlp/time/SUTime$GroundedTime/intersect:
edu.stanford.nlp.time.SUTime$GroundedTime:
edu.stanford.nlp.time.JodaTimeUtils$5:
edu.stanford.nlp.time.TimeExpressionExtractor:

#edu/stanford/nlp/time/TimeFormatter$TimeZoneIdComponent/updateTemporal:
edu.stanford.nlp.time.TimeFormatter$TimeZoneIdComponent:

#edu/stanford/nlp/time/SUTime$ExplicitTemporalSet/setTimeZone:

#edu/stanford/nlp/time/SUTime$ExplicitTemporalSet/resolve:

#edu/stanford/nlp/time/SUTime$ExplicitTemporalSet/toFormattedString:

#edu/stanford/nlp/time/SUTime$ExplicitTemporalSet/intersect:
edu.stanford.nlp.time.SUTime$ExplicitTemporalSet:

#edu/stanford/nlp/time/Timex/<init>:

#edu/stanford/nlp/time/Timex/<init>:

#edu/stanford/nlp/time/Timex/init:

#edu/stanford/nlp/time/Timex/toString:

#edu/stanford/nlp/time/Timex/equals:

#edu/stanford/nlp/time/Timex/hashCode:

#edu/stanford/nlp/time/Timex/toXmlElement:

#edu/stanford/nlp/time/Timex/fromXml:

#edu/stanford/nlp/time/Timex/fromMap:

#edu/stanford/nlp/time/Timex/getDate:

#edu/stanford/nlp/time/Timex/getRange:
edu.stanford.nlp.time.Timex:
edu.stanford.nlp.time.Timex$Range:

#edu/stanford/nlp/time/GenericTimeExpressionPatterns$1/addEndPoints:

#edu/stanford/nlp/time/GenericTimeExpressionPatterns$1/apply:
edu.stanford.nlp.time.GenericTimeExpressionPatterns$1:
edu.stanford.nlp.time.SUTimeSimpleParser$SUTimeParsingError:

#edu/stanford/nlp/time/SUTime$IsoDateTime/hasTime:
edu.stanford.nlp.time.SUTime$IsoDateTime:

#edu/stanford/nlp/time/GenericTimeExpressionPatterns$3/checkArgs:

#edu/stanford/nlp/time/GenericTimeExpressionPatterns$3/apply:
edu.stanford.nlp.time.GenericTimeExpressionPatterns$3:
edu.stanford.nlp.time.TimeFormatter$JodaDateTimeFormatExtractor:
edu.stanford.nlp.time.SUTimeMain$TimexAttributes:

#edu/stanford/nlp/time/SUTimeMain$TimebankSent/add:
edu.stanford.nlp.time.SUTimeMain$TimebankSent:

#edu/stanford/nlp/time/TimeFormatter$TimeZoneOffsetComponent/appendRegex0:

#edu/stanford/nlp/time/TimeFormatter$TimeZoneOffsetComponent/parseOffsetMillis:
edu.stanford.nlp.time.TimeFormatter$TimeZoneOffsetComponent:
edu.stanford.nlp.time.JodaTimeUtils$7:
edu.stanford.nlp.time.TimeExpressionExtractorFactory:
edu.stanford.nlp.time.TimeAnnotations$TimexAnnotations:
edu.stanford.nlp.time.SUTime$TimexMod:

#edu/stanford/nlp/time/SUTime$Temporal/getPeriod:

#edu/stanford/nlp/time/SUTime$Temporal/getGranularity:

#edu/stanford/nlp/time/SUTime$Temporal/getUncertaintyGranularity:

#edu/stanford/nlp/time/SUTime$Temporal/getTimexAttributes:

#edu/stanford/nlp/time/SUTime$Temporal/getTimexType:

#edu/stanford/nlp/time/SUTime$Temporal/setTimeZone:

#edu/stanford/nlp/time/SUTime$Temporal/next:

#edu/stanford/nlp/time/SUTime$Temporal/prev:
edu.stanford.nlp.time.SUTime$Temporal:
edu.stanford.nlp.time.SUTime$9:
edu.stanford.nlp.time.JodaTimeUtils$ConversionOptions:
edu.stanford.nlp.time.SUTime$StandardTemporalType$4:

#edu/stanford/nlp/time/SUTime$TemporalOp$9/apply:
edu.stanford.nlp.time.SUTime$TemporalOp$9:
edu.stanford.nlp.time.SUTime$TimexDocFunc:

#edu/stanford/nlp/time/GenericTimeExpressionPatterns$4/checkArgs:

#edu/stanford/nlp/time/GenericTimeExpressionPatterns$4/apply:
edu.stanford.nlp.time.GenericTimeExpressionPatterns$4:

#edu/stanford/nlp/time/SUTime$DurationWithMillis/multiplyBy:

#edu/stanford/nlp/time/SUTime$DurationWithMillis/divideBy:

#edu/stanford/nlp/time/SUTime$DurationWithMillis/add:
edu.stanford.nlp.time.SUTime$DurationWithMillis:

#edu/stanford/nlp/time/TimeFormatter$FormatterBuilder/toTextRegex:

#edu/stanford/nlp/time/TimeFormatter$FormatterBuilder/appendComponent:

#edu/stanford/nlp/time/TimeFormatter$FormatterBuilder/appendHourOfDay:

#edu/stanford/nlp/time/TimeFormatter$FormatterBuilder/appendQuantifier:
edu.stanford.nlp.time.TimeFormatter$FormatterBuilder:
edu.stanford.nlp.time.TimeAnnotations$TimexAnnotation:

#edu/stanford/nlp/time/GenericTimeExpressionPatterns$TimexTypeMatchNodePattern/match:
edu.stanford.nlp.time.GenericTimeExpressionPatterns$TimexTypeMatchNodePattern:
edu.stanford.nlp.time.SUTimeMain$InputType:

#edu/stanford/nlp/time/SUTime$SimpleTime/toFormattedString:
edu.stanford.nlp.time.SUTime$SimpleTime:

#edu/stanford/nlp/time/GUTimeAnnotator/annotate:

#edu/stanford/nlp/time/GUTimeAnnotator/toInputXML:

#edu/stanford/nlp/time/GUTimeAnnotator/toTimexCoreMaps:
edu.stanford.nlp.time.GUTimeAnnotator:
edu.stanford.nlp.time.SUTime$StandardTemporalType$3:

#edu/stanford/nlp/time/SUTime$TimeIndex/getTemporalExpr:

#edu/stanford/nlp/time/SUTime$TimeIndex/getTemporal:

#edu/stanford/nlp/time/SUTime$TimeIndex/addTemporalExpr:

#edu/stanford/nlp/time/SUTime$TimeIndex/toString:
edu.stanford.nlp.time.SUTime$TimeIndex:
edu.stanford.nlp.time.SUTime$StandardTemporalType$1:
edu.stanford.nlp.time.JodaTimeUtils$2:

#edu/stanford/nlp/time/HeidelTimeKBPAnnotator$HeidelTimeOutputReader/process:

#edu/stanford/nlp/time/HeidelTimeKBPAnnotator$HeidelTimeOutputReader/makeTimexMap:

#edu/stanford/nlp/time/HeidelTimeKBPAnnotator$HeidelTimeOutputReader/toNodeSequence:
edu.stanford.nlp.time.HeidelTimeKBPAnnotator$HeidelTimeOutputReader:

#edu/stanford/nlp/time/SUTime$DurationRange/toFormattedString:

#edu/stanford/nlp/time/SUTime$DurationRange/getJodaTimePeriod:

#edu/stanford/nlp/time/SUTime$DurationRange/getJodaTimeDuration:

#edu/stanford/nlp/time/SUTime$DurationRange/add:

#edu/stanford/nlp/time/SUTime$DurationRange/multiplyBy:

#edu/stanford/nlp/time/SUTime$DurationRange/divideBy:
edu.stanford.nlp.time.SUTime$DurationRange:

#edu/stanford/nlp/time/SUTime$Time/getGranularity:

#edu/stanford/nlp/time/SUTime$Time/getInterval:

#edu/stanford/nlp/time/SUTime$Time/isComparable:

#edu/stanford/nlp/time/SUTime$Time/getTimexType:

#edu/stanford/nlp/time/SUTime$Time/offset:

#edu/stanford/nlp/time/SUTime$Time/closest:

#edu/stanford/nlp/time/SUTime$Time/distance:

#edu/stanford/nlp/time/SUTime$Time/difference:

#edu/stanford/nlp/time/SUTime$Time/makeComposite:

#edu/stanford/nlp/time/SUTime$Time/intersect:

#edu/stanford/nlp/time/SUTime$Time/intersect:

#edu/stanford/nlp/time/SUTime$Time/min:

#edu/stanford/nlp/time/SUTime$Time/max:
edu.stanford.nlp.time.SUTime$Time:

#edu/stanford/nlp/time/GenericTimeExpressionPatterns$2/checkArgs:

#edu/stanford/nlp/time/GenericTimeExpressionPatterns$2/apply:
edu.stanford.nlp.time.GenericTimeExpressionPatterns$2:

#edu/stanford/nlp/time/JollyDayHolidays/init:

#edu/stanford/nlp/time/JollyDayHolidays/bind:

#edu/stanford/nlp/time/JollyDayHolidays/getAllHolidaysMap:

#edu/stanford/nlp/time/JollyDayHolidays/getAllHolidaysCVMap:

#edu/stanford/nlp/time/JollyDayHolidays/getAllHolidays:

#edu/stanford/nlp/time/JollyDayHolidays/getAllHolidays:

#edu/stanford/nlp/time/JollyDayHolidays/isGetter:
edu.stanford.nlp.time.JollyDayHolidays:

#edu/stanford/nlp/time/SUTime$TemporalOp$8/apply:
edu.stanford.nlp.time.SUTime$TemporalOp$8:
edu.stanford.nlp.time.SUTime$8:
edu.stanford.nlp.time.SUTime$StandardTemporalType$5:
edu.stanford.nlp.time.JodaTimeUtils$6:

#edu/stanford/nlp/time/ParsedGigawordReader$1/hasNext:

#edu/stanford/nlp/time/ParsedGigawordReader$1/next:

#edu/stanford/nlp/time/ParsedGigawordReader$1/findReader:

#edu/stanford/nlp/time/ParsedGigawordReader$1/findAnnotation:
edu.stanford.nlp.time.ParsedGigawordReader$1:

#edu/stanford/nlp/time/TimeFormatter$RelaxedNumericDateComponent/<init>:

#edu/stanford/nlp/time/TimeFormatter$RelaxedNumericDateComponent/appendRegex0:

#edu/stanford/nlp/time/TimeFormatter$RelaxedNumericDateComponent/updateTemporal:
edu.stanford.nlp.time.TimeFormatter$RelaxedNumericDateComponent:

#edu/stanford/nlp/time/TimeFormatter$DateTimeFieldComponent/updateTemporal:
edu.stanford.nlp.time.TimeFormatter$DateTimeFieldComponent:
edu.stanford.nlp.time.JodaTimeUtils$4:

#edu/stanford/nlp/time/SUTime$InexactTime/compareTo:

#edu/stanford/nlp/time/SUTime$InexactTime/getDuration:

#edu/stanford/nlp/time/SUTime$InexactTime/getRange:

#edu/stanford/nlp/time/SUTime$InexactTime/add:

#edu/stanford/nlp/time/SUTime$InexactTime/resolve:

#edu/stanford/nlp/time/SUTime$InexactTime/getJodaTimeInstant:

#edu/stanford/nlp/time/SUTime$InexactTime/getJodaTimePartial:

#edu/stanford/nlp/time/SUTime$InexactTime/toFormattedString:
edu.stanford.nlp.time.SUTime$InexactTime:
edu.stanford.nlp.time.SUTime$StandardTemporalType$7:

#edu/stanford/nlp/time/TimeFormatter$TimeZoneComponent/<init>:

#edu/stanford/nlp/time/TimeFormatter$TimeZoneComponent/updateTimeZoneNames:

#edu/stanford/nlp/time/TimeFormatter$TimeZoneComponent/parseDateTimeZone:

#edu/stanford/nlp/time/TimeFormatter$TimeZoneComponent/updateTemporal:
edu.stanford.nlp.time.TimeFormatter$TimeZoneComponent:

#edu/stanford/nlp/time/SUTime$TemporalOp$18/apply:
edu.stanford.nlp.time.SUTime$TemporalOp$18:

#edu/stanford/nlp/time/TimexTreeAnnotator/annotate:

#edu/stanford/nlp/time/TimexTreeAnnotator/endOffset:

#edu/stanford/nlp/time/TimexTreeAnnotator/lambda$annotate$1:

#edu/stanford/nlp/time/TimexTreeAnnotator/lambda$annotate$0:
edu.stanford.nlp.time.TimexTreeAnnotator:

#edu/stanford/nlp/time/suservlet/SUTimeServlet/parseBoolean:

#edu/stanford/nlp/time/suservlet/SUTimeServlet/doGet:

#edu/stanford/nlp/time/suservlet/SUTimeServlet/getRuleFilepaths:

#edu/stanford/nlp/time/suservlet/SUTimeServlet/getTimeAnnotatorProperties:

#edu/stanford/nlp/time/suservlet/SUTimeServlet/displayAnnotation:

#edu/stanford/nlp/time/suservlet/SUTimeServlet/addResults:
edu.stanford.nlp.time.suservlet.SUTimeServlet:

#edu/stanford/nlp/time/suservlet/SUTimePipeline/<init>:

#edu/stanford/nlp/time/suservlet/SUTimePipeline/getTimeAnnotator:

#edu/stanford/nlp/time/suservlet/SUTimePipeline/process:

#edu/stanford/nlp/time/suservlet/SUTimePipeline/main:
edu.stanford.nlp.time.suservlet.SUTimePipeline:

#edu/stanford/nlp/objectbank/ObjectBank/iterator:

#edu/stanford/nlp/objectbank/ObjectBank/isEmpty:

#edu/stanford/nlp/objectbank/ObjectBank/contains:

#edu/stanford/nlp/objectbank/ObjectBank/containsAll:

#edu/stanford/nlp/objectbank/ObjectBank/size:

#edu/stanford/nlp/objectbank/ObjectBank/toArray:

#edu/stanford/nlp/objectbank/ObjectBank/toArray:
edu.stanford.nlp.objectbank.ObjectBank:
edu.stanford.nlp.objectbank.LineIterator$LineIteratorFactory:
edu.stanford.nlp.objectbank.ReaderIteratorFactory:
edu.stanford.nlp.objectbank.IteratorFromReaderFactory:

#edu/stanford/nlp/objectbank/ResettableReaderIteratorFactory/iterator:
edu.stanford.nlp.objectbank.ResettableReaderIteratorFactory:
edu.stanford.nlp.objectbank.IdentityFunction:

#edu/stanford/nlp/objectbank/ReaderIteratorFactory$ReaderIterator/setNextObject:

#edu/stanford/nlp/objectbank/ReaderIteratorFactory$ReaderIterator/hasNext:

#edu/stanford/nlp/objectbank/ReaderIteratorFactory$ReaderIterator/next:
edu.stanford.nlp.objectbank.ReaderIteratorFactory$ReaderIterator:

#edu/stanford/nlp/objectbank/XMLBeginEndIterator/getNext:

#edu/stanford/nlp/objectbank/XMLBeginEndIterator/hasNext:

#edu/stanford/nlp/objectbank/XMLBeginEndIterator/next:

#edu/stanford/nlp/objectbank/XMLBeginEndIterator/main:
edu.stanford.nlp.objectbank.XMLBeginEndIterator:
edu.stanford.nlp.objectbank.DelimitRegExIterator$DelimitRegExIteratorFactory:

#edu/stanford/nlp/objectbank/DelimitRegExIterator/<init>:

#edu/stanford/nlp/objectbank/DelimitRegExIterator/setNext:

#edu/stanford/nlp/objectbank/DelimitRegExIterator/hasNext:

#edu/stanford/nlp/objectbank/DelimitRegExIterator/next:
edu.stanford.nlp.objectbank.DelimitRegExIterator:
edu.stanford.nlp.objectbank.XMLBeginEndIterator$XMLBeginEndIteratorFactory:
edu.stanford.nlp.objectbank.ObjectBank$PathToFileFunction:

#edu/stanford/nlp/objectbank/ObjectBank$OBIterator/setNextObject:
Warning: Method:edu.stanford.nlp.objectbank.ObjectBank$OBIterator.setNextObjectHelper has incoming edges.

#edu/stanford/nlp/objectbank/ObjectBank$OBIterator/hasNext:

#edu/stanford/nlp/objectbank/ObjectBank$OBIterator/next:
edu.stanford.nlp.objectbank.ObjectBank$OBIterator:

#edu/stanford/nlp/objectbank/LineIterator/setNext:

#edu/stanford/nlp/objectbank/LineIterator/hasNext:

#edu/stanford/nlp/objectbank/LineIterator/next:
edu.stanford.nlp.objectbank.LineIterator:
edu.stanford.nlp.examples.BasicPipelineExample:

#edu/stanford/nlp/examples/TokensRegexExample/main:
edu.stanford.nlp.examples.TokensRegexExample:

#edu/stanford/nlp/sequences/PlainTextDocumentReaderAndWriter/init:

#edu/stanford/nlp/sequences/PlainTextDocumentReaderAndWriter/getIterator:

#edu/stanford/nlp/sequences/PlainTextDocumentReaderAndWriter/printAnswers:

#edu/stanford/nlp/sequences/PlainTextDocumentReaderAndWriter/printAnswers:

#edu/stanford/nlp/sequences/PlainTextDocumentReaderAndWriter/printAnswersTokenizedText:

#edu/stanford/nlp/sequences/PlainTextDocumentReaderAndWriter/printAnswersAsIsText:

#edu/stanford/nlp/sequences/PlainTextDocumentReaderAndWriter/printAnswersTokenizedTextTsv:

#edu/stanford/nlp/sequences/PlainTextDocumentReaderAndWriter/printAnswersAsIsTextTsv:

#edu/stanford/nlp/sequences/PlainTextDocumentReaderAndWriter/printAnswersAsIsTextTabbed:

#edu/stanford/nlp/sequences/PlainTextDocumentReaderAndWriter/printAnswersTokenizedTextTabbed:

#edu/stanford/nlp/sequences/PlainTextDocumentReaderAndWriter/printAnswersXML:

#edu/stanford/nlp/sequences/PlainTextDocumentReaderAndWriter/printAnswersTokenizedXML:

#edu/stanford/nlp/sequences/PlainTextDocumentReaderAndWriter/printAnswersInlineXML:

#edu/stanford/nlp/sequences/PlainTextDocumentReaderAndWriter/printAnswersTokenizedInlineXML:
edu.stanford.nlp.sequences.PlainTextDocumentReaderAndWriter:

#edu/stanford/nlp/sequences/LibSVMReaderAndWriter/printAnswers:
edu.stanford.nlp.sequences.LibSVMReaderAndWriter:

#edu/stanford/nlp/sequences/ColumnTabDocumentReaderWriter/init:

#edu/stanford/nlp/sequences/ColumnTabDocumentReaderWriter/init:

#edu/stanford/nlp/sequences/ColumnTabDocumentReaderWriter/getIterator:

#edu/stanford/nlp/sequences/ColumnTabDocumentReaderWriter/getDocIterator:

#edu/stanford/nlp/sequences/ColumnTabDocumentReaderWriter/getDocIterator:

#edu/stanford/nlp/sequences/ColumnTabDocumentReaderWriter/join:

#edu/stanford/nlp/sequences/ColumnTabDocumentReaderWriter/printAnswers:
edu.stanford.nlp.sequences.ColumnTabDocumentReaderWriter:

#edu/stanford/nlp/sequences/ColumnDocumentReaderAndWriter$ColumnDocParser/apply:
edu.stanford.nlp.sequences.ColumnDocumentReaderAndWriter$ColumnDocParser:

#edu/stanford/nlp/sequences/SeqClassifierFlags/setProperties:

#edu/stanford/nlp/sequences/SeqClassifierFlags/getFeatureFactory:

#edu/stanford/nlp/sequences/SeqClassifierFlags/getNotNullTrueStringRep:
edu.stanford.nlp.sequences.SeqClassifierFlags:
edu.stanford.nlp.sequences.BeamBestSequenceFinder$1:
edu.stanford.nlp.sequences.PlainTextDocumentReaderAndWriter$1:

#edu/stanford/nlp/sequences/MalletReaderAndWriter/printAnswers:
edu.stanford.nlp.sequences.MalletReaderAndWriter:
edu.stanford.nlp.sequences.LibSVMReaderAndWriter$1:
edu.stanford.nlp.sequences.CoolingSchedule$1:

#edu/stanford/nlp/sequences/Clique$CliqueEqualityWrapper/equals:

#edu/stanford/nlp/sequences/Clique$CliqueEqualityWrapper/hashCode:
edu.stanford.nlp.sequences.Clique$CliqueEqualityWrapper:

#edu/stanford/nlp/sequences/FactoredSequenceModel/scoresOf:

#edu/stanford/nlp/sequences/FactoredSequenceModel/scoreOf:

#edu/stanford/nlp/sequences/FactoredSequenceModel/length:

#edu/stanford/nlp/sequences/FactoredSequenceModel/leftWindow:

#edu/stanford/nlp/sequences/FactoredSequenceModel/rightWindow:

#edu/stanford/nlp/sequences/FactoredSequenceModel/getPossibleValues:

#edu/stanford/nlp/sequences/FactoredSequenceModel/<init>:
edu.stanford.nlp.sequences.FactoredSequenceModel:

#edu/stanford/nlp/sequences/ExactBestSequenceFinder/bestSequence:

#edu/stanford/nlp/sequences/ExactBestSequenceFinder/initProductSizes:

#edu/stanford/nlp/sequences/ExactBestSequenceFinder/computeWindowScore:

#edu/stanford/nlp/sequences/ExactBestSequenceFinder/forwardViterbiInitial:

#edu/stanford/nlp/sequences/ExactBestSequenceFinder/forwardViterbi:
edu.stanford.nlp.sequences.ExactBestSequenceFinder:

#edu/stanford/nlp/sequences/SequenceSampler/bestSequence:
edu.stanford.nlp.sequences.SequenceSampler:
edu.stanford.nlp.sequences.DocumentReaderAndWriter:

#edu/stanford/nlp/sequences/ViterbiSearchGraphBuilder/getGraph:
edu.stanford.nlp.sequences.ViterbiSearchGraphBuilder:

#edu/stanford/nlp/sequences/FactoredSequenceListener/updateSequenceElement:

#edu/stanford/nlp/sequences/FactoredSequenceListener/setInitialSequence:
edu.stanford.nlp.sequences.FactoredSequenceListener:

#edu/stanford/nlp/sequences/FeatureFactory/eachClique:

#edu/stanford/nlp/sequences/FeatureFactory/getCliques:

#edu/stanford/nlp/sequences/FeatureFactory/addAllInterningAndSuffixing:

#edu/stanford/nlp/sequences/FeatureFactory/getWord:
edu.stanford.nlp.sequences.FeatureFactory:

#edu/stanford/nlp/sequences/LibSVMReaderAndWriter$ColumnDocParser/apply:
edu.stanford.nlp.sequences.LibSVMReaderAndWriter$ColumnDocParser:

#edu/stanford/nlp/sequences/TrueCasingForNISTDocumentReaderAndWriter/main:

#edu/stanford/nlp/sequences/TrueCasingForNISTDocumentReaderAndWriter/printAnswers:
edu.stanford.nlp.sequences.TrueCasingForNISTDocumentReaderAndWriter:

#edu/stanford/nlp/sequences/TrueCasingForNISTDocumentReaderAndWriter$LineToTrueCasesParser/apply:
edu.stanford.nlp.sequences.TrueCasingForNISTDocumentReaderAndWriter$LineToTrueCasesParser:
Warning: Method:edu.stanford.nlp.sequences.ObjectBankWrapper$WrappedIterator.primeNextHelper has incoming edges.

#edu/stanford/nlp/sequences/ObjectBankWrapper$WrappedIterator/hasNext:
edu.stanford.nlp.sequences.ObjectBankWrapper$WrappedIterator:

#edu/stanford/nlp/sequences/MUCDocumentReaderAndWriter$MUCDocumentParser/apply:
edu.stanford.nlp.sequences.MUCDocumentReaderAndWriter$MUCDocumentParser:

#edu/stanford/nlp/sequences/KBestSequenceFinder/kBestSequences:
edu.stanford.nlp.sequences.KBestSequenceFinder:

#edu/stanford/nlp/sequences/CoNLLDocumentReaderAndWriter/splitIntoDocs:

#edu/stanford/nlp/sequences/CoNLLDocumentReaderAndWriter/processDocument:

#edu/stanford/nlp/sequences/CoNLLDocumentReaderAndWriter/makeCoreLabel:

#edu/stanford/nlp/sequences/CoNLLDocumentReaderAndWriter/deEndify:

#edu/stanford/nlp/sequences/CoNLLDocumentReaderAndWriter/printAnswers:

#edu/stanford/nlp/sequences/CoNLLDocumentReaderAndWriter/maybeIncrementCounter:

#edu/stanford/nlp/sequences/CoNLLDocumentReaderAndWriter/main:
edu.stanford.nlp.sequences.CoNLLDocumentReaderAndWriter:
edu.stanford.nlp.sequences.CoolingSchedule$2:

#edu/stanford/nlp/sequences/SequenceGibbsSampler$1/process:
edu.stanford.nlp.sequences.SequenceGibbsSampler$1:
edu.stanford.nlp.sequences.CoolingSchedule:
edu.stanford.nlp.sequences.BestSequenceFinder:

#edu/stanford/nlp/sequences/BeamBestSequenceFinder/bestSequence:
edu.stanford.nlp.sequences.BeamBestSequenceFinder:

#edu/stanford/nlp/sequences/IOBUtils/entitySubclassify:

#edu/stanford/nlp/sequences/IOBUtils/isEntityBoundary:

#edu/stanford/nlp/sequences/IOBUtils/isSameEntityBoundary:

#edu/stanford/nlp/sequences/IOBUtils/isDifferentEntityBoundary:

#edu/stanford/nlp/sequences/IOBUtils/countEntityResults:

#edu/stanford/nlp/sequences/IOBUtils/main:
edu.stanford.nlp.sequences.IOBUtils:
edu.stanford.nlp.sequences.ColumnTabDocumentReaderWriter$GetNextFunction:

#edu/stanford/nlp/sequences/ColumnTabDocumentReaderWriter$BufferedReaderIterator/hasNext:

#edu/stanford/nlp/sequences/ColumnTabDocumentReaderWriter$BufferedReaderIterator/next:
edu.stanford.nlp.sequences.ColumnTabDocumentReaderWriter$BufferedReaderIterator:
edu.stanford.nlp.sequences.SequenceListener:
edu.stanford.nlp.sequences.ColumnDocumentReaderAndWriter$1:

#edu/stanford/nlp/sequences/MUCDocumentReaderAndWriter/printAnswers:
edu.stanford.nlp.sequences.MUCDocumentReaderAndWriter:

#edu/stanford/nlp/sequences/BeamBestSequenceFinder$TagSeq/tmpTags:

#edu/stanford/nlp/sequences/BeamBestSequenceFinder$TagSeq/tags:
edu.stanford.nlp.sequences.BeamBestSequenceFinder$TagSeq:
edu.stanford.nlp.sequences.SequenceModel:
edu.stanford.nlp.sequences.SeqClassifierFlags$SlashHyphenEnum:
edu.stanford.nlp.sequences.ListeningSequenceModel:

#edu/stanford/nlp/sequences/ColumnTabDocumentReaderWriter$ColumnDocBufferedGetNext/<init>:

#edu/stanford/nlp/sequences/ColumnTabDocumentReaderWriter$ColumnDocBufferedGetNext/createDoc:

#edu/stanford/nlp/sequences/ColumnTabDocumentReaderWriter$ColumnDocBufferedGetNext/markBoundary:

#edu/stanford/nlp/sequences/ColumnTabDocumentReaderWriter$ColumnDocBufferedGetNext/getNext:
edu.stanford.nlp.sequences.ColumnTabDocumentReaderWriter$ColumnDocBufferedGetNext:

#edu/stanford/nlp/sequences/Clique/intern:

#edu/stanford/nlp/sequences/Clique/valueOf:

#edu/stanford/nlp/sequences/Clique/valueOf:

#edu/stanford/nlp/sequences/Clique/checkSorted:

#edu/stanford/nlp/sequences/Clique/indexOfRelativeIndex:

#edu/stanford/nlp/sequences/Clique/toString:

#edu/stanford/nlp/sequences/Clique/shift:

#edu/stanford/nlp/sequences/Clique/hashCode:
edu.stanford.nlp.sequences.Clique:
edu.stanford.nlp.sequences.BeamBestSequenceFinder$TagSeq$TagList:
edu.stanford.nlp.sequences.MalletReaderAndWriter$1:

#edu/stanford/nlp/sequences/ColumnTabDocumentReaderWriter$ColumnDocBufferedGetNextTokens/getNext:
edu.stanford.nlp.sequences.ColumnTabDocumentReaderWriter$ColumnDocBufferedGetNextTokens:
edu.stanford.nlp.sequences.LatticeWriter:

#edu/stanford/nlp/sequences/ObjectBankWrapper/processDocument:

#edu/stanford/nlp/sequences/ObjectBankWrapper/intern:

#edu/stanford/nlp/sequences/ObjectBankWrapper/fix:

#edu/stanford/nlp/sequences/ObjectBankWrapper/doBasicStuff:

#edu/stanford/nlp/sequences/ObjectBankWrapper/fixDocLengths:

#edu/stanford/nlp/sequences/ObjectBankWrapper/iobTags:

#edu/stanford/nlp/sequences/ObjectBankWrapper/mergeTags:
edu.stanford.nlp.sequences.ObjectBankWrapper:
edu.stanford.nlp.sequences.MalletFeatureFactory:

#edu/stanford/nlp/sequences/ColumnDocumentReaderAndWriter/printAnswers:
edu.stanford.nlp.sequences.ColumnDocumentReaderAndWriter:

#edu/stanford/nlp/sequences/MalletReaderAndWriter$MalletDocParser/apply:
edu.stanford.nlp.sequences.MalletReaderAndWriter$MalletDocParser:

#edu/stanford/nlp/sequences/PlainTextDocumentReaderAndWriter$OutputStyle/fromShortName:

#edu/stanford/nlp/sequences/PlainTextDocumentReaderAndWriter$OutputStyle/defaultToPreserveSpacing:
edu.stanford.nlp.sequences.PlainTextDocumentReaderAndWriter$OutputStyle:

#edu/stanford/nlp/sequences/SequenceGibbsSampler/getRandomSequence:

#edu/stanford/nlp/sequences/SequenceGibbsSampler/findBestUsingSampling:

#edu/stanford/nlp/sequences/SequenceGibbsSampler/findBestUsingAnnealing:

#edu/stanford/nlp/sequences/SequenceGibbsSampler/collectSamples:

#edu/stanford/nlp/sequences/SequenceGibbsSampler/sampleSequenceRepeatedly:

#edu/stanford/nlp/sequences/SequenceGibbsSampler/sampleSequenceForward:

#edu/stanford/nlp/sequences/SequenceGibbsSampler/sampleSequenceBackward:

#edu/stanford/nlp/sequences/SequenceGibbsSampler/samplePositionHelper:

#edu/stanford/nlp/sequences/SequenceGibbsSampler/printSamples:

#edu/stanford/nlp/sequences/SequenceGibbsSampler/<init>:
edu.stanford.nlp.sequences.SequenceGibbsSampler:
edu.stanford.nlp.sequences.CoNLLDocumentReaderAndWriter$CoNLLIterator:
edu.stanford.nlp.dcoref.CorefScorer$SubScoreType:

#edu/stanford/nlp/dcoref/ScorerMUC/calculateRecall:

#edu/stanford/nlp/dcoref/ScorerMUC/calculatePrecision:
edu.stanford.nlp.dcoref.ScorerMUC:

#edu/stanford/nlp/dcoref/SpeakerInfo/<init>:

#edu/stanford/nlp/dcoref/SpeakerInfo/hasRealSpeakerName:

#edu/stanford/nlp/dcoref/SpeakerInfo/addMention:

#edu/stanford/nlp/dcoref/SpeakerInfo/getCorefClusterId:
edu.stanford.nlp.dcoref.SpeakerInfo:
edu.stanford.nlp.dcoref.CorefCoreAnnotations$CorefClusterIdAnnotation:

#edu/stanford/nlp/dcoref/CoNLLMentionExtractor/nextDoc:

#edu/stanford/nlp/dcoref/CoNLLMentionExtractor/makeCopy:

#edu/stanford/nlp/dcoref/CoNLLMentionExtractor/recallErrors:

#edu/stanford/nlp/dcoref/CoNLLMentionExtractor/extractSpans:

#edu/stanford/nlp/dcoref/CoNLLMentionExtractor/extractGoldMentions:
edu.stanford.nlp.dcoref.CoNLLMentionExtractor:

#edu/stanford/nlp/dcoref/CorefChain/equals:

#edu/stanford/nlp/dcoref/CorefChain/<init>:

#edu/stanford/nlp/dcoref/CorefChain/<init>:
edu.stanford.nlp.dcoref.CorefChain:

#edu/stanford/nlp/dcoref/MUCMentionExtractor/nextDoc:
edu.stanford.nlp.dcoref.MUCMentionExtractor:
edu.stanford.nlp.dcoref.ACEMentionExtractor$1:
edu.stanford.nlp.dcoref.SieveCoreferenceSystem$1:

#edu/stanford/nlp/dcoref/Mention/isPronominal:

#edu/stanford/nlp/dcoref/Mention/spanToString:

#edu/stanford/nlp/dcoref/Mention/lowercaseNormalizedSpanString:

#edu/stanford/nlp/dcoref/Mention/nerTokens:

#edu/stanford/nlp/dcoref/Mention/nerName:

#edu/stanford/nlp/dcoref/Mention/process:

#edu/stanford/nlp/dcoref/Mention/process:

#edu/stanford/nlp/dcoref/Mention/setSingleton:

#edu/stanford/nlp/dcoref/Mention/getSingletonFeatures:

#edu/stanford/nlp/dcoref/Mention/getMentionString:

#edu/stanford/nlp/dcoref/Mention/getGender:

#edu/stanford/nlp/dcoref/Mention/setDiscourse:

#edu/stanford/nlp/dcoref/Mention/setPerson:

#edu/stanford/nlp/dcoref/Mention/setSemantics:

#edu/stanford/nlp/dcoref/Mention/isListMemberOf:

#edu/stanford/nlp/dcoref/Mention/addListMember:

#edu/stanford/nlp/dcoref/Mention/addBelongsToList:

#edu/stanford/nlp/dcoref/Mention/isMemberOfSameList:

#edu/stanford/nlp/dcoref/Mention/isListLike:

#edu/stanford/nlp/dcoref/Mention/setType:

#edu/stanford/nlp/dcoref/Mention/setGender:

#edu/stanford/nlp/dcoref/Mention/setNumber:

#edu/stanford/nlp/dcoref/Mention/setAnimacy:

#edu/stanford/nlp/dcoref/Mention/knownSuffix:

#edu/stanford/nlp/dcoref/Mention/setHeadString:

#edu/stanford/nlp/dcoref/Mention/setNERString:

#edu/stanford/nlp/dcoref/Mention/sameSentence:

#edu/stanford/nlp/dcoref/Mention/included:

#edu/stanford/nlp/dcoref/Mention/headsAgree:

#edu/stanford/nlp/dcoref/Mention/numbersAgree:

#edu/stanford/nlp/dcoref/Mention/gendersAgree:

#edu/stanford/nlp/dcoref/Mention/animaciesAgree:

#edu/stanford/nlp/dcoref/Mention/entityTypesAgree:

#edu/stanford/nlp/dcoref/Mention/includedIn:

#edu/stanford/nlp/dcoref/Mention/attributesAgree:

#edu/stanford/nlp/dcoref/Mention/addApposition:

#edu/stanford/nlp/dcoref/Mention/isApposition:

#edu/stanford/nlp/dcoref/Mention/addPredicateNominatives:

#edu/stanford/nlp/dcoref/Mention/isPredicateNominatives:

#edu/stanford/nlp/dcoref/Mention/addRelativePronoun:

#edu/stanford/nlp/dcoref/Mention/appearEarlierThan:

#edu/stanford/nlp/dcoref/Mention/longestNNPEndsWithHead:

#edu/stanford/nlp/dcoref/Mention/lowestNPIncludesHead:

#edu/stanford/nlp/dcoref/Mention/stringWithoutArticle:

#edu/stanford/nlp/dcoref/Mention/preprocessSearchTerm:

#edu/stanford/nlp/dcoref/Mention/buildQueryText:

#edu/stanford/nlp/dcoref/Mention/removePhraseAfterHead:

#edu/stanford/nlp/dcoref/Mention/removeParenthesis:

#edu/stanford/nlp/dcoref/Mention/isTheCommonNoun:

#edu/stanford/nlp/dcoref/Mention/findDependentVerb:

#edu/stanford/nlp/dcoref/Mention/insideIn:

#edu/stanford/nlp/dcoref/Mention/moreRepresentativeThan:

#edu/stanford/nlp/dcoref/Mention/getPremodifiers:

#edu/stanford/nlp/dcoref/Mention/getPostmodifiers:

#edu/stanford/nlp/dcoref/Mention/getSplitPattern:

#edu/stanford/nlp/dcoref/Mention/getPattern:

#edu/stanford/nlp/dcoref/Mention/getPattern:

#edu/stanford/nlp/dcoref/Mention/isCoordinated:

#edu/stanford/nlp/dcoref/Mention/getContextHelper:

#edu/stanford/nlp/dcoref/Mention/getPremodifierContext:

#edu/stanford/nlp/dcoref/Mention/isRelativePronoun:

#edu/stanford/nlp/dcoref/Mention/isRoleAppositive:

#edu/stanford/nlp/dcoref/Mention/isDemonym:

#edu/stanford/nlp/dcoref/Mention/getPosition:

#edu/stanford/nlp/dcoref/Mention/getRelation:

#edu/stanford/nlp/dcoref/Mention/getModifiers:

#edu/stanford/nlp/dcoref/Mention/getQuantification:

#edu/stanford/nlp/dcoref/Mention/getNegation:

#edu/stanford/nlp/dcoref/Mention/getModal:

#edu/stanford/nlp/dcoref/Mention/getReportEmbedding:

#edu/stanford/nlp/dcoref/Mention/getCoordination:
edu.stanford.nlp.dcoref.Mention:
edu.stanford.nlp.dcoref.CorefScorer$1:

#edu/stanford/nlp/dcoref/CoNLL2011DocumentReader$CorpusStats/process:

#edu/stanford/nlp/dcoref/CoNLL2011DocumentReader$CorpusStats/appendIntCountStats:
edu.stanford.nlp.dcoref.CoNLL2011DocumentReader$CorpusStats:
edu.stanford.nlp.dcoref.CoNLL2011DocumentReader$Options:
edu.stanford.nlp.dcoref.Constants:
edu.stanford.nlp.dcoref.CorefCoreAnnotations$CorefAnnotation:

#edu/stanford/nlp/dcoref/SingletonPredictor/setTokenIndices:

#edu/stanford/nlp/dcoref/SingletonPredictor/generateFeatureVectors:

#edu/stanford/nlp/dcoref/SingletonPredictor/main:
edu.stanford.nlp.dcoref.SingletonPredictor:
edu.stanford.nlp.dcoref.CoNLL2011DocumentReader$NamedEntityAnnotation:
edu.stanford.nlp.dcoref.ScorerBCubed$1:
edu.stanford.nlp.dcoref.CorefScorer$ScoreType:
edu.stanford.nlp.dcoref.ScorerBCubed$BCubedType:
edu.stanford.nlp.dcoref.MentionMatcher:
edu.stanford.nlp.dcoref.CoreferenceSystem:
edu.stanford.nlp.dcoref.Dictionaries$Animacy:

#edu/stanford/nlp/dcoref/CoNLL2011DocumentReader/<init>:

#edu/stanford/nlp/dcoref/CoNLL2011DocumentReader/getFiles:

#edu/stanford/nlp/dcoref/CoNLL2011DocumentReader/reset:

#edu/stanford/nlp/dcoref/CoNLL2011DocumentReader/getNextDocument:

#edu/stanford/nlp/dcoref/CoNLL2011DocumentReader/getField:

#edu/stanford/nlp/dcoref/CoNLL2011DocumentReader/concatField:

#edu/stanford/nlp/dcoref/CoNLL2011DocumentReader/getMention:

#edu/stanford/nlp/dcoref/CoNLL2011DocumentReader/include:

#edu/stanford/nlp/dcoref/CoNLL2011DocumentReader/writeTabSep:

#edu/stanford/nlp/dcoref/CoNLL2011DocumentReader/main:
edu.stanford.nlp.dcoref.CoNLL2011DocumentReader:

#edu/stanford/nlp/dcoref/Dictionaries/setPronouns:

#edu/stanford/nlp/dcoref/Dictionaries/loadStateAbbreviation:

#edu/stanford/nlp/dcoref/Dictionaries/loadDemonymLists:

#edu/stanford/nlp/dcoref/Dictionaries/getDemonyms:

#edu/stanford/nlp/dcoref/Dictionaries/getWordsFromFile:

#edu/stanford/nlp/dcoref/Dictionaries/loadCountriesLists:

#edu/stanford/nlp/dcoref/Dictionaries/loadCorefDict:

#edu/stanford/nlp/dcoref/Dictionaries/loadCorefDictPMI:

#edu/stanford/nlp/dcoref/Dictionaries/loadSignatures:

#edu/stanford/nlp/dcoref/Dictionaries/signature:

#edu/stanford/nlp/dcoref/Dictionaries/<init>:
edu.stanford.nlp.dcoref.Dictionaries:
edu.stanford.nlp.dcoref.CoNLL2011DocumentReader$CorefMentionAnnotation:
edu.stanford.nlp.dcoref.CorefCoreAnnotations$CorefChainAnnotation:

#edu/stanford/nlp/dcoref/CorefChain$MentionComparator/compare:
edu.stanford.nlp.dcoref.CorefChain$MentionComparator:
edu.stanford.nlp.dcoref.Document$DocType:

#edu/stanford/nlp/dcoref/CorefChain$CorefMention/equals:

#edu/stanford/nlp/dcoref/CorefChain$CorefMention/moreRepresentativeThan:
edu.stanford.nlp.dcoref.CorefChain$CorefMention:
edu.stanford.nlp.dcoref.CorefCoreAnnotations$CorefClusterAnnotation:

#edu/stanford/nlp/dcoref/ScorerBCubed/calculatePrecision:

#edu/stanford/nlp/dcoref/ScorerBCubed/calculateRecall:

#edu/stanford/nlp/dcoref/ScorerBCubed/calculatePrecisionBall:

#edu/stanford/nlp/dcoref/ScorerBCubed/calculateRecallBall:

#edu/stanford/nlp/dcoref/ScorerBCubed/calculatePrecisionBcai:

#edu/stanford/nlp/dcoref/ScorerBCubed/calculateRecallBcai:

#edu/stanford/nlp/dcoref/ScorerBCubed/calculateRecallBconll:
edu.stanford.nlp.dcoref.ScorerBCubed:

#edu/stanford/nlp/dcoref/SieveOptions/toString:
edu.stanford.nlp.dcoref.SieveOptions:
edu.stanford.nlp.dcoref.Dictionaries$Gender:

#edu/stanford/nlp/dcoref/CorefCluster/<init>:

#edu/stanford/nlp/dcoref/CorefCluster/mergeClusters:

#edu/stanford/nlp/dcoref/CorefCluster/printCorefCluster:

#edu/stanford/nlp/dcoref/CorefCluster/isSinglePronounCluster:
edu.stanford.nlp.dcoref.CorefCluster:

#edu/stanford/nlp/dcoref/MentionExtractor/getHeadIndex:

#edu/stanford/nlp/dcoref/MentionExtractor/arrange:

#edu/stanford/nlp/dcoref/MentionExtractor/arrange:

#edu/stanford/nlp/dcoref/MentionExtractor/mergeLabels:

#edu/stanford/nlp/dcoref/MentionExtractor/inside:

#edu/stanford/nlp/dcoref/MentionExtractor/findTreePattern:

#edu/stanford/nlp/dcoref/MentionExtractor/markListMemberRelation:

#edu/stanford/nlp/dcoref/MentionExtractor/markMentionRelation:

#edu/stanford/nlp/dcoref/MentionExtractor/findExactMatch:

#edu/stanford/nlp/dcoref/MentionExtractor/loadStanfordProcessor:

#edu/stanford/nlp/dcoref/MentionExtractor/initializeUtterance:
edu.stanford.nlp.dcoref.MentionExtractor:

#edu/stanford/nlp/dcoref/CorefScorer/getScore:

#edu/stanford/nlp/dcoref/CorefScorer/getPrecision:

#edu/stanford/nlp/dcoref/CorefScorer/getRecall:

#edu/stanford/nlp/dcoref/CorefScorer/getF1:

#edu/stanford/nlp/dcoref/CorefScorer/printF1:
edu.stanford.nlp.dcoref.CorefScorer:

#edu/stanford/nlp/dcoref/RuleBasedCorefMentionFinder/filterPredictedMentions:

#edu/stanford/nlp/dcoref/RuleBasedCorefMentionFinder/extractPredictedMentions:

#edu/stanford/nlp/dcoref/RuleBasedCorefMentionFinder/assignMentionIDs:

#edu/stanford/nlp/dcoref/RuleBasedCorefMentionFinder/setBarePlural:

#edu/stanford/nlp/dcoref/RuleBasedCorefMentionFinder/extractPremarkedEntityMentions:

#edu/stanford/nlp/dcoref/RuleBasedCorefMentionFinder/extractNamedEntityMentions:

#edu/stanford/nlp/dcoref/RuleBasedCorefMentionFinder/extractNPorPRP:

#edu/stanford/nlp/dcoref/RuleBasedCorefMentionFinder/extractEnumerations:

#edu/stanford/nlp/dcoref/RuleBasedCorefMentionFinder/insideNE:

#edu/stanford/nlp/dcoref/RuleBasedCorefMentionFinder/findHead:

#edu/stanford/nlp/dcoref/RuleBasedCorefMentionFinder/findSyntacticHead:

#edu/stanford/nlp/dcoref/RuleBasedCorefMentionFinder/findPartialSpan:

#edu/stanford/nlp/dcoref/RuleBasedCorefMentionFinder/funkyFindLeafWithApproximateSpan:

#edu/stanford/nlp/dcoref/RuleBasedCorefMentionFinder/getParser:

#edu/stanford/nlp/dcoref/RuleBasedCorefMentionFinder/convertToCoreLabels:

#edu/stanford/nlp/dcoref/RuleBasedCorefMentionFinder/safeHead:

#edu/stanford/nlp/dcoref/RuleBasedCorefMentionFinder/findTreeWithSpan:

#edu/stanford/nlp/dcoref/RuleBasedCorefMentionFinder/removeSpuriousMentions:

#edu/stanford/nlp/dcoref/RuleBasedCorefMentionFinder/inStopList:

#edu/stanford/nlp/dcoref/RuleBasedCorefMentionFinder/partitiveRule:

#edu/stanford/nlp/dcoref/RuleBasedCorefMentionFinder/isPleonastic:

#edu/stanford/nlp/dcoref/RuleBasedCorefMentionFinder/getPleonasticPatterns:

#edu/stanford/nlp/dcoref/RuleBasedCorefMentionFinder/checkPleonastic:
edu.stanford.nlp.dcoref.RuleBasedCorefMentionFinder:
edu.stanford.nlp.dcoref.Dictionaries$MentionType:

#edu/stanford/nlp/dcoref/Rules/entityBothHaveProper:

#edu/stanford/nlp/dcoref/Rules/entitySameProperHeadLastWord:

#edu/stanford/nlp/dcoref/Rules/entityAlias:

#edu/stanford/nlp/dcoref/Rules/entityIWithinI:

#edu/stanford/nlp/dcoref/Rules/entityPersonDisagree:

#edu/stanford/nlp/dcoref/Rules/entityWordsIncluded:

#edu/stanford/nlp/dcoref/Rules/entityHaveIncompatibleModifier:

#edu/stanford/nlp/dcoref/Rules/entityIsRoleAppositive:

#edu/stanford/nlp/dcoref/Rules/entityIsRelativePronoun:

#edu/stanford/nlp/dcoref/Rules/entityIsAcronym:

#edu/stanford/nlp/dcoref/Rules/isAcronym:

#edu/stanford/nlp/dcoref/Rules/entityIsPredicateNominatives:

#edu/stanford/nlp/dcoref/Rules/entityIsApposition:

#edu/stanford/nlp/dcoref/Rules/entityAttributesAgree:

#edu/stanford/nlp/dcoref/Rules/entityRelaxedHeadsAgreeBetweenMentions:

#edu/stanford/nlp/dcoref/Rules/entityHeadsAgree:

#edu/stanford/nlp/dcoref/Rules/entityExactStringMatch:

#edu/stanford/nlp/dcoref/Rules/entityRelaxedExactStringMatch:

#edu/stanford/nlp/dcoref/Rules/entityIWithinI:

#edu/stanford/nlp/dcoref/Rules/entityHaveIncompatibleModifier:

#edu/stanford/nlp/dcoref/Rules/entityHaveDifferentLocation:

#edu/stanford/nlp/dcoref/Rules/entitySameProperHeadLastWord:

#edu/stanford/nlp/dcoref/Rules/entityNumberInLaterMention:

#edu/stanford/nlp/dcoref/Rules/entityHaveExtraProperNoun:

#edu/stanford/nlp/dcoref/Rules/antecedentIsMentionSpeaker:

#edu/stanford/nlp/dcoref/Rules/antecedentMatchesMentionSpeakerAnnotation:

#edu/stanford/nlp/dcoref/Rules/mentionMatchesSpeaker:

#edu/stanford/nlp/dcoref/Rules/entityPersonDisagree:

#edu/stanford/nlp/dcoref/Rules/entitySameSpeaker:

#edu/stanford/nlp/dcoref/Rules/getSpeakerClusterId:

#edu/stanford/nlp/dcoref/Rules/entitySubjectObject:

#edu/stanford/nlp/dcoref/Rules/entityTokenDistance:

#edu/stanford/nlp/dcoref/Rules/entityClusterAllCorefDictionary:

#edu/stanford/nlp/dcoref/Rules/entityCorefDictionary:

#edu/stanford/nlp/dcoref/Rules/contextIncompatible:

#edu/stanford/nlp/dcoref/Rules/sentenceContextIncompatible:
edu.stanford.nlp.dcoref.Rules:
edu.stanford.nlp.dcoref.CoNLL2011DocumentReader$Document:

#edu/stanford/nlp/dcoref/ScorerPairwise/calculateRecall:

#edu/stanford/nlp/dcoref/ScorerPairwise/calculatePrecision:
edu.stanford.nlp.dcoref.ScorerPairwise:

#edu/stanford/nlp/dcoref/CoNLL2011DocumentReader$DocumentIterator/hasNext:

#edu/stanford/nlp/dcoref/CoNLL2011DocumentReader$DocumentIterator/next:

#edu/stanford/nlp/dcoref/CoNLL2011DocumentReader$DocumentIterator/wordsToParse:

#edu/stanford/nlp/dcoref/CoNLL2011DocumentReader$DocumentIterator/getLabelledSpans:

#edu/stanford/nlp/dcoref/CoNLL2011DocumentReader$DocumentIterator/wordsToSentence:

#edu/stanford/nlp/dcoref/CoNLL2011DocumentReader$DocumentIterator/sentencesToDocument:

#edu/stanford/nlp/dcoref/CoNLL2011DocumentReader$DocumentIterator/getTreeNonTerminal:

#edu/stanford/nlp/dcoref/CoNLL2011DocumentReader$DocumentIterator/annotateDocument:

#edu/stanford/nlp/dcoref/CoNLL2011DocumentReader$DocumentIterator/readNextDocument:
edu.stanford.nlp.dcoref.CoNLL2011DocumentReader$DocumentIterator:
edu.stanford.nlp.dcoref.CorefCoreAnnotations$CorefGraphAnnotation:

#edu/stanford/nlp/dcoref/Document/<init>:

#edu/stanford/nlp/dcoref/Document/processDiscourse:

#edu/stanford/nlp/dcoref/Document/initialize:

#edu/stanford/nlp/dcoref/Document/initializeCorefCluster:

#edu/stanford/nlp/dcoref/Document/mergeIncompatibles:

#edu/stanford/nlp/dcoref/Document/mergeAcronymCache:

#edu/stanford/nlp/dcoref/Document/findTwinMentions:

#edu/stanford/nlp/dcoref/Document/findTwinMentionsStrict:

#edu/stanford/nlp/dcoref/Document/findTwinMentionsRelaxed:

#edu/stanford/nlp/dcoref/Document/setParagraphAnnotation:

#edu/stanford/nlp/dcoref/Document/findDocType:

#edu/stanford/nlp/dcoref/Document/assignOriginalID:

#edu/stanford/nlp/dcoref/Document/extractGoldCorefClusters:

#edu/stanford/nlp/dcoref/Document/getGoldLinks:

#edu/stanford/nlp/dcoref/Document/extractGoldLinks:

#edu/stanford/nlp/dcoref/Document/markQuotations:

#edu/stanford/nlp/dcoref/Document/findSpeakers:

#edu/stanford/nlp/dcoref/Document/findSpeakersInArticle:

#edu/stanford/nlp/dcoref/Document/findQuotationSpeaker:

#edu/stanford/nlp/dcoref/Document/findSpeaker:

#edu/stanford/nlp/dcoref/Document/findSpeakersInConversation:

#edu/stanford/nlp/dcoref/Document/findParagraphSpeaker:

#edu/stanford/nlp/dcoref/Document/findNextParagraphSpeaker:

#edu/stanford/nlp/dcoref/Document/isSpeaker:

#edu/stanford/nlp/dcoref/Document/printMentionDetection:
edu.stanford.nlp.dcoref.Document:
edu.stanford.nlp.dcoref.CorefMentionFinder:
edu.stanford.nlp.dcoref.Semantics:

#edu/stanford/nlp/dcoref/SieveCoreferenceSystem/<init>:

#edu/stanford/nlp/dcoref/SieveCoreferenceSystem/initScorers:

#edu/stanford/nlp/dcoref/SieveCoreferenceSystem/sieveClassName:

#edu/stanford/nlp/dcoref/SieveCoreferenceSystem/initializeAndRunCoref:

#edu/stanford/nlp/dcoref/SieveCoreferenceSystem/runAndScoreCoref:

#edu/stanford/nlp/dcoref/SieveCoreferenceSystem/runAndScoreCorefDist:

#edu/stanford/nlp/dcoref/SieveCoreferenceSystem/waitForFiles:

#edu/stanford/nlp/dcoref/SieveCoreferenceSystem/fromSieveNameToIndex:

#edu/stanford/nlp/dcoref/SieveCoreferenceSystem/fromSieveOrderConstraintString:

#edu/stanford/nlp/dcoref/SieveCoreferenceSystem/toSieveOrderConstraintString:

#edu/stanford/nlp/dcoref/SieveCoreferenceSystem/optimizeSieveOrdering:

#edu/stanford/nlp/dcoref/SieveCoreferenceSystem/coref:

#edu/stanford/nlp/dcoref/SieveCoreferenceSystem/corefReturnHybridOutput:

#edu/stanford/nlp/dcoref/SieveCoreferenceSystem/coreference:

#edu/stanford/nlp/dcoref/SieveCoreferenceSystem/postProcessing:

#edu/stanford/nlp/dcoref/SieveCoreferenceSystem/getSingletonPredictorFromSerializedFile:

#edu/stanford/nlp/dcoref/SieveCoreferenceSystem/filterMentionsWithSingletonClusters:

#edu/stanford/nlp/dcoref/SieveCoreferenceSystem/getConllEvalSummary:

#edu/stanford/nlp/dcoref/SieveCoreferenceSystem/printTopK:

#edu/stanford/nlp/dcoref/SieveCoreferenceSystem/printLink:

#edu/stanford/nlp/dcoref/SieveCoreferenceSystem/printList:

#edu/stanford/nlp/dcoref/SieveCoreferenceSystem/printLinkWithContext:

#edu/stanford/nlp/dcoref/SieveCoreferenceSystem/printLogs:

#edu/stanford/nlp/dcoref/SieveCoreferenceSystem/printDiscourseStructure:

#edu/stanford/nlp/dcoref/SieveCoreferenceSystem/printScoreSummary:

#edu/stanford/nlp/dcoref/SieveCoreferenceSystem/printFinalConllScore:

#edu/stanford/nlp/dcoref/SieveCoreferenceSystem/getFinalConllScore:

#edu/stanford/nlp/dcoref/SieveCoreferenceSystem/getFinalScore:

#edu/stanford/nlp/dcoref/SieveCoreferenceSystem/printConllOutput:

#edu/stanford/nlp/dcoref/SieveCoreferenceSystem/printConllOutput:

#edu/stanford/nlp/dcoref/SieveCoreferenceSystem/printRawDoc:

#edu/stanford/nlp/dcoref/SieveCoreferenceSystem/getLinks:

#edu/stanford/nlp/dcoref/SieveCoreferenceSystem/debugPrintMentions:

#edu/stanford/nlp/dcoref/SieveCoreferenceSystem/checkClusters:
edu.stanford.nlp.dcoref.SieveCoreferenceSystem:
edu.stanford.nlp.dcoref.Dictionaries$Person:
edu.stanford.nlp.dcoref.CorefCoreAnnotations:

#edu/stanford/nlp/dcoref/CorefChain$CorefMentionComparator/compare:
edu.stanford.nlp.dcoref.CorefChain$CorefMentionComparator:
edu.stanford.nlp.dcoref.Dictionaries$Number:
edu.stanford.nlp.dcoref.CorefCoreAnnotations$CorefDestAnnotation:

#edu/stanford/nlp/dcoref/ACEMentionExtractor$EntityComparator/compare:
edu.stanford.nlp.dcoref.ACEMentionExtractor$EntityComparator:

#edu/stanford/nlp/dcoref/ACEMentionExtractor/<init>:

#edu/stanford/nlp/dcoref/ACEMentionExtractor/nextDoc:

#edu/stanford/nlp/dcoref/ACEMentionExtractor/extractGoldMentions:

#edu/stanford/nlp/dcoref/ACEMentionExtractor/printRawDoc:
edu.stanford.nlp.dcoref.ACEMentionExtractor:
edu.stanford.nlp.dcoref.sievepasses.StrictHeadMatch1:
edu.stanford.nlp.dcoref.sievepasses.RelaxedHeadMatch:
edu.stanford.nlp.dcoref.sievepasses.StrictHeadMatch3:
edu.stanford.nlp.dcoref.sievepasses.MarkRole:
edu.stanford.nlp.dcoref.sievepasses.StrictHeadMatch2:

#edu/stanford/nlp/dcoref/sievepasses/DeterministicCorefSieve/skipThisMention:

#edu/stanford/nlp/dcoref/sievepasses/DeterministicCorefSieve/coreferent:

#edu/stanford/nlp/dcoref/sievepasses/DeterministicCorefSieve/getOrderedAntecedents:

#edu/stanford/nlp/dcoref/sievepasses/DeterministicCorefSieve/sortMentionsForPronoun:
edu.stanford.nlp.dcoref.sievepasses.DeterministicCorefSieve:
edu.stanford.nlp.dcoref.sievepasses.LexicalChainMatch:
edu.stanford.nlp.dcoref.sievepasses.PreciseConstructs:
edu.stanford.nlp.dcoref.sievepasses.StrictHeadMatch4:
edu.stanford.nlp.dcoref.sievepasses.ExactStringMatch:
edu.stanford.nlp.dcoref.sievepasses.NameMatchPrecise:
edu.stanford.nlp.dcoref.sievepasses.PronounMatch:
edu.stanford.nlp.dcoref.sievepasses.CorefDictionaryMatch:
edu.stanford.nlp.dcoref.sievepasses.AliasMatch:
edu.stanford.nlp.dcoref.sievepasses.RelaxedExactStringMatch:

#edu/stanford/nlp/dcoref/sievepasses/NameMatch/isNamedMention:

#edu/stanford/nlp/dcoref/sievepasses/NameMatch/checkEntityMatch:
edu.stanford.nlp.dcoref.sievepasses.NameMatch:
edu.stanford.nlp.dcoref.sievepasses.DiscourseMatch:

#edu/stanford/nlp/dcoref/util/ConvertGenderFile/main:
edu.stanford.nlp.dcoref.util.ConvertGenderFile:
edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$CollapsedDependenciesAnnotation:
edu.stanford.nlp.semgraph.SemanticGraphUtils$PrintVerticeParams:
edu.stanford.nlp.semgraph.UnknownVertexException:

#edu/stanford/nlp/semgraph/SemanticGraphUtils$PositionedTree/equals:
edu.stanford.nlp.semgraph.SemanticGraphUtils$PositionedTree:

#edu/stanford/nlp/semgraph/SemanticGraph$SemanticGraphParsingTask/parse:

#edu/stanford/nlp/semgraph/SemanticGraph$SemanticGraphParsingTask/readDep:

#edu/stanford/nlp/semgraph/SemanticGraph$SemanticGraphParsingTask/makeVertex:

#edu/stanford/nlp/semgraph/SemanticGraph$SemanticGraphParsingTask/readWordAndIndex:

#edu/stanford/nlp/semgraph/SemanticGraph$SemanticGraphParsingTask/getNextFreeIndex:

#edu/stanford/nlp/semgraph/SemanticGraph$SemanticGraphParsingTask/readLeftBracket:

#edu/stanford/nlp/semgraph/SemanticGraph$SemanticGraphParsingTask/readRightBracket:

#edu/stanford/nlp/semgraph/SemanticGraph$SemanticGraphParsingTask/readRelnSeparator:

#edu/stanford/nlp/semgraph/SemanticGraph$SemanticGraphParsingTask/isLeftBracket:

#edu/stanford/nlp/semgraph/SemanticGraph$SemanticGraphParsingTask/isRightBracket:

#edu/stanford/nlp/semgraph/SemanticGraph$SemanticGraphParsingTask/isRelnSeparator:

#edu/stanford/nlp/semgraph/SemanticGraph$SemanticGraphParsingTask/isPunct:
edu.stanford.nlp.semgraph.SemanticGraph$SemanticGraphParsingTask:
edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$CollapsedCCProcessedDependenciesAnnotation:

#edu/stanford/nlp/semgraph/SemanticGraphUtils/makeGraphFromNodes:

#edu/stanford/nlp/semgraph/SemanticGraphUtils/findMatchingNode:

#edu/stanford/nlp/semgraph/SemanticGraphUtils/getSubTreeEdgesHelper:

#edu/stanford/nlp/semgraph/SemanticGraphUtils/getEdgesSpannedByVertices:

#edu/stanford/nlp/semgraph/SemanticGraphUtils/getChildrenWithRelnPrefix:

#edu/stanford/nlp/semgraph/SemanticGraphUtils/getChildrenWithRelnPrefix:

#edu/stanford/nlp/semgraph/SemanticGraphUtils/getChildrenWithPrepC:

#edu/stanford/nlp/semgraph/SemanticGraphUtils/edgesWithReln:

#edu/stanford/nlp/semgraph/SemanticGraphUtils/findAllRelnsWithPrefix:

#edu/stanford/nlp/semgraph/SemanticGraphUtils/tabuDescendants:

#edu/stanford/nlp/semgraph/SemanticGraphUtils/tabuDescendants:

#edu/stanford/nlp/semgraph/SemanticGraphUtils/descendantsTabuRelns:

#edu/stanford/nlp/semgraph/SemanticGraphUtils/descendantsTabuTestAndRelns:

#edu/stanford/nlp/semgraph/SemanticGraphUtils/descendantsTabuTestAndRelns:

#edu/stanford/nlp/semgraph/SemanticGraphUtils/descendantsTabuTestAndRelns:

#edu/stanford/nlp/semgraph/SemanticGraphUtils/tabuDescendantsHelper:

#edu/stanford/nlp/semgraph/SemanticGraphUtils/tabuDescendantsHelper:

#edu/stanford/nlp/semgraph/SemanticGraphUtils/leftMostChildVertice:

#edu/stanford/nlp/semgraph/SemanticGraphUtils/leftRightMostChildVertices:

#edu/stanford/nlp/semgraph/SemanticGraphUtils/getDependencyBlanket:

#edu/stanford/nlp/semgraph/SemanticGraphUtils/resetVerticeOrdering:

#edu/stanford/nlp/semgraph/SemanticGraphUtils/enRepairEdges:

#edu/stanford/nlp/semgraph/SemanticGraphUtils/killNonRooted:

#edu/stanford/nlp/semgraph/SemanticGraphUtils/replaceNode:

#edu/stanford/nlp/semgraph/SemanticGraphUtils/anonymyizeNodes:

#edu/stanford/nlp/semgraph/SemanticGraphUtils/makeReplacedEdges:

#edu/stanford/nlp/semgraph/SemanticGraphUtils/allEdgesInSet:

#edu/stanford/nlp/semgraph/SemanticGraphUtils/diffEdges:

#edu/stanford/nlp/semgraph/SemanticGraphUtils/printEdges:

#edu/stanford/nlp/semgraph/SemanticGraphUtils/printVertices:

#edu/stanford/nlp/semgraph/SemanticGraphUtils/semgrexFromGraphHelper:

#edu/stanford/nlp/semgraph/SemanticGraphUtils/setSentIndex:

#edu/stanford/nlp/semgraph/SemanticGraphUtils/removeDuplicates:

#edu/stanford/nlp/semgraph/SemanticGraphUtils/removeDuplicates:

#edu/stanford/nlp/semgraph/SemanticGraphUtils/mapTreeToSg:

#edu/stanford/nlp/semgraph/SemanticGraphUtils/isTree:

#edu/stanford/nlp/semgraph/SemanticGraphUtils/lambda$semgrexFromGraph$0:
edu.stanford.nlp.semgraph.SemanticGraphUtils:
edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations:

#edu/stanford/nlp/semgraph/SemanticGraphEdge/toString:

#edu/stanford/nlp/semgraph/SemanticGraphEdge/compareTo:

#edu/stanford/nlp/semgraph/SemanticGraphEdge/equals:

#edu/stanford/nlp/semgraph/SemanticGraphEdge/hashCode:
edu.stanford.nlp.semgraph.SemanticGraphEdge:
edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$AlternativeDependenciesAnnotation:
edu.stanford.nlp.semgraph.SemanticGraphUtils$EdgeDiffResult:

#edu/stanford/nlp/semgraph/SemanticGraphEdge$SemanticGraphEdgeTargetComparator/compare:
edu.stanford.nlp.semgraph.SemanticGraphEdge$SemanticGraphEdgeTargetComparator:
edu.stanford.nlp.semgraph.SemanticGraphFactory$1:
edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$EnhancedPlusPlusDependenciesAnnotation:

#edu/stanford/nlp/semgraph/SemanticGraph/getEdge:

#edu/stanford/nlp/semgraph/SemanticGraph/edgeListSorted:

#edu/stanford/nlp/semgraph/SemanticGraph/isAncestor:

#edu/stanford/nlp/semgraph/SemanticGraph/commonAncestor:

#edu/stanford/nlp/semgraph/SemanticGraph/getCommonAncestor:

#edu/stanford/nlp/semgraph/SemanticGraph/matchPatternToVertex:

#edu/stanford/nlp/semgraph/SemanticGraph/matchPatternToVertex:

#edu/stanford/nlp/semgraph/SemanticGraph/getChildList:

#edu/stanford/nlp/semgraph/SemanticGraph/getChildren:

#edu/stanford/nlp/semgraph/SemanticGraph/getParentList:

#edu/stanford/nlp/semgraph/SemanticGraph/getParents:

#edu/stanford/nlp/semgraph/SemanticGraph/getSiblings:

#edu/stanford/nlp/semgraph/SemanticGraph/getPathToRoot:

#edu/stanford/nlp/semgraph/SemanticGraph/getPathToRoot:

#edu/stanford/nlp/semgraph/SemanticGraph/getParent:

#edu/stanford/nlp/semgraph/SemanticGraph/getNodeByIndex:

#edu/stanford/nlp/semgraph/SemanticGraph/getNodeByIndexSafe:

#edu/stanford/nlp/semgraph/SemanticGraph/getNodeByIndexAndCopyCount:

#edu/stanford/nlp/semgraph/SemanticGraph/getNodeByIndexAndCopyCountSafe:

#edu/stanford/nlp/semgraph/SemanticGraph/getNodeByWordPattern:

#edu/stanford/nlp/semgraph/SemanticGraph/getAllNodesByWordPattern:

#edu/stanford/nlp/semgraph/SemanticGraph/getAllNodesByPartOfSpeechPattern:

#edu/stanford/nlp/semgraph/SemanticGraph/descendants:

#edu/stanford/nlp/semgraph/SemanticGraph/descendantsHelper:

#edu/stanford/nlp/semgraph/SemanticGraph/childPairs:

#edu/stanford/nlp/semgraph/SemanticGraph/parentPairs:

#edu/stanford/nlp/semgraph/SemanticGraph/relns:

#edu/stanford/nlp/semgraph/SemanticGraph/reln:

#edu/stanford/nlp/semgraph/SemanticGraph/childRelns:

#edu/stanford/nlp/semgraph/SemanticGraph/getVerticesWithoutParents:

#edu/stanford/nlp/semgraph/SemanticGraph/getFirstRoot:

#edu/stanford/nlp/semgraph/SemanticGraph/resetRoots:

#edu/stanford/nlp/semgraph/SemanticGraph/hasChild:

#edu/stanford/nlp/semgraph/SemanticGraph/hasChildWithReln:

#edu/stanford/nlp/semgraph/SemanticGraph/hasParentWithReln:

#edu/stanford/nlp/semgraph/SemanticGraph/getChildWithReln:

#edu/stanford/nlp/semgraph/SemanticGraph/getParentsWithReln:

#edu/stanford/nlp/semgraph/SemanticGraph/getParentsWithReln:

#edu/stanford/nlp/semgraph/SemanticGraph/getChildrenWithReln:

#edu/stanford/nlp/semgraph/SemanticGraph/getChildrenWithRelns:

#edu/stanford/nlp/semgraph/SemanticGraph/getEdge:

#edu/stanford/nlp/semgraph/SemanticGraph/isNegatedVertex:

#edu/stanford/nlp/semgraph/SemanticGraph/isNegatedVerb:

#edu/stanford/nlp/semgraph/SemanticGraph/isInConditionalContext:

#edu/stanford/nlp/semgraph/SemanticGraph/attachedNegatedVerb:

#edu/stanford/nlp/semgraph/SemanticGraph/isAuxiliaryVerb:

#edu/stanford/nlp/semgraph/SemanticGraph/getLeafVertices:

#edu/stanford/nlp/semgraph/SemanticGraph/getSubgraphVertices:

#edu/stanford/nlp/semgraph/SemanticGraph/isDag:

#edu/stanford/nlp/semgraph/SemanticGraph/isDag:

#edu/stanford/nlp/semgraph/SemanticGraph/isDagHelper:

#edu/stanford/nlp/semgraph/SemanticGraph/toString:

#edu/stanford/nlp/semgraph/SemanticGraph/recToString:

#edu/stanford/nlp/semgraph/SemanticGraph/space:

#edu/stanford/nlp/semgraph/SemanticGraph/toRecoveredSentenceString:

#edu/stanford/nlp/semgraph/SemanticGraph/toRecoveredSentenceStringWithIndexMarking:

#edu/stanford/nlp/semgraph/SemanticGraph/toEnUncollapsedSentenceString:

#edu/stanford/nlp/semgraph/SemanticGraph/insertSpecificIntoList:

#edu/stanford/nlp/semgraph/SemanticGraph/toString:

#edu/stanford/nlp/semgraph/SemanticGraph/toList:

#edu/stanford/nlp/semgraph/SemanticGraph/toPOSList:

#edu/stanford/nlp/semgraph/SemanticGraph/toReadableString:

#edu/stanford/nlp/semgraph/SemanticGraph/toXMLString:

#edu/stanford/nlp/semgraph/SemanticGraph/toCompactString:

#edu/stanford/nlp/semgraph/SemanticGraph/toCompactStringHelper:

#edu/stanford/nlp/semgraph/SemanticGraph/toDotFormat:

#edu/stanford/nlp/semgraph/SemanticGraph/<init>:

#edu/stanford/nlp/semgraph/SemanticGraph/<init>:

#edu/stanford/nlp/semgraph/SemanticGraph/makeSoftCopy:

#edu/stanford/nlp/semgraph/SemanticGraph/equals:

#edu/stanford/nlp/semgraph/SemanticGraph/findAllRelns:

#edu/stanford/nlp/semgraph/SemanticGraph/findAllRelns:

#edu/stanford/nlp/semgraph/SemanticGraph/typedDependencies:

#edu/stanford/nlp/semgraph/SemanticGraph/yieldSpan:

#edu/stanford/nlp/semgraph/SemanticGraph/yield:
edu.stanford.nlp.semgraph.SemanticGraph:

#edu/stanford/nlp/semgraph/SemanticGraphFormatter/formatSemanticGraph:

#edu/stanford/nlp/semgraph/SemanticGraphFormatter/formatSGNode:

#edu/stanford/nlp/semgraph/SemanticGraphFormatter/formatSGNodeOnelineHelper:

#edu/stanford/nlp/semgraph/SemanticGraphFormatter/formatSGNodeMultiline:

#edu/stanford/nlp/semgraph/SemanticGraphFormatter/formatLabel:
edu.stanford.nlp.semgraph.SemanticGraphFormatter:

#edu/stanford/nlp/semgraph/SemanticGraphUtils$TreeNodeProxy/create:
edu.stanford.nlp.semgraph.SemanticGraphUtils$TreeNodeProxy:
edu.stanford.nlp.semgraph.SemanticGraphFactory$Mode:
edu.stanford.nlp.semgraph.SemanticGraph$OutputFormat:
edu.stanford.nlp.semgraph.SemanticGraphEdge$1:
edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$EnhancedDependenciesAnnotation:

#edu/stanford/nlp/semgraph/SemanticGraphPrinter/main:
edu.stanford.nlp.semgraph.SemanticGraphPrinter:

#edu/stanford/nlp/semgraph/SemanticGraphUtils$IndexedWordProxy/create:
edu.stanford.nlp.semgraph.SemanticGraphUtils$IndexedWordProxy:
edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$DependenciesType:
edu.stanford.nlp.semgraph.ISemanticGraphEdgeEql:
edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$BasicDependenciesAnnotation:
edu.stanford.nlp.semgraph.SemanticGraph$1:

#edu/stanford/nlp/semgraph/SemanticGraphFactory/makeFromTree:

#edu/stanford/nlp/semgraph/SemanticGraphFactory/makeFromTree:

#edu/stanford/nlp/semgraph/SemanticGraphFactory/makeFromTree:

#edu/stanford/nlp/semgraph/SemanticGraphFactory/makeFromTree:

#edu/stanford/nlp/semgraph/SemanticGraphFactory/makeFromTree:

#edu/stanford/nlp/semgraph/SemanticGraphFactory/makeFromEdges:

#edu/stanford/nlp/semgraph/SemanticGraphFactory/getVerticesFromEdgeSet:

#edu/stanford/nlp/semgraph/SemanticGraphFactory/makeFromVertices:

#edu/stanford/nlp/semgraph/SemanticGraphFactory/duplicateKeepNodes:

#edu/stanford/nlp/semgraph/SemanticGraphFactory/makeFromGraphs:

#edu/stanford/nlp/semgraph/SemanticGraphFactory/deepCopyFromGraphs:
edu.stanford.nlp.semgraph.SemanticGraphFactory:
edu.stanford.nlp.semgraph.semgrex.SemgrexParserConstants:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation$RIGHT_SIBLING/satisfiesOrder:
edu.stanford.nlp.semgraph.semgrex.GraphRelation$RIGHT_SIBLING:
edu.stanford.nlp.semgraph.semgrex.GraphRelation$GRANDKID:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation/toString:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation/getPattern:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation/getName:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation/isKnownRelation:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation/getRelation:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation/getRelation:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation/getRelation:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation/equals:
edu.stanford.nlp.semgraph.semgrex.GraphRelation:

#edu/stanford/nlp/semgraph/semgrex/SemgrexPattern/negate:

#edu/stanford/nlp/semgraph/semgrex/SemgrexPattern/makeOptional:

#edu/stanford/nlp/semgraph/semgrex/SemgrexPattern/prettyPrint:

#edu/stanford/nlp/semgraph/semgrex/SemgrexPattern/equals:

#edu/stanford/nlp/semgraph/semgrex/SemgrexPattern/main:
edu.stanford.nlp.semgraph.semgrex.SemgrexPattern:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation$EQUALS$1/advance:
edu.stanford.nlp.semgraph.semgrex.GraphRelation$EQUALS$1:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation$LIMITED_GRANDPARENT$1/initialize:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation$LIMITED_GRANDPARENT$1/advance:
edu.stanford.nlp.semgraph.semgrex.GraphRelation$LIMITED_GRANDPARENT$1:

#edu/stanford/nlp/semgraph/semgrex/NodePattern/<init>:

#edu/stanford/nlp/semgraph/semgrex/NodePattern/nodeAttrMatch:

#edu/stanford/nlp/semgraph/semgrex/NodePattern/toString:

#edu/stanford/nlp/semgraph/semgrex/NodePattern/getChildren:

#edu/stanford/nlp/semgraph/semgrex/NodePattern/matcher:
edu.stanford.nlp.semgraph.semgrex.NodePattern:

#edu/stanford/nlp/semgraph/semgrex/SemgrexParser/fullExpression:

#edu/stanford/nlp/semgraph/semgrex/SemgrexParser/Root:

#edu/stanford/nlp/semgraph/semgrex/SemgrexParser/SubNode:

#edu/stanford/nlp/semgraph/semgrex/SemgrexParser/RelationDisj:

#edu/stanford/nlp/semgraph/semgrex/SemgrexParser/RelationConj:

#edu/stanford/nlp/semgraph/semgrex/SemgrexParser/ModRelation:

#edu/stanford/nlp/semgraph/semgrex/SemgrexParser/RelChild:

#edu/stanford/nlp/semgraph/semgrex/SemgrexParser/Relation:

#edu/stanford/nlp/semgraph/semgrex/SemgrexParser/NodeDisj:

#edu/stanford/nlp/semgraph/semgrex/SemgrexParser/NodeConj:

#edu/stanford/nlp/semgraph/semgrex/SemgrexParser/ModNode:

#edu/stanford/nlp/semgraph/semgrex/SemgrexParser/Child:

#edu/stanford/nlp/semgraph/semgrex/SemgrexParser/AddAttribute:

#edu/stanford/nlp/semgraph/semgrex/SemgrexParser/Description:

#edu/stanford/nlp/semgraph/semgrex/SemgrexParser/<init>:

#edu/stanford/nlp/semgraph/semgrex/SemgrexParser/ReInit:

#edu/stanford/nlp/semgraph/semgrex/SemgrexParser/<init>:

#edu/stanford/nlp/semgraph/semgrex/SemgrexParser/ReInit:

#edu/stanford/nlp/semgraph/semgrex/SemgrexParser/<init>:

#edu/stanford/nlp/semgraph/semgrex/SemgrexParser/ReInit:

#edu/stanford/nlp/semgraph/semgrex/SemgrexParser/jj_consume_token:

#edu/stanford/nlp/semgraph/semgrex/SemgrexParser/getNextToken:

#edu/stanford/nlp/semgraph/semgrex/SemgrexParser/getToken:

#edu/stanford/nlp/semgraph/semgrex/SemgrexParser/jj_ntk_f:

#edu/stanford/nlp/semgraph/semgrex/SemgrexParser/generateParseException:
edu.stanford.nlp.semgraph.semgrex.SemgrexParser:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation$DEPENDENT/satisfies:
edu.stanford.nlp.semgraph.semgrex.GraphRelation$DEPENDENT:
edu.stanford.nlp.semgraph.semgrex.SemgrexParseException:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation$SIBLING_RELATION/satisfies:
edu.stanford.nlp.semgraph.semgrex.GraphRelation$SIBLING_RELATION:
edu.stanford.nlp.semgraph.semgrex.GraphRelation$3$1:

#edu/stanford/nlp/semgraph/semgrex/SemgrexMatcher/setupFindIterator:

#edu/stanford/nlp/semgraph/semgrex/SemgrexMatcher/find:

#edu/stanford/nlp/semgraph/semgrex/SemgrexMatcher/findNextMatchingNode:
edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher:

#edu/stanford/nlp/semgraph/semgrex/TokenMgrError/addEscapes:

#edu/stanford/nlp/semgraph/semgrex/TokenMgrError/LexicalErr:
edu.stanford.nlp.semgraph.semgrex.TokenMgrError:

#edu/stanford/nlp/semgraph/semgrex/NodePattern$NodeMatcher/resetChildIter:

#edu/stanford/nlp/semgraph/semgrex/NodePattern$NodeMatcher/resetChild:

#edu/stanford/nlp/semgraph/semgrex/NodePattern$NodeMatcher/goToNextNodeMatch:

#edu/stanford/nlp/semgraph/semgrex/NodePattern$NodeMatcher/commitVariableGroups:

#edu/stanford/nlp/semgraph/semgrex/NodePattern$NodeMatcher/decommitVariableGroups:

#edu/stanford/nlp/semgraph/semgrex/NodePattern$NodeMatcher/decommitNamedNodes:

#edu/stanford/nlp/semgraph/semgrex/NodePattern$NodeMatcher/decommitNamedRelations:

#edu/stanford/nlp/semgraph/semgrex/NodePattern$NodeMatcher/matchChild:

#edu/stanford/nlp/semgraph/semgrex/NodePattern$NodeMatcher/matches:
edu.stanford.nlp.semgraph.semgrex.NodePattern$NodeMatcher:

#edu/stanford/nlp/semgraph/semgrex/Alignment/toString:

#edu/stanford/nlp/semgraph/semgrex/Alignment/iwToString:

#edu/stanford/nlp/semgraph/semgrex/Alignment/equals:

#edu/stanford/nlp/semgraph/semgrex/Alignment/patchedAlignment:

#edu/stanford/nlp/semgraph/semgrex/Alignment/makeFromIndexArray:
edu.stanford.nlp.semgraph.semgrex.Alignment:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation$ADJACENT_NODE$1/advance:
edu.stanford.nlp.semgraph.semgrex.GraphRelation$ADJACENT_NODE$1:
edu.stanford.nlp.semgraph.semgrex.GraphRelation$1$1:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation$LIMITED_GRANDPARENT/satisfies:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation$LIMITED_GRANDPARENT/satisfyHelper:
edu.stanford.nlp.semgraph.semgrex.GraphRelation$LIMITED_GRANDPARENT:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation$ADJACENT_NODE/satisfies:
edu.stanford.nlp.semgraph.semgrex.GraphRelation$ADJACENT_NODE:
Warning: Method:edu.stanford.nlp.semgraph.semgrex.SemgrexParserTokenManager.jjStopStringLiteralDfa_0 has auto edges.

#edu/stanford/nlp/semgraph/semgrex/SemgrexParserTokenManager/jjMoveStringLiteralDfa0_0:

#edu/stanford/nlp/semgraph/semgrex/SemgrexParserTokenManager/jjMoveNfa_0:

#edu/stanford/nlp/semgraph/semgrex/SemgrexParserTokenManager/jjFillToken:

#edu/stanford/nlp/semgraph/semgrex/SemgrexParserTokenManager/jjCanMove_0:

#edu/stanford/nlp/semgraph/semgrex/SemgrexParserTokenManager/getNextToken:
Warning: Method:edu.stanford.nlp.semgraph.semgrex.SemgrexParserTokenManager.SkipLexicalActions has auto edges.
Warning: Method:edu.stanford.nlp.semgraph.semgrex.SemgrexParserTokenManager.MoreLexicalActions has auto edges.
Warning: Method:edu.stanford.nlp.semgraph.semgrex.SemgrexParserTokenManager.TokenLexicalActions has auto edges.

#edu/stanford/nlp/semgraph/semgrex/SemgrexParserTokenManager/jjCheckNAdd:
Warning: Method:edu.stanford.nlp.semgraph.semgrex.SemgrexParserTokenManager.jjAddStates has auto edges.
Warning: Method:edu.stanford.nlp.semgraph.semgrex.SemgrexParserTokenManager.jjCheckNAddStates has auto edges.

#edu/stanford/nlp/semgraph/semgrex/SemgrexParserTokenManager/ReInitRounds:

#edu/stanford/nlp/semgraph/semgrex/SemgrexParserTokenManager/SwitchTo:
edu.stanford.nlp.semgraph.semgrex.SemgrexParserTokenManager:

#edu/stanford/nlp/semgraph/semgrex/Env/bind:

#edu/stanford/nlp/semgraph/semgrex/Env/lookupAnnotationKey:
edu.stanford.nlp.semgraph.semgrex.Env:
edu.stanford.nlp.semgraph.semgrex.GraphRelation$GRANDPARENT:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation$GRANDSOMETHING/satisfies:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation$GRANDSOMETHING/satisfyHelper:
edu.stanford.nlp.semgraph.semgrex.GraphRelation$GRANDSOMETHING:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation$DEPENDENT$1/advance:
edu.stanford.nlp.semgraph.semgrex.GraphRelation$DEPENDENT$1:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation$SIBLING_RELATION$1/advance:
edu.stanford.nlp.semgraph.semgrex.GraphRelation$SIBLING_RELATION$1:
edu.stanford.nlp.semgraph.semgrex.SemgrexPattern$OutputFormat:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation$SearchNodeIterator/hasNext:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation$SearchNodeIterator/next:
edu.stanford.nlp.semgraph.semgrex.GraphRelation$SearchNodeIterator:

#edu/stanford/nlp/semgraph/semgrex/SemgrexBatchParser/parse:

#edu/stanford/nlp/semgraph/semgrex/SemgrexBatchParser/replaceMacros:

#edu/stanford/nlp/semgraph/semgrex/SemgrexBatchParser/preprocess:

#edu/stanford/nlp/semgraph/semgrex/SemgrexBatchParser/extractMacro:
edu.stanford.nlp.semgraph.semgrex.SemgrexBatchParser:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation$LIMITED_GRANDKID/satisfies:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation$LIMITED_GRANDKID/satisfyHelper:
edu.stanford.nlp.semgraph.semgrex.GraphRelation$LIMITED_GRANDKID:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation$ALIGNMENT$1/advance:
edu.stanford.nlp.semgraph.semgrex.GraphRelation$ALIGNMENT$1:

#edu/stanford/nlp/semgraph/semgrex/NodeAttributes/setAttribute:
edu.stanford.nlp.semgraph.semgrex.NodeAttributes:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation$GRANDSOMETHING$1/initialize:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation$GRANDSOMETHING$1/advance:
edu.stanford.nlp.semgraph.semgrex.GraphRelation$GRANDSOMETHING$1:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation$EQUALS/satisfies:
edu.stanford.nlp.semgraph.semgrex.GraphRelation$EQUALS:

#edu/stanford/nlp/semgraph/semgrex/CoordinationPattern/<init>:

#edu/stanford/nlp/semgraph/semgrex/CoordinationPattern/setChild:

#edu/stanford/nlp/semgraph/semgrex/CoordinationPattern/localString:

#edu/stanford/nlp/semgraph/semgrex/CoordinationPattern/toString:
edu.stanford.nlp.semgraph.semgrex.CoordinationPattern:
edu.stanford.nlp.semgraph.semgrex.GraphRelation$2:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation$GOVERNER$1/advance:
edu.stanford.nlp.semgraph.semgrex.GraphRelation$GOVERNER$1:

#edu/stanford/nlp/semgraph/semgrex/SimpleCharStream/ExpandBuff:

#edu/stanford/nlp/semgraph/semgrex/SimpleCharStream/FillBuff:

#edu/stanford/nlp/semgraph/semgrex/SimpleCharStream/UpdateLineColumn:

#edu/stanford/nlp/semgraph/semgrex/SimpleCharStream/readChar:

#edu/stanford/nlp/semgraph/semgrex/SimpleCharStream/backup:

#edu/stanford/nlp/semgraph/semgrex/SimpleCharStream/ReInit:

#edu/stanford/nlp/semgraph/semgrex/SimpleCharStream/<init>:

#edu/stanford/nlp/semgraph/semgrex/SimpleCharStream/ReInit:

#edu/stanford/nlp/semgraph/semgrex/SimpleCharStream/GetImage:

#edu/stanford/nlp/semgraph/semgrex/SimpleCharStream/GetSuffix:

#edu/stanford/nlp/semgraph/semgrex/SimpleCharStream/adjustBeginLineColumn:
edu.stanford.nlp.semgraph.semgrex.SimpleCharStream:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation$RIGHT_IMMEDIATE_SIBLING/satisfiesOrder:
edu.stanford.nlp.semgraph.semgrex.GraphRelation$RIGHT_IMMEDIATE_SIBLING:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation$GOVERNER/satisfies:
edu.stanford.nlp.semgraph.semgrex.GraphRelation$GOVERNER:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation$LEFT_IMMEDIATE_SIBLING/satisfiesOrder:
edu.stanford.nlp.semgraph.semgrex.GraphRelation$LEFT_IMMEDIATE_SIBLING:

#edu/stanford/nlp/semgraph/semgrex/VariableStrings/isSet:

#edu/stanford/nlp/semgraph/semgrex/VariableStrings/setVar:

#edu/stanford/nlp/semgraph/semgrex/VariableStrings/unsetVar:
edu.stanford.nlp.semgraph.semgrex.VariableStrings:
Warning: Method:edu.stanford.nlp.semgraph.semgrex.Token.newToken has auto edges.
edu.stanford.nlp.semgraph.semgrex.Token:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation$ALIGNMENT/satisfies:
edu.stanford.nlp.semgraph.semgrex.GraphRelation$ALIGNMENT:

#edu/stanford/nlp/semgraph/semgrex/ParseException/initialise:

#edu/stanford/nlp/semgraph/semgrex/ParseException/add_escapes:
edu.stanford.nlp.semgraph.semgrex.ParseException:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation$LEFT_SIBLING/satisfiesOrder:
edu.stanford.nlp.semgraph.semgrex.GraphRelation$LEFT_SIBLING:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation$1/satisfies:
edu.stanford.nlp.semgraph.semgrex.GraphRelation$1:

#edu/stanford/nlp/semgraph/semgrex/ProcessSemgrexRequest/matchSentence:

#edu/stanford/nlp/semgraph/semgrex/ProcessSemgrexRequest/processRequest:
edu.stanford.nlp.semgraph.semgrex.ProcessSemgrexRequest:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation$3/satisfies:
edu.stanford.nlp.semgraph.semgrex.GraphRelation$3:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation$LIMITED_GRANDKID$1/initialize:

#edu/stanford/nlp/semgraph/semgrex/GraphRelation$LIMITED_GRANDKID$1/advance:
edu.stanford.nlp.semgraph.semgrex.GraphRelation$LIMITED_GRANDKID$1:

#edu/stanford/nlp/semgraph/semgrex/CoordinationPattern$CoordinationMatcher/<init>:

#edu/stanford/nlp/semgraph/semgrex/CoordinationPattern$CoordinationMatcher/resetChildIter:

#edu/stanford/nlp/semgraph/semgrex/CoordinationPattern$CoordinationMatcher/resetChildIter:

#edu/stanford/nlp/semgraph/semgrex/CoordinationPattern$CoordinationMatcher/matches:

#edu/stanford/nlp/semgraph/semgrex/CoordinationPattern$CoordinationMatcher/getMatch:

#edu/stanford/nlp/semgraph/semgrex/CoordinationPattern$CoordinationMatcher/toString:
edu.stanford.nlp.semgraph.semgrex.CoordinationPattern$CoordinationMatcher:

#edu/stanford/nlp/semgraph/semgrex/demo/SemgrexDemo/main:
edu.stanford.nlp.semgraph.semgrex.demo.SemgrexDemo:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/SetRoots/evaluate:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/SetRoots/toEditString:
edu.stanford.nlp.semgraph.semgrex.ssurgeon.SetRoots:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon$ArgsBox/init:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon$ArgsBox/toString:
edu.stanford.nlp.semgraph.semgrex.ssurgeon.Ssurgeon$ArgsBox:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/DeleteGraphFromNode/crawl:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/DeleteGraphFromNode/evaluate:
edu.stanford.nlp.semgraph.semgrex.ssurgeon.DeleteGraphFromNode:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/SsurgeonPattern/toString:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/SsurgeonPattern/execute:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/SsurgeonPattern/execute:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/SsurgeonPattern/main:
edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonPattern:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/SsurgeonEdit/getNamedNode:
edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonEdit:
edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonUtils:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/AddEdge/evaluate:
edu.stanford.nlp.semgraph.semgrex.ssurgeon.AddEdge:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/SsurgeonWordlist/toString:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/SsurgeonWordlist/<init>:
edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonWordlist:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/CollapseSubtree/evaluate:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/CollapseSubtree/lambda$evaluate$0:
edu.stanford.nlp.semgraph.semgrex.ssurgeon.CollapseSubtree:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/RemoveEdge/evaluate:
edu.stanford.nlp.semgraph.semgrex.ssurgeon.RemoveEdge:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/AddDep/fromCheapString:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/AddDep/nullShield:
edu.stanford.nlp.semgraph.semgrex.ssurgeon.AddDep:
edu.stanford.nlp.semgraph.semgrex.ssurgeon.Ssurgeon$SsurgeonArgs:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/KillNonRootedNodes/evaluate:
edu.stanford.nlp.semgraph.semgrex.ssurgeon.KillNonRootedNodes:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/RemoveNamedEdge/evaluate:
edu.stanford.nlp.semgraph.semgrex.ssurgeon.RemoveNamedEdge:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/KillAllIncomingEdges/evaluate:
edu.stanford.nlp.semgraph.semgrex.ssurgeon.KillAllIncomingEdges:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon/inst:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon/expandFromPatterns:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon/exhaustFromPatterns:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon/exhaustFromPatterns:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon/parseArgs:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon/parseEditLine:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon/writeToFile:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon/writeToString:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon/createPatternXMLDoc:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon/readFromFile:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon/readFromDirectory:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon/ssurgeonPatternFromXML:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon/assemblePredFromXML:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon/testRead:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon/getTagText:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon/getEltText:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon/getFirstTag:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon/getFirstChildElement:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon/getChildElements:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon/main:
edu.stanford.nlp.semgraph.semgrex.ssurgeon.Ssurgeon:
edu.stanford.nlp.semgraph.semgrex.ssurgeon.AddNode:
edu.stanford.nlp.semgraph.semgrex.ssurgeon.Ssurgeon$RUNTYPE:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/pred/WordlistTest/evaluate:
edu.stanford.nlp.semgraph.semgrex.ssurgeon.pred.WordlistTest:
edu.stanford.nlp.semgraph.semgrex.ssurgeon.pred.WordlistTest$TYPE:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/pred/SsurgAndPred/test:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/pred/SsurgAndPred/toString:
edu.stanford.nlp.semgraph.semgrex.ssurgeon.pred.SsurgAndPred:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/pred/SsurgTestManager/inst:
edu.stanford.nlp.semgraph.semgrex.ssurgeon.pred.SsurgTestManager:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/pred/SsurgOrPred/test:

#edu/stanford/nlp/semgraph/semgrex/ssurgeon/pred/SsurgOrPred/toString:
edu.stanford.nlp.semgraph.semgrex.ssurgeon.pred.SsurgOrPred:
edu.stanford.nlp.semgraph.semgrex.ssurgeon.pred.SsurgPred:
edu.stanford.nlp.semgraph.semgrex.ssurgeon.pred.NodeTest:

#edu/stanford/nlp/ie/ClassifierCombiner/<init>:

#edu/stanford/nlp/ie/ClassifierCombiner/<init>:

#edu/stanford/nlp/ie/ClassifierCombiner/extractCombinationMode:

#edu/stanford/nlp/ie/ClassifierCombiner/loadClassifiers:

#edu/stanford/nlp/ie/ClassifierCombiner/labels:

#edu/stanford/nlp/ie/ClassifierCombiner/mergeDocuments:

#edu/stanford/nlp/ie/ClassifierCombiner/mergeTwoDocuments:

#edu/stanford/nlp/ie/ClassifierCombiner/classify:

#edu/stanford/nlp/ie/ClassifierCombiner/serializeClassifier:

#edu/stanford/nlp/ie/ClassifierCombiner/examineCRF:

#edu/stanford/nlp/ie/ClassifierCombiner/showCCInfo:
edu.stanford.nlp.ie.ClassifierCombiner:

#edu/stanford/nlp/ie/QuantifiableEntityNormalizer/getOneSubstitutionMatch:

#edu/stanford/nlp/ie/QuantifiableEntityNormalizer/isOneSubstitutionMatch:

#edu/stanford/nlp/ie/QuantifiableEntityNormalizer/singleEntityToString:

#edu/stanford/nlp/ie/QuantifiableEntityNormalizer/collapseNERLabels:

#edu/stanford/nlp/ie/QuantifiableEntityNormalizer/normalizedDateString:

#edu/stanford/nlp/ie/QuantifiableEntityNormalizer/normalizedDurationString:

#edu/stanford/nlp/ie/QuantifiableEntityNormalizer/isYear:

#edu/stanford/nlp/ie/QuantifiableEntityNormalizer/detectDateRangeModifier:

#edu/stanford/nlp/ie/QuantifiableEntityNormalizer/detectDateRangeModifier:

#edu/stanford/nlp/ie/QuantifiableEntityNormalizer/detectTwoSidedRangeModifier:

#edu/stanford/nlp/ie/QuantifiableEntityNormalizer/concatenateNumericString:

#edu/stanford/nlp/ie/QuantifiableEntityNormalizer/normalizedTimeString:

#edu/stanford/nlp/ie/QuantifiableEntityNormalizer/convertToAmerican:

#edu/stanford/nlp/ie/QuantifiableEntityNormalizer/normalizedMoneyString:

#edu/stanford/nlp/ie/QuantifiableEntityNormalizer/normalizedNumberStringQuiet:

#edu/stanford/nlp/ie/QuantifiableEntityNormalizer/normalizedOrdinalStringQuiet:

#edu/stanford/nlp/ie/QuantifiableEntityNormalizer/normalizedPercentString:

#edu/stanford/nlp/ie/QuantifiableEntityNormalizer/fetchNumberFromSUTime:

#edu/stanford/nlp/ie/QuantifiableEntityNormalizer/fetchTimexFromSUTime:

#edu/stanford/nlp/ie/QuantifiableEntityNormalizer/processEntity:

#edu/stanford/nlp/ie/QuantifiableEntityNormalizer/timeEntityToString:

#edu/stanford/nlp/ie/QuantifiableEntityNormalizer/normalizeClassifierOutput:

#edu/stanford/nlp/ie/QuantifiableEntityNormalizer/detectQuantityModifier:

#edu/stanford/nlp/ie/QuantifiableEntityNormalizer/detectTimeOfDayModifier:

#edu/stanford/nlp/ie/QuantifiableEntityNormalizer/isCompatible:

#edu/stanford/nlp/ie/QuantifiableEntityNormalizer/addNormalizedQuantitiesToEntities:

#edu/stanford/nlp/ie/QuantifiableEntityNormalizer/fixupNerBeforeNormalization:

#edu/stanford/nlp/ie/QuantifiableEntityNormalizer/applySpecializedNER:
edu.stanford.nlp.ie.QuantifiableEntityNormalizer:
edu.stanford.nlp.ie.NERFeatureFactory$Bin4Annotation:

#edu/stanford/nlp/ie/KBPRelationExtractor$Accuracy/predict:

#edu/stanford/nlp/ie/KBPRelationExtractor$Accuracy/precision:

#edu/stanford/nlp/ie/KBPRelationExtractor$Accuracy/precisionMicro:

#edu/stanford/nlp/ie/KBPRelationExtractor$Accuracy/precisionMacro:

#edu/stanford/nlp/ie/KBPRelationExtractor$Accuracy/recall:

#edu/stanford/nlp/ie/KBPRelationExtractor$Accuracy/recallMicro:

#edu/stanford/nlp/ie/KBPRelationExtractor$Accuracy/recallMacro:

#edu/stanford/nlp/ie/KBPRelationExtractor$Accuracy/dumpPerRelationStats:
edu.stanford.nlp.ie.KBPRelationExtractor$Accuracy:

#edu/stanford/nlp/ie/EmpiricalNERPriorBIO/scoreOf:
edu.stanford.nlp.ie.EmpiricalNERPriorBIO:

#edu/stanford/nlp/ie/NERGUI/getFile:

#edu/stanford/nlp/ie/NERGUI/saveUntaggedContents:

#edu/stanford/nlp/ie/NERGUI/checkFile:

#edu/stanford/nlp/ie/NERGUI/loadClassifier:

#edu/stanford/nlp/ie/NERGUI/loadDefaultClassifier:

#edu/stanford/nlp/ie/NERGUI/openFile:

#edu/stanford/nlp/ie/NERGUI/redraw:

#edu/stanford/nlp/ie/NERGUI/removeTags:

#edu/stanford/nlp/ie/NERGUI/extract:

#edu/stanford/nlp/ie/NERGUI/colorToHTML:

#edu/stanford/nlp/ie/NERGUI/buildExtractButton:

#edu/stanford/nlp/ie/NERGUI/buildTagPanel:

#edu/stanford/nlp/ie/NERGUI/makeTagToColorMap:

#edu/stanford/nlp/ie/NERGUI/getNColors:
edu.stanford.nlp.ie.NERGUI:
edu.stanford.nlp.ie.EmbeddingFeatureFactory:
edu.stanford.nlp.ie.KBPBasicSpanishCorefSystem$1:
edu.stanford.nlp.ie.Entity:

#edu/stanford/nlp/ie/NERClassifierCombiner/<init>:

#edu/stanford/nlp/ie/NERClassifierCombiner/<init>:

#edu/stanford/nlp/ie/NERClassifierCombiner/createNERClassifierCombiner:

#edu/stanford/nlp/ie/NERClassifierCombiner/usesSUTime:

#edu/stanford/nlp/ie/NERClassifierCombiner/copyAnswerFieldsToNERField:

#edu/stanford/nlp/ie/NERClassifierCombiner/classifyWithGlobalInformation:

#edu/stanford/nlp/ie/NERClassifierCombiner/recognizeNumberSequences:

#edu/stanford/nlp/ie/NERClassifierCombiner/readRegexnerGazette:

#edu/stanford/nlp/ie/NERClassifierCombiner/main:
edu.stanford.nlp.ie.NERClassifierCombiner:

#edu/stanford/nlp/ie/EmpiricalNERPrior/scoreOf:
edu.stanford.nlp.ie.EmpiricalNERPrior:
edu.stanford.nlp.ie.NERFeatureFactory$Bin3Annotation:
edu.stanford.nlp.ie.KBPRelationExtractor:

#edu/stanford/nlp/ie/KBPStatisticalExtractor/spanBetweenMentions:

#edu/stanford/nlp/ie/KBPStatisticalExtractor/withMentionsPositioned:

#edu/stanford/nlp/ie/KBPStatisticalExtractor/denseFeatures:

#edu/stanford/nlp/ie/KBPStatisticalExtractor/surfaceFeatures:

#edu/stanford/nlp/ie/KBPStatisticalExtractor/dependencyFeatures:

#edu/stanford/nlp/ie/KBPStatisticalExtractor/relationSpecificFeatures:

#edu/stanford/nlp/ie/KBPStatisticalExtractor/features:

#edu/stanford/nlp/ie/KBPStatisticalExtractor/initFactory:

#edu/stanford/nlp/ie/KBPStatisticalExtractor/trainMultinomialClassifier:

#edu/stanford/nlp/ie/KBPStatisticalExtractor/classify:

#edu/stanford/nlp/ie/KBPStatisticalExtractor/main:

#edu/stanford/nlp/ie/KBPStatisticalExtractor/$deserializeLambda$:

#edu/stanford/nlp/ie/KBPStatisticalExtractor/lambda$main$2:

#edu/stanford/nlp/ie/KBPStatisticalExtractor/lambda$main$1:

#edu/stanford/nlp/ie/KBPStatisticalExtractor/lambda$surfaceFeatures$0:
edu.stanford.nlp.ie.KBPStatisticalExtractor:
edu.stanford.nlp.ie.NERGUI$InputListener:
edu.stanford.nlp.ie.EmpiricalNERPriorFactory:
edu.stanford.nlp.ie.NERFeatureFactory$Bin2Annotation:
edu.stanford.nlp.ie.ClassifierCombiner$CombinationMode:

#edu/stanford/nlp/ie/NERServer$NERClient/communicateWithNERServer:
edu.stanford.nlp.ie.NERServer$NERClient:

#edu/stanford/nlp/ie/EntityCachingAbstractSequencePriorBIO/<init>:

#edu/stanford/nlp/ie/EntityCachingAbstractSequencePriorBIO/scoresOf:

#edu/stanford/nlp/ie/EntityCachingAbstractSequencePriorBIO/setInitialSequence:

#edu/stanford/nlp/ie/EntityCachingAbstractSequencePriorBIO/addEntityToEntitiesArray:

#edu/stanford/nlp/ie/EntityCachingAbstractSequencePriorBIO/extractEntity:

#edu/stanford/nlp/ie/EntityCachingAbstractSequencePriorBIO/otherOccurrences:

#edu/stanford/nlp/ie/EntityCachingAbstractSequencePriorBIO/toArray:

#edu/stanford/nlp/ie/EntityCachingAbstractSequencePriorBIO/matches:

#edu/stanford/nlp/ie/EntityCachingAbstractSequencePriorBIO/updateSequenceElement:

#edu/stanford/nlp/ie/EntityCachingAbstractSequencePriorBIO/toString:

#edu/stanford/nlp/ie/EntityCachingAbstractSequencePriorBIO/toString:
edu.stanford.nlp.ie.EntityCachingAbstractSequencePriorBIO:
edu.stanford.nlp.ie.ChineseMorphFeatureSets$1:

#edu/stanford/nlp/ie/NERFeatureFactory$FeatureCollector/setSuffix:

#edu/stanford/nlp/ie/NERFeatureFactory$FeatureCollector/build:

#edu/stanford/nlp/ie/NERFeatureFactory$FeatureCollector/add:
edu.stanford.nlp.ie.NERFeatureFactory$FeatureCollector:

#edu/stanford/nlp/ie/KBPRelationExtractor$NERTag/fromString:
edu.stanford.nlp.ie.KBPRelationExtractor$NERTag:

#edu/stanford/nlp/ie/KBPTokensregexExtractor/<init>:

#edu/stanford/nlp/ie/KBPTokensregexExtractor/classify:

#edu/stanford/nlp/ie/KBPTokensregexExtractor/lambda$main$0:
edu.stanford.nlp.ie.KBPTokensregexExtractor:
edu.stanford.nlp.ie.EmpiricalNERPriorBIOFactory:
edu.stanford.nlp.ie.NERGUI$1:
edu.stanford.nlp.ie.NERGUI$ColorIcon:

#edu/stanford/nlp/ie/KBPEnsembleExtractor/classify:

#edu/stanford/nlp/ie/KBPEnsembleExtractor/main:

#edu/stanford/nlp/ie/KBPEnsembleExtractor/lambda$main$0:
edu.stanford.nlp.ie.KBPEnsembleExtractor:
edu.stanford.nlp.ie.NERFeatureFactory$Bin5Annotation:
edu.stanford.nlp.ie.EntityBIO:

#edu/stanford/nlp/ie/ChineseQuantifiableEntityNormalizer/addNormalizedQuantitiesToEntities:

#edu/stanford/nlp/ie/ChineseQuantifiableEntityNormalizer/detectQuantityModifier:

#edu/stanford/nlp/ie/ChineseQuantifiableEntityNormalizer/processEntity:

#edu/stanford/nlp/ie/ChineseQuantifiableEntityNormalizer/normalizedMoneyString:

#edu/stanford/nlp/ie/ChineseQuantifiableEntityNormalizer/normalizedPercentString:

#edu/stanford/nlp/ie/ChineseQuantifiableEntityNormalizer/normalizedOrdinalString:

#edu/stanford/nlp/ie/ChineseQuantifiableEntityNormalizer/normalizedNumberString:

#edu/stanford/nlp/ie/ChineseQuantifiableEntityNormalizer/recurNormalizeLiteralIntegerString:

#edu/stanford/nlp/ie/ChineseQuantifiableEntityNormalizer/compositeAtUnitIfExists:

#edu/stanford/nlp/ie/ChineseQuantifiableEntityNormalizer/normalizeLiteralDecimalString:

#edu/stanford/nlp/ie/ChineseQuantifiableEntityNormalizer/normalizeMonthOrDay:

#edu/stanford/nlp/ie/ChineseQuantifiableEntityNormalizer/normalizeYear:

#edu/stanford/nlp/ie/ChineseQuantifiableEntityNormalizer/normalizeDateString:

#edu/stanford/nlp/ie/ChineseQuantifiableEntityNormalizer/singleEntityToString:

#edu/stanford/nlp/ie/ChineseQuantifiableEntityNormalizer/prettyNumber:
edu.stanford.nlp.ie.ChineseQuantifiableEntityNormalizer:
edu.stanford.nlp.ie.KBPRelationExtractor$Accuracy$1:
edu.stanford.nlp.ie.KBPStatisticalExtractor$MinimizerType:
edu.stanford.nlp.ie.KBPRelationExtractor$RelationType$Cardinality:
edu.stanford.nlp.ie.PriorModelFactory:

#edu/stanford/nlp/ie/NERServer$Session/run:

#edu/stanford/nlp/ie/NERServer$Session/close:
edu.stanford.nlp.ie.NERServer$Session:

#edu/stanford/nlp/ie/KBPRelationExtractor$Accuracy$PerRelationStat/f1:

#edu/stanford/nlp/ie/KBPRelationExtractor$Accuracy$PerRelationStat/compareTo:
edu.stanford.nlp.ie.KBPRelationExtractor$Accuracy$PerRelationStat:
edu.stanford.nlp.ie.KBPStatisticalExtractor$1:

#edu/stanford/nlp/ie/AbstractSequenceClassifier$1/drawSample:
edu.stanford.nlp.ie.AbstractSequenceClassifier$1:
edu.stanford.nlp.ie.KBPTokensregexExtractor$Subject:
edu.stanford.nlp.ie.ChineseMorphFeatureSets$FeatType:
edu.stanford.nlp.ie.KBPRelationExtractor$KBPInput:

#edu/stanford/nlp/ie/ChineseMorphFeatureSets/<init>:

#edu/stanford/nlp/ie/ChineseMorphFeatureSets/getFeatures:

#edu/stanford/nlp/ie/ChineseMorphFeatureSets/addTypedFeature:
edu.stanford.nlp.ie.ChineseMorphFeatureSets:

#edu/stanford/nlp/ie/AbstractSequenceClassifier$2/process:
edu.stanford.nlp.ie.AbstractSequenceClassifier$2:
edu.stanford.nlp.ie.KBPStatisticalExtractor$2:

#edu/stanford/nlp/ie/NERClassifierCombiner$Language/fromString:
edu.stanford.nlp.ie.NERClassifierCombiner$Language:

#edu/stanford/nlp/ie/NERGUI$ActionPerformer/actionPerformed:
edu.stanford.nlp.ie.NERGUI$ActionPerformer:

#edu/stanford/nlp/ie/KBPSemgrexExtractor/<init>:

#edu/stanford/nlp/ie/KBPSemgrexExtractor/classify:

#edu/stanford/nlp/ie/KBPSemgrexExtractor/matches:

#edu/stanford/nlp/ie/KBPSemgrexExtractor/lambda$main$0:
edu.stanford.nlp.ie.KBPSemgrexExtractor:
edu.stanford.nlp.ie.NERServer$1:
Fail to analyze: ../programs/stanford-corenlp-4.4.0/target/classes/edu/stanford/nlp/ie/NERServer.class
edu.stanford.nlp.ie.KBPRelationExtractor$1:

#edu/stanford/nlp/ie/NERFeatureFactory/init:

#edu/stanford/nlp/ie/NERFeatureFactory/getCliqueFeatures:

#edu/stanford/nlp/ie/NERFeatureFactory/initLexicon:

#edu/stanford/nlp/ie/NERFeatureFactory/describeDistsimLexicon:

#edu/stanford/nlp/ie/NERFeatureFactory/distSimAnnotate:

#edu/stanford/nlp/ie/NERFeatureFactory/dehyphenate:

#edu/stanford/nlp/ie/NERFeatureFactory/isNameCase:

#edu/stanford/nlp/ie/NERFeatureFactory/noUpperCase:

#edu/stanford/nlp/ie/NERFeatureFactory/hasLetter:

#edu/stanford/nlp/ie/NERFeatureFactory/isOrdinal:

#edu/stanford/nlp/ie/NERFeatureFactory/readGazette:

#edu/stanford/nlp/ie/NERFeatureFactory/makeGenericKeyCache:

#edu/stanford/nlp/ie/NERFeatureFactory/generateSlashHyphenFeatures:

#edu/stanford/nlp/ie/NERFeatureFactory/featuresC:

#edu/stanford/nlp/ie/NERFeatureFactory/featuresCpC:

#edu/stanford/nlp/ie/NERFeatureFactory/featuresCp2C:

#edu/stanford/nlp/ie/NERFeatureFactory/featuresCp3C:

#edu/stanford/nlp/ie/NERFeatureFactory/featuresCp4C:

#edu/stanford/nlp/ie/NERFeatureFactory/featuresCp5C:

#edu/stanford/nlp/ie/NERFeatureFactory/featuresCpCp2C:

#edu/stanford/nlp/ie/NERFeatureFactory/featuresCpCp2Cp3C:

#edu/stanford/nlp/ie/NERFeatureFactory/featuresCpCp2Cp3Cp4C:

#edu/stanford/nlp/ie/NERFeatureFactory/featuresCnC:

#edu/stanford/nlp/ie/NERFeatureFactory/featuresCpCnC:

#edu/stanford/nlp/ie/NERFeatureFactory/reverse:

#edu/stanford/nlp/ie/NERFeatureFactory/occurrencePatterns:

#edu/stanford/nlp/ie/NERFeatureFactory/intern:

#edu/stanford/nlp/ie/NERFeatureFactory/initGazette:
edu.stanford.nlp.ie.NERFeatureFactory:

#edu/stanford/nlp/ie/AbstractSequenceClassifier/defaultReaderAndWriter:

#edu/stanford/nlp/ie/AbstractSequenceClassifier/plainTextReaderAndWriter:

#edu/stanford/nlp/ie/AbstractSequenceClassifier/<init>:

#edu/stanford/nlp/ie/AbstractSequenceClassifier/reinit:

#edu/stanford/nlp/ie/AbstractSequenceClassifier/makePlainTextReaderAndWriter:

#edu/stanford/nlp/ie/AbstractSequenceClassifier/preprocessTokens:

#edu/stanford/nlp/ie/AbstractSequenceClassifier/classifyKBest:

#edu/stanford/nlp/ie/AbstractSequenceClassifier/getViterbiSearchGraph:

#edu/stanford/nlp/ie/AbstractSequenceClassifier/classifyObjectBank:

#edu/stanford/nlp/ie/AbstractSequenceClassifier/classifyToString:

#edu/stanford/nlp/ie/AbstractSequenceClassifier/classifyToCharacterOffsets:

#edu/stanford/nlp/ie/AbstractSequenceClassifier/segmentString:

#edu/stanford/nlp/ie/AbstractSequenceClassifier/train:

#edu/stanford/nlp/ie/AbstractSequenceClassifier/makeObjectBankFromString:

#edu/stanford/nlp/ie/AbstractSequenceClassifier/makeObjectBankFromFiles:

#edu/stanford/nlp/ie/AbstractSequenceClassifier/makeObjectBankFromFiles:

#edu/stanford/nlp/ie/AbstractSequenceClassifier/makeObjectBankFromFiles:

#edu/stanford/nlp/ie/AbstractSequenceClassifier/makeObjectBankFromReader:

#edu/stanford/nlp/ie/AbstractSequenceClassifier/printProbsDocuments:

#edu/stanford/nlp/ie/AbstractSequenceClassifier/outputCalibrationInfo:

#edu/stanford/nlp/ie/AbstractSequenceClassifier/classifyStdin:

#edu/stanford/nlp/ie/AbstractSequenceClassifier/classifyAndWriteAnswers:

#edu/stanford/nlp/ie/AbstractSequenceClassifier/classifyAndWriteAnswersKBest:

#edu/stanford/nlp/ie/AbstractSequenceClassifier/classifyAndWriteViterbiSearchGraph:

#edu/stanford/nlp/ie/AbstractSequenceClassifier/writeAnswers:

#edu/stanford/nlp/ie/AbstractSequenceClassifier/countResults:

#edu/stanford/nlp/ie/AbstractSequenceClassifier/countResultsSegmenter:

#edu/stanford/nlp/ie/AbstractSequenceClassifier/printResults:

#edu/stanford/nlp/ie/AbstractSequenceClassifier/printPRLine:

#edu/stanford/nlp/ie/AbstractSequenceClassifier/loadClassifier:

#edu/stanford/nlp/ie/AbstractSequenceClassifier/loadClassifier:

#edu/stanford/nlp/ie/AbstractSequenceClassifier/printFeatures:

#edu/stanford/nlp/ie/AbstractSequenceClassifier/printFeatureLists:

#edu/stanford/nlp/ie/AbstractSequenceClassifier/printFeatureListsHelper:
edu.stanford.nlp.ie.AbstractSequenceClassifier:
edu.stanford.nlp.ie.NERFeatureFactory$Bin6Annotation:

#edu/stanford/nlp/ie/UniformPrior/<init>:

#edu/stanford/nlp/ie/UniformPrior/scoresOf:
edu.stanford.nlp.ie.UniformPrior:

#edu/stanford/nlp/ie/PresetSequenceClassifier/<init>:

#edu/stanford/nlp/ie/PresetSequenceClassifier/classify:
edu.stanford.nlp.ie.PresetSequenceClassifier:
edu.stanford.nlp.ie.UniformPriorFactory:

#edu/stanford/nlp/ie/NumberNormalizer/setVerbose:

#edu/stanford/nlp/ie/NumberNormalizer/parseNumberPart:

#edu/stanford/nlp/ie/NumberNormalizer/wordToNumber:

#edu/stanford/nlp/ie/NumberNormalizer/wordToNumberRecurse:

#edu/stanford/nlp/ie/NumberNormalizer/findNumbers:

#edu/stanford/nlp/ie/NumberNormalizer/findNumberRanges:

#edu/stanford/nlp/ie/NumberNormalizer/findAndMergeNumbers:

#edu/stanford/nlp/ie/NumberNormalizer/findAndAnnotateNumericExpressionsWithRanges:
edu.stanford.nlp.ie.NumberNormalizer:
edu.stanford.nlp.ie.NERFeatureFactory$GazetteInfo:
edu.stanford.nlp.ie.KBPTokensregexExtractor$Object:
edu.stanford.nlp.ie.NERFeatureFactory$Bin1Annotation:

#edu/stanford/nlp/ie/EntityCachingAbstractSequencePrior/<init>:

#edu/stanford/nlp/ie/EntityCachingAbstractSequencePrior/scoresOf:

#edu/stanford/nlp/ie/EntityCachingAbstractSequencePrior/setInitialSequence:

#edu/stanford/nlp/ie/EntityCachingAbstractSequencePrior/addEntityToEntitiesArray:

#edu/stanford/nlp/ie/EntityCachingAbstractSequencePrior/extractEntity:

#edu/stanford/nlp/ie/EntityCachingAbstractSequencePrior/otherOccurrences:

#edu/stanford/nlp/ie/EntityCachingAbstractSequencePrior/toArray:

#edu/stanford/nlp/ie/EntityCachingAbstractSequencePrior/matches:

#edu/stanford/nlp/ie/EntityCachingAbstractSequencePrior/joiningTwoEntities:

#edu/stanford/nlp/ie/EntityCachingAbstractSequencePrior/splittingTwoEntities:

#edu/stanford/nlp/ie/EntityCachingAbstractSequencePrior/appendingEntity:

#edu/stanford/nlp/ie/EntityCachingAbstractSequencePrior/prependingEntity:

#edu/stanford/nlp/ie/EntityCachingAbstractSequencePrior/addingSingletonEntity:

#edu/stanford/nlp/ie/EntityCachingAbstractSequencePrior/removingEndOfEntity:

#edu/stanford/nlp/ie/EntityCachingAbstractSequencePrior/removingBeginningOfEntity:

#edu/stanford/nlp/ie/EntityCachingAbstractSequencePrior/noChange:

#edu/stanford/nlp/ie/EntityCachingAbstractSequencePrior/updateSequenceElement:

#edu/stanford/nlp/ie/EntityCachingAbstractSequencePrior/toString:

#edu/stanford/nlp/ie/EntityCachingAbstractSequencePrior/toString:
edu.stanford.nlp.ie.EntityCachingAbstractSequencePrior:

#edu/stanford/nlp/ie/KBPBasicSpanishCorefSystem/stripCorporateTitles:

#edu/stanford/nlp/ie/KBPBasicSpanishCorefSystem/noSpecialChars:

#edu/stanford/nlp/ie/KBPBasicSpanishCorefSystem/moreCanonicalMention:

#edu/stanford/nlp/ie/KBPBasicSpanishCorefSystem/firstNameMatch:

#edu/stanford/nlp/ie/KBPBasicSpanishCorefSystem/sameEntityWithoutLinking:

#edu/stanford/nlp/ie/KBPBasicSpanishCorefSystem/nearExactEntityMatch:

#edu/stanford/nlp/ie/KBPBasicSpanishCorefSystem/approximateEntityMatchScore:

#edu/stanford/nlp/ie/KBPBasicSpanishCorefSystem/clusterEntityMentions:

#edu/stanford/nlp/ie/KBPBasicSpanishCorefSystem/bestEntityMention:

#edu/stanford/nlp/ie/KBPBasicSpanishCorefSystem/createCanonicalMentionMap:
edu.stanford.nlp.ie.KBPBasicSpanishCorefSystem:

#edu/stanford/nlp/ie/KBPRelationExtractor$RelationType/fromString:

#edu/stanford/nlp/ie/KBPRelationExtractor$RelationType/plausiblyHasRelation:
edu.stanford.nlp.ie.KBPRelationExtractor$RelationType:

#edu/stanford/nlp/ie/demo/NERDemo/main:
edu.stanford.nlp.ie.demo.NERDemo:
edu.stanford.nlp.ie.pascal.DefaultTeXHyphenData:

#edu/stanford/nlp/ie/pascal/PascalTemplate/<init>:

#edu/stanford/nlp/ie/pascal/PascalTemplate/<init>:

#edu/stanford/nlp/ie/pascal/PascalTemplate/stemAcronym:

#edu/stanford/nlp/ie/pascal/PascalTemplate/setValue:

#edu/stanford/nlp/ie/pascal/PascalTemplate/setValue:

#edu/stanford/nlp/ie/pascal/PascalTemplate/getValue:

#edu/stanford/nlp/ie/pascal/PascalTemplate/equals:

#edu/stanford/nlp/ie/pascal/PascalTemplate/hashCode:

#edu/stanford/nlp/ie/pascal/PascalTemplate/writeToFieldValueCounter:

#edu/stanford/nlp/ie/pascal/PascalTemplate/unpackToCliqueTemplates:

#edu/stanford/nlp/ie/pascal/PascalTemplate/toString:
edu.stanford.nlp.ie.pascal.PascalTemplate:
Warning: Method:edu.stanford.nlp.ie.pascal.TeXHyphenator.load has incoming edges.

#edu/stanford/nlp/ie/pascal/TeXHyphenator/toString:

#edu/stanford/nlp/ie/pascal/TeXHyphenator/insertHyphPattern:

#edu/stanford/nlp/ie/pascal/TeXHyphenator/getMatchingPatterns:

#edu/stanford/nlp/ie/pascal/TeXHyphenator/labelWordBreakPoints:

#edu/stanford/nlp/ie/pascal/TeXHyphenator/findBreakPoints:

#edu/stanford/nlp/ie/pascal/TeXHyphenator/main:
edu.stanford.nlp.ie.pascal.TeXHyphenator:
edu.stanford.nlp.ie.pascal.CliqueTemplates:
edu.stanford.nlp.ie.pascal.ISODateInstance$1:
edu.stanford.nlp.ie.pascal.TeXHyphenator$1:

#edu/stanford/nlp/ie/pascal/Alignment/serialize:

#edu/stanford/nlp/ie/pascal/Alignment/<init>:

#edu/stanford/nlp/ie/pascal/Alignment/toString:

#edu/stanford/nlp/ie/pascal/Alignment/equals:

#edu/stanford/nlp/ie/pascal/Alignment/hashCode:
edu.stanford.nlp.ie.pascal.Alignment:

#edu/stanford/nlp/ie/pascal/ISODateInstance/<init>:

#edu/stanford/nlp/ie/pascal/ISODateInstance/<init>:

#edu/stanford/nlp/ie/pascal/ISODateInstance/<init>:

#edu/stanford/nlp/ie/pascal/ISODateInstance/incrementYear:

#edu/stanford/nlp/ie/pascal/ISODateInstance/incrementMonth:

#edu/stanford/nlp/ie/pascal/ISODateInstance/incrementDay:

#edu/stanford/nlp/ie/pascal/ISODateInstance/makeStringDayChange:

#edu/stanford/nlp/ie/pascal/ISODateInstance/makeStringMonthChange:

#edu/stanford/nlp/ie/pascal/ISODateInstance/makeStringYearChange:

#edu/stanford/nlp/ie/pascal/ISODateInstance/extractFields:

#edu/stanford/nlp/ie/pascal/ISODateInstance/getRangeDates:

#edu/stanford/nlp/ie/pascal/ISODateInstance/addExtraRanges:

#edu/stanford/nlp/ie/pascal/ISODateInstance/isRange:

#edu/stanford/nlp/ie/pascal/ISODateInstance/getStartDate:

#edu/stanford/nlp/ie/pascal/ISODateInstance/getEndDate:

#edu/stanford/nlp/ie/pascal/ISODateInstance/isAfter:

#edu/stanford/nlp/ie/pascal/ISODateInstance/checkWildcardAfterCompatibility:

#edu/stanford/nlp/ie/pascal/ISODateInstance/isCompatible:

#edu/stanford/nlp/ie/pascal/ISODateInstance/isYearCompatible:

#edu/stanford/nlp/ie/pascal/ISODateInstance/isMonthCompatible:

#edu/stanford/nlp/ie/pascal/ISODateInstance/isDayCompatible:

#edu/stanford/nlp/ie/pascal/ISODateInstance/checkWildcardCompatibility:

#edu/stanford/nlp/ie/pascal/ISODateInstance/contains:

#edu/stanford/nlp/ie/pascal/ISODateInstance/isAfter:

#edu/stanford/nlp/ie/pascal/ISODateInstance/isCompatibleDate:

#edu/stanford/nlp/ie/pascal/ISODateInstance/isYearCompatible:

#edu/stanford/nlp/ie/pascal/ISODateInstance/isMonthCompatible:

#edu/stanford/nlp/ie/pascal/ISODateInstance/isDayCompatible:

#edu/stanford/nlp/ie/pascal/ISODateInstance/tokenizeDate:

#edu/stanford/nlp/ie/pascal/ISODateInstance/extractYYYYMMDD:

#edu/stanford/nlp/ie/pascal/ISODateInstance/extractMMDDYY:

#edu/stanford/nlp/ie/pascal/ISODateInstance/extractYear:

#edu/stanford/nlp/ie/pascal/ISODateInstance/foundMiscYearPattern:

#edu/stanford/nlp/ie/pascal/ISODateInstance/extractMonth:

#edu/stanford/nlp/ie/pascal/ISODateInstance/extractDay:

#edu/stanford/nlp/ie/pascal/ISODateInstance/extractWeekday:

#edu/stanford/nlp/ie/pascal/ISODateInstance/main:
edu.stanford.nlp.ie.pascal.ISODateInstance:

#edu/stanford/nlp/ie/pascal/InfoTemplate/<init>:

#edu/stanford/nlp/ie/pascal/InfoTemplate/equals:
edu.stanford.nlp.ie.pascal.InfoTemplate:

#edu/stanford/nlp/ie/pascal/DateTemplate/<init>:

#edu/stanford/nlp/ie/pascal/DateTemplate/equals:
edu.stanford.nlp.ie.pascal.DateTemplate:
edu.stanford.nlp.ie.pascal.ISODateInstance$DateField:

#edu/stanford/nlp/ie/pascal/Prior/<init>:

#edu/stanford/nlp/ie/pascal/Prior/get:
edu.stanford.nlp.ie.pascal.Prior:
edu.stanford.nlp.ie.pascal.RelationalModel:
edu.stanford.nlp.ie.pascal.TeXHyphenator$Node:

#edu/stanford/nlp/ie/regexp/ChineseNumberSequenceClassifier/<init>:

#edu/stanford/nlp/ie/regexp/ChineseNumberSequenceClassifier/classify:

#edu/stanford/nlp/ie/regexp/ChineseNumberSequenceClassifier/rightScanFindsMoneyWord:

#edu/stanford/nlp/ie/regexp/ChineseNumberSequenceClassifier/classifyWithGlobalInformation:
edu.stanford.nlp.ie.regexp.ChineseNumberSequenceClassifier:

#edu/stanford/nlp/ie/regexp/NumberSequenceClassifier/<init>:

#edu/stanford/nlp/ie/regexp/NumberSequenceClassifier/<init>:

#edu/stanford/nlp/ie/regexp/NumberSequenceClassifier/classifyWithGlobalInformation:

#edu/stanford/nlp/ie/regexp/NumberSequenceClassifier/finalizeClassification:

#edu/stanford/nlp/ie/regexp/NumberSequenceClassifier/classifyWithSUTime:

#edu/stanford/nlp/ie/regexp/NumberSequenceClassifier/alignSentence:

#edu/stanford/nlp/ie/regexp/NumberSequenceClassifier/buildSentenceFromTokens:

#edu/stanford/nlp/ie/regexp/NumberSequenceClassifier/buildText:
Warning: Method:edu.stanford.nlp.ie.regexp.NumberSequenceClassifier.runSUTime has auto edges.

#edu/stanford/nlp/ie/regexp/NumberSequenceClassifier/moneyAndPercentRecognizer:

#edu/stanford/nlp/ie/regexp/NumberSequenceClassifier/ordinalRecognizer:
Warning: Method:edu.stanford.nlp.ie.regexp.NumberSequenceClassifier.changeLeftToRight has incoming edges.
Warning: Method:edu.stanford.nlp.ie.regexp.NumberSequenceClassifier.changeRightToLeft has incoming edges.

#edu/stanford/nlp/ie/regexp/NumberSequenceClassifier/copyTokens:

#edu/stanford/nlp/ie/regexp/NumberSequenceClassifier/transferAnnotations:

#edu/stanford/nlp/ie/regexp/NumberSequenceClassifier/copyTokens:

#edu/stanford/nlp/ie/regexp/NumberSequenceClassifier/copyCoreLabel:

#edu/stanford/nlp/ie/regexp/NumberSequenceClassifier/classifyOld:

#edu/stanford/nlp/ie/regexp/NumberSequenceClassifier/leftScanFindsWeightWord:

#edu/stanford/nlp/ie/regexp/NumberSequenceClassifier/rightScanFindsMoneyWord:

#edu/stanford/nlp/ie/regexp/NumberSequenceClassifier/main:
edu.stanford.nlp.ie.regexp.NumberSequenceClassifier:

#edu/stanford/nlp/ie/regexp/RegexNERSequenceClassifier$Entry/<init>:

#edu/stanford/nlp/ie/regexp/RegexNERSequenceClassifier$Entry/compareTo:
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifier$Entry:

#edu/stanford/nlp/ie/regexp/RegexNERSequenceClassifier/<init>:

#edu/stanford/nlp/ie/regexp/RegexNERSequenceClassifier/<init>:

#edu/stanford/nlp/ie/regexp/RegexNERSequenceClassifier/containsValidPos:

#edu/stanford/nlp/ie/regexp/RegexNERSequenceClassifier/classify:

#edu/stanford/nlp/ie/regexp/RegexNERSequenceClassifier/readEntries:

#edu/stanford/nlp/ie/regexp/RegexNERSequenceClassifier/findStartIndex:
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifier:

#edu/stanford/nlp/ie/ner/CMMClassifier$Scorer/buildTagArray:

#edu/stanford/nlp/ie/ner/CMMClassifier$Scorer/getPossibleValues:

#edu/stanford/nlp/ie/ner/CMMClassifier$Scorer/scoreOf:

#edu/stanford/nlp/ie/ner/CMMClassifier$Scorer/scoresOf:

#edu/stanford/nlp/ie/ner/CMMClassifier$Scorer/recenter:
edu.stanford.nlp.ie.ner.CMMClassifier$Scorer:

#edu/stanford/nlp/ie/ner/CMMClassifier/classify:

#edu/stanford/nlp/ie/ner/CMMClassifier/classifyNoSeq:

#edu/stanford/nlp/ie/ner/CMMClassifier/loglikelihood:

#edu/stanford/nlp/ie/ner/CMMClassifier/getSequenceModel:

#edu/stanford/nlp/ie/ner/CMMClassifier/classifySeq:

#edu/stanford/nlp/ie/ner/CMMClassifier/retrain:

#edu/stanford/nlp/ie/ner/CMMClassifier/retrain:

#edu/stanford/nlp/ie/ner/CMMClassifier/train:

#edu/stanford/nlp/ie/ner/CMMClassifier/getFeaturesAboveThreshold:

#edu/stanford/nlp/ie/ner/CMMClassifier/getDataset:

#edu/stanford/nlp/ie/ner/CMMClassifier/getBiasedDataset:

#edu/stanford/nlp/ie/ner/CMMClassifier/getDataset:

#edu/stanford/nlp/ie/ner/CMMClassifier/getDataset:

#edu/stanford/nlp/ie/ner/CMMClassifier/adapt:

#edu/stanford/nlp/ie/ner/CMMClassifier/adaptMaxEnt:

#edu/stanford/nlp/ie/ner/CMMClassifier/train:

#edu/stanford/nlp/ie/ner/CMMClassifier/trainMaxEnt:

#edu/stanford/nlp/ie/ner/CMMClassifier/trainSemiSup:

#edu/stanford/nlp/ie/ner/CMMClassifier/loadClassifier:

#edu/stanford/nlp/ie/ner/CMMClassifier/makeAnswerArraysAndTagIndex:

#edu/stanford/nlp/ie/ner/CMMClassifier/makeDatum:

#edu/stanford/nlp/ie/ner/CMMClassifier/addOtherClasses:

#edu/stanford/nlp/ie/ner/CMMClassifier/getThresholds:

#edu/stanford/nlp/ie/ner/CMMClassifier/trainSemiSup:

#edu/stanford/nlp/ie/ner/CMMClassifier/main:
edu.stanford.nlp.ie.ner.CMMClassifier:

#edu/stanford/nlp/ie/ner/webapp/NERServlet/init:

#edu/stanford/nlp/ie/ner/webapp/NERServlet/doGet:

#edu/stanford/nlp/ie/ner/webapp/NERServlet/addResults:

#edu/stanford/nlp/ie/ner/webapp/NERServlet/outputHighlighting:
edu.stanford.nlp.ie.ner.webapp.NERServlet:

#edu/stanford/nlp/ie/util/RelationTriple$WithTree/subjectHead:

#edu/stanford/nlp/ie/util/RelationTriple$WithTree/objectHead:

#edu/stanford/nlp/ie/util/RelationTriple$WithTree/relationHead:

#edu/stanford/nlp/ie/util/RelationTriple$WithTree/lambda$relationHead$0:
edu.stanford.nlp.ie.util.RelationTriple$WithTree:

#edu/stanford/nlp/ie/util/FixLocation/main:

#edu/stanford/nlp/ie/util/FixLocation/readFile:

#edu/stanford/nlp/ie/util/FixLocation/fix:

#edu/stanford/nlp/ie/util/FixLocation/query:

#edu/stanford/nlp/ie/util/FixLocation/print:
edu.stanford.nlp.ie.util.FixLocation:
edu.stanford.nlp.ie.util.RelationTriple$WithLink:

#edu/stanford/nlp/ie/util/RelationTriple/relationGloss:

#edu/stanford/nlp/ie/util/RelationTriple/relationLemmaGloss:

#edu/stanford/nlp/ie/util/RelationTriple/getSpan:

#edu/stanford/nlp/ie/util/RelationTriple/relationTokenSpan:

#edu/stanford/nlp/ie/util/RelationTriple/asSentence:

#edu/stanford/nlp/ie/util/RelationTriple/equals:

#edu/stanford/nlp/ie/util/RelationTriple/toReverbString:

#edu/stanford/nlp/ie/util/RelationTriple/lambda$relationLemmaGloss$5:

#edu/stanford/nlp/ie/util/RelationTriple/lambda$relationLemmaGloss$4:

#edu/stanford/nlp/ie/util/RelationTriple/lambda$objectLemmaGloss$3:

#edu/stanford/nlp/ie/util/RelationTriple/lambda$objectLemmaGloss$2:

#edu/stanford/nlp/ie/util/RelationTriple/lambda$subjectLemmaGloss$1:

#edu/stanford/nlp/ie/util/RelationTriple/lambda$subjectLemmaGloss$0:
edu.stanford.nlp.ie.util.RelationTriple:
edu.stanford.nlp.ie.machinereading.MachineReadingProperties:
edu.stanford.nlp.ie.machinereading.NilLabelValidator:
edu.stanford.nlp.ie.machinereading.Extractor:
edu.stanford.nlp.ie.machinereading.RelationFeatureFactory$DEPENDENCY_TYPE:
edu.stanford.nlp.ie.machinereading.LabelValidator:

#edu/stanford/nlp/ie/machinereading/ResultsPrinter/align:
edu.stanford.nlp.ie.machinereading.ResultsPrinter:

#edu/stanford/nlp/ie/machinereading/RelationExtractorResultsPrinter/printResults:

#edu/stanford/nlp/ie/machinereading/RelationExtractorResultsPrinter/printResultsInternal:

#edu/stanford/nlp/ie/machinereading/RelationExtractorResultsPrinter/printResultsUsingLabels:
edu.stanford.nlp.ie.machinereading.RelationExtractorResultsPrinter:
edu.stanford.nlp.ie.machinereading.RelationFeatureFactory:

#edu/stanford/nlp/ie/machinereading/ExtractorMerger/<init>:

#edu/stanford/nlp/ie/machinereading/ExtractorMerger/annotate:

#edu/stanford/nlp/ie/machinereading/ExtractorMerger/buildRelationExtractorMerger:
edu.stanford.nlp.ie.machinereading.ExtractorMerger:

#edu/stanford/nlp/ie/machinereading/BasicRelationExtractor/save:

#edu/stanford/nlp/ie/machinereading/BasicRelationExtractor/trainMulticlass:

#edu/stanford/nlp/ie/machinereading/BasicRelationExtractor/reportWeights:

#edu/stanford/nlp/ie/machinereading/BasicRelationExtractor/classOf:

#edu/stanford/nlp/ie/machinereading/BasicRelationExtractor/compatibleLabel:

#edu/stanford/nlp/ie/machinereading/BasicRelationExtractor/extractAllRelations:

#edu/stanford/nlp/ie/machinereading/BasicRelationExtractor/annotateMulticlass:

#edu/stanford/nlp/ie/machinereading/BasicRelationExtractor/annotateSentence:

#edu/stanford/nlp/ie/machinereading/BasicRelationExtractor/annotate:

#edu/stanford/nlp/ie/machinereading/BasicRelationExtractor/createDataset:

#edu/stanford/nlp/ie/machinereading/BasicRelationExtractor/createDatum:

#edu/stanford/nlp/ie/machinereading/BasicRelationExtractor/createDatum:
edu.stanford.nlp.ie.machinereading.BasicRelationExtractor:

#edu/stanford/nlp/ie/machinereading/BasicEntityExtractor/annotate:

#edu/stanford/nlp/ie/machinereading/BasicEntityExtractor/extractEntities:

#edu/stanford/nlp/ie/machinereading/BasicEntityExtractor/makeAnnotationFromGivenNERTag:

#edu/stanford/nlp/ie/machinereading/BasicEntityExtractor/makeAnnotationFromAllNERTags:

#edu/stanford/nlp/ie/machinereading/BasicEntityExtractor/notBIO:

#edu/stanford/nlp/ie/machinereading/BasicEntityExtractor/makeEntityMention:

#edu/stanford/nlp/ie/machinereading/BasicEntityExtractor/makeEntityMentionIdentifier:

#edu/stanford/nlp/ie/machinereading/BasicEntityExtractor/makeEntityMention:

#edu/stanford/nlp/ie/machinereading/BasicEntityExtractor/runTestSet:

#edu/stanford/nlp/ie/machinereading/BasicEntityExtractor/train:

#edu/stanford/nlp/ie/machinereading/BasicEntityExtractor/saveCoNLLFiles:

#edu/stanford/nlp/ie/machinereading/BasicEntityExtractor/saveCoNLL:

#edu/stanford/nlp/ie/machinereading/BasicEntityExtractor/createClassifier:

#edu/stanford/nlp/ie/machinereading/BasicEntityExtractor/load:

#edu/stanford/nlp/ie/machinereading/BasicEntityExtractor/labeledSentenceToString:
edu.stanford.nlp.ie.machinereading.BasicEntityExtractor:

#edu/stanford/nlp/ie/machinereading/BasicRelationFeatureFactory/createDatum:

#edu/stanford/nlp/ie/machinereading/BasicRelationFeatureFactory/createDatum:

#edu/stanford/nlp/ie/machinereading/BasicRelationFeatureFactory/addFeatures:

#edu/stanford/nlp/ie/machinereading/BasicRelationFeatureFactory/sentToString:

#edu/stanford/nlp/ie/machinereading/BasicRelationFeatureFactory/addDependencyPathFeatures:

#edu/stanford/nlp/ie/machinereading/BasicRelationFeatureFactory/usingFeature:

#edu/stanford/nlp/ie/machinereading/BasicRelationFeatureFactory/generalizeRelation:

#edu/stanford/nlp/ie/machinereading/BasicRelationFeatureFactory/dependencyPathAsList:

#edu/stanford/nlp/ie/machinereading/BasicRelationFeatureFactory/getFeature:
edu.stanford.nlp.ie.machinereading.BasicRelationFeatureFactory:

#edu/stanford/nlp/ie/machinereading/MachineReading/setConsoleLevel:

#edu/stanford/nlp/ie/machinereading/MachineReading/makeMachineReadingForAnnotation:

#edu/stanford/nlp/ie/machinereading/MachineReading/makeMachineReading:

#edu/stanford/nlp/ie/machinereading/MachineReading/run:

#edu/stanford/nlp/ie/machinereading/MachineReading/printTask:

#edu/stanford/nlp/ie/machinereading/MachineReading/train:

#edu/stanford/nlp/ie/machinereading/MachineReading/removeSkippableRelations:

#edu/stanford/nlp/ie/machinereading/MachineReading/changeGoldRelationArgsToPredicted:

#edu/stanford/nlp/ie/machinereading/MachineReading/annotate:

#edu/stanford/nlp/ie/machinereading/MachineReading/assignSyntacticHeadToEntities:

#edu/stanford/nlp/ie/machinereading/MachineReading/makeExtractor:

#edu/stanford/nlp/ie/machinereading/MachineReading/makeDataSets:

#edu/stanford/nlp/ie/machinereading/MachineReading/keepPercentage:

#edu/stanford/nlp/ie/machinereading/MachineReading/serializedModelExists:

#edu/stanford/nlp/ie/machinereading/MachineReading/makeResultsPrinters:

#edu/stanford/nlp/ie/machinereading/MachineReading/makeReader:

#edu/stanford/nlp/ie/machinereading/MachineReading/makeAuxReader:

#edu/stanford/nlp/ie/machinereading/MachineReading/makeEntityExtractor:

#edu/stanford/nlp/ie/machinereading/MachineReading/makeRelationExtractor:

#edu/stanford/nlp/ie/machinereading/MachineReading/makeRelationFeatureFactory:

#edu/stanford/nlp/ie/machinereading/MachineReading/loadOrMakeSerializedSentences:
edu.stanford.nlp.ie.machinereading.MachineReading:

#edu/stanford/nlp/ie/machinereading/EntityExtractorResultsPrinter/printResults:

#edu/stanford/nlp/ie/machinereading/EntityExtractorResultsPrinter/makeLabel:
edu.stanford.nlp.ie.machinereading.EntityExtractorResultsPrinter:

#edu/stanford/nlp/ie/machinereading/GenericDataSetReader/<init>:

#edu/stanford/nlp/ie/machinereading/GenericDataSetReader/getParser:

#edu/stanford/nlp/ie/machinereading/GenericDataSetReader/parse:

#edu/stanford/nlp/ie/machinereading/GenericDataSetReader/modifyUsingCoreNLPNER:

#edu/stanford/nlp/ie/machinereading/GenericDataSetReader/sentenceToString:

#edu/stanford/nlp/ie/machinereading/GenericDataSetReader/assignSyntacticHead:

#edu/stanford/nlp/ie/machinereading/GenericDataSetReader/preProcessSentences:

#edu/stanford/nlp/ie/machinereading/GenericDataSetReader/convertToCoreLabels:

#edu/stanford/nlp/ie/machinereading/GenericDataSetReader/safeHead:

#edu/stanford/nlp/ie/machinereading/GenericDataSetReader/findSyntacticHead:

#edu/stanford/nlp/ie/machinereading/GenericDataSetReader/findPartialSpan:

#edu/stanford/nlp/ie/machinereading/GenericDataSetReader/funkyFindLeafWithApproximateSpan:

#edu/stanford/nlp/ie/machinereading/GenericDataSetReader/originalFindSyntacticHead:

#edu/stanford/nlp/ie/machinereading/GenericDataSetReader/parseStrings:

#edu/stanford/nlp/ie/machinereading/GenericDataSetReader/findTreeWithSpan:
edu.stanford.nlp.ie.machinereading.GenericDataSetReader:

#edu/stanford/nlp/ie/machinereading/ResultsPrinter$1CompareSentences/compare:
edu.stanford.nlp.ie.machinereading.ResultsPrinter$1CompareSentences:

#edu/stanford/nlp/ie/machinereading/domains/roth/RothResultsByRelation$1RelComp/compare:
edu.stanford.nlp.ie.machinereading.domains.roth.RothResultsByRelation$1RelComp:

#edu/stanford/nlp/ie/machinereading/domains/roth/RothResultsByRelation/printResults:
edu.stanford.nlp.ie.machinereading.domains.roth.RothResultsByRelation:

#edu/stanford/nlp/ie/machinereading/domains/roth/RothEntityExtractor/getEntityTypeForTag:
edu.stanford.nlp.ie.machinereading.domains.roth.RothEntityExtractor:

#edu/stanford/nlp/ie/machinereading/domains/roth/RothCONLL04Reader/read:

#edu/stanford/nlp/ie/machinereading/domains/roth/RothCONLL04Reader/getNormalizedNERTag:

#edu/stanford/nlp/ie/machinereading/domains/roth/RothCONLL04Reader/readSentence:

#edu/stanford/nlp/ie/machinereading/domains/roth/RothCONLL04Reader/getIndexByObjectEquality:

#edu/stanford/nlp/ie/machinereading/domains/roth/RothCONLL04Reader/setHeadWord:
edu.stanford.nlp.ie.machinereading.domains.roth.RothCONLL04Reader:

#edu/stanford/nlp/ie/machinereading/domains/ace/AceReader/read:

#edu/stanford/nlp/ie/machinereading/domains/ace/AceReader/countMentionTypes:

#edu/stanford/nlp/ie/machinereading/domains/ace/AceReader/countNameRelations:

#edu/stanford/nlp/ie/machinereading/domains/ace/AceReader/countAdjacentMentions:

#edu/stanford/nlp/ie/machinereading/domains/ace/AceReader/printCounter:

#edu/stanford/nlp/ie/machinereading/domains/ace/AceReader/readDocument:

#edu/stanford/nlp/ie/machinereading/domains/ace/AceReader/convertAceEventMention:

#edu/stanford/nlp/ie/machinereading/domains/ace/AceReader/convertAceRelationMention:

#edu/stanford/nlp/ie/machinereading/domains/ace/AceReader/convertAceEntityMention:
edu.stanford.nlp.ie.machinereading.domains.ace.AceReader:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceCharSeq/getTokenStart:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceCharSeq/getTokenEnd:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceCharSeq/match:
edu.stanford.nlp.ie.machinereading.domains.ace.reader.AceCharSeq:
edu.stanford.nlp.ie.machinereading.domains.ace.reader.AceMentionArgument:
edu.stanford.nlp.ie.machinereading.domains.ace.reader.RobustTokenizer$WordToken:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceToken/loadDictionary:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceToken/exists:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceToken/loadProximityClasses:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceToken/removeSpaces:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceToken/detectCase:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceToken/extractSuffixes:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceToken/<init>:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceToken/adjustPhrasePositions:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceToken/display:
edu.stanford.nlp.ie.machinereading.domains.ace.reader.AceToken:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceRelation/toXml:
edu.stanford.nlp.ie.machinereading.domains.ace.reader.AceRelation:
edu.stanford.nlp.ie.machinereading.domains.ace.reader.AceRelationMentionArgument:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/RobustTokenizer/hasApostropheBlock:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/RobustTokenizer/concatenate:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/RobustTokenizer/countNewLines:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/RobustTokenizer/countNewLines:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/RobustTokenizer/tokenizeToWords:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/RobustTokenizer/tokenizeToWordTokens:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/RobustTokenizer/tokenizeText:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/RobustTokenizer/getNext:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/RobustTokenizer/main:
edu.stanford.nlp.ie.machinereading.domains.ace.reader.RobustTokenizer:
edu.stanford.nlp.ie.machinereading.domains.ace.reader.MatchException:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/RobustTokenizer$AbbreviationMap/normalizeCase:
edu.stanford.nlp.ie.machinereading.domains.ace.reader.RobustTokenizer$AbbreviationMap:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceEventMention/getMinTokenStart:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceEventMention/getMaxTokenEnd:
edu.stanford.nlp.ie.machinereading.domains.ace.reader.AceEventMention:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceElement/appendOffset:
edu.stanford.nlp.ie.machinereading.domains.ace.reader.AceElement:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceSentenceSegmenter/tokenizeAndSegmentSentences:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceSentenceSegmenter/main:
edu.stanford.nlp.ie.machinereading.domains.ace.reader.AceSentenceSegmenter:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceEntity/toXml:
edu.stanford.nlp.ie.machinereading.domains.ace.reader.AceEntity:
edu.stanford.nlp.ie.machinereading.domains.ace.reader.AceEvent:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceEntityMention/toXml:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceEntityMention/contains:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceEntityMention/detectHeadToken:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceEntityMention/before:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceEntityMention/after:
edu.stanford.nlp.ie.machinereading.domains.ace.reader.AceEntityMention:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceDocument/setSource:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceDocument/toXml:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceDocument/tokensWithByteSpan:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceDocument/matchCharSeqs:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceDocument/parseDocument:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceDocument/parseDocument:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceDocument/constructSentenceRelationMentions:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceDocument/sameChunk:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceDocument/isChunkHead:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceDocument/findChunkEnd:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceDocument/findChunkStart:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceDocument/isApposition:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceDocument/countVerbs:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceDocument/countCommas:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceDocument/readRawBytes:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceDocument/readPredictedEntityBoundaries:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceDocument/makeCharSeq:
edu.stanford.nlp.ie.machinereading.domains.ace.reader.AceDocument:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceRelationMention/getFirstArg:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceRelationMention/getLastArg:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceRelationMention/toXml:
edu.stanford.nlp.ie.machinereading.domains.ace.reader.AceRelationMention:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceDomReader/parseRelationMention:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceDomReader/parseEventMention:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceDomReader/parseDocument:

#edu/stanford/nlp/ie/machinereading/domains/ace/reader/AceDomReader/main:
edu.stanford.nlp.ie.machinereading.domains.ace.reader.AceDomReader:
edu.stanford.nlp.ie.machinereading.domains.ace.reader.AceMention:
edu.stanford.nlp.ie.machinereading.domains.ace.reader.AceEventMentionArgument:

#edu/stanford/nlp/ie/machinereading/common/StringDictionary/getIndexAndCount:

#edu/stanford/nlp/ie/machinereading/common/StringDictionary/get:

#edu/stanford/nlp/ie/machinereading/common/StringDictionary/get:

#edu/stanford/nlp/ie/machinereading/common/StringDictionary/getCount:

#edu/stanford/nlp/ie/machinereading/common/StringDictionary/save:

#edu/stanford/nlp/ie/machinereading/common/StringDictionary/load:
edu.stanford.nlp.ie.machinereading.common.StringDictionary:

#edu/stanford/nlp/ie/machinereading/common/DomReader/getChildByName:

#edu/stanford/nlp/ie/machinereading/common/DomReader/getChildrenByName:

#edu/stanford/nlp/ie/machinereading/common/DomReader/getChildByAttribute:

#edu/stanford/nlp/ie/machinereading/common/DomReader/getChildByNameAndAttribute:
edu.stanford.nlp.ie.machinereading.common.DomReader:
edu.stanford.nlp.ie.machinereading.common.StringDictionary$IndexAndCount:

#edu/stanford/nlp/ie/machinereading/common/SimpleTokenize/tokenize:

#edu/stanford/nlp/ie/machinereading/common/SimpleTokenize/tokenize:
Warning: Method:edu.stanford.nlp.ie.machinereading.common.SimpleTokenize.findNonWhitespace has incoming edges.
Warning: Method:edu.stanford.nlp.ie.machinereading.common.SimpleTokenize.findWhitespace has incoming edges.

#edu/stanford/nlp/ie/machinereading/common/SimpleTokenize/normalizeQuotes:

#edu/stanford/nlp/ie/machinereading/common/SimpleTokenize/tokenizeWithQuotes:

#edu/stanford/nlp/ie/machinereading/common/SimpleTokenize/quotify:
edu.stanford.nlp.ie.machinereading.common.SimpleTokenize:

#edu/stanford/nlp/ie/machinereading/common/NoPunctuationHeadFinder/isPunctuationLabel:

#edu/stanford/nlp/ie/machinereading/common/NoPunctuationHeadFinder/postOperationFix:
edu.stanford.nlp.ie.machinereading.common.NoPunctuationHeadFinder:
edu.stanford.nlp.ie.machinereading.structure.RelationMentionFactory:

#edu/stanford/nlp/ie/machinereading/structure/Relation/addRelation:

#edu/stanford/nlp/ie/machinereading/structure/Relation/getRelationMentions:
edu.stanford.nlp.ie.machinereading.structure.Relation:

#edu/stanford/nlp/ie/machinereading/structure/EventMention/<init>:

#edu/stanford/nlp/ie/machinereading/structure/EventMention/removeFromParents:

#edu/stanford/nlp/ie/machinereading/structure/EventMention/getSingleParent:

#edu/stanford/nlp/ie/machinereading/structure/EventMention/toString:

#edu/stanford/nlp/ie/machinereading/structure/EventMention/contains:

#edu/stanford/nlp/ie/machinereading/structure/EventMention/addArg:

#edu/stanford/nlp/ie/machinereading/structure/EventMention/setArgs:

#edu/stanford/nlp/ie/machinereading/structure/EventMention/addArgs:

#edu/stanford/nlp/ie/machinereading/structure/EventMention/mergeEvent:

#edu/stanford/nlp/ie/machinereading/structure/EventMention/equals:

#edu/stanford/nlp/ie/machinereading/structure/EventMention/hashCode:
edu.stanford.nlp.ie.machinereading.structure.EventMention:

#edu/stanford/nlp/ie/machinereading/structure/Event/addEntity:

#edu/stanford/nlp/ie/machinereading/structure/Event/getEventMentions:
edu.stanford.nlp.ie.machinereading.structure.Event:

#edu/stanford/nlp/ie/machinereading/structure/Entity/addEntity:

#edu/stanford/nlp/ie/machinereading/structure/Entity/getEntityMentions:
edu.stanford.nlp.ie.machinereading.structure.Entity:
edu.stanford.nlp.ie.machinereading.structure.MachineReadingAnnotations$DocumentIdAnnotation:
edu.stanford.nlp.ie.machinereading.structure.MachineReadingAnnotations$EventMentionsAnnotation:
edu.stanford.nlp.ie.machinereading.structure.MachineReadingAnnotations$DependencyAnnotation:

#edu/stanford/nlp/ie/machinereading/structure/Span/<init>:

#edu/stanford/nlp/ie/machinereading/structure/Span/fromValues:

#edu/stanford/nlp/ie/machinereading/structure/Span/fromValues:

#edu/stanford/nlp/ie/machinereading/structure/Span/equals:

#edu/stanford/nlp/ie/machinereading/structure/Span/expandToInclude:

#edu/stanford/nlp/ie/machinereading/structure/Span/contains:

#edu/stanford/nlp/ie/machinereading/structure/Span/contains:

#edu/stanford/nlp/ie/machinereading/structure/Span/isBefore:

#edu/stanford/nlp/ie/machinereading/structure/Span/isAfter:

#edu/stanford/nlp/ie/machinereading/structure/Span/toInclusive:

#edu/stanford/nlp/ie/machinereading/structure/Span/overlaps:

#edu/stanford/nlp/ie/machinereading/structure/Span/overlap:

#edu/stanford/nlp/ie/machinereading/structure/Span/overlaps:

#edu/stanford/nlp/ie/machinereading/structure/Span/distance:
edu.stanford.nlp.ie.machinereading.structure.Span:
edu.stanford.nlp.ie.machinereading.structure.MachineReadingAnnotations$TriggerAnnotation:

#edu/stanford/nlp/ie/machinereading/structure/Span$1/hasNext:

#edu/stanford/nlp/ie/machinereading/structure/Span$1/next:
edu.stanford.nlp.ie.machinereading.structure.Span$1:

#edu/stanford/nlp/ie/machinereading/structure/ExtractionDataSet/<init>:

#edu/stanford/nlp/ie/machinereading/structure/ExtractionDataSet/addSentences:
edu.stanford.nlp.ie.machinereading.structure.ExtractionDataSet:
edu.stanford.nlp.ie.machinereading.structure.MachineReadingAnnotations$AllRelationMentionsAnnotation:

#edu/stanford/nlp/ie/machinereading/structure/ExtractionSentence/getRelation:

#edu/stanford/nlp/ie/machinereading/structure/ExtractionSentence/getAllUnrelatedRelations:

#edu/stanford/nlp/ie/machinereading/structure/ExtractionSentence/toString:

#edu/stanford/nlp/ie/machinereading/structure/ExtractionSentence/tokensToString:
edu.stanford.nlp.ie.machinereading.structure.ExtractionSentence:

#edu/stanford/nlp/ie/machinereading/structure/EntityMention$CompByHead/compare:
edu.stanford.nlp.ie.machinereading.structure.EntityMention$CompByHead:

#edu/stanford/nlp/ie/machinereading/structure/RelationMention/argsMatch:

#edu/stanford/nlp/ie/machinereading/structure/RelationMention/getEntityMentionArgs:

#edu/stanford/nlp/ie/machinereading/structure/RelationMention/getFirstSyntacticHeadPosition:

#edu/stanford/nlp/ie/machinereading/structure/RelationMention/getLastSyntacticHeadPosition:

#edu/stanford/nlp/ie/machinereading/structure/RelationMention/toString:

#edu/stanford/nlp/ie/machinereading/structure/RelationMention/replaceGoldArgsWithPredicted:

#edu/stanford/nlp/ie/machinereading/structure/RelationMention/removeArguments:

#edu/stanford/nlp/ie/machinereading/structure/RelationMention/filterUnrelatedRelations:

#edu/stanford/nlp/ie/machinereading/structure/RelationMention/equals:

#edu/stanford/nlp/ie/machinereading/structure/RelationMention/hashCode:
edu.stanford.nlp.ie.machinereading.structure.RelationMention:

#edu/stanford/nlp/ie/machinereading/structure/EntityMention/<init>:

#edu/stanford/nlp/ie/machinereading/structure/EntityMention/equals:

#edu/stanford/nlp/ie/machinereading/structure/EntityMention/headIncludes:

#edu/stanford/nlp/ie/machinereading/structure/EntityMention/equals:

#edu/stanford/nlp/ie/machinereading/structure/EntityMention/labelEquals:

#edu/stanford/nlp/ie/machinereading/structure/EntityMention/textEquals:

#edu/stanford/nlp/ie/machinereading/structure/EntityMention/getValue:

#edu/stanford/nlp/ie/machinereading/structure/EntityMention/toString:

#edu/stanford/nlp/ie/machinereading/structure/EntityMention/hashCode:
edu.stanford.nlp.ie.machinereading.structure.EntityMention:
edu.stanford.nlp.ie.machinereading.structure.MachineReadingAnnotations$GenderAnnotation:

#edu/stanford/nlp/ie/machinereading/structure/ExtractionObject/<init>:

#edu/stanford/nlp/ie/machinereading/structure/ExtractionObject/getExtentString:

#edu/stanford/nlp/ie/machinereading/structure/ExtractionObject/equals:

#edu/stanford/nlp/ie/machinereading/structure/ExtractionObject/getSpan:

#edu/stanford/nlp/ie/machinereading/structure/ExtractionObject/getFullValue:

#edu/stanford/nlp/ie/machinereading/structure/ExtractionObject/concatenateTypes:

#edu/stanford/nlp/ie/machinereading/structure/ExtractionObject/attributeMap:

#edu/stanford/nlp/ie/machinereading/structure/ExtractionObject/probsToString:

#edu/stanford/nlp/ie/machinereading/structure/ExtractionObject/printableObject:
edu.stanford.nlp.ie.machinereading.structure.ExtractionObject:
edu.stanford.nlp.ie.machinereading.structure.EntityMentionFactory:

#edu/stanford/nlp/ie/machinereading/structure/AnnotationUtils/entityMentionsToCoreLabels:

#edu/stanford/nlp/ie/machinereading/structure/AnnotationUtils/sentenceEntityMentionsToCoreLabels:

#edu/stanford/nlp/ie/machinereading/structure/AnnotationUtils/sentenceCount:

#edu/stanford/nlp/ie/machinereading/structure/AnnotationUtils/addSentence:

#edu/stanford/nlp/ie/machinereading/structure/AnnotationUtils/addSentences:

#edu/stanford/nlp/ie/machinereading/structure/AnnotationUtils/deepMentionCopy:

#edu/stanford/nlp/ie/machinereading/structure/AnnotationUtils/sentenceDeepMentionCopy:

#edu/stanford/nlp/ie/machinereading/structure/AnnotationUtils/getRelations:

#edu/stanford/nlp/ie/machinereading/structure/AnnotationUtils/getAllRelations:

#edu/stanford/nlp/ie/machinereading/structure/AnnotationUtils/getAllUnrelatedRelations:

#edu/stanford/nlp/ie/machinereading/structure/AnnotationUtils/addEntityMention:

#edu/stanford/nlp/ie/machinereading/structure/AnnotationUtils/addEntityMentions:

#edu/stanford/nlp/ie/machinereading/structure/AnnotationUtils/getEntityMentions:

#edu/stanford/nlp/ie/machinereading/structure/AnnotationUtils/addRelationMention:

#edu/stanford/nlp/ie/machinereading/structure/AnnotationUtils/addRelationMentions:

#edu/stanford/nlp/ie/machinereading/structure/AnnotationUtils/getRelationMentions:

#edu/stanford/nlp/ie/machinereading/structure/AnnotationUtils/addEventMention:

#edu/stanford/nlp/ie/machinereading/structure/AnnotationUtils/addEventMentions:

#edu/stanford/nlp/ie/machinereading/structure/AnnotationUtils/getEventMentions:

#edu/stanford/nlp/ie/machinereading/structure/AnnotationUtils/prettify:

#edu/stanford/nlp/ie/machinereading/structure/AnnotationUtils/getTextContent:

#edu/stanford/nlp/ie/machinereading/structure/AnnotationUtils/sentenceToString:

#edu/stanford/nlp/ie/machinereading/structure/AnnotationUtils/tokensAndNELabelsToString:

#edu/stanford/nlp/ie/machinereading/structure/AnnotationUtils/datasetToString:

#edu/stanford/nlp/ie/machinereading/structure/AnnotationUtils/tokensToString:

#edu/stanford/nlp/ie/machinereading/structure/AnnotationUtils/updateOffsets:

#edu/stanford/nlp/ie/machinereading/structure/AnnotationUtils/updateOffsetsInCoreLabels:
edu.stanford.nlp.ie.machinereading.structure.AnnotationUtils:
edu.stanford.nlp.ie.machinereading.structure.MachineReadingAnnotations$RelationMentionsAnnotation:
edu.stanford.nlp.ie.machinereading.structure.MachineReadingAnnotations$EntityMentionsAnnotation:
edu.stanford.nlp.ie.machinereading.structure.MachineReadingAnnotations:
edu.stanford.nlp.ie.machinereading.structure.MachineReadingAnnotations$DocumentDirectoryAnnotation:

#edu/stanford/nlp/ie/machinereading/structure/ExtractionObject$CompByExtent/compare:
edu.stanford.nlp.ie.machinereading.structure.ExtractionObject$CompByExtent:

#edu/stanford/nlp/ie/crf/CRFClassifierNoisyLabel/readErrorMatrix:

#edu/stanford/nlp/ie/crf/CRFClassifierNoisyLabel/getObjectiveFunction:
edu.stanford.nlp.ie.crf.CRFClassifierNoisyLabel:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunction$ExpectationThreadsafeProcessorWithEmpirical/process:
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction$ExpectationThreadsafeProcessorWithEmpirical:

#edu/stanford/nlp/ie/crf/TestSequenceModel/<init>:

#edu/stanford/nlp/ie/crf/TestSequenceModel/getPossibleValues:

#edu/stanford/nlp/ie/crf/TestSequenceModel/scoreOf:

#edu/stanford/nlp/ie/crf/TestSequenceModel/scoresOf:
edu.stanford.nlp.ie.crf.TestSequenceModel:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunctionForLOP/<init>:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunctionForLOP/domainDimension:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunctionForLOP/initial:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunctionForLOP/empty2D:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunctionForLOP/initialize2DWeights:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunctionForLOP/to2D:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunctionForLOP/computeEHat:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunctionForLOP/logPotential:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunctionForLOP/combineAndScaleLopWeights:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunctionForLOP/combineAndScaleLopWeights2D:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunctionForLOP/separateLopExpertWeights2D:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunctionForLOP/separateLopExpertWeights:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunctionForLOP/getCliquePotentialFunction:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunctionForLOP/calculate:
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunctionForLOP:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunction$ExpectationThreadsafeProcessor/process:
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction$ExpectationThreadsafeProcessor:
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction$TaskResult:

#edu/stanford/nlp/ie/crf/NERGUI/addMenuBar:

#edu/stanford/nlp/ie/crf/NERGUI/getFile:

#edu/stanford/nlp/ie/crf/NERGUI/saveUntaggedContents:

#edu/stanford/nlp/ie/crf/NERGUI/checkFile:

#edu/stanford/nlp/ie/crf/NERGUI/loadClassifier:

#edu/stanford/nlp/ie/crf/NERGUI/loadClassifier:

#edu/stanford/nlp/ie/crf/NERGUI/openURL:

#edu/stanford/nlp/ie/crf/NERGUI/removeTags:

#edu/stanford/nlp/ie/crf/NERGUI/extract:

#edu/stanford/nlp/ie/crf/NERGUI/colorToHTML:

#edu/stanford/nlp/ie/crf/NERGUI/buildExtractButton:

#edu/stanford/nlp/ie/crf/NERGUI/buildTagPanel:

#edu/stanford/nlp/ie/crf/NERGUI/makeTagToColorMap:

#edu/stanford/nlp/ie/crf/NERGUI/getNColors:
edu.stanford.nlp.ie.crf.NERGUI:

#edu/stanford/nlp/ie/crf/NonLinearSecondOrderCliquePotentialFunction/hiddenLayerOutput:

#edu/stanford/nlp/ie/crf/NonLinearSecondOrderCliquePotentialFunction/computeCliquePotential:
edu.stanford.nlp.ie.crf.NonLinearSecondOrderCliquePotentialFunction:

#edu/stanford/nlp/ie/crf/NonLinearCliquePotentialFunction/hiddenLayerOutput:

#edu/stanford/nlp/ie/crf/NonLinearCliquePotentialFunction/computeCliquePotential:
edu.stanford.nlp.ie.crf.NonLinearCliquePotentialFunction:

#edu/stanford/nlp/ie/crf/CRFClassifierEvaluator/setEvalCmd:

#edu/stanford/nlp/ie/crf/CRFClassifierEvaluator/interpretCmdOutput:

#edu/stanford/nlp/ie/crf/CRFClassifierEvaluator/evaluate:
edu.stanford.nlp.ie.crf.CRFClassifierEvaluator:
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction$TaskPart:
edu.stanford.nlp.ie.crf.NERGUI$InputListener:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunctionNoisyLabel/expectedAndEmpiricalCountsAndValueForADoc:
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunctionNoisyLabel:

#edu/stanford/nlp/ie/crf/CRFClassifierWithLOP/createPartialDataForLOP:

#edu/stanford/nlp/ie/crf/CRFClassifierWithLOP/getFeatureBoundaryIndices:

#edu/stanford/nlp/ie/crf/CRFClassifierWithLOP/trainWeights:
edu.stanford.nlp.ie.crf.CRFClassifierWithLOP:

#edu/stanford/nlp/ie/crf/CRFClassifierNonlinear/transformDocData:

#edu/stanford/nlp/ie/crf/CRFClassifierNonlinear/getCliquePotentialFunctionForTest:

#edu/stanford/nlp/ie/crf/CRFClassifierNonlinear/trainWeights:

#edu/stanford/nlp/ie/crf/CRFClassifierNonlinear/trainWeightsUsingNonLinearCRF:

#edu/stanford/nlp/ie/crf/CRFClassifierNonlinear/serializeTextClassifier:

#edu/stanford/nlp/ie/crf/CRFClassifierNonlinear/loadTextClassifier:

#edu/stanford/nlp/ie/crf/CRFClassifierNonlinear/serializeClassifier:

#edu/stanford/nlp/ie/crf/CRFClassifierNonlinear/loadClassifier:
edu.stanford.nlp.ie.crf.CRFClassifierNonlinear:
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunctionWithDropout$1:
edu.stanford.nlp.ie.crf.NERGUI$1:
edu.stanford.nlp.ie.crf.NERGUI$ColorIcon:
edu.stanford.nlp.ie.crf.HasCliquePotentialFunction:

#edu/stanford/nlp/ie/crf/CRFLabel/equals:

#edu/stanford/nlp/ie/crf/CRFLabel/toString:

#edu/stanford/nlp/ie/crf/CRFLabel/toString:

#edu/stanford/nlp/ie/crf/CRFLabel/hashCode:
edu.stanford.nlp.ie.crf.CRFLabel:

#edu/stanford/nlp/ie/crf/CRFCliqueTree/<init>:

#edu/stanford/nlp/ie/crf/CRFCliqueTree/scoresOf:

#edu/stanford/nlp/ie/crf/CRFCliqueTree/scoreOf:

#edu/stanford/nlp/ie/crf/CRFCliqueTree/logProbTable:

#edu/stanford/nlp/ie/crf/CRFCliqueTree/probsToDoubleArr:

#edu/stanford/nlp/ie/crf/CRFCliqueTree/logProbsToDoubleArr:

#edu/stanford/nlp/ie/crf/CRFCliqueTree/probs:

#edu/stanford/nlp/ie/crf/CRFCliqueTree/logProbs:

#edu/stanford/nlp/ie/crf/CRFCliqueTree/logProb:

#edu/stanford/nlp/ie/crf/CRFCliqueTree/logProbs:

#edu/stanford/nlp/ie/crf/CRFCliqueTree/probs:

#edu/stanford/nlp/ie/crf/CRFCliqueTree/objectArrayToIntArray:

#edu/stanford/nlp/ie/crf/CRFCliqueTree/intArrayToListE:

#edu/stanford/nlp/ie/crf/CRFCliqueTree/condLogProbGivenPrevious:

#edu/stanford/nlp/ie/crf/CRFCliqueTree/condLogProbsGivenPrevious:

#edu/stanford/nlp/ie/crf/CRFCliqueTree/condLogProbsGivenPrevious:

#edu/stanford/nlp/ie/crf/CRFCliqueTree/condLogProbGivenNext:

#edu/stanford/nlp/ie/crf/CRFCliqueTree/condLogProbsGivenNext:

#edu/stanford/nlp/ie/crf/CRFCliqueTree/condLogProbsGivenNext:

#edu/stanford/nlp/ie/crf/CRFCliqueTree/getCalibratedCliqueTree:

#edu/stanford/nlp/ie/crf/CRFCliqueTree/getCalibratedCliqueTree:

#edu/stanford/nlp/ie/crf/CRFCliqueTree/getFactorTable:

#edu/stanford/nlp/ie/crf/CRFCliqueTree/getFactorTable:
edu.stanford.nlp.ie.crf.CRFCliqueTree:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunction/initial:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunction/initial:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunction/getPriorType:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunction/<init>:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunction/empiricalCounts:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunction/empiricalCountsForADoc:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunction/expectedCountsAndValueForADoc:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunction/documentExpectedCounts:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunction/documentLogProbability:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunction/multiThreadGradient:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunction/calculate:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunction/calculateStochastic:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunction/calculateStochasticUpdate:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunction/calculateStochasticGradient:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunction/valueAt:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunction/getFeatureGrouping:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunction/applyPrior:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunction/getCondProbs:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunction/combine2DArr:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunction/combine2DArr:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunction/combine2DArr:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunction/combine2DArr:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunction/to2D:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunction/to2D:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunction/clear2D:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunction/to1D:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunction/to1D:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunction/getWeightIndices:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunction/empty2D:
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction:

#edu/stanford/nlp/ie/crf/CRFClassifierFloat/trainWeights:
edu.stanford.nlp.ie.crf.CRFClassifierFloat:
edu.stanford.nlp.ie.crf.CliquePotentialFunction:

#edu/stanford/nlp/ie/crf/FloatFactorTable/toProbString:

#edu/stanford/nlp/ie/crf/FloatFactorTable/toString:

#edu/stanford/nlp/ie/crf/FloatFactorTable/toString:

#edu/stanford/nlp/ie/crf/FloatFactorTable/toString:

#edu/stanford/nlp/ie/crf/FloatFactorTable/toArray:

#edu/stanford/nlp/ie/crf/FloatFactorTable/indexOf:

#edu/stanford/nlp/ie/crf/FloatFactorTable/indexOf:

#edu/stanford/nlp/ie/crf/FloatFactorTable/indicesEnd:

#edu/stanford/nlp/ie/crf/FloatFactorTable/indicesFront:

#edu/stanford/nlp/ie/crf/FloatFactorTable/conditionalLogProb:

#edu/stanford/nlp/ie/crf/FloatFactorTable/unnormalizedLogProbFront:

#edu/stanford/nlp/ie/crf/FloatFactorTable/unnormalizedLogProbEnd:

#edu/stanford/nlp/ie/crf/FloatFactorTable/unnormalizedLogProbEnd:

#edu/stanford/nlp/ie/crf/FloatFactorTable/multiplyInFront:

#edu/stanford/nlp/ie/crf/FloatFactorTable/multiplyInEnd:

#edu/stanford/nlp/ie/crf/FloatFactorTable/sumOutEnd:

#edu/stanford/nlp/ie/crf/FloatFactorTable/sumOutFront:

#edu/stanford/nlp/ie/crf/FloatFactorTable/divideBy:

#edu/stanford/nlp/ie/crf/FloatFactorTable/main:
edu.stanford.nlp.ie.crf.FloatFactorTable:

#edu/stanford/nlp/ie/crf/LinearCliquePotentialFunction/computeCliquePotential:
edu.stanford.nlp.ie.crf.LinearCliquePotentialFunction:
edu.stanford.nlp.ie.crf.CRFBiasedClassifier$CRFBiasedClassifierOptimizer:

#edu/stanford/nlp/ie/crf/CRFClassifier/<init>:

#edu/stanford/nlp/ie/crf/CRFClassifier/getNumWeights:

#edu/stanford/nlp/ie/crf/CRFClassifier/getFeatureTypeIndex:

#edu/stanford/nlp/ie/crf/CRFClassifier/scaleWeights:

#edu/stanford/nlp/ie/crf/CRFClassifier/combineWeights:

#edu/stanford/nlp/ie/crf/CRFClassifier/combine:

#edu/stanford/nlp/ie/crf/CRFClassifier/dropFeaturesBelowThreshold:

#edu/stanford/nlp/ie/crf/CRFClassifier/documentToDataAndLabels:

#edu/stanford/nlp/ie/crf/CRFClassifier/printLabelInformation:

#edu/stanford/nlp/ie/crf/CRFClassifier/printLabelValue:

#edu/stanford/nlp/ie/crf/CRFClassifier/documentsToDataAndLabels:

#edu/stanford/nlp/ie/crf/CRFClassifier/documentsToDataAndLabelsList:

#edu/stanford/nlp/ie/crf/CRFClassifier/printFeatures:

#edu/stanford/nlp/ie/crf/CRFClassifier/makeAnswerArraysAndTagIndex:

#edu/stanford/nlp/ie/crf/CRFClassifier/allLabels:

#edu/stanford/nlp/ie/crf/CRFClassifier/makeDatum:

#edu/stanford/nlp/ie/crf/CRFClassifier/makeDatumUsingEmbedding:

#edu/stanford/nlp/ie/crf/CRFClassifier/dumpFeatures:

#edu/stanford/nlp/ie/crf/CRFClassifier/classify:

#edu/stanford/nlp/ie/crf/CRFClassifier/classify:

#edu/stanford/nlp/ie/crf/CRFClassifier/classifyAndWriteAnswers:

#edu/stanford/nlp/ie/crf/CRFClassifier/getSequenceModel:

#edu/stanford/nlp/ie/crf/CRFClassifier/getCliquePotentialFunctionForTest:

#edu/stanford/nlp/ie/crf/CRFClassifier/classifyMaxEnt:

#edu/stanford/nlp/ie/crf/CRFClassifier/classifyMaxEnt:

#edu/stanford/nlp/ie/crf/CRFClassifier/classifyMaxEnt:

#edu/stanford/nlp/ie/crf/CRFClassifier/classifyGibbs:

#edu/stanford/nlp/ie/crf/CRFClassifier/printProbsDocument:

#edu/stanford/nlp/ie/crf/CRFClassifier/zeroOrderProbabilities:

#edu/stanford/nlp/ie/crf/CRFClassifier/printFirstOrderProbsDocuments:

#edu/stanford/nlp/ie/crf/CRFClassifier/printFactorTableDocuments:

#edu/stanford/nlp/ie/crf/CRFClassifier/getCliqueTrees:

#edu/stanford/nlp/ie/crf/CRFClassifier/printFactorTableDocument:

#edu/stanford/nlp/ie/crf/CRFClassifier/printFirstOrderProbsDocument:

#edu/stanford/nlp/ie/crf/CRFClassifier/train:

#edu/stanford/nlp/ie/crf/CRFClassifier/to2D:

#edu/stanford/nlp/ie/crf/CRFClassifier/pruneNodeFeatureIndices:

#edu/stanford/nlp/ie/crf/CRFClassifier/trainWeights:

#edu/stanford/nlp/ie/crf/CRFClassifier/getMinimizer:

#edu/stanford/nlp/ie/crf/CRFClassifier/extractDatumSequence:

#edu/stanford/nlp/ie/crf/CRFClassifier/addProcessedData:

#edu/stanford/nlp/ie/crf/CRFClassifier/loadTextClassifier:

#edu/stanford/nlp/ie/crf/CRFClassifier/loadTextClassifier:

#edu/stanford/nlp/ie/crf/CRFClassifier/serializeTextClassifier:

#edu/stanford/nlp/ie/crf/CRFClassifier/serializeClassifier:

#edu/stanford/nlp/ie/crf/CRFClassifier/loadClassifier:

#edu/stanford/nlp/ie/crf/CRFClassifier/loadTagIndex:

#edu/stanford/nlp/ie/crf/CRFClassifier/parseMatrix:

#edu/stanford/nlp/ie/crf/CRFClassifier/readEntityMatrices:

#edu/stanford/nlp/ie/crf/CRFClassifier/writeWeights:

#edu/stanford/nlp/ie/crf/CRFClassifier/topWeights:

#edu/stanford/nlp/ie/crf/CRFClassifier/readEmbeddingsData:

#edu/stanford/nlp/ie/crf/CRFClassifier/chooseCRFClassifier:

#edu/stanford/nlp/ie/crf/CRFClassifier/toString:

#edu/stanford/nlp/ie/crf/CRFClassifier/main:

#edu/stanford/nlp/ie/crf/CRFClassifier/lambda$makeDatumUsingEmbedding$1:

#edu/stanford/nlp/ie/crf/CRFClassifier/lambda$makeDatum$0:
edu.stanford.nlp.ie.crf.CRFClassifier:

#edu/stanford/nlp/ie/crf/LabelDictionary/increment:

#edu/stanford/nlp/ie/crf/LabelDictionary/isConstrained:

#edu/stanford/nlp/ie/crf/LabelDictionary/getConstrainedSet:

#edu/stanford/nlp/ie/crf/LabelDictionary/lock:
edu.stanford.nlp.ie.crf.LabelDictionary:

#edu/stanford/nlp/ie/crf/CRFClassifierWithDropout/loadAuxiliaryData:

#edu/stanford/nlp/ie/crf/CRFClassifierWithDropout/getObjectiveFunction:
edu.stanford.nlp.ie.crf.CRFClassifierWithDropout:

#edu/stanford/nlp/ie/crf/NoisyLabelLinearCliquePotentialFunction/g:

#edu/stanford/nlp/ie/crf/NoisyLabelLinearCliquePotentialFunction/computeCliquePotential:
edu.stanford.nlp.ie.crf.NoisyLabelLinearCliquePotentialFunction:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunctionWithDropout/<init>:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunctionWithDropout/initEdgeLabels:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunctionWithDropout/sparseE:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunctionWithDropout/sparseE:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunctionWithDropout/expectedCountsAndValueForADoc:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunctionWithDropout/increScoreAllowNull:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunctionWithDropout/initializeDataFeatureHash:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunctionWithDropout/getDropoutPrior:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunctionWithDropout/setWeights:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFunctionWithDropout/calculate:
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunctionWithDropout:

#edu/stanford/nlp/ie/crf/CRFNonLinearLogConditionalObjectiveFunction/getPriorType:

#edu/stanford/nlp/ie/crf/CRFNonLinearLogConditionalObjectiveFunction/<init>:

#edu/stanford/nlp/ie/crf/CRFNonLinearLogConditionalObjectiveFunction/domainDimension:

#edu/stanford/nlp/ie/crf/CRFNonLinearLogConditionalObjectiveFunction/initial:

#edu/stanford/nlp/ie/crf/CRFNonLinearLogConditionalObjectiveFunction/empiricalCounts:

#edu/stanford/nlp/ie/crf/CRFNonLinearLogConditionalObjectiveFunction/emptyU:

#edu/stanford/nlp/ie/crf/CRFNonLinearLogConditionalObjectiveFunction/emptyW:

#edu/stanford/nlp/ie/crf/CRFNonLinearLogConditionalObjectiveFunction/separateWeights:

#edu/stanford/nlp/ie/crf/CRFNonLinearLogConditionalObjectiveFunction/calculate:

#edu/stanford/nlp/ie/crf/CRFNonLinearLogConditionalObjectiveFunction/getRegularizerParamRange:

#edu/stanford/nlp/ie/crf/CRFNonLinearLogConditionalObjectiveFunction/to2D:

#edu/stanford/nlp/ie/crf/CRFNonLinearLogConditionalObjectiveFunction/empty2D:

#edu/stanford/nlp/ie/crf/CRFNonLinearLogConditionalObjectiveFunction/emptyFull2D:

#edu/stanford/nlp/ie/crf/CRFNonLinearLogConditionalObjectiveFunction/getFeatureGrouping:
edu.stanford.nlp.ie.crf.CRFNonLinearLogConditionalObjectiveFunction:

#edu/stanford/nlp/ie/crf/FactorTable/toProbString:

#edu/stanford/nlp/ie/crf/FactorTable/toNonLogString:

#edu/stanford/nlp/ie/crf/FactorTable/toString:

#edu/stanford/nlp/ie/crf/FactorTable/toString:

#edu/stanford/nlp/ie/crf/FactorTable/toString:

#edu/stanford/nlp/ie/crf/FactorTable/toArray:

#edu/stanford/nlp/ie/crf/FactorTable/indexOf:

#edu/stanford/nlp/ie/crf/FactorTable/indexOf:

#edu/stanford/nlp/ie/crf/FactorTable/indexOf:

#edu/stanford/nlp/ie/crf/FactorTable/indexOf:

#edu/stanford/nlp/ie/crf/FactorTable/indicesEnd:

#edu/stanford/nlp/ie/crf/FactorTable/indicesEnd:

#edu/stanford/nlp/ie/crf/FactorTable/indicesFront:

#edu/stanford/nlp/ie/crf/FactorTable/conditionalLogProbGivenPrevious:

#edu/stanford/nlp/ie/crf/FactorTable/conditionalLogProbsGivenPrevious:

#edu/stanford/nlp/ie/crf/FactorTable/conditionalLogProbGivenFirst:

#edu/stanford/nlp/ie/crf/FactorTable/unnormalizedConditionalLogProbGivenFirst:

#edu/stanford/nlp/ie/crf/FactorTable/conditionalLogProbGivenNext:

#edu/stanford/nlp/ie/crf/FactorTable/unnormalizedLogProbEnd:

#edu/stanford/nlp/ie/crf/FactorTable/unnormalizedLogProbEnd:

#edu/stanford/nlp/ie/crf/FactorTable/multiplyInFront:

#edu/stanford/nlp/ie/crf/FactorTable/multiplyInEnd:

#edu/stanford/nlp/ie/crf/FactorTable/sumOutEnd:

#edu/stanford/nlp/ie/crf/FactorTable/sumOutFront:

#edu/stanford/nlp/ie/crf/FactorTable/divideBy:

#edu/stanford/nlp/ie/crf/FactorTable/main:
edu.stanford.nlp.ie.crf.FactorTable:

#edu/stanford/nlp/ie/crf/NERGUI$ActionPerformer/actionPerformed:
edu.stanford.nlp.ie.crf.NERGUI$ActionPerformer:

#edu/stanford/nlp/ie/crf/CRFNonLinearSecondOrderLogConditionalObjectiveFunction/getPriorType:

#edu/stanford/nlp/ie/crf/CRFNonLinearSecondOrderLogConditionalObjectiveFunction/<init>:

#edu/stanford/nlp/ie/crf/CRFNonLinearSecondOrderLogConditionalObjectiveFunction/domainDimension:

#edu/stanford/nlp/ie/crf/CRFNonLinearSecondOrderLogConditionalObjectiveFunction/initial:

#edu/stanford/nlp/ie/crf/CRFNonLinearSecondOrderLogConditionalObjectiveFunction/emptyU4Edge:

#edu/stanford/nlp/ie/crf/CRFNonLinearSecondOrderLogConditionalObjectiveFunction/emptyW4Edge:

#edu/stanford/nlp/ie/crf/CRFNonLinearSecondOrderLogConditionalObjectiveFunction/emptyU:

#edu/stanford/nlp/ie/crf/CRFNonLinearSecondOrderLogConditionalObjectiveFunction/emptyW:

#edu/stanford/nlp/ie/crf/CRFNonLinearSecondOrderLogConditionalObjectiveFunction/separateWeights:

#edu/stanford/nlp/ie/crf/CRFNonLinearSecondOrderLogConditionalObjectiveFunction/calculate:

#edu/stanford/nlp/ie/crf/CRFNonLinearSecondOrderLogConditionalObjectiveFunction/emptyFull2D:
edu.stanford.nlp.ie.crf.CRFNonLinearSecondOrderLogConditionalObjectiveFunction:

#edu/stanford/nlp/ie/crf/CRFBiasedClassifier/makeDatum:

#edu/stanford/nlp/ie/crf/CRFBiasedClassifier/addBiasFeature:

#edu/stanford/nlp/ie/crf/CRFBiasedClassifier/main:

#edu/stanford/nlp/ie/crf/CRFBiasedClassifier/lambda$makeDatum$0:
edu.stanford.nlp.ie.crf.CRFBiasedClassifier:

#edu/stanford/nlp/ie/crf/CRFDatum/toString:

#edu/stanford/nlp/ie/crf/CRFDatum/equals:
edu.stanford.nlp.ie.crf.CRFDatum:

#edu/stanford/nlp/ie/crf/CRFFeatureExporter/ubPrefixFeatureString:

#edu/stanford/nlp/ie/crf/CRFFeatureExporter/getFeatureString:

#edu/stanford/nlp/ie/crf/CRFFeatureExporter/printFeatures:

#edu/stanford/nlp/ie/crf/CRFFeatureExporter/printFeatures:

#edu/stanford/nlp/ie/crf/CRFFeatureExporter/main:
edu.stanford.nlp.ie.crf.CRFFeatureExporter:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFloatFunction/domainDimension:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFloatFunction/to2D:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFloatFunction/to1D:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFloatFunction/empty2D:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFloatFunction/empiricalCounts:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFloatFunction/getFloatFactorTable:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFloatFunction/getCalibratedCliqueTree:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFloatFunction/calculate:

#edu/stanford/nlp/ie/crf/CRFLogConditionalObjectiveFloatFunction/calculateWeird1:
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFloatFunction:
edu.stanford.nlp.ie.qe.Options:

#edu/stanford/nlp/ie/qe/Units/registerDerivedUnit:

#edu/stanford/nlp/ie/qe/Units/registerUnit:

#edu/stanford/nlp/ie/qe/Units/registerUnits:

#edu/stanford/nlp/ie/qe/Units/loadUnits:
edu.stanford.nlp.ie.qe.Units:
edu.stanford.nlp.ie.qe.SimpleQuantifiableEntity:

#edu/stanford/nlp/ie/qe/QuantifiableEntityExtractor/extract:

#edu/stanford/nlp/ie/qe/QuantifiableEntityExtractor/generatePrefixDefs:

#edu/stanford/nlp/ie/qe/QuantifiableEntityExtractor/generateUnitsStage0Rules:
edu.stanford.nlp.ie.qe.QuantifiableEntityExtractor:
edu.stanford.nlp.ie.qe.Units$MoneyUnit:

#edu/stanford/nlp/ie/qe/Unit/formatInDefaultUnit:
edu.stanford.nlp.ie.qe.Unit:

#edu/stanford/nlp/ie/qe/UnitPrefix/registerPrefixes:

#edu/stanford/nlp/ie/qe/UnitPrefix/loadPrefixes:
edu.stanford.nlp.ie.qe.UnitPrefix:
edu.stanford.nlp.ie.qe.Units$Currencies:

#edu/stanford/nlp/scenegraph/EntityClassifier/getDatum:

#edu/stanford/nlp/scenegraph/EntityClassifier/train:

#edu/stanford/nlp/scenegraph/EntityClassifier/main:
edu.stanford.nlp.scenegraph.EntityClassifier:

#edu/stanford/nlp/scenegraph/SceneGraphUtils/getCommonAncestor:

#edu/stanford/nlp/scenegraph/SceneGraphUtils/inSameSubTree:

#edu/stanford/nlp/scenegraph/SceneGraphUtils/getClosestIndices:
edu.stanford.nlp.scenegraph.SceneGraphUtils:
edu.stanford.nlp.scenegraph.SceneGraphDataExtractor:

#edu/stanford/nlp/scenegraph/Sandbox/printMostDiscriminativeSyntacticPatterns:
edu.stanford.nlp.scenegraph.Sandbox:

#edu/stanford/nlp/scenegraph/RuleBasedParser/getPredicate:

#edu/stanford/nlp/scenegraph/RuleBasedParser/parse:

#edu/stanford/nlp/scenegraph/RuleBasedParser/countDoubleNumMods:

#edu/stanford/nlp/scenegraph/RuleBasedParser/main:
edu.stanford.nlp.scenegraph.RuleBasedParser:

#edu/stanford/nlp/scenegraph/DcorefPronounResolver/resolvePronouns:
edu.stanford.nlp.scenegraph.DcorefPronounResolver:

#edu/stanford/nlp/scenegraph/KNNSceneGraphParser/<init>:

#edu/stanford/nlp/scenegraph/KNNSceneGraphParser/parse:

#edu/stanford/nlp/scenegraph/KNNSceneGraphParser/loadImages:

#edu/stanford/nlp/scenegraph/KNNSceneGraphParser/train:

#edu/stanford/nlp/scenegraph/KNNSceneGraphParser/main:
edu.stanford.nlp.scenegraph.KNNSceneGraphParser:

#edu/stanford/nlp/scenegraph/SceneGraphImageCleaner/getPipeline:

#edu/stanford/nlp/scenegraph/SceneGraphImageCleaner/getTokenizerPipeline:

#edu/stanford/nlp/scenegraph/SceneGraphImageCleaner/extractAllAttributes:

#edu/stanford/nlp/scenegraph/SceneGraphImageCleaner/splitAttributeConjunctions:

#edu/stanford/nlp/scenegraph/SceneGraphImageCleaner/lemmatize:

#edu/stanford/nlp/scenegraph/SceneGraphImageCleaner/trimFunctionWords:

#edu/stanford/nlp/scenegraph/SceneGraphImageCleaner/lambda$lemmaGloss$0:
edu.stanford.nlp.scenegraph.SceneGraphImageCleaner:

#edu/stanford/nlp/scenegraph/BoWExample/findWordsInBetween:

#edu/stanford/nlp/scenegraph/BoWExample/extractFeatures:
edu.stanford.nlp.scenegraph.BoWExample:

#edu/stanford/nlp/scenegraph/SceneGraphImageDependencyParser/main:
edu.stanford.nlp.scenegraph.SceneGraphImageDependencyParser:

#edu/stanford/nlp/scenegraph/SceneGraphImageFilter/countAll:

#edu/stanford/nlp/scenegraph/SceneGraphImageFilter/filterRegions:

#edu/stanford/nlp/scenegraph/SceneGraphImageFilter/main:
edu.stanford.nlp.scenegraph.SceneGraphImageFilter:

#edu/stanford/nlp/scenegraph/SceneGraph/toReadableString:

#edu/stanford/nlp/scenegraph/SceneGraph/getOrAddNode:

#edu/stanford/nlp/scenegraph/SceneGraph/toJSON:
edu.stanford.nlp.scenegraph.SceneGraph:
edu.stanford.nlp.scenegraph.SceneGraphCoreAnnotations$PredictedEntityAnnotation:

#edu/stanford/nlp/scenegraph/SceneGraphEvaluation$SceneGraphRelationTriplet/<init>:

#edu/stanford/nlp/scenegraph/SceneGraphEvaluation$SceneGraphRelationTriplet/equals:
edu.stanford.nlp.scenegraph.SceneGraphEvaluation$SceneGraphRelationTriplet:
edu.stanford.nlp.scenegraph.BoWExample$1:

#edu/stanford/nlp/scenegraph/GroundTruthConverter/main:
edu.stanford.nlp.scenegraph.GroundTruthConverter:

#edu/stanford/nlp/scenegraph/SceneGraphAttribute/equals:
edu.stanford.nlp.scenegraph.SceneGraphAttribute:

#edu/stanford/nlp/scenegraph/AbstractPronounResolver/score:

#edu/stanford/nlp/scenegraph/AbstractPronounResolver/run:
edu.stanford.nlp.scenegraph.AbstractPronounResolver:

#edu/stanford/nlp/scenegraph/SemanticGraphEnhancer/processQuanftificationModifiers:

#edu/stanford/nlp/scenegraph/SemanticGraphEnhancer/createMultiWordExpression:

#edu/stanford/nlp/scenegraph/SemanticGraphEnhancer/resolvePlurals:

#edu/stanford/nlp/scenegraph/SemanticGraphEnhancer/copyNode:

#edu/stanford/nlp/scenegraph/SemanticGraphEnhancer/collapseCompounds:

#edu/stanford/nlp/scenegraph/SemanticGraphEnhancer/collapseParticles:

#edu/stanford/nlp/scenegraph/SemanticGraphEnhancer/resolvePronouns:

#edu/stanford/nlp/scenegraph/SemanticGraphEnhancer/main:

#edu/stanford/nlp/scenegraph/SemanticGraphEnhancer/lambda$collapseParticles$1:

#edu/stanford/nlp/scenegraph/SemanticGraphEnhancer/lambda$collapseCompounds$0:
edu.stanford.nlp.scenegraph.SemanticGraphEnhancer:

#edu/stanford/nlp/scenegraph/SceneGraphEvaluation/evaluate:

#edu/stanford/nlp/scenegraph/SceneGraphEvaluation/evaluate:

#edu/stanford/nlp/scenegraph/SceneGraphEvaluation/toSmatchString:

#edu/stanford/nlp/scenegraph/SceneGraphEvaluation/toSmatchString:
edu.stanford.nlp.scenegraph.SceneGraphEvaluation:
edu.stanford.nlp.scenegraph.SceneGraphCoreAnnotations$SceneGraphEntitiyAnnotation:

#edu/stanford/nlp/scenegraph/AbstractPronounResolver$TestExample/<init>:
edu.stanford.nlp.scenegraph.AbstractPronounResolver$TestExample:

#edu/stanford/nlp/scenegraph/SceneGraphImagePCFGParser/main:
edu.stanford.nlp.scenegraph.SceneGraphImagePCFGParser:
edu.stanford.nlp.scenegraph.CRFDataExtractor:
edu.stanford.nlp.scenegraph.SceneGraphCoreAnnotations$CompoundWordAnnotation:

#edu/stanford/nlp/scenegraph/SimplePronounResolution/bfsNPSearch:

#edu/stanford/nlp/scenegraph/SimplePronounResolution/resolvePronouns:

#edu/stanford/nlp/scenegraph/SimplePronounResolution/resolvePronouns:
edu.stanford.nlp.scenegraph.SimplePronounResolution:
edu.stanford.nlp.scenegraph.SceneGraphCoreAnnotations:

#edu/stanford/nlp/scenegraph/BoWSceneGraphParser/<init>:

#edu/stanford/nlp/scenegraph/BoWSceneGraphParser/parse:

#edu/stanford/nlp/scenegraph/BoWSceneGraphParser/loadImages:

#edu/stanford/nlp/scenegraph/BoWSceneGraphParser/getTrainingExamples:

#edu/stanford/nlp/scenegraph/BoWSceneGraphParser/main:
edu.stanford.nlp.scenegraph.BoWSceneGraphParser:

#edu/stanford/nlp/scenegraph/AbstractSceneGraphParser/parse:

#edu/stanford/nlp/scenegraph/AbstractSceneGraphParser/parse:
edu.stanford.nlp.scenegraph.AbstractSceneGraphParser:

#edu/stanford/nlp/scenegraph/EntityExtractor/extractEntities:

#edu/stanford/nlp/scenegraph/EntityExtractor/extractAttributes:
edu.stanford.nlp.scenegraph.EntityExtractor:

#edu/stanford/nlp/scenegraph/ObjectSceneGraphParser/parse:

#edu/stanford/nlp/scenegraph/ObjectSceneGraphParser/main:
edu.stanford.nlp.scenegraph.ObjectSceneGraphParser:
edu.stanford.nlp.scenegraph.SceneGraphCoreAnnotations$GoldEntityAnnotation:

#edu/stanford/nlp/scenegraph/GenerateAlignmentData/main:
edu.stanford.nlp.scenegraph.GenerateAlignmentData:

#edu/stanford/nlp/scenegraph/SceneGraphNode/compareTo:

#edu/stanford/nlp/scenegraph/SceneGraphNode/equals:

#edu/stanford/nlp/scenegraph/SceneGraphNode/toJSONString:
edu.stanford.nlp.scenegraph.SceneGraphNode:

#edu/stanford/nlp/scenegraph/OpenIEParser/main:
edu.stanford.nlp.scenegraph.OpenIEParser:
edu.stanford.nlp.scenegraph.BoWExample$FEATURE_SET:
edu.stanford.nlp.scenegraph.SceneGraphCoreAnnotations$CompoundLemmaAnnotation:

#edu/stanford/nlp/scenegraph/SceneGraphSentenceMatcher/containsNull:

#edu/stanford/nlp/scenegraph/SceneGraphSentenceMatcher/findClosestPair:

#edu/stanford/nlp/scenegraph/SceneGraphSentenceMatcher/getRelationTriples:

#edu/stanford/nlp/scenegraph/SceneGraphSentenceMatcher/getMatch:

#edu/stanford/nlp/scenegraph/SceneGraphSentenceMatcher/tagsCompatible:

#edu/stanford/nlp/scenegraph/SceneGraphSentenceMatcher/main:
edu.stanford.nlp.scenegraph.SceneGraphSentenceMatcher:
edu.stanford.nlp.scenegraph.SceneGraphCoreAnnotations$IndicesAnnotation:

#edu/stanford/nlp/scenegraph/SceneGraphRelation/compareTo:

#edu/stanford/nlp/scenegraph/SceneGraphRelation/equals:
edu.stanford.nlp.scenegraph.SceneGraphRelation:

#edu/stanford/nlp/scenegraph/image/SceneGraphImageRegion/fromJSONObject:

#edu/stanford/nlp/scenegraph/image/SceneGraphImageRegion/toJSONObject:

#edu/stanford/nlp/scenegraph/image/SceneGraphImageRegion/toReadableString:
edu.stanford.nlp.scenegraph.image.SceneGraphImageRegion:

#edu/stanford/nlp/scenegraph/image/SceneGraphImageObject/<init>:

#edu/stanford/nlp/scenegraph/image/SceneGraphImageObject/fromJSONObject:

#edu/stanford/nlp/scenegraph/image/SceneGraphImageObject/toJSONObject:

#edu/stanford/nlp/scenegraph/image/SceneGraphImageObject/lambda$toJSONObject$0:
edu.stanford.nlp.scenegraph.image.SceneGraphImageObject:

#edu/stanford/nlp/scenegraph/image/SceneGraphImageUtils/labelFromString:

#edu/stanford/nlp/scenegraph/image/SceneGraphImageUtils/labelToString:

#edu/stanford/nlp/scenegraph/image/SceneGraphImageUtils/containsLemma:

#edu/stanford/nlp/scenegraph/image/SceneGraphImageUtils/containsWord:

#edu/stanford/nlp/scenegraph/image/SceneGraphImageUtils/findWord:

#edu/stanford/nlp/scenegraph/image/SceneGraphImageUtils/findLemma:

#edu/stanford/nlp/scenegraph/image/SceneGraphImageUtils/getSemanticGraph:

#edu/stanford/nlp/scenegraph/image/SceneGraphImageUtils/grammaticalStructureToJSON:
edu.stanford.nlp.scenegraph.image.SceneGraphImageUtils:

#edu/stanford/nlp/scenegraph/image/SceneGraphImageAttribute/fromJSONObject:

#edu/stanford/nlp/scenegraph/image/SceneGraphImageAttribute/toJSONObject:

#edu/stanford/nlp/scenegraph/image/SceneGraphImageAttribute/clone:

#edu/stanford/nlp/scenegraph/image/SceneGraphImageAttribute/subjectGloss:

#edu/stanford/nlp/scenegraph/image/SceneGraphImageAttribute/subjectLemmaGloss:

#edu/stanford/nlp/scenegraph/image/SceneGraphImageAttribute/attributeGloss:

#edu/stanford/nlp/scenegraph/image/SceneGraphImageAttribute/attributeLemmaGloss:

#edu/stanford/nlp/scenegraph/image/SceneGraphImageAttribute/equals:

#edu/stanford/nlp/scenegraph/image/SceneGraphImageAttribute/lambda$attributeLemmaGloss$1:

#edu/stanford/nlp/scenegraph/image/SceneGraphImageAttribute/lambda$subjectLemmaGloss$0:
edu.stanford.nlp.scenegraph.image.SceneGraphImageAttribute:

#edu/stanford/nlp/scenegraph/image/SceneGraphImageRelationship/fromJSONObject:

#edu/stanford/nlp/scenegraph/image/SceneGraphImageRelationship/toJSONObject:

#edu/stanford/nlp/scenegraph/image/SceneGraphImageRelationship/subjectGloss:

#edu/stanford/nlp/scenegraph/image/SceneGraphImageRelationship/subjectLemmaGloss:

#edu/stanford/nlp/scenegraph/image/SceneGraphImageRelationship/objectGloss:

#edu/stanford/nlp/scenegraph/image/SceneGraphImageRelationship/objectLemmaGloss:

#edu/stanford/nlp/scenegraph/image/SceneGraphImageRelationship/predicateGloss:

#edu/stanford/nlp/scenegraph/image/SceneGraphImageRelationship/predicateLemmaGloss:

#edu/stanford/nlp/scenegraph/image/SceneGraphImageRelationship/equals:

#edu/stanford/nlp/scenegraph/image/SceneGraphImageRelationship/lambda$predicateLemmaGloss$2:

#edu/stanford/nlp/scenegraph/image/SceneGraphImageRelationship/lambda$objectLemmaGloss$1:

#edu/stanford/nlp/scenegraph/image/SceneGraphImageRelationship/lambda$subjectLemmaGloss$0:
edu.stanford.nlp.scenegraph.image.SceneGraphImageRelationship:

#edu/stanford/nlp/scenegraph/image/SceneGraphImage/readFromJSON:

#edu/stanford/nlp/scenegraph/image/SceneGraphImage/toJSON:

#edu/stanford/nlp/scenegraph/image/SceneGraphImage/main:

#edu/stanford/nlp/scenegraph/image/SceneGraphImage/addAttribute:

#edu/stanford/nlp/scenegraph/image/SceneGraphImage/addRelationship:

#edu/stanford/nlp/scenegraph/image/SceneGraphImage/removeRegion:
edu.stanford.nlp.scenegraph.image.SceneGraphImage:
edu.stanford.nlp.scenegraph.image.SceneGraphImageBoundingBox:

#edu/stanford/nlp/sentiment/RNNOptions/readObject:

#edu/stanford/nlp/sentiment/RNNOptions/toString:

#edu/stanford/nlp/sentiment/RNNOptions/setOption:
edu.stanford.nlp.sentiment.RNNOptions:

#edu/stanford/nlp/sentiment/CollapseUnaryTransformer/transformTree:
edu.stanford.nlp.sentiment.CollapseUnaryTransformer:

#edu/stanford/nlp/sentiment/ExternalEvaluate/populatePredictedLabels:

#edu/stanford/nlp/sentiment/ExternalEvaluate/main:
edu.stanford.nlp.sentiment.ExternalEvaluate:
edu.stanford.nlp.sentiment.SentimentCoreAnnotations$SentimentClass:
edu.stanford.nlp.sentiment.SentimentPipeline$Input:
edu.stanford.nlp.sentiment.SentimentCostAndGradient$ScoringProcessor:

#edu/stanford/nlp/sentiment/AbstractEvaluate/printConfusionMatrix:

#edu/stanford/nlp/sentiment/AbstractEvaluate/approxAccuracy:

#edu/stanford/nlp/sentiment/AbstractEvaluate/approxCombinedAccuracy:

#edu/stanford/nlp/sentiment/AbstractEvaluate/reset:

#edu/stanford/nlp/sentiment/AbstractEvaluate/eval:

#edu/stanford/nlp/sentiment/AbstractEvaluate/eval:

#edu/stanford/nlp/sentiment/AbstractEvaluate/countLengthAccuracy:

#edu/stanford/nlp/sentiment/AbstractEvaluate/countTree:

#edu/stanford/nlp/sentiment/AbstractEvaluate/countRoot:

#edu/stanford/nlp/sentiment/AbstractEvaluate/lengthAccuracies:

#edu/stanford/nlp/sentiment/AbstractEvaluate/printLengthAccuracies:

#edu/stanford/nlp/sentiment/AbstractEvaluate/printSummary:
edu.stanford.nlp.sentiment.AbstractEvaluate:

#edu/stanford/nlp/sentiment/ConvertMatlabModel/copyWordVector:

#edu/stanford/nlp/sentiment/ConvertMatlabModel/replaceWordVector:

#edu/stanford/nlp/sentiment/ConvertMatlabModel/loadMatrix:

#edu/stanford/nlp/sentiment/ConvertMatlabModel/main:
edu.stanford.nlp.sentiment.ConvertMatlabModel:

#edu/stanford/nlp/sentiment/SentimentCostAndGradient/sumError:

#edu/stanford/nlp/sentiment/SentimentCostAndGradient/getPredictedClass:

#edu/stanford/nlp/sentiment/SentimentCostAndGradient/scoreDerivatives:

#edu/stanford/nlp/sentiment/SentimentCostAndGradient/calculate:

#edu/stanford/nlp/sentiment/SentimentCostAndGradient/scaleAndRegularize:

#edu/stanford/nlp/sentiment/SentimentCostAndGradient/scaleAndRegularize:

#edu/stanford/nlp/sentiment/SentimentCostAndGradient/scaleAndRegularizeTensor:

#edu/stanford/nlp/sentiment/SentimentCostAndGradient/backpropDerivativesAndError:

#edu/stanford/nlp/sentiment/SentimentCostAndGradient/computeTensorDeltaDown:

#edu/stanford/nlp/sentiment/SentimentCostAndGradient/getTensorGradient:

#edu/stanford/nlp/sentiment/SentimentCostAndGradient/forwardPropagateTree:
edu.stanford.nlp.sentiment.SentimentCostAndGradient:

#edu/stanford/nlp/sentiment/SentimentTraining/executeOneTrainingBatch:

#edu/stanford/nlp/sentiment/SentimentTraining/train:

#edu/stanford/nlp/sentiment/SentimentTraining/main:
edu.stanford.nlp.sentiment.SentimentTraining:
edu.stanford.nlp.sentiment.ForwardPropagationException:

#edu/stanford/nlp/sentiment/RNNTrainOptions/getClassWeight:

#edu/stanford/nlp/sentiment/RNNTrainOptions/toString:

#edu/stanford/nlp/sentiment/RNNTrainOptions/setOption:
edu.stanford.nlp.sentiment.RNNTrainOptions:
edu.stanford.nlp.sentiment.ReadSentimentDataset$Transformation:
edu.stanford.nlp.sentiment.SentimentCoreAnnotations:

#edu/stanford/nlp/sentiment/ReadSentimentDataset/convertTree:

#edu/stanford/nlp/sentiment/ReadSentimentDataset/connect:

#edu/stanford/nlp/sentiment/ReadSentimentDataset/writeTrees:

#edu/stanford/nlp/sentiment/ReadSentimentDataset/main:

#edu/stanford/nlp/sentiment/ReadSentimentDataset/lambda$static$1:
edu.stanford.nlp.sentiment.ReadSentimentDataset:

#edu/stanford/nlp/sentiment/SentimentModel/modelFromMatrices:

#edu/stanford/nlp/sentiment/SentimentModel/<init>:

#edu/stanford/nlp/sentiment/SentimentModel/<init>:

#edu/stanford/nlp/sentiment/SentimentModel/toString:

#edu/stanford/nlp/sentiment/SentimentModel/initRandomWordVectors:

#edu/stanford/nlp/sentiment/SentimentModel/readWordVectors:

#edu/stanford/nlp/sentiment/SentimentModel/getWForNode:

#edu/stanford/nlp/sentiment/SentimentModel/getTensorForNode:

#edu/stanford/nlp/sentiment/SentimentModel/getClassWForNode:

#edu/stanford/nlp/sentiment/SentimentModel/getVocabWord:

#edu/stanford/nlp/sentiment/SentimentModel/basicCategory:

#edu/stanford/nlp/sentiment/SentimentModel/getBinaryClassification:

#edu/stanford/nlp/sentiment/SentimentModel/printParamInformation:
edu.stanford.nlp.sentiment.SentimentModel:
edu.stanford.nlp.sentiment.SentimentPipeline$1:
edu.stanford.nlp.sentiment.SimpleSentiment$1:
edu.stanford.nlp.sentiment.ReadSentimentDataset$1:

#edu/stanford/nlp/sentiment/SentimentUtils/attachLabels:

#edu/stanford/nlp/sentiment/SentimentUtils/readTreesWithLabels:

#edu/stanford/nlp/sentiment/SentimentUtils/sentimentString:

#edu/stanford/nlp/sentiment/SentimentUtils/lambda$static$0:
edu.stanford.nlp.sentiment.SentimentUtils:

#edu/stanford/nlp/sentiment/SimpleSentiment$SentimentDatum/asCoreMap:
edu.stanford.nlp.sentiment.SimpleSentiment$SentimentDatum:

#edu/stanford/nlp/sentiment/SentimentCostAndGradient$ModelDerivatives/<init>:

#edu/stanford/nlp/sentiment/SentimentCostAndGradient$ModelDerivatives/addMatrices:

#edu/stanford/nlp/sentiment/SentimentCostAndGradient$ModelDerivatives/addTensors:

#edu/stanford/nlp/sentiment/SentimentCostAndGradient$ModelDerivatives/addMatrices:

#edu/stanford/nlp/sentiment/SentimentCostAndGradient$ModelDerivatives/initDerivatives:

#edu/stanford/nlp/sentiment/SentimentCostAndGradient$ModelDerivatives/initTensorDerivatives:

#edu/stanford/nlp/sentiment/SentimentCostAndGradient$ModelDerivatives/initDerivatives:
edu.stanford.nlp.sentiment.SentimentCostAndGradient$ModelDerivatives:
edu.stanford.nlp.sentiment.SentimentCoreAnnotations$SentimentAnnotatedTree:

#edu/stanford/nlp/sentiment/SimpleSentiment/featurize:

#edu/stanford/nlp/sentiment/SimpleSentiment/train:

#edu/stanford/nlp/sentiment/SimpleSentiment/$deserializeLambda$:

#edu/stanford/nlp/sentiment/SimpleSentiment/lambda$twitter$6:

#edu/stanford/nlp/sentiment/SimpleSentiment/lambda$stanford$5:

#edu/stanford/nlp/sentiment/SimpleSentiment/lambda$train$946015b$1:

#edu/stanford/nlp/sentiment/SimpleSentiment/lambda$train$1:
edu.stanford.nlp.sentiment.SimpleSentiment:

#edu/stanford/nlp/sentiment/SentimentPipeline/setSentimentLabels:

#edu/stanford/nlp/sentiment/SentimentPipeline/setIndexLabels:

#edu/stanford/nlp/sentiment/SentimentPipeline/outputTreeVectors:

#edu/stanford/nlp/sentiment/SentimentPipeline/outputTreeScores:

#edu/stanford/nlp/sentiment/SentimentPipeline/outputTree:

#edu/stanford/nlp/sentiment/SentimentPipeline/getAnnotations:

#edu/stanford/nlp/sentiment/SentimentPipeline/main:
edu.stanford.nlp.sentiment.SentimentPipeline:

#edu/stanford/nlp/sentiment/Evaluate/countUnks:

#edu/stanford/nlp/sentiment/Evaluate/printSummary:

#edu/stanford/nlp/sentiment/Evaluate/populatePredictedLabels:

#edu/stanford/nlp/sentiment/Evaluate/main:
edu.stanford.nlp.sentiment.Evaluate:

#edu/stanford/nlp/sentiment/BuildBinarizedDataset/setUnknownLabels:

#edu/stanford/nlp/sentiment/BuildBinarizedDataset/setPredictedLabels:

#edu/stanford/nlp/sentiment/BuildBinarizedDataset/extractLabels:

#edu/stanford/nlp/sentiment/BuildBinarizedDataset/setSpanLabel:

#edu/stanford/nlp/sentiment/BuildBinarizedDataset/main:
edu.stanford.nlp.sentiment.BuildBinarizedDataset:

#edu/stanford/nlp/sentiment/RNNTestOptions/setOption:
edu.stanford.nlp.sentiment.RNNTestOptions:
edu.stanford.nlp.sentiment.SentimentPipeline$Output:

#edu/stanford/nlp/neural/Embedding/loadWordVectors:

#edu/stanford/nlp/neural/Embedding/loadWordVectors:

#edu/stanford/nlp/neural/Embedding/get:

#edu/stanford/nlp/neural/Embedding/getEmbeddingSize:
edu.stanford.nlp.neural.Embedding:
edu.stanford.nlp.neural.VectorMap$1:
edu.stanford.nlp.neural.ConvertModels$Stage:

#edu/stanford/nlp/neural/SimpleTensor/<init>:

#edu/stanford/nlp/neural/SimpleTensor/<init>:

#edu/stanford/nlp/neural/SimpleTensor/random:

#edu/stanford/nlp/neural/SimpleTensor/set:

#edu/stanford/nlp/neural/SimpleTensor/scale:

#edu/stanford/nlp/neural/SimpleTensor/plus:

#edu/stanford/nlp/neural/SimpleTensor/elementMult:

#edu/stanford/nlp/neural/SimpleTensor/elementSum:

#edu/stanford/nlp/neural/SimpleTensor/setSlice:

#edu/stanford/nlp/neural/SimpleTensor/getSlice:

#edu/stanford/nlp/neural/SimpleTensor/bilinearProducts:

#edu/stanford/nlp/neural/SimpleTensor/isZero:

#edu/stanford/nlp/neural/SimpleTensor/toString:

#edu/stanford/nlp/neural/SimpleTensor/toString:
edu.stanford.nlp.neural.SimpleTensor:

#edu/stanford/nlp/neural/VectorMap$itype/getType:

#edu/stanford/nlp/neural/VectorMap$itype/read:

#edu/stanford/nlp/neural/VectorMap$itype/write:
edu.stanford.nlp.neural.VectorMap$itype:

#edu/stanford/nlp/neural/VectorMap/serialize:

#edu/stanford/nlp/neural/VectorMap/serialize:

#edu/stanford/nlp/neural/VectorMap/deserialize:

#edu/stanford/nlp/neural/VectorMap/deserialize:

#edu/stanford/nlp/neural/VectorMap/readWord2Vec:

#edu/stanford/nlp/neural/VectorMap/equals:

#edu/stanford/nlp/neural/VectorMap/sameFloat:
Warning: Method:edu.stanford.nlp.neural.VectorMap.toFloat has auto edges.

#edu/stanford/nlp/neural/VectorMap/fromFloat:
edu.stanford.nlp.neural.VectorMap:
edu.stanford.nlp.neural.ConvertModels$Model:

#edu/stanford/nlp/neural/SimpleTensor$SimpleMatrixIteratorWrapper/hasNext:

#edu/stanford/nlp/neural/SimpleTensor$SimpleMatrixIteratorWrapper/next:

#edu/stanford/nlp/neural/SimpleTensor$SimpleMatrixIteratorWrapper/advanceIterator:
edu.stanford.nlp.neural.SimpleTensor$SimpleMatrixIteratorWrapper:

#edu/stanford/nlp/neural/ConvertModels/fromMatrix:

#edu/stanford/nlp/neural/ConvertModels/fromTensor:

#edu/stanford/nlp/neural/ConvertModels/toMatrix:

#edu/stanford/nlp/neural/ConvertModels/toTensor:

#edu/stanford/nlp/neural/ConvertModels/transformMap:

#edu/stanford/nlp/neural/ConvertModels/writeFastCoref:

#edu/stanford/nlp/neural/ConvertModels/readFastCoref:

#edu/stanford/nlp/neural/ConvertModels/main:
edu.stanford.nlp.neural.ConvertModels:

#edu/stanford/nlp/neural/NeuralUtils/loadTextMatrices:

#edu/stanford/nlp/neural/NeuralUtils/convertTextMatrix:

#edu/stanford/nlp/neural/NeuralUtils/dot:

#edu/stanford/nlp/neural/NeuralUtils/vectorToParams:

#edu/stanford/nlp/neural/NeuralUtils/paramsToVector:

#edu/stanford/nlp/neural/NeuralUtils/paramsToVector:

#edu/stanford/nlp/neural/NeuralUtils/softmax:

#edu/stanford/nlp/neural/NeuralUtils/elementwiseApplyReLU:

#edu/stanford/nlp/neural/NeuralUtils/elementwiseApplyLog:

#edu/stanford/nlp/neural/NeuralUtils/elementwiseApplyTanh:

#edu/stanford/nlp/neural/NeuralUtils/concatenateWithBias:

#edu/stanford/nlp/neural/NeuralUtils/concatenate:

#edu/stanford/nlp/neural/NeuralUtils/randomGaussian:

#edu/stanford/nlp/neural/NeuralUtils/isZero:

#edu/stanford/nlp/neural/NeuralUtils/lambda$convertTextMatrix$0:
edu.stanford.nlp.neural.NeuralUtils:
edu.stanford.nlp.neural.rnn.RNNCoreAnnotations$PredictedClass:
edu.stanford.nlp.neural.rnn.RNNCoreAnnotations$Predictions:
edu.stanford.nlp.neural.rnn.RNNCoreAnnotations$PredictionError:

#edu/stanford/nlp/neural/rnn/RNNCoreAnnotations/getNodeVector:

#edu/stanford/nlp/neural/rnn/RNNCoreAnnotations/getPredictions:

#edu/stanford/nlp/neural/rnn/RNNCoreAnnotations/getPredictionsAsStringList:

#edu/stanford/nlp/neural/rnn/RNNCoreAnnotations/getPredictedClass:

#edu/stanford/nlp/neural/rnn/RNNCoreAnnotations/getPredictedClassProb:

#edu/stanford/nlp/neural/rnn/RNNCoreAnnotations/getGoldClass:

#edu/stanford/nlp/neural/rnn/RNNCoreAnnotations/setGoldClass:

#edu/stanford/nlp/neural/rnn/RNNCoreAnnotations/getPredictionError:

#edu/stanford/nlp/neural/rnn/RNNCoreAnnotations/setPredictionError:
edu.stanford.nlp.neural.rnn.RNNCoreAnnotations:
edu.stanford.nlp.neural.rnn.RNNCoreAnnotations$NodeVector:
edu.stanford.nlp.neural.rnn.RNNCoreAnnotations$GoldClass:

#edu/stanford/nlp/neural/rnn/TopNGramRecord/<init>:

#edu/stanford/nlp/neural/rnn/TopNGramRecord/countTree:

#edu/stanford/nlp/neural/rnn/TopNGramRecord/simplifyTree:

#edu/stanford/nlp/neural/rnn/TopNGramRecord/countTreeHelper:

#edu/stanford/nlp/neural/rnn/TopNGramRecord/getPriorityQueue:

#edu/stanford/nlp/neural/rnn/TopNGramRecord/toString:

#edu/stanford/nlp/neural/rnn/TopNGramRecord/lambda$scoreComparator$0:
edu.stanford.nlp.neural.rnn.TopNGramRecord:

#edu/stanford/nlp/paragraphs/ParagraphAnnotator/annotate:
edu.stanford.nlp.paragraphs.ParagraphAnnotator:

#edu/stanford/nlp/paragraphs/RunParagraphAnnotator/runTest:
edu.stanford.nlp.paragraphs.RunParagraphAnnotator:

#edu/stanford/nlp/tagger/util/CountClosedTags/<init>:

#edu/stanford/nlp/tagger/util/CountClosedTags/countSentences:

#edu/stanford/nlp/tagger/util/CountClosedTags/addTaggedWords:

#edu/stanford/nlp/tagger/util/CountClosedTags/countTrainingTags:

#edu/stanford/nlp/tagger/util/CountClosedTags/countTestTags:

#edu/stanford/nlp/tagger/util/CountClosedTags/report:

#edu/stanford/nlp/tagger/util/CountClosedTags/help:

#edu/stanford/nlp/tagger/util/CountClosedTags/checkArgs:

#edu/stanford/nlp/tagger/util/CountClosedTags/main:
edu.stanford.nlp.tagger.util.CountClosedTags:

#edu/stanford/nlp/tagger/util/MakePrefixFile/main:
edu.stanford.nlp.tagger.util.MakePrefixFile:

#edu/stanford/nlp/tagger/util/ConvertTreesToTags/main:
edu.stanford.nlp.tagger.util.ConvertTreesToTags:
edu.stanford.nlp.tagger.io.TaggedFileRecord$Format:

#edu/stanford/nlp/tagger/io/TSVTaggedFileReader/<init>:

#edu/stanford/nlp/tagger/io/TSVTaggedFileReader/hasNext:

#edu/stanford/nlp/tagger/io/TSVTaggedFileReader/next:

#edu/stanford/nlp/tagger/io/TSVTaggedFileReader/primeNext:
edu.stanford.nlp.tagger.io.TSVTaggedFileReader:
edu.stanford.nlp.tagger.io.TaggedFileRecord$1:

#edu/stanford/nlp/tagger/io/TaggedFileRecord/toString:

#edu/stanford/nlp/tagger/io/TaggedFileRecord/reader:

#edu/stanford/nlp/tagger/io/TaggedFileRecord/createRecords:

#edu/stanford/nlp/tagger/io/TaggedFileRecord/createRecord:

#edu/stanford/nlp/tagger/io/TaggedFileRecord/getEncoding:

#edu/stanford/nlp/tagger/io/TaggedFileRecord/getTagSeparator:
edu.stanford.nlp.tagger.io.TaggedFileRecord:

#edu/stanford/nlp/tagger/io/TreeTaggedFileReader/<init>:

#edu/stanford/nlp/tagger/io/TreeTaggedFileReader/hasNext:

#edu/stanford/nlp/tagger/io/TreeTaggedFileReader/next:
Warning: Method:edu.stanford.nlp.tagger.io.TreeTaggedFileReader.findNext has incoming edges.
edu.stanford.nlp.tagger.io.TreeTaggedFileReader:
edu.stanford.nlp.tagger.io.TaggedFileReader:

#edu/stanford/nlp/tagger/io/TextTaggedFileReader/hasNext:

#edu/stanford/nlp/tagger/io/TextTaggedFileReader/next:

#edu/stanford/nlp/tagger/io/TextTaggedFileReader/primeNext:
edu.stanford.nlp.tagger.io.TextTaggedFileReader:

#edu/stanford/nlp/tagger/maxent/ExtractorUpperDigitDash/extract:
edu.stanford.nlp.tagger.maxent.ExtractorUpperDigitDash:

#edu/stanford/nlp/tagger/maxent/AmbiguityClasses/add:

#edu/stanford/nlp/tagger/maxent/AmbiguityClasses/getClass:
edu.stanford.nlp.tagger.maxent.AmbiguityClasses:

#edu/stanford/nlp/tagger/maxent/TemplateHash/add:

#edu/stanford/nlp/tagger/maxent/TemplateHash/addPrev:

#edu/stanford/nlp/tagger/maxent/TemplateHash/getXValues:
edu.stanford.nlp.tagger.maxent.TemplateHash:

#edu/stanford/nlp/tagger/maxent/ReadDataTagged/<init>:

#edu/stanford/nlp/tagger/maxent/ReadDataTagged/loadFile:
edu.stanford.nlp.tagger.maxent.ReadDataTagged:
edu.stanford.nlp.tagger.maxent.ExtractorSpanishImperfectErIrSuffix:

#edu/stanford/nlp/tagger/maxent/TaggerFeature/getVal:

#edu/stanford/nlp/tagger/maxent/TaggerFeature/ftilde:
edu.stanford.nlp.tagger.maxent.TaggerFeature:

#edu/stanford/nlp/tagger/maxent/ExtractorSpanishAuxiliaryTag/extract:
edu.stanford.nlp.tagger.maxent.ExtractorSpanishAuxiliaryTag:

#edu/stanford/nlp/tagger/maxent/TemplateHash$ListInstances/getInstances:
edu.stanford.nlp.tagger.maxent.TemplateHash$ListInstances:

#edu/stanford/nlp/tagger/maxent/TestThreadedTagger/compareResults:

#edu/stanford/nlp/tagger/maxent/TestThreadedTagger/runThreadedTest:
edu.stanford.nlp.tagger.maxent.TestThreadedTagger:
edu.stanford.nlp.tagger.maxent.ExtractorFrenchNounSuffix:
edu.stanford.nlp.tagger.maxent.MaxentTaggerServer$1:

#edu/stanford/nlp/tagger/maxent/LambdaSolveTagger/initCondsZlambdaEtc:

#edu/stanford/nlp/tagger/maxent/LambdaSolveTagger/g:

#edu/stanford/nlp/tagger/maxent/LambdaSolveTagger/fExpected:

#edu/stanford/nlp/tagger/maxent/LambdaSolveTagger/checkCorrectness:
edu.stanford.nlp.tagger.maxent.LambdaSolveTagger:
edu.stanford.nlp.tagger.maxent.MaxentTaggerGUI$2:

#edu/stanford/nlp/tagger/maxent/ExtractorDistsimConjunction/extract:
edu.stanford.nlp.tagger.maxent.ExtractorDistsimConjunction:

#edu/stanford/nlp/tagger/maxent/MaxentTagger$TaggerWrapper/<init>:

#edu/stanford/nlp/tagger/maxent/MaxentTagger$TaggerWrapper/apply:
edu.stanford.nlp.tagger.maxent.MaxentTagger$TaggerWrapper:

#edu/stanford/nlp/tagger/maxent/Extractor/leftContext:

#edu/stanford/nlp/tagger/maxent/Extractor/rightContext:

#edu/stanford/nlp/tagger/maxent/Extractor/isLocal:

#edu/stanford/nlp/tagger/maxent/Extractor/extract:

#edu/stanford/nlp/tagger/maxent/Extractor/extractLV:

#edu/stanford/nlp/tagger/maxent/Extractor/extractLV:

#edu/stanford/nlp/tagger/maxent/Extractor/toString:

#edu/stanford/nlp/tagger/maxent/Extractor/getParenthesizedArg:
edu.stanford.nlp.tagger.maxent.Extractor:

#edu/stanford/nlp/tagger/maxent/ExtractorWordSuff/extract:

#edu/stanford/nlp/tagger/maxent/ExtractorWordSuff/isLocal:
edu.stanford.nlp.tagger.maxent.ExtractorWordSuff:

#edu/stanford/nlp/tagger/maxent/TestClassifier/<init>:

#edu/stanford/nlp/tagger/maxent/TestClassifier/processResults:

#edu/stanford/nlp/tagger/maxent/TestClassifier/test:

#edu/stanford/nlp/tagger/maxent/TestClassifier/resultsString:
edu.stanford.nlp.tagger.maxent.TestClassifier:

#edu/stanford/nlp/tagger/maxent/MaxentTaggerServer$Session/run:
edu.stanford.nlp.tagger.maxent.MaxentTaggerServer$Session:

#edu/stanford/nlp/tagger/maxent/TestSentence/<init>:

#edu/stanford/nlp/tagger/maxent/TestSentence/setCorrectTags:

#edu/stanford/nlp/tagger/maxent/TestSentence/tagSentence:

#edu/stanford/nlp/tagger/maxent/TestSentence/init:

#edu/stanford/nlp/tagger/maxent/TestSentence/getTaggedNice:

#edu/stanford/nlp/tagger/maxent/TestSentence/getTaggedSentence:

#edu/stanford/nlp/tagger/maxent/TestSentence/toNice:

#edu/stanford/nlp/tagger/maxent/TestSentence/calculateProbs:

#edu/stanford/nlp/tagger/maxent/TestSentence/writeTagsAndErrors:

#edu/stanford/nlp/tagger/maxent/TestSentence/updateConfusionMatrix:

#edu/stanford/nlp/tagger/maxent/TestSentence/runTagInference:

#edu/stanford/nlp/tagger/maxent/TestSentence/setHistory:

#edu/stanford/nlp/tagger/maxent/TestSentence/initializeScorer:

#edu/stanford/nlp/tagger/maxent/TestSentence/getScores:

#edu/stanford/nlp/tagger/maxent/TestSentence/getExactScores:

#edu/stanford/nlp/tagger/maxent/TestSentence/getHistories:

#edu/stanford/nlp/tagger/maxent/TestSentence/getHistories:

#edu/stanford/nlp/tagger/maxent/TestSentence/getExactHistories:

#edu/stanford/nlp/tagger/maxent/TestSentence/runExactExtractor:

#edu/stanford/nlp/tagger/maxent/TestSentence/getApproximateHistories:

#edu/stanford/nlp/tagger/maxent/TestSentence/runApproximateExtractor:

#edu/stanford/nlp/tagger/maxent/TestSentence/printUnknown:

#edu/stanford/nlp/tagger/maxent/TestSentence/printTop:

#edu/stanford/nlp/tagger/maxent/TestSentence/getTop3:

#edu/stanford/nlp/tagger/maxent/TestSentence/getPossibleValues:

#edu/stanford/nlp/tagger/maxent/TestSentence/scoreOf:

#edu/stanford/nlp/tagger/maxent/TestSentence/stringTagsAt:
edu.stanford.nlp.tagger.maxent.TestSentence:

#edu/stanford/nlp/tagger/maxent/ExtractorDash/extract:
edu.stanford.nlp.tagger.maxent.ExtractorDash:

#edu/stanford/nlp/tagger/maxent/ExtractorLetterDashDigit/extract:
edu.stanford.nlp.tagger.maxent.ExtractorLetterDashDigit:
edu.stanford.nlp.tagger.maxent.TaggerFeatures:
edu.stanford.nlp.tagger.maxent.ExtractorFrenchPluralSuffix:
edu.stanford.nlp.tagger.maxent.HistoryTable:

#edu/stanford/nlp/tagger/maxent/CTBunkDict/getInstance:

#edu/stanford/nlp/tagger/maxent/CTBunkDict/readCTBunkDict:

#edu/stanford/nlp/tagger/maxent/CTBunkDict/getTag:
edu.stanford.nlp.tagger.maxent.CTBunkDict:

#edu/stanford/nlp/tagger/maxent/TaggerConfig/<init>:

#edu/stanford/nlp/tagger/maxent/TaggerConfig/setProperties:

#edu/stanford/nlp/tagger/maxent/TaggerConfig/getOutputOptionsContains:

#edu/stanford/nlp/tagger/maxent/TaggerConfig/wsvStringToStringArray:

#edu/stanford/nlp/tagger/maxent/TaggerConfig/getTagInside:

#edu/stanford/nlp/tagger/maxent/TaggerConfig/getTokenizerInvertible:

#edu/stanford/nlp/tagger/maxent/TaggerConfig/getDefaultScore:

#edu/stanford/nlp/tagger/maxent/TaggerConfig/dump:

#edu/stanford/nlp/tagger/maxent/TaggerConfig/getSentenceDelimiter:

#edu/stanford/nlp/tagger/maxent/TaggerConfig/getMode:
edu.stanford.nlp.tagger.maxent.TaggerConfig:
edu.stanford.nlp.tagger.maxent.MaxentTagger$1:

#edu/stanford/nlp/tagger/maxent/TaggerExperiments/<init>:

#edu/stanford/nlp/tagger/maxent/TaggerExperiments/add:

#edu/stanford/nlp/tagger/maxent/TaggerExperiments/getFeaturesNew:

#edu/stanford/nlp/tagger/maxent/TaggerExperiments/hashHistories:

#edu/stanford/nlp/tagger/maxent/TaggerExperiments/isPopulated:

#edu/stanford/nlp/tagger/maxent/TaggerExperiments/addTemplatesNew:

#edu/stanford/nlp/tagger/maxent/TaggerExperiments/addRareTemplatesNew:
edu.stanford.nlp.tagger.maxent.TaggerExperiments:
edu.stanford.nlp.tagger.maxent.MaxentTaggerGUI$3:

#edu/stanford/nlp/tagger/maxent/ExtractorWordShapeConjunction/extract:
edu.stanford.nlp.tagger.maxent.ExtractorWordShapeConjunction:

#edu/stanford/nlp/tagger/maxent/MaxentTaggerGUI$1/run:
edu.stanford.nlp.tagger.maxent.MaxentTaggerGUI$1:

#edu/stanford/nlp/tagger/maxent/ExtractorFrames$ExtractorWordTwoTags/<init>:

#edu/stanford/nlp/tagger/maxent/ExtractorFrames$ExtractorWordTwoTags/leftContext:

#edu/stanford/nlp/tagger/maxent/ExtractorFrames$ExtractorWordTwoTags/rightContext:
edu.stanford.nlp.tagger.maxent.ExtractorFrames$ExtractorWordTwoTags:

#edu/stanford/nlp/tagger/maxent/ExtractorFramesRare/getNaaclExtractors:

#edu/stanford/nlp/tagger/maxent/ExtractorFramesRare/getCaselessNaaclExtractors:

#edu/stanford/nlp/tagger/maxent/ExtractorFramesRare/getExtractorFramesRare:

#edu/stanford/nlp/tagger/maxent/ExtractorFramesRare/lcTagFeatures:

#edu/stanford/nlp/tagger/maxent/ExtractorFramesRare/ctbPreFeatures:

#edu/stanford/nlp/tagger/maxent/ExtractorFramesRare/ctbSufFeatures:

#edu/stanford/nlp/tagger/maxent/ExtractorFramesRare/asbcUnkFeatures:

#edu/stanford/nlp/tagger/maxent/ExtractorFramesRare/ctbUnkDictFeatures:
edu.stanford.nlp.tagger.maxent.ExtractorFramesRare:

#edu/stanford/nlp/tagger/maxent/ExtractorUCase/extract:
edu.stanford.nlp.tagger.maxent.ExtractorUCase:

#edu/stanford/nlp/tagger/maxent/CtbDict/getInstance:

#edu/stanford/nlp/tagger/maxent/CtbDict/readCtbDict:

#edu/stanford/nlp/tagger/maxent/CtbDict/getTagPre:

#edu/stanford/nlp/tagger/maxent/CtbDict/getTagSuf:
edu.stanford.nlp.tagger.maxent.CtbDict:
edu.stanford.nlp.tagger.maxent.MaxentTaggerGUI:

#edu/stanford/nlp/tagger/maxent/ExtractorNonAlphanumeric/extract:
edu.stanford.nlp.tagger.maxent.ExtractorNonAlphanumeric:

#edu/stanford/nlp/tagger/maxent/ExtractorMidSentenceCap/extract:
edu.stanford.nlp.tagger.maxent.ExtractorMidSentenceCap:

#edu/stanford/nlp/tagger/maxent/CtbSufDetector/extract:
edu.stanford.nlp.tagger.maxent.CtbSufDetector:

#edu/stanford/nlp/tagger/maxent/ExtractorSpanishSemiauxiliaryTag/extract:
edu.stanford.nlp.tagger.maxent.ExtractorSpanishSemiauxiliaryTag:

#edu/stanford/nlp/tagger/maxent/ExtractorCapC/extract:
edu.stanford.nlp.tagger.maxent.ExtractorCapC:

#edu/stanford/nlp/tagger/maxent/ExtractorFrames/getExtractorFrames:
edu.stanford.nlp.tagger.maxent.ExtractorFrames:
edu.stanford.nlp.tagger.maxent.ExtractorSpanishConditionalSuffix:

#edu/stanford/nlp/tagger/maxent/ExtractorVerbalVBNZero/precondition:

#edu/stanford/nlp/tagger/maxent/ExtractorVerbalVBNZero/extract:
edu.stanford.nlp.tagger.maxent.ExtractorVerbalVBNZero:

#edu/stanford/nlp/tagger/maxent/CWordBooleanExtractor/extract:
edu.stanford.nlp.tagger.maxent.CWordBooleanExtractor:

#edu/stanford/nlp/tagger/maxent/ASBCunkDetector/extract:
edu.stanford.nlp.tagger.maxent.ASBCunkDetector:

#edu/stanford/nlp/tagger/maxent/TTags/<init>:

#edu/stanford/nlp/tagger/maxent/TTags/getOpenTags:

#edu/stanford/nlp/tagger/maxent/TTags/getOpenTagsArray:

#edu/stanford/nlp/tagger/maxent/TTags/save:

#edu/stanford/nlp/tagger/maxent/TTags/read:

#edu/stanford/nlp/tagger/maxent/TTags/isClosed:

#edu/stanford/nlp/tagger/maxent/TTags/markClosed:

#edu/stanford/nlp/tagger/maxent/TTags/setOpenClassTags:

#edu/stanford/nlp/tagger/maxent/TTags/setClosedClassTags:

#edu/stanford/nlp/tagger/maxent/TTags/deterministicallyExpandTags:

#edu/stanford/nlp/tagger/maxent/TTags/toString:
edu.stanford.nlp.tagger.maxent.TTags:

#edu/stanford/nlp/tagger/maxent/CTBunkDictDetector/extract:
edu.stanford.nlp.tagger.maxent.CTBunkDictDetector:

#edu/stanford/nlp/tagger/maxent/ExtractorCapDistLC/extract:
edu.stanford.nlp.tagger.maxent.ExtractorCapDistLC:

#edu/stanford/nlp/tagger/maxent/ExtractorsConjunction/<init>:

#edu/stanford/nlp/tagger/maxent/ExtractorsConjunction/extract:
edu.stanford.nlp.tagger.maxent.ExtractorsConjunction:
edu.stanford.nlp.tagger.maxent.DictionaryExtractor:
edu.stanford.nlp.tagger.maxent.MaxentTagger$SentenceTaggingProcessor:
edu.stanford.nlp.tagger.maxent.TestThreadedTagger$TaggerThread:

#edu/stanford/nlp/tagger/maxent/ExtractorFrames$ExtractorTwoWords/<init>:
edu.stanford.nlp.tagger.maxent.ExtractorFrames$ExtractorTwoWords:

#edu/stanford/nlp/tagger/maxent/ExtractorStartSentenceCap/extract:
edu.stanford.nlp.tagger.maxent.ExtractorStartSentenceCap:
edu.stanford.nlp.tagger.maxent.DataWordTag:

#edu/stanford/nlp/tagger/maxent/Extractors/initTypes:

#edu/stanford/nlp/tagger/maxent/Extractors/equals:

#edu/stanford/nlp/tagger/maxent/Extractors/leftContext:

#edu/stanford/nlp/tagger/maxent/Extractors/rightContext:

#edu/stanford/nlp/tagger/maxent/Extractors/setGlobalHolder:

#edu/stanford/nlp/tagger/maxent/Extractors/toString:
edu.stanford.nlp.tagger.maxent.Extractors:

#edu/stanford/nlp/tagger/maxent/CountWrapper/<init>:

#edu/stanford/nlp/tagger/maxent/CountWrapper/equals:

#edu/stanford/nlp/tagger/maxent/CountWrapper/read:
edu.stanford.nlp.tagger.maxent.CountWrapper:

#edu/stanford/nlp/tagger/maxent/ASBCunkDict/getInstance:

#edu/stanford/nlp/tagger/maxent/ASBCunkDict/readASBCunkDict:

#edu/stanford/nlp/tagger/maxent/ASBCunkDict/getTag:
edu.stanford.nlp.tagger.maxent.ASBCunkDict:
edu.stanford.nlp.tagger.maxent.ExtractorFrames$ExtractorWordLowerCase:

#edu/stanford/nlp/tagger/maxent/ExtractorWordPref/extract:

#edu/stanford/nlp/tagger/maxent/ExtractorWordPref/isLocal:
edu.stanford.nlp.tagger.maxent.ExtractorWordPref:

#edu/stanford/nlp/tagger/maxent/ExtractorFrames$ExtractorCWordCapCase/extract:
edu.stanford.nlp.tagger.maxent.ExtractorFrames$ExtractorCWordCapCase:

#edu/stanford/nlp/tagger/maxent/ExtractorSpanishGender/extract:
edu.stanford.nlp.tagger.maxent.ExtractorSpanishGender:
edu.stanford.nlp.tagger.maxent.ExtractorFrames$ExtractorTwoWordsTag:
edu.stanford.nlp.tagger.maxent.ExtractorFrames$ExtractorTwoTags:

#edu/stanford/nlp/tagger/maxent/MaxentTaggerServer$TaggerClient/communicateWithMaxentTaggerServer:
edu.stanford.nlp.tagger.maxent.MaxentTaggerServer$TaggerClient:

#edu/stanford/nlp/tagger/maxent/ExtractorSymbols/extract:
edu.stanford.nlp.tagger.maxent.ExtractorSymbols:
edu.stanford.nlp.tagger.maxent.ExtractorFrenchAdvSuffix:

#edu/stanford/nlp/tagger/maxent/ExtractorLetterDigitDash/extract:
edu.stanford.nlp.tagger.maxent.ExtractorLetterDigitDash:

#edu/stanford/nlp/tagger/maxent/Dictionary/fillWordTagCounts:

#edu/stanford/nlp/tagger/maxent/Dictionary/addVThatTaking:

#edu/stanford/nlp/tagger/maxent/Dictionary/getCountPart:

#edu/stanford/nlp/tagger/maxent/Dictionary/getCountThat:

#edu/stanford/nlp/tagger/maxent/Dictionary/getCountIn:

#edu/stanford/nlp/tagger/maxent/Dictionary/getCountRB:

#edu/stanford/nlp/tagger/maxent/Dictionary/getCount:

#edu/stanford/nlp/tagger/maxent/Dictionary/getTags:

#edu/stanford/nlp/tagger/maxent/Dictionary/getFirstTag:

#edu/stanford/nlp/tagger/maxent/Dictionary/sum:

#edu/stanford/nlp/tagger/maxent/Dictionary/isUnknown:

#edu/stanford/nlp/tagger/maxent/Dictionary/save:

#edu/stanford/nlp/tagger/maxent/Dictionary/readTags:

#edu/stanford/nlp/tagger/maxent/Dictionary/readVerbs:

#edu/stanford/nlp/tagger/maxent/Dictionary/setAmbClasses:

#edu/stanford/nlp/tagger/maxent/Dictionary/getAmbClass:
edu.stanford.nlp.tagger.maxent.Dictionary:

#edu/stanford/nlp/tagger/maxent/CaselessCompanyNameDetector/<init>:

#edu/stanford/nlp/tagger/maxent/CaselessCompanyNameDetector/extract:
edu.stanford.nlp.tagger.maxent.CaselessCompanyNameDetector:

#edu/stanford/nlp/tagger/maxent/AmbiguityClass/<init>:

#edu/stanford/nlp/tagger/maxent/AmbiguityClass/add:

#edu/stanford/nlp/tagger/maxent/AmbiguityClass/toString:

#edu/stanford/nlp/tagger/maxent/AmbiguityClass/equals:
edu.stanford.nlp.tagger.maxent.AmbiguityClass:

#edu/stanford/nlp/tagger/maxent/ExtractorFrames$ExtractorContinuousTagConjunction/extract:

#edu/stanford/nlp/tagger/maxent/ExtractorFrames$ExtractorContinuousTagConjunction/toString:
edu.stanford.nlp.tagger.maxent.ExtractorFrames$ExtractorContinuousTagConjunction:

#edu/stanford/nlp/tagger/maxent/ExtractorWordShapeClassifier/isLocal:
edu.stanford.nlp.tagger.maxent.ExtractorWordShapeClassifier:

#edu/stanford/nlp/tagger/maxent/ExtractorFrames$ExtractorThreeTags/<init>:

#edu/stanford/nlp/tagger/maxent/ExtractorFrames$ExtractorThreeTags/rightContext:

#edu/stanford/nlp/tagger/maxent/ExtractorFrames$ExtractorThreeTags/leftContext:
edu.stanford.nlp.tagger.maxent.ExtractorFrames$ExtractorThreeTags:

#edu/stanford/nlp/tagger/maxent/ExtractorCapLCSeen/extract:
edu.stanford.nlp.tagger.maxent.ExtractorCapLCSeen:

#edu/stanford/nlp/tagger/maxent/History/getX:

#edu/stanford/nlp/tagger/maxent/History/toString:

#edu/stanford/nlp/tagger/maxent/History/hashCode:

#edu/stanford/nlp/tagger/maxent/History/equals:
edu.stanford.nlp.tagger.maxent.History:
edu.stanford.nlp.tagger.maxent.TestClassifier$TestSentenceProcessor:

#edu/stanford/nlp/tagger/maxent/FeatureKey/hashCode:

#edu/stanford/nlp/tagger/maxent/FeatureKey/equals:
edu.stanford.nlp.tagger.maxent.FeatureKey:

#edu/stanford/nlp/tagger/maxent/TagCount/<init>:

#edu/stanford/nlp/tagger/maxent/TagCount/save:

#edu/stanford/nlp/tagger/maxent/TagCount/readTagCount:

#edu/stanford/nlp/tagger/maxent/TagCount/get:

#edu/stanford/nlp/tagger/maxent/TagCount/calculateSumCache:

#edu/stanford/nlp/tagger/maxent/TagCount/getFirstTag:
edu.stanford.nlp.tagger.maxent.TagCount:
edu.stanford.nlp.tagger.maxent.TaggerConfig$Mode:

#edu/stanford/nlp/tagger/maxent/RareExtractor/startsUpperCase:

#edu/stanford/nlp/tagger/maxent/RareExtractor/startsLowerCase:

#edu/stanford/nlp/tagger/maxent/RareExtractor/containsDash:

#edu/stanford/nlp/tagger/maxent/RareExtractor/containsNumber:

#edu/stanford/nlp/tagger/maxent/RareExtractor/allNumeric:

#edu/stanford/nlp/tagger/maxent/RareExtractor/allSymbols:

#edu/stanford/nlp/tagger/maxent/RareExtractor/containsLetter:

#edu/stanford/nlp/tagger/maxent/RareExtractor/containsAlphanumeric:

#edu/stanford/nlp/tagger/maxent/RareExtractor/containsUpperCase:

#edu/stanford/nlp/tagger/maxent/RareExtractor/allUpperCase:

#edu/stanford/nlp/tagger/maxent/RareExtractor/noneLowerCase:
edu.stanford.nlp.tagger.maxent.RareExtractor:

#edu/stanford/nlp/tagger/maxent/ExtractorMidSentenceCapC/extract:
edu.stanford.nlp.tagger.maxent.ExtractorMidSentenceCapC:

#edu/stanford/nlp/tagger/maxent/ExtractorCNumber/extract:
edu.stanford.nlp.tagger.maxent.ExtractorCNumber:

#edu/stanford/nlp/tagger/maxent/ExtractorAllCapitalized/extract:
edu.stanford.nlp.tagger.maxent.ExtractorAllCapitalized:
edu.stanford.nlp.tagger.maxent.ExtractorFrenchAdjSuffix:

#edu/stanford/nlp/tagger/maxent/ExtractorDistsim/isLocal:
edu.stanford.nlp.tagger.maxent.ExtractorDistsim:
Warning: Method:edu.stanford.nlp.tagger.maxent.PairsHolder.setSize has incoming edges.

#edu/stanford/nlp/tagger/maxent/PairsHolder/getWord:

#edu/stanford/nlp/tagger/maxent/PairsHolder/getTag:
edu.stanford.nlp.tagger.maxent.PairsHolder:

#edu/stanford/nlp/tagger/maxent/PluralAcronymDetector/pluralAcronym:

#edu/stanford/nlp/tagger/maxent/PluralAcronymDetector/extract:
edu.stanford.nlp.tagger.maxent.PluralAcronymDetector:

#edu/stanford/nlp/tagger/maxent/MaxentTagger/init:

#edu/stanford/nlp/tagger/maxent/MaxentTagger/initDefaultScores:

#edu/stanford/nlp/tagger/maxent/MaxentTagger/getInactiveTagDefaultScore:

#edu/stanford/nlp/tagger/maxent/MaxentTagger/hasApproximateScoring:

#edu/stanford/nlp/tagger/maxent/MaxentTagger/chooseTokenizerFactory:

#edu/stanford/nlp/tagger/maxent/MaxentTagger/readExtractors:

#edu/stanford/nlp/tagger/maxent/MaxentTagger/removeDeadRules:

#edu/stanford/nlp/tagger/maxent/MaxentTagger/simplifyLambda:

#edu/stanford/nlp/tagger/maxent/MaxentTagger/saveModel:

#edu/stanford/nlp/tagger/maxent/MaxentTagger/readModelAndInit:

#edu/stanford/nlp/tagger/maxent/MaxentTagger/readModelAndInit:

#edu/stanford/nlp/tagger/maxent/MaxentTagger/dumpModel:

#edu/stanford/nlp/tagger/maxent/MaxentTagger/isRare:

#edu/stanford/nlp/tagger/maxent/MaxentTagger/process:

#edu/stanford/nlp/tagger/maxent/MaxentTagger/tagCoreLabels:

#edu/stanford/nlp/tagger/maxent/MaxentTagger/lemmatize:

#edu/stanford/nlp/tagger/maxent/MaxentTagger/castCoreLabels:

#edu/stanford/nlp/tagger/maxent/MaxentTagger/tokenizeText:

#edu/stanford/nlp/tagger/maxent/MaxentTagger/runTest:

#edu/stanford/nlp/tagger/maxent/MaxentTagger/trainAndSaveModel:

#edu/stanford/nlp/tagger/maxent/MaxentTagger/getXMLWords:

#edu/stanford/nlp/tagger/maxent/MaxentTagger/getTsvWords:

#edu/stanford/nlp/tagger/maxent/MaxentTagger/tagFromXML:

#edu/stanford/nlp/tagger/maxent/MaxentTagger/tagFromXML:

#edu/stanford/nlp/tagger/maxent/MaxentTagger/tagFromXML:

#edu/stanford/nlp/tagger/maxent/MaxentTagger/runTagger:

#edu/stanford/nlp/tagger/maxent/MaxentTagger/runTagger:

#edu/stanford/nlp/tagger/maxent/MaxentTagger/runTaggerStdin:

#edu/stanford/nlp/tagger/maxent/MaxentTagger/runTaggerSGML:

#edu/stanford/nlp/tagger/maxent/MaxentTagger/runTagger:

#edu/stanford/nlp/tagger/maxent/MaxentTagger/runTagger:

#edu/stanford/nlp/tagger/maxent/MaxentTagger/tagCoreLabelsOrHasWords:

#edu/stanford/nlp/tagger/maxent/MaxentTagger/outputTaggedSentence:

#edu/stanford/nlp/tagger/maxent/MaxentTagger/main:
edu.stanford.nlp.tagger.maxent.MaxentTagger:

#edu/stanford/nlp/tagger/maxent/Distsim/<init>:

#edu/stanford/nlp/tagger/maxent/Distsim/initLexicon:

#edu/stanford/nlp/tagger/maxent/Distsim/getMapping:
edu.stanford.nlp.tagger.maxent.Distsim:
edu.stanford.nlp.tagger.maxent.ExtractorFrames$ExtractorWordTag:

#edu/stanford/nlp/tagger/maxent/ExtractorNumeric/extract:
edu.stanford.nlp.tagger.maxent.ExtractorNumeric:

#edu/stanford/nlp/tagger/maxent/CtbPreDetector/extract:
edu.stanford.nlp.tagger.maxent.CtbPreDetector:

#edu/stanford/nlp/tagger/maxent/CompanyNameDetector/extract:
edu.stanford.nlp.tagger.maxent.CompanyNameDetector:
edu.stanford.nlp.tagger.maxent.ExtractorFrenchVerbSuffix:

#edu/stanford/nlp/tagger/maxent/ExtractorAllCap/extract:
edu.stanford.nlp.tagger.maxent.ExtractorAllCap:
Fail to analyze: ../programs/stanford-corenlp-4.4.0/target/classes/edu/stanford/nlp/tagger/maxent/MaxentTaggerServer.class
edu.stanford.nlp.tagger.maxent.documentation.MulticoreWrapperDemo$1:

#edu/stanford/nlp/tagger/maxent/documentation/TaggerDemo2/main:
edu.stanford.nlp.tagger.maxent.documentation.TaggerDemo2:

#edu/stanford/nlp/tagger/maxent/documentation/MulticoreWrapperDemo/main:
edu.stanford.nlp.tagger.maxent.documentation.MulticoreWrapperDemo:

#edu/stanford/nlp/tagger/maxent/documentation/TaggerDemo/main:
edu.stanford.nlp.tagger.maxent.documentation.TaggerDemo:
edu.stanford.nlp.tagger.common.Tagger:
edu.stanford.nlp.stats.Scorer:
edu.stanford.nlp.stats.EquivalenceClassEval$Factory:
edu.stanford.nlp.stats.Counters$1$1:

#edu/stanford/nlp/stats/Counters/logNormalizeInPlace:

#edu/stanford/nlp/stats/Counters/max:

#edu/stanford/nlp/stats/Counters/asCounter:

#edu/stanford/nlp/stats/Counters/min:

#edu/stanford/nlp/stats/Counters/argmin:

#edu/stanford/nlp/stats/Counters/argmax:

#edu/stanford/nlp/stats/Counters/argmin:

#edu/stanford/nlp/stats/Counters/standardDeviation:

#edu/stanford/nlp/stats/Counters/addInPlace:

#edu/stanford/nlp/stats/Counters/addInPlace:

#edu/stanford/nlp/stats/Counters/addInPlace:

#edu/stanford/nlp/stats/Counters/addInPlace:

#edu/stanford/nlp/stats/Counters/addInPlace:

#edu/stanford/nlp/stats/Counters/addInPlace:

#edu/stanford/nlp/stats/Counters/addInPlace:

#edu/stanford/nlp/stats/Counters/addInPlace:

#edu/stanford/nlp/stats/Counters/addInPlace:

#edu/stanford/nlp/stats/Counters/subtractInPlace:

#edu/stanford/nlp/stats/Counters/subtractInPlace:

#edu/stanford/nlp/stats/Counters/divideInPlace:

#edu/stanford/nlp/stats/Counters/dotProductInPlace:

#edu/stanford/nlp/stats/Counters/divideInPlace:

#edu/stanford/nlp/stats/Counters/multiplyInPlace:

#edu/stanford/nlp/stats/Counters/multiplyInPlace:

#edu/stanford/nlp/stats/Counters/logInPlace:

#edu/stanford/nlp/stats/Counters/deleteOutofRange:

#edu/stanford/nlp/stats/Counters/retainTop:

#edu/stanford/nlp/stats/Counters/retainTopKeyComparable:

#edu/stanford/nlp/stats/Counters/retainBottom:

#edu/stanford/nlp/stats/Counters/retainNonZeros:

#edu/stanford/nlp/stats/Counters/retainAbove:

#edu/stanford/nlp/stats/Counters/retainAbove:

#edu/stanford/nlp/stats/Counters/retainBelow:

#edu/stanford/nlp/stats/Counters/retainMatchingKeys:

#edu/stanford/nlp/stats/Counters/retainKeys:

#edu/stanford/nlp/stats/Counters/removeKeys:

#edu/stanford/nlp/stats/Counters/removeKeys:

#edu/stanford/nlp/stats/Counters/keysAbove:

#edu/stanford/nlp/stats/Counters/keysBelow:

#edu/stanford/nlp/stats/Counters/keysAt:

#edu/stanford/nlp/stats/Counters/transform:

#edu/stanford/nlp/stats/Counters/transformWithValuesAdd:

#edu/stanford/nlp/stats/Counters/toSortedList:

#edu/stanford/nlp/stats/Counters/toRankCounter:

#edu/stanford/nlp/stats/Counters/toTiedRankCounter:

#edu/stanford/nlp/stats/Counters/toDescendingMagnitudeSortedListWithCounts:

#edu/stanford/nlp/stats/Counters/toSortedListWithCounts:

#edu/stanford/nlp/stats/Counters/toSortedListWithCounts:

#edu/stanford/nlp/stats/Counters/toPriorityQueue:

#edu/stanford/nlp/stats/Counters/intersection:

#edu/stanford/nlp/stats/Counters/jaccardCoefficient:

#edu/stanford/nlp/stats/Counters/product:

#edu/stanford/nlp/stats/Counters/dotProduct:

#edu/stanford/nlp/stats/Counters/dotProduct:

#edu/stanford/nlp/stats/Counters/sumEntries:

#edu/stanford/nlp/stats/Counters/add:

#edu/stanford/nlp/stats/Counters/add:

#edu/stanford/nlp/stats/Counters/add:

#edu/stanford/nlp/stats/Counters/optimizedDotProduct:

#edu/stanford/nlp/stats/Counters/getDotProd:

#edu/stanford/nlp/stats/Counters/absoluteDifference:

#edu/stanford/nlp/stats/Counters/division:

#edu/stanford/nlp/stats/Counters/divisionNonNaN:

#edu/stanford/nlp/stats/Counters/entropy:

#edu/stanford/nlp/stats/Counters/crossEntropy:

#edu/stanford/nlp/stats/Counters/klDivergence:

#edu/stanford/nlp/stats/Counters/sumSquares:

#edu/stanford/nlp/stats/Counters/L1Norm:

#edu/stanford/nlp/stats/Counters/saferL2Norm:

#edu/stanford/nlp/stats/Counters/cosine:

#edu/stanford/nlp/stats/Counters/average:

#edu/stanford/nlp/stats/Counters/linearCombination:

#edu/stanford/nlp/stats/Counters/hIndex:

#edu/stanford/nlp/stats/Counters/perturbCounts:

#edu/stanford/nlp/stats/Counters/printCounterComparison:

#edu/stanford/nlp/stats/Counters/getCountCounts:

#edu/stanford/nlp/stats/Counters/scale:

#edu/stanford/nlp/stats/Counters/tfLogScale:

#edu/stanford/nlp/stats/Counters/printCounterSortedByKeys:

#edu/stanford/nlp/stats/Counters/loadIntoCounter:

#edu/stanford/nlp/stats/Counters/saveCounter:

#edu/stanford/nlp/stats/Counters/loadInto2DCounter:

#edu/stanford/nlp/stats/Counters/loadIncInto2DCounter:

#edu/stanford/nlp/stats/Counters/save2DCounter:

#edu/stanford/nlp/stats/Counters/save2DCounterSorted:

#edu/stanford/nlp/stats/Counters/serializeStringCounter:

#edu/stanford/nlp/stats/Counters/deserializeStringCounter:

#edu/stanford/nlp/stats/Counters/toSortedString:

#edu/stanford/nlp/stats/Counters/toSortedByKeysString:

#edu/stanford/nlp/stats/Counters/toString:

#edu/stanford/nlp/stats/Counters/toString:

#edu/stanford/nlp/stats/Counters/toBiggestValuesFirstString:

#edu/stanford/nlp/stats/Counters/toBiggestValuesFirstString:

#edu/stanford/nlp/stats/Counters/toVerticalString:

#edu/stanford/nlp/stats/Counters/restrictedArgMax:

#edu/stanford/nlp/stats/Counters/toCounter:

#edu/stanford/nlp/stats/Counters/toCounter:

#edu/stanford/nlp/stats/Counters/asArray:

#edu/stanford/nlp/stats/Counters/asArray:

#edu/stanford/nlp/stats/Counters/scale:

#edu/stanford/nlp/stats/Counters/sample:

#edu/stanford/nlp/stats/Counters/powNormalized:

#edu/stanford/nlp/stats/Counters/pow:

#edu/stanford/nlp/stats/Counters/powInPlace:

#edu/stanford/nlp/stats/Counters/exp:

#edu/stanford/nlp/stats/Counters/expInPlace:

#edu/stanford/nlp/stats/Counters/diff:

#edu/stanford/nlp/stats/Counters/equals:

#edu/stanford/nlp/stats/Counters/asCounter:

#edu/stanford/nlp/stats/Counters/fromMap:

#edu/stanford/nlp/stats/Counters/fromMap:

#edu/stanford/nlp/stats/Counters/isUniformDistribution:

#edu/stanford/nlp/stats/Counters/maxInPlace:

#edu/stanford/nlp/stats/Counters/minInPlace:

#edu/stanford/nlp/stats/Counters/retainTopMass:

#edu/stanford/nlp/stats/Counters/divideInPlace:

#edu/stanford/nlp/stats/Counters/ensureKeys:

#edu/stanford/nlp/stats/Counters/topKeys:

#edu/stanford/nlp/stats/Counters/topKeysWithCounts:

#edu/stanford/nlp/stats/Counters/getFCounter:

#edu/stanford/nlp/stats/Counters/transformValuesInPlace:

#edu/stanford/nlp/stats/Counters/getCounts:

#edu/stanford/nlp/stats/Counters/retainKeys:

#edu/stanford/nlp/stats/Counters/flatten:

#edu/stanford/nlp/stats/Counters/isFinite:

#edu/stanford/nlp/stats/Counters/lambda$toComparator$4:

#edu/stanford/nlp/stats/Counters/lambda$toComparatorWithKeys$2:
edu.stanford.nlp.stats.Counters:
edu.stanford.nlp.stats.TwoDimensionalCounterInterface:

#edu/stanford/nlp/stats/Distribution$DynamicDistribution/sampleFrom:
edu.stanford.nlp.stats.Distribution$DynamicDistribution:
edu.stanford.nlp.stats.Counters$2$2:

#edu/stanford/nlp/stats/MultiClassChunkEvalStats/getTypeLabel:

#edu/stanford/nlp/stats/MultiClassChunkEvalStats/markBoundary:

#edu/stanford/nlp/stats/MultiClassChunkEvalStats/addGuess:

#edu/stanford/nlp/stats/MultiClassChunkEvalStats/main:
edu.stanford.nlp.stats.MultiClassChunkEvalStats:
edu.stanford.nlp.stats.ProbabilityDistribution:

#edu/stanford/nlp/stats/MultiClassPrecisionRecallExtendedStats/score:

#edu/stanford/nlp/stats/MultiClassPrecisionRecallExtendedStats/clearCounts:

#edu/stanford/nlp/stats/MultiClassPrecisionRecallExtendedStats/finalizeCounts:

#edu/stanford/nlp/stats/MultiClassPrecisionRecallExtendedStats/addGuess:

#edu/stanford/nlp/stats/MultiClassPrecisionRecallExtendedStats/addGuesses:

#edu/stanford/nlp/stats/MultiClassPrecisionRecallExtendedStats/score:

#edu/stanford/nlp/stats/MultiClassPrecisionRecallExtendedStats/getConllEvalString:

#edu/stanford/nlp/stats/MultiClassPrecisionRecallExtendedStats/getConllEvalString:
edu.stanford.nlp.stats.MultiClassPrecisionRecallExtendedStats:

#edu/stanford/nlp/stats/Dirichlet/checkParameters:

#edu/stanford/nlp/stats/Dirichlet/drawSample:

#edu/stanford/nlp/stats/Dirichlet/drawSample:

#edu/stanford/nlp/stats/Dirichlet/unnormalizedLogProbabilityOf:
edu.stanford.nlp.stats.Dirichlet:
edu.stanford.nlp.stats.IntCounter$2:
edu.stanford.nlp.stats.Counters$2$3$1:
edu.stanford.nlp.stats.IntCounter$3$1:

#edu/stanford/nlp/stats/Counters$NaturalComparator/compare:
edu.stanford.nlp.stats.Counters$NaturalComparator:

#edu/stanford/nlp/stats/DataSeries$FunctionDataSeries/get:
edu.stanford.nlp.stats.DataSeries$FunctionDataSeries:
edu.stanford.nlp.stats.Counters$2$4:

#edu/stanford/nlp/stats/AccuracyStats/score:

#edu/stanford/nlp/stats/AccuracyStats/getDescription:

#edu/stanford/nlp/stats/AccuracyStats/toStringArr:
edu.stanford.nlp.stats.AccuracyStats:

#edu/stanford/nlp/stats/DataSeries$ArrayDataSeries/setData:

#edu/stanford/nlp/stats/DataSeries$ArrayDataSeries/get:

#edu/stanford/nlp/stats/DataSeries$ArrayDataSeries/set:
edu.stanford.nlp.stats.DataSeries$ArrayDataSeries:
edu.stanford.nlp.stats.Counters$2$3:

#edu/stanford/nlp/stats/IntCounter$NaturalComparator/compare:
edu.stanford.nlp.stats.IntCounter$NaturalComparator:

#edu/stanford/nlp/stats/EquivalenceClassEval/eval:

#edu/stanford/nlp/stats/EquivalenceClassEval/evalPrecision:

#edu/stanford/nlp/stats/EquivalenceClassEval/removeItem:

#edu/stanford/nlp/stats/EquivalenceClassEval/lastF1:

#edu/stanford/nlp/stats/EquivalenceClassEval/f1:

#edu/stanford/nlp/stats/EquivalenceClassEval/f1:

#edu/stanford/nlp/stats/EquivalenceClassEval/percentage:

#edu/stanford/nlp/stats/EquivalenceClassEval/displayHelper:

#edu/stanford/nlp/stats/EquivalenceClassEval/getPads:
edu.stanford.nlp.stats.EquivalenceClassEval:
edu.stanford.nlp.stats.Counters$2$1$1:
edu.stanford.nlp.stats.Distribution$1:
edu.stanford.nlp.stats.IntCounter$1$1:

#edu/stanford/nlp/stats/EquivalenceClassEval$Eval/eval:

#edu/stanford/nlp/stats/EquivalenceClassEval$Eval/evalPrecision:

#edu/stanford/nlp/stats/EquivalenceClassEval$Eval/evalRecall:
edu.stanford.nlp.stats.EquivalenceClassEval$Eval:
edu.stanford.nlp.stats.ConjugatePrior:
edu.stanford.nlp.stats.Counters$2$1:

#edu/stanford/nlp/stats/Gamma/drawSample:

#edu/stanford/nlp/stats/Gamma/equals:
edu.stanford.nlp.stats.Gamma:
edu.stanford.nlp.stats.EquivalenceClassEval$EqualityChecker:
edu.stanford.nlp.stats.IntCounter$1:

#edu/stanford/nlp/stats/DataSeries$AverageDataSeries/<init>:

#edu/stanford/nlp/stats/DataSeries$AverageDataSeries/name:

#edu/stanford/nlp/stats/DataSeries$AverageDataSeries/get:

#edu/stanford/nlp/stats/DataSeries$AverageDataSeries/size:

#edu/stanford/nlp/stats/DataSeries$AverageDataSeries/domain:
edu.stanford.nlp.stats.DataSeries$AverageDataSeries:
edu.stanford.nlp.stats.ClassicCounter$2$1$1:
edu.stanford.nlp.stats.IntCounter$3:
edu.stanford.nlp.stats.ClassicCounter$ClassicCounterFactory:

#edu/stanford/nlp/stats/Distributions/getSetOfAllKeys:

#edu/stanford/nlp/stats/Distributions/overlap:

#edu/stanford/nlp/stats/Distributions/weightedAverage:

#edu/stanford/nlp/stats/Distributions/klDivergence:
edu.stanford.nlp.stats.Distributions:

#edu/stanford/nlp/stats/GeneralizedCounter$CounterView/getCount:

#edu/stanford/nlp/stats/GeneralizedCounter$CounterView/equals:

#edu/stanford/nlp/stats/GeneralizedCounter$CounterView/hashCode:

#edu/stanford/nlp/stats/GeneralizedCounter$CounterView/toString:
edu.stanford.nlp.stats.GeneralizedCounter$CounterView:
edu.stanford.nlp.stats.Counters$1$1$1:

#edu/stanford/nlp/stats/MultiClassPrecisionRecallStats/score:

#edu/stanford/nlp/stats/MultiClassPrecisionRecallStats/getPrecisionInfo:

#edu/stanford/nlp/stats/MultiClassPrecisionRecallStats/getPrecisionInfo:

#edu/stanford/nlp/stats/MultiClassPrecisionRecallStats/getRecallInfo:

#edu/stanford/nlp/stats/MultiClassPrecisionRecallStats/getRecallInfo:

#edu/stanford/nlp/stats/MultiClassPrecisionRecallStats/getDescription:
edu.stanford.nlp.stats.MultiClassPrecisionRecallStats:
edu.stanford.nlp.stats.MultiClassPrecisionRecallExtendedStats$MultiClassStringLabelStats:
edu.stanford.nlp.stats.IntCounter$1$1$1:

#edu/stanford/nlp/stats/Counters$2$1$1$1/setValue:
edu.stanford.nlp.stats.Counters$2$1$1$1:
edu.stanford.nlp.stats.GeneralizedCounter$1:

#edu/stanford/nlp/stats/PrecisionRecallStats/<init>:

#edu/stanford/nlp/stats/PrecisionRecallStats/getPrecision:

#edu/stanford/nlp/stats/PrecisionRecallStats/getRecall:

#edu/stanford/nlp/stats/PrecisionRecallStats/getFMeasure:
edu.stanford.nlp.stats.PrecisionRecallStats:

#edu/stanford/nlp/stats/Counters$2/equals:

#edu/stanford/nlp/stats/Counters$2/getCount:

#edu/stanford/nlp/stats/Counters$2/remove:

#edu/stanford/nlp/stats/Counters$2/setCount:
edu.stanford.nlp.stats.Counters$2:

#edu/stanford/nlp/stats/GeneralizedCounter/entrySet:

#edu/stanford/nlp/stats/GeneralizedCounter/lowestLevelCounterEntrySet:

#edu/stanford/nlp/stats/GeneralizedCounter/totalCount:

#edu/stanford/nlp/stats/GeneralizedCounter/keySet:

#edu/stanford/nlp/stats/GeneralizedCounter/getCount:

#edu/stanford/nlp/stats/GeneralizedCounter/getCount:

#edu/stanford/nlp/stats/GeneralizedCounter/getCount:

#edu/stanford/nlp/stats/GeneralizedCounter/getCounts:

#edu/stanford/nlp/stats/GeneralizedCounter/conditionalizeHelper:

#edu/stanford/nlp/stats/GeneralizedCounter/conditionalize:

#edu/stanford/nlp/stats/GeneralizedCounter/conditionalizeOnce:

#edu/stanford/nlp/stats/GeneralizedCounter/incrementCount:

#edu/stanford/nlp/stats/GeneralizedCounter/incrementCount:

#edu/stanford/nlp/stats/GeneralizedCounter/incrementCount2D:

#edu/stanford/nlp/stats/GeneralizedCounter/incrementCount3D:

#edu/stanford/nlp/stats/GeneralizedCounter/incrementCount1D:

#edu/stanford/nlp/stats/GeneralizedCounter/containsKey:

#edu/stanford/nlp/stats/GeneralizedCounter/reverseKeys:

#edu/stanford/nlp/stats/GeneralizedCounter/oneDimensionalCounterView:

#edu/stanford/nlp/stats/GeneralizedCounter/toString:

#edu/stanford/nlp/stats/GeneralizedCounter/printKeySet:

#edu/stanford/nlp/stats/GeneralizedCounter/arrayPrintDouble:

#edu/stanford/nlp/stats/GeneralizedCounter/prettyPrint:
edu.stanford.nlp.stats.GeneralizedCounter:
edu.stanford.nlp.stats.ClassicCounter$1$1:

#edu/stanford/nlp/stats/TwoDimensionalCounter/equals:

#edu/stanford/nlp/stats/TwoDimensionalCounter/getCounter:

#edu/stanford/nlp/stats/TwoDimensionalCounter/size:

#edu/stanford/nlp/stats/TwoDimensionalCounter/containsKey:

#edu/stanford/nlp/stats/TwoDimensionalCounter/remove:

#edu/stanford/nlp/stats/TwoDimensionalCounter/getCount:

#edu/stanford/nlp/stats/TwoDimensionalCounter/setCounter:

#edu/stanford/nlp/stats/TwoDimensionalCounter/reverseIndexOrder:

#edu/stanford/nlp/stats/TwoDimensionalCounter/toString:

#edu/stanford/nlp/stats/TwoDimensionalCounter/toMatrix:

#edu/stanford/nlp/stats/TwoDimensionalCounter/toCSVString:

#edu/stanford/nlp/stats/TwoDimensionalCounter/secondKeySet:

#edu/stanford/nlp/stats/TwoDimensionalCounter/flatten:

#edu/stanford/nlp/stats/TwoDimensionalCounter/addAll:

#edu/stanford/nlp/stats/TwoDimensionalCounter/subtractAll:

#edu/stanford/nlp/stats/TwoDimensionalCounter/sumInnerCounter:

#edu/stanford/nlp/stats/TwoDimensionalCounter/removeZeroCounts:

#edu/stanford/nlp/stats/TwoDimensionalCounter/remove:

#edu/stanford/nlp/stats/TwoDimensionalCounter/clean:

#edu/stanford/nlp/stats/TwoDimensionalCounter/recomputeTotal:
edu.stanford.nlp.stats.TwoDimensionalCounter:
edu.stanford.nlp.stats.Counter:

#edu/stanford/nlp/stats/IntCounter/totalIntCount:

#edu/stanford/nlp/stats/IntCounter/getIntCount:

#edu/stanford/nlp/stats/IntCounter/setCount:

#edu/stanford/nlp/stats/IntCounter/setCounts:

#edu/stanford/nlp/stats/IntCounter/incrementCount:

#edu/stanford/nlp/stats/IntCounter/incrementCounts:

#edu/stanford/nlp/stats/IntCounter/addAll:

#edu/stanford/nlp/stats/IntCounter/subtractAll:

#edu/stanford/nlp/stats/IntCounter/remove:

#edu/stanford/nlp/stats/IntCounter/removeAll:

#edu/stanford/nlp/stats/IntCounter/isEmpty:

#edu/stanford/nlp/stats/IntCounter/equals:

#edu/stanford/nlp/stats/IntCounter/toString:

#edu/stanford/nlp/stats/IntCounter/toString:

#edu/stanford/nlp/stats/IntCounter/max:

#edu/stanford/nlp/stats/IntCounter/min:

#edu/stanford/nlp/stats/IntCounter/argmax:

#edu/stanford/nlp/stats/IntCounter/argmin:

#edu/stanford/nlp/stats/IntCounter/keysAbove:

#edu/stanford/nlp/stats/IntCounter/keysBelow:

#edu/stanford/nlp/stats/IntCounter/keysAt:

#edu/stanford/nlp/stats/IntCounter/lambda$removeZeroCounts$0:
edu.stanford.nlp.stats.IntCounter:
edu.stanford.nlp.stats.Counters$2$4$1:
edu.stanford.nlp.stats.EquivalenceClassEval$1:

#edu/stanford/nlp/stats/GeneralizedCounter$Entry/equals:

#edu/stanford/nlp/stats/GeneralizedCounter$Entry/hashCode:
edu.stanford.nlp.stats.GeneralizedCounter$Entry:
edu.stanford.nlp.stats.ClassicCounter$2:

#edu/stanford/nlp/stats/Distribution/getDistributionFromPartiallySpecifiedCounter:

#edu/stanford/nlp/stats/Distribution/getUniformDistribution:

#edu/stanford/nlp/stats/Distribution/getPerturbedUniformDistribution:

#edu/stanford/nlp/stats/Distribution/getPerturbedDistribution:

#edu/stanford/nlp/stats/Distribution/getDistributionWithReservedMass:

#edu/stanford/nlp/stats/Distribution/getDistributionFromLogValues:

#edu/stanford/nlp/stats/Distribution/absolutelyDiscountedDistribution:

#edu/stanford/nlp/stats/Distribution/laplaceSmoothedDistribution:

#edu/stanford/nlp/stats/Distribution/laplaceWithExplicitUnknown:

#edu/stanford/nlp/stats/Distribution/goodTuringSmoothedCounter:

#edu/stanford/nlp/stats/Distribution/goodTuringWithExplicitUnknown:

#edu/stanford/nlp/stats/Distribution/getCountCounts:

#edu/stanford/nlp/stats/Distribution/simpleGoodTuring:

#edu/stanford/nlp/stats/Distribution/validateCounter:

#edu/stanford/nlp/stats/Distribution/collectCountCounts:

#edu/stanford/nlp/stats/Distribution/countCounts2IntArrays:

#edu/stanford/nlp/stats/Distribution/distributionWithDirichletPrior:

#edu/stanford/nlp/stats/Distribution/dynamicCounterWithDirichletPrior:

#edu/stanford/nlp/stats/Distribution/distributionFromLogisticCounter:

#edu/stanford/nlp/stats/Distribution/probabilityOf:

#edu/stanford/nlp/stats/Distribution/addToKeySet:

#edu/stanford/nlp/stats/Distribution/equals:

#edu/stanford/nlp/stats/Distribution/equals:

#edu/stanford/nlp/stats/Distribution/toString:

#edu/stanford/nlp/stats/Distribution/main:

#edu/stanford/nlp/stats/Distribution/lambda$toString$0:
edu.stanford.nlp.stats.Distribution:
edu.stanford.nlp.stats.MultiClassPrecisionRecallExtendedStats$StringStringConverter:

#edu/stanford/nlp/stats/TwoDimensionalIntCounter/equals:

#edu/stanford/nlp/stats/TwoDimensionalIntCounter/getCounter:

#edu/stanford/nlp/stats/TwoDimensionalIntCounter/size:

#edu/stanford/nlp/stats/TwoDimensionalIntCounter/containsKey:

#edu/stanford/nlp/stats/TwoDimensionalIntCounter/remove:

#edu/stanford/nlp/stats/TwoDimensionalIntCounter/getCount:

#edu/stanford/nlp/stats/TwoDimensionalIntCounter/totalCounts:

#edu/stanford/nlp/stats/TwoDimensionalIntCounter/reverseIndexOrder:

#edu/stanford/nlp/stats/TwoDimensionalIntCounter/toString:

#edu/stanford/nlp/stats/TwoDimensionalIntCounter/toMatrix:

#edu/stanford/nlp/stats/TwoDimensionalIntCounter/toCSVString:

#edu/stanford/nlp/stats/TwoDimensionalIntCounter/toCSVString:

#edu/stanford/nlp/stats/TwoDimensionalIntCounter/secondKeySet:

#edu/stanford/nlp/stats/TwoDimensionalIntCounter/flatten:

#edu/stanford/nlp/stats/TwoDimensionalIntCounter/addAll:

#edu/stanford/nlp/stats/TwoDimensionalIntCounter/subtractAll:

#edu/stanford/nlp/stats/TwoDimensionalIntCounter/removeZeroCounts:

#edu/stanford/nlp/stats/TwoDimensionalIntCounter/remove:

#edu/stanford/nlp/stats/TwoDimensionalIntCounter/clean:
edu.stanford.nlp.stats.TwoDimensionalIntCounter:

#edu/stanford/nlp/stats/EquivalenceClassEval$Eval$CollectionContainsChecker/contained:
edu.stanford.nlp.stats.EquivalenceClassEval$Eval$CollectionContainsChecker:
edu.stanford.nlp.stats.DataSeries:

#edu/stanford/nlp/stats/MultiClassAccuracyStats/score:

#edu/stanford/nlp/stats/MultiClassAccuracyStats/confidenceWeightedAccuracy:

#edu/stanford/nlp/stats/MultiClassAccuracyStats/initMC:

#edu/stanford/nlp/stats/MultiClassAccuracyStats/numCorrect:

#edu/stanford/nlp/stats/MultiClassAccuracyStats/getAccCoverage:

#edu/stanford/nlp/stats/MultiClassAccuracyStats/getDescription:

#edu/stanford/nlp/stats/MultiClassAccuracyStats/toString:
edu.stanford.nlp.stats.MultiClassAccuracyStats:

#edu/stanford/nlp/stats/DataSeries$ListDataSeries/setData:

#edu/stanford/nlp/stats/DataSeries$ListDataSeries/get:

#edu/stanford/nlp/stats/DataSeries$ListDataSeries/set:

#edu/stanford/nlp/stats/DataSeries$ListDataSeries/readDataSeries:

#edu/stanford/nlp/stats/DataSeries$ListDataSeries/main:

#edu/stanford/nlp/stats/DataSeries$ListDataSeries/demo1:
edu.stanford.nlp.stats.DataSeries$ListDataSeries:
edu.stanford.nlp.stats.EquivalenceClasser:

#edu/stanford/nlp/stats/ClassicCounter/<init>:

#edu/stanford/nlp/stats/ClassicCounter/getCount:

#edu/stanford/nlp/stats/ClassicCounter/setCount:

#edu/stanford/nlp/stats/ClassicCounter/incrementCount:

#edu/stanford/nlp/stats/ClassicCounter/logIncrementCount:

#edu/stanford/nlp/stats/ClassicCounter/remove:

#edu/stanford/nlp/stats/ClassicCounter/mutableRemove:

#edu/stanford/nlp/stats/ClassicCounter/removeAll:

#edu/stanford/nlp/stats/ClassicCounter/isEmpty:

#edu/stanford/nlp/stats/ClassicCounter/equals:

#edu/stanford/nlp/stats/ClassicCounter/valueOfIgnoreComments:

#edu/stanford/nlp/stats/ClassicCounter/fromString:
edu.stanford.nlp.stats.ClassicCounter:

#edu/stanford/nlp/stats/DirichletProcess/drawSample:

#edu/stanford/nlp/stats/DirichletProcess/numOccurances:

#edu/stanford/nlp/stats/DirichletProcess/probabilityOf:
edu.stanford.nlp.stats.DirichletProcess:

#edu/stanford/nlp/stats/SimpleGoodTuring/<init>:

#edu/stanford/nlp/stats/SimpleGoodTuring/compute:

#edu/stanford/nlp/stats/SimpleGoodTuring/row:

#edu/stanford/nlp/stats/SimpleGoodTuring/findBestFit:

#edu/stanford/nlp/stats/SimpleGoodTuring/print:

#edu/stanford/nlp/stats/SimpleGoodTuring/validate:

#edu/stanford/nlp/stats/SimpleGoodTuring/readInput:

#edu/stanford/nlp/stats/SimpleGoodTuring/integerList2IntArray:
edu.stanford.nlp.stats.SimpleGoodTuring:
edu.stanford.nlp.stats.Counters$1$1$1$1:
edu.stanford.nlp.stats.Counters$1:

#edu/stanford/nlp/stats/Multinomial/<init>:

#edu/stanford/nlp/stats/Multinomial/probabilityOf:

#edu/stanford/nlp/stats/Multinomial/logProbabilityOf:

#edu/stanford/nlp/stats/Multinomial/drawSample:

#edu/stanford/nlp/stats/Multinomial/equals:

#edu/stanford/nlp/stats/Multinomial/hashCode:
edu.stanford.nlp.stats.Multinomial:

#edu/stanford/nlp/stats/DataSeries$AbstractDataSeries/toListPairDouble:
edu.stanford.nlp.stats.DataSeries$AbstractDataSeries:

#edu/stanford/nlp/stats/ClassicCounter$1/contains:
edu.stanford.nlp.stats.ClassicCounter$1:
edu.stanford.nlp.stats.Counters$3:

#edu/stanford/nlp/stats/GeneralizedCounter$OneDimensionalCounterView/equals:

#edu/stanford/nlp/stats/GeneralizedCounter$OneDimensionalCounterView/hashCode:

#edu/stanford/nlp/stats/GeneralizedCounter$OneDimensionalCounterView/toString:
edu.stanford.nlp.stats.GeneralizedCounter$OneDimensionalCounterView:
edu.stanford.nlp.stats.Sampler:
edu.stanford.nlp.stats.EquivalenceClassEval$2:
edu.stanford.nlp.stats.ClassicCounter$2$1:
edu.stanford.nlp.stats.AbstractCounter:

#edu/stanford/nlp/international/Language/compatibleWith:
edu.stanford.nlp.international.Language:
edu.stanford.nlp.international.Language$1:

#edu/stanford/nlp/international/german/scripts/GermanTreebankTokenReport/main:
edu.stanford.nlp.international.german.scripts.GermanTreebankTokenReport:

#edu/stanford/nlp/international/german/scripts/GermanTreebankUDUpdater/splitHyphenatedToken:

#edu/stanford/nlp/international/german/scripts/GermanTreebankUDUpdater/main:
edu.stanford.nlp.international.german.scripts.GermanTreebankUDUpdater:

#edu/stanford/nlp/international/german/process/GermanTokenizerPostProcessor/condenseUmlauts:

#edu/stanford/nlp/international/german/process/GermanTokenizerPostProcessor/condenseUmlauts:

#edu/stanford/nlp/international/german/process/GermanTokenizerPostProcessor/process:

#edu/stanford/nlp/international/german/process/GermanTokenizerPostProcessor/lambda$new$0:
edu.stanford.nlp.international.german.process.GermanTokenizerPostProcessor:

#edu/stanford/nlp/international/morph/AddMorphoAnnotations/main:
edu.stanford.nlp.international.morph.AddMorphoAnnotations:
edu.stanford.nlp.international.morph.MorphoFeatureSpecification$MorphoFeatureType:

#edu/stanford/nlp/international/morph/AddMorphoAnnotations$YieldIterator/<init>:

#edu/stanford/nlp/international/morph/AddMorphoAnnotations$YieldIterator/primeNext:

#edu/stanford/nlp/international/morph/AddMorphoAnnotations$YieldIterator/hasNext:

#edu/stanford/nlp/international/morph/AddMorphoAnnotations$YieldIterator/next:
edu.stanford.nlp.international.morph.AddMorphoAnnotations$YieldIterator:

#edu/stanford/nlp/international/morph/MorphoFeatureSpecification/splitMorphString:
edu.stanford.nlp.international.morph.MorphoFeatureSpecification:

#edu/stanford/nlp/international/morph/MorphoFeatures/<init>:

#edu/stanford/nlp/international/morph/MorphoFeatures/getValue:

#edu/stanford/nlp/international/morph/MorphoFeatures/numFeatureMatches:

#edu/stanford/nlp/international/morph/MorphoFeatures/fromTagString:

#edu/stanford/nlp/international/morph/MorphoFeatures/toString:
edu.stanford.nlp.international.morph.MorphoFeatures:

#edu/stanford/nlp/international/french/FrenchUnknownWordSignatures/nounSuffix:

#edu/stanford/nlp/international/french/FrenchUnknownWordSignatures/adjSuffix:

#edu/stanford/nlp/international/french/FrenchUnknownWordSignatures/hasDigit:

#edu/stanford/nlp/international/french/FrenchUnknownWordSignatures/isDigit:

#edu/stanford/nlp/international/french/FrenchUnknownWordSignatures/verbSuffix:

#edu/stanford/nlp/international/french/FrenchUnknownWordSignatures/possiblePlural:

#edu/stanford/nlp/international/french/FrenchUnknownWordSignatures/advSuffix:

#edu/stanford/nlp/international/french/FrenchUnknownWordSignatures/hasPunc:

#edu/stanford/nlp/international/french/FrenchUnknownWordSignatures/isPunc:

#edu/stanford/nlp/international/french/FrenchUnknownWordSignatures/isAllCaps:

#edu/stanford/nlp/international/french/FrenchUnknownWordSignatures/isCapitalized:
edu.stanford.nlp.international.french.FrenchUnknownWordSignatures:

#edu/stanford/nlp/international/french/FrenchMorphoFeatureSpecification/getValues:

#edu/stanford/nlp/international/french/FrenchMorphoFeatureSpecification/strToFeatures:

#edu/stanford/nlp/international/french/FrenchMorphoFeatureSpecification/addPhiFeatures:

#edu/stanford/nlp/international/french/FrenchMorphoFeatureSpecification/main:
edu.stanford.nlp.international.french.FrenchMorphoFeatureSpecification:

#edu/stanford/nlp/international/french/pipeline/MWEPreprocessor$ManualUWModel/getTag:
edu.stanford.nlp.international.french.pipeline.MWEPreprocessor$ManualUWModel:

#edu/stanford/nlp/international/french/pipeline/MWEPreprocessor/printCounter:

#edu/stanford/nlp/international/french/pipeline/MWEPreprocessor/updateTagger:

#edu/stanford/nlp/international/french/pipeline/MWEPreprocessor/traverseAndFix:

#edu/stanford/nlp/international/french/pipeline/MWEPreprocessor/resolveDummyTags:

#edu/stanford/nlp/international/french/pipeline/MWEPreprocessor/countMWEStatistics:

#edu/stanford/nlp/international/french/pipeline/MWEPreprocessor/main:
edu.stanford.nlp.international.french.pipeline.MWEPreprocessor:

#edu/stanford/nlp/international/french/pipeline/FTBDataset/getCanditoTreeID:

#edu/stanford/nlp/international/french/pipeline/FTBDataset/build:

#edu/stanford/nlp/international/french/pipeline/FTBDataset/preprocessMWEs:

#edu/stanford/nlp/international/french/pipeline/FTBDataset/setOptions:

#edu/stanford/nlp/international/french/pipeline/FTBDataset/makeSplitSet:
edu.stanford.nlp.international.french.pipeline.FTBDataset:
edu.stanford.nlp.international.french.pipeline.FTBCorrectorVisitor:

#edu/stanford/nlp/international/french/pipeline/FTBCorrector/loadOps:

#edu/stanford/nlp/international/french/pipeline/FTBCorrector/continuing:

#edu/stanford/nlp/international/french/pipeline/FTBCorrector/main:
edu.stanford.nlp.international.french.pipeline.FTBCorrector:

#edu/stanford/nlp/international/french/scripts/MWEFrequencyDist/main:
edu.stanford.nlp.international.french.scripts.MWEFrequencyDist:

#edu/stanford/nlp/international/french/scripts/FrenchTreebankUDUpdater/fixNPWithHyphen:

#edu/stanford/nlp/international/french/scripts/FrenchTreebankUDUpdater/fixMWNWithHyphen:

#edu/stanford/nlp/international/french/scripts/FrenchTreebankUDUpdater/fixPREFEndingWithHyphen:

#edu/stanford/nlp/international/french/scripts/FrenchTreebankUDUpdater/main:
edu.stanford.nlp.international.french.scripts.FrenchTreebankUDUpdater:

#edu/stanford/nlp/international/french/scripts/FrenchTreebankTokenReport/main:
edu.stanford.nlp.international.french.scripts.FrenchTreebankTokenReport:

#edu/stanford/nlp/international/french/scripts/SplitCanditoTrees/readIds:

#edu/stanford/nlp/international/french/scripts/SplitCanditoTrees/readTrees:

#edu/stanford/nlp/international/french/scripts/SplitCanditoTrees/preprocessMWEs:

#edu/stanford/nlp/international/french/scripts/SplitCanditoTrees/mungeLeaves:

#edu/stanford/nlp/international/french/scripts/SplitCanditoTrees/replacePOSTags:

#edu/stanford/nlp/international/french/scripts/SplitCanditoTrees/outputSplits:

#edu/stanford/nlp/international/french/scripts/SplitCanditoTrees/treeToMorfette:

#edu/stanford/nlp/international/french/scripts/SplitCanditoTrees/main:
edu.stanford.nlp.international.french.scripts.SplitCanditoTrees:

#edu/stanford/nlp/international/french/scripts/MungeTreesWithMorfetteAnalyses$MorfetteFileIterator/primeNext:

#edu/stanford/nlp/international/french/scripts/MungeTreesWithMorfetteAnalyses$MorfetteFileIterator/hasNext:

#edu/stanford/nlp/international/french/scripts/MungeTreesWithMorfetteAnalyses$MorfetteFileIterator/next:
edu.stanford.nlp.international.french.scripts.MungeTreesWithMorfetteAnalyses$MorfetteFileIterator:

#edu/stanford/nlp/international/french/scripts/MungeTreesWithMorfetteAnalyses/main:

#edu/stanford/nlp/international/french/scripts/MungeTreesWithMorfetteAnalyses/getLemma:
edu.stanford.nlp.international.french.scripts.MungeTreesWithMorfetteAnalyses:

#edu/stanford/nlp/international/french/scripts/TreeToMorfette/main:
edu.stanford.nlp.international.french.scripts.TreeToMorfette:

#edu/stanford/nlp/international/french/process/FrenchTokenizer$FrenchTokenizerFactory/setOptions:
edu.stanford.nlp.international.french.process.FrenchTokenizer$FrenchTokenizerFactory:
edu.stanford.nlp.international.french.process.FrenchTokenizer$1:
edu.stanford.nlp.international.french.process.FrenchLexer$1:
edu.stanford.nlp.international.french.process.FrenchLexer$UntokenizableOptions:

#edu/stanford/nlp/international/french/process/FrenchTokenizer/<init>:

#edu/stanford/nlp/international/french/process/FrenchTokenizer/getNext:

#edu/stanford/nlp/international/french/process/FrenchTokenizer/processCompound:

#edu/stanford/nlp/international/french/process/FrenchTokenizer/processContraction:

#edu/stanford/nlp/international/french/process/FrenchTokenizer/main:
edu.stanford.nlp.international.french.process.FrenchTokenizer:
Warning: Method:edu.stanford.nlp.international.french.process.FrenchLexer.zzUnpackcmap_top has auto edges.
Warning: Method:edu.stanford.nlp.international.french.process.FrenchLexer.zzUnpackcmap_blocks has auto edges.
Warning: Method:edu.stanford.nlp.international.french.process.FrenchLexer.zzUnpackAction has auto edges.

#edu/stanford/nlp/international/french/process/FrenchLexer/zzUnpackRowMap:
Warning: Method:edu.stanford.nlp.international.french.process.FrenchLexer.zzUnpackTrans has auto edges.
Warning: Method:edu.stanford.nlp.international.french.process.FrenchLexer.zzUnpackAttribute has auto edges.

#edu/stanford/nlp/international/french/process/FrenchLexer/<init>:

#edu/stanford/nlp/international/french/process/FrenchLexer/getNext:

#edu/stanford/nlp/international/french/process/FrenchLexer/getNormalizedAmpNext:

#edu/stanford/nlp/international/french/process/FrenchLexer/zzCMap:

#edu/stanford/nlp/international/french/process/FrenchLexer/zzRefill:

#edu/stanford/nlp/international/french/process/FrenchLexer/yyclose:

#edu/stanford/nlp/international/french/process/FrenchLexer/yyreset:

#edu/stanford/nlp/international/french/process/FrenchLexer/yypushback:

#edu/stanford/nlp/international/french/process/FrenchLexer/next:
edu.stanford.nlp.international.french.process.FrenchLexer:
edu.stanford.nlp.international.spanish.SpanishVerbStripper$StrippedVerb:

#edu/stanford/nlp/international/spanish/SpanishVerbStripper/setupDictionary:

#edu/stanford/nlp/international/spanish/SpanishVerbStripper/getInstance:

#edu/stanford/nlp/international/spanish/SpanishVerbStripper/isStrippable:

#edu/stanford/nlp/international/spanish/SpanishVerbStripper/removeAccents:

#edu/stanford/nlp/international/spanish/SpanishVerbStripper/getCase:

#edu/stanford/nlp/international/spanish/SpanishVerbStripper/normalizeStrippedVerb:

#edu/stanford/nlp/international/spanish/SpanishVerbStripper/stripSuffix:

#edu/stanford/nlp/international/spanish/SpanishVerbStripper/separatePronouns:

#edu/stanford/nlp/international/spanish/SpanishVerbStripper/stripVerb:
edu.stanford.nlp.international.spanish.SpanishVerbStripper:

#edu/stanford/nlp/international/spanish/SpanishUnknownWordSignatures/conditionalSuffix:

#edu/stanford/nlp/international/spanish/SpanishUnknownWordSignatures/imperfectSuffix:

#edu/stanford/nlp/international/spanish/SpanishUnknownWordSignatures/infinitiveSuffix:

#edu/stanford/nlp/international/spanish/SpanishUnknownWordSignatures/adverbSuffix:
edu.stanford.nlp.international.spanish.SpanishUnknownWordSignatures:

#edu/stanford/nlp/international/spanish/pipeline/MultiWordPreprocessor$POSTieBreaker/compare:
edu.stanford.nlp.international.spanish.pipeline.MultiWordPreprocessor$POSTieBreaker:

#edu/stanford/nlp/international/spanish/pipeline/AnCoraProcessor$MultiWordProcessor/process:
edu.stanford.nlp.international.spanish.pipeline.AnCoraProcessor$MultiWordProcessor:

#edu/stanford/nlp/international/spanish/pipeline/AnCoraProcessor/<init>:

#edu/stanford/nlp/international/spanish/pipeline/AnCoraProcessor/loadTrees:
Warning: Method:edu.stanford.nlp.international.spanish.pipeline.AnCoraProcessor.processTreeFile has auto edges.

#edu/stanford/nlp/international/spanish/pipeline/AnCoraProcessor/updateTagger:

#edu/stanford/nlp/international/spanish/pipeline/AnCoraProcessor/split:

#edu/stanford/nlp/international/spanish/pipeline/AnCoraProcessor/findSplitPoint:

#edu/stanford/nlp/international/spanish/pipeline/AnCoraProcessor/fixMultiWordTokens:

#edu/stanford/nlp/international/spanish/pipeline/AnCoraProcessor/convertTreeTagsToUD:

#edu/stanford/nlp/international/spanish/pipeline/AnCoraProcessor/main:
edu.stanford.nlp.international.spanish.pipeline.AnCoraProcessor:
edu.stanford.nlp.international.spanish.pipeline.AnCoraProcessor$1:

#edu/stanford/nlp/international/spanish/pipeline/MultiWordPreprocessor$ManualUWModel/getOverrideTag:

#edu/stanford/nlp/international/spanish/pipeline/MultiWordPreprocessor$ManualUWModel/getTag:
edu.stanford.nlp.international.spanish.pipeline.MultiWordPreprocessor$ManualUWModel:
edu.stanford.nlp.international.spanish.pipeline.MultiWordPreprocessor$1:

#edu/stanford/nlp/international/spanish/pipeline/AnCoraPOSStats/process:

#edu/stanford/nlp/international/spanish/pipeline/AnCoraPOSStats/main:
edu.stanford.nlp.international.spanish.pipeline.AnCoraPOSStats:

#edu/stanford/nlp/international/spanish/pipeline/AnCoraProcessor$RightOfExclusiveFilter/test:

#edu/stanford/nlp/international/spanish/pipeline/AnCoraProcessor$RightOfExclusiveFilter/getFollowingTerminal:

#edu/stanford/nlp/international/spanish/pipeline/AnCoraProcessor$RightOfExclusiveFilter/getRightSiblingOrRightAncestor:

#edu/stanford/nlp/international/spanish/pipeline/AnCoraProcessor$RightOfExclusiveFilter/getLeftmostDescendant:
edu.stanford.nlp.international.spanish.pipeline.AnCoraProcessor$RightOfExclusiveFilter:

#edu/stanford/nlp/international/spanish/pipeline/MultiWordPreprocessor/updateTagger:

#edu/stanford/nlp/international/spanish/pipeline/MultiWordPreprocessor/traverseAndFix:

#edu/stanford/nlp/international/spanish/pipeline/MultiWordPreprocessor/getContainingPhrase:

#edu/stanford/nlp/international/spanish/pipeline/MultiWordPreprocessor/inferPOS:

#edu/stanford/nlp/international/spanish/pipeline/MultiWordPreprocessor/inferPhrasalCategory:

#edu/stanford/nlp/international/spanish/pipeline/MultiWordPreprocessor/resolveDummyTags:

#edu/stanford/nlp/international/spanish/pipeline/MultiWordPreprocessor/main:
edu.stanford.nlp.international.spanish.pipeline.MultiWordPreprocessor:
Warning: Method:edu.stanford.nlp.international.spanish.pipeline.MultiWordTreeExpander.expandPhrases has auto edges.
edu.stanford.nlp.international.spanish.pipeline.MultiWordTreeExpander:

#edu/stanford/nlp/international/spanish/pipeline/AnCoraProcessor$LeftOfFilter/test:

#edu/stanford/nlp/international/spanish/pipeline/AnCoraProcessor$LeftOfFilter/getRightmostDescendant:
edu.stanford.nlp.international.spanish.pipeline.AnCoraProcessor$LeftOfFilter:

#edu/stanford/nlp/international/spanish/scripts/TreeToTSV/main:
edu.stanford.nlp.international.spanish.scripts.TreeToTSV:

#edu/stanford/nlp/international/spanish/scripts/ConfusionMatrixTSV/main:
edu.stanford.nlp.international.spanish.scripts.ConfusionMatrixTSV:
edu.stanford.nlp.international.spanish.process.SpanishLexer$1:

#edu/stanford/nlp/international/spanish/process/SpanishTokenizer$SpanishTokenizerFactory/setOptions:
edu.stanford.nlp.international.spanish.process.SpanishTokenizer$SpanishTokenizerFactory:
Warning: Method:edu.stanford.nlp.international.spanish.process.SpanishLexer.zzUnpackcmap_top has auto edges.
Warning: Method:edu.stanford.nlp.international.spanish.process.SpanishLexer.zzUnpackcmap_blocks has auto edges.
Warning: Method:edu.stanford.nlp.international.spanish.process.SpanishLexer.zzUnpackAction has auto edges.

#edu/stanford/nlp/international/spanish/process/SpanishLexer/zzUnpackRowMap:
Warning: Method:edu.stanford.nlp.international.spanish.process.SpanishLexer.zzUnpackTrans has auto edges.
Warning: Method:edu.stanford.nlp.international.spanish.process.SpanishLexer.zzUnpackAttribute has auto edges.

#edu/stanford/nlp/international/spanish/process/SpanishLexer/<init>:

#edu/stanford/nlp/international/spanish/process/SpanishLexer/convertToEl:

#edu/stanford/nlp/international/spanish/process/SpanishLexer/getNext:

#edu/stanford/nlp/international/spanish/process/SpanishLexer/getNormalizedAmpNext:

#edu/stanford/nlp/international/spanish/process/SpanishLexer/zzCMap:

#edu/stanford/nlp/international/spanish/process/SpanishLexer/zzRefill:

#edu/stanford/nlp/international/spanish/process/SpanishLexer/yyclose:

#edu/stanford/nlp/international/spanish/process/SpanishLexer/yyreset:

#edu/stanford/nlp/international/spanish/process/SpanishLexer/yypushback:

#edu/stanford/nlp/international/spanish/process/SpanishLexer/next:
edu.stanford.nlp.international.spanish.process.SpanishLexer:
edu.stanford.nlp.international.spanish.process.SpanishTokenizer$1:

#edu/stanford/nlp/international/spanish/process/SpanishTokenizer/<init>:
Warning: Method:edu.stanford.nlp.international.spanish.process.SpanishTokenizer.getNext has incoming edges.

#edu/stanford/nlp/international/spanish/process/SpanishTokenizer/processContraction:

#edu/stanford/nlp/international/spanish/process/SpanishTokenizer/processVerb:

#edu/stanford/nlp/international/spanish/process/SpanishTokenizer/processCompound:

#edu/stanford/nlp/international/spanish/process/SpanishTokenizer/main:
edu.stanford.nlp.international.spanish.process.SpanishTokenizer:

#edu/stanford/nlp/international/spanish/process/AnCoraPronounDisambiguator/disambiguatePersonalPronoun:
edu.stanford.nlp.international.spanish.process.AnCoraPronounDisambiguator:
edu.stanford.nlp.international.spanish.process.SpanishLexer$UntokenizableOptions:
edu.stanford.nlp.international.spanish.process.AnCoraPronounDisambiguator$PersonalPronounType:

#edu/stanford/nlp/international/arabic/ArabicMorphoFeatureSpecification/getValues:

#edu/stanford/nlp/international/arabic/ArabicMorphoFeatureSpecification/strToFeatures:

#edu/stanford/nlp/international/arabic/ArabicMorphoFeatureSpecification/processInflectionalFeatures:

#edu/stanford/nlp/international/arabic/ArabicMorphoFeatureSpecification/processInflectionalFeaturesHelper:

#edu/stanford/nlp/international/arabic/ArabicMorphoFeatureSpecification/main:
edu.stanford.nlp.international.arabic.ArabicMorphoFeatureSpecification:
edu.stanford.nlp.international.arabic.ArabicWordLists:

#edu/stanford/nlp/international/arabic/ArabicVerbStemBank/getInstance:

#edu/stanford/nlp/international/arabic/ArabicVerbStemBank/getStem:

#edu/stanford/nlp/international/arabic/ArabicVerbStemBank/load:

#edu/stanford/nlp/international/arabic/ArabicVerbStemBank/debugPrint:
edu.stanford.nlp.international.arabic.ArabicVerbStemBank:

#edu/stanford/nlp/international/arabic/Buckwalter/<init>:

#edu/stanford/nlp/international/arabic/Buckwalter/convert:

#edu/stanford/nlp/international/arabic/Buckwalter/main:
edu.stanford.nlp.international.arabic.Buckwalter:

#edu/stanford/nlp/international/arabic/ArabicMorphoFeatureSpecification$ArabicMorphoFeatures/fromTagString:

#edu/stanford/nlp/international/arabic/ArabicMorphoFeatureSpecification$ArabicMorphoFeatures/getTag:
edu.stanford.nlp.international.arabic.ArabicMorphoFeatureSpecification$ArabicMorphoFeatures:

#edu/stanford/nlp/international/arabic/IBMArabicEscaper/escapeString:

#edu/stanford/nlp/international/arabic/IBMArabicEscaper/stripAnnotationsAndClassing:

#edu/stanford/nlp/international/arabic/IBMArabicEscaper/apply:

#edu/stanford/nlp/international/arabic/IBMArabicEscaper/apply:

#edu/stanford/nlp/international/arabic/IBMArabicEscaper/main:
edu.stanford.nlp.international.arabic.IBMArabicEscaper:

#edu/stanford/nlp/international/arabic/pipeline/ATBCorrector/loadOps:

#edu/stanford/nlp/international/arabic/pipeline/ATBCorrector/continuing:

#edu/stanford/nlp/international/arabic/pipeline/ATBCorrector/main:
edu.stanford.nlp.international.arabic.pipeline.ATBCorrector:

#edu/stanford/nlp/international/arabic/pipeline/MWETreeVisitorExternal/loadMWEs:

#edu/stanford/nlp/international/arabic/pipeline/MWETreeVisitorExternal/visitTree:

#edu/stanford/nlp/international/arabic/pipeline/MWETreeVisitorExternal/getPreterminalSubtrees:

#edu/stanford/nlp/international/arabic/pipeline/MWETreeVisitorExternal/main:
edu.stanford.nlp.international.arabic.pipeline.MWETreeVisitorExternal:

#edu/stanford/nlp/international/arabic/pipeline/ATBArabicDataset$ArabicRawTreeNormalizer/<init>:

#edu/stanford/nlp/international/arabic/pipeline/ATBArabicDataset$ArabicRawTreeNormalizer/processPreterminal:

#edu/stanford/nlp/international/arabic/pipeline/ATBArabicDataset$ArabicRawTreeNormalizer/arabicAoverAFilter:

#edu/stanford/nlp/international/arabic/pipeline/ATBArabicDataset$ArabicRawTreeNormalizer/visitTree:
edu.stanford.nlp.international.arabic.pipeline.ATBArabicDataset$ArabicRawTreeNormalizer:

#edu/stanford/nlp/international/arabic/pipeline/ATBArabicDataset/build:

#edu/stanford/nlp/international/arabic/pipeline/ATBArabicDataset/setOptions:
edu.stanford.nlp.international.arabic.pipeline.ATBArabicDataset:

#edu/stanford/nlp/international/arabic/pipeline/UnvocLexicalMapper/map:
edu.stanford.nlp.international.arabic.pipeline.UnvocLexicalMapper:

#edu/stanford/nlp/international/arabic/pipeline/DefaultLexicalMapper/mapUtf8:

#edu/stanford/nlp/international/arabic/pipeline/DefaultLexicalMapper/mapBuckwalter:

#edu/stanford/nlp/international/arabic/pipeline/DefaultLexicalMapper/map:

#edu/stanford/nlp/international/arabic/pipeline/DefaultLexicalMapper/setup:

#edu/stanford/nlp/international/arabic/pipeline/DefaultLexicalMapper/canChangeEncoding:
edu.stanford.nlp.international.arabic.pipeline.DefaultLexicalMapper:

#edu/stanford/nlp/international/arabic/pipeline/DecimatedArabicDataset$ArabicTreeDecimatedNormalizer/<init>:

#edu/stanford/nlp/international/arabic/pipeline/DecimatedArabicDataset$ArabicTreeDecimatedNormalizer/setupOutputFiles:

#edu/stanford/nlp/international/arabic/pipeline/DecimatedArabicDataset$ArabicTreeDecimatedNormalizer/closeOutputFiles:

#edu/stanford/nlp/international/arabic/pipeline/DecimatedArabicDataset$ArabicTreeDecimatedNormalizer/visitTree:

#edu/stanford/nlp/international/arabic/pipeline/DecimatedArabicDataset$ArabicTreeDecimatedNormalizer/write:

#edu/stanford/nlp/international/arabic/pipeline/DecimatedArabicDataset$ArabicTreeDecimatedNormalizer/getFilenames:
edu.stanford.nlp.international.arabic.pipeline.DecimatedArabicDataset$ArabicTreeDecimatedNormalizer:
edu.stanford.nlp.international.arabic.pipeline.ATBCorrectorVisitor:
edu.stanford.nlp.international.arabic.pipeline.BiesModifiedMapper:

#edu/stanford/nlp/international/arabic/pipeline/DecimatedArabicDataset/build:
edu.stanford.nlp.international.arabic.pipeline.DecimatedArabicDataset:

#edu/stanford/nlp/international/arabic/pipeline/LabeledATBDataset$LabelingTreeNormalizer/processPreterminal:
edu.stanford.nlp.international.arabic.pipeline.LabeledATBDataset$LabelingTreeNormalizer:

#edu/stanford/nlp/international/arabic/pipeline/LDCPosMapper/map:

#edu/stanford/nlp/international/arabic/pipeline/LDCPosMapper/processShortTag:

#edu/stanford/nlp/international/arabic/pipeline/LDCPosMapper/setup:

#edu/stanford/nlp/international/arabic/pipeline/LDCPosMapper/toString:
edu.stanford.nlp.international.arabic.pipeline.LDCPosMapper:

#edu/stanford/nlp/international/arabic/pipeline/TaggedArabicDataset$ArabicTreeTaggedNormalizer/visitTree:
edu.stanford.nlp.international.arabic.pipeline.TaggedArabicDataset$ArabicTreeTaggedNormalizer:

#edu/stanford/nlp/international/arabic/pipeline/GaleP4LexMapper/mapUtf8:

#edu/stanford/nlp/international/arabic/pipeline/GaleP4LexMapper/mapBuckwalter:

#edu/stanford/nlp/international/arabic/pipeline/GaleP4LexMapper/map:

#edu/stanford/nlp/international/arabic/pipeline/GaleP4LexMapper/canChangeEncoding:
edu.stanford.nlp.international.arabic.pipeline.GaleP4LexMapper:

#edu/stanford/nlp/international/arabic/pipeline/UniversalPOSMapper/map:

#edu/stanford/nlp/international/arabic/pipeline/UniversalPOSMapper/setup:

#edu/stanford/nlp/international/arabic/pipeline/UniversalPOSMapper/loadUniversalMap:
edu.stanford.nlp.international.arabic.pipeline.UniversalPOSMapper:

#edu/stanford/nlp/international/arabic/pipeline/TaggedArabicDataset/build:
edu.stanford.nlp.international.arabic.pipeline.TaggedArabicDataset:

#edu/stanford/nlp/international/arabic/pipeline/IBMMTArabicDataset/build:

#edu/stanford/nlp/international/arabic/pipeline/IBMMTArabicDataset/setOptions:
edu.stanford.nlp.international.arabic.pipeline.IBMMTArabicDataset:

#edu/stanford/nlp/international/arabic/pipeline/MWETreeVisitor/loadOps:

#edu/stanford/nlp/international/arabic/pipeline/MWETreeVisitor/continuing:
edu.stanford.nlp.international.arabic.pipeline.MWETreeVisitor:

#edu/stanford/nlp/international/arabic/pipeline/LabeledATBDataset/build:
edu.stanford.nlp.international.arabic.pipeline.LabeledATBDataset:

#edu/stanford/nlp/international/arabic/parsesegment/JointParser/main:
edu.stanford.nlp.international.arabic.parsesegment.JointParser:

#edu/stanford/nlp/international/arabic/parsesegment/JointParsingModel/removeDeleteSplittersFromSplitters:

#edu/stanford/nlp/international/arabic/parsesegment/JointParsingModel/getAnnotatedBinaryTreebankFromTreebank:

#edu/stanford/nlp/international/arabic/parsesegment/JointParsingModel/getParserDataFromTreebank:

#edu/stanford/nlp/international/arabic/parsesegment/JointParsingModel/makeParsers:

#edu/stanford/nlp/international/arabic/parsesegment/JointParsingModel/parse:

#edu/stanford/nlp/international/arabic/parsesegment/JointParsingModel/run:
edu.stanford.nlp.international.arabic.parsesegment.JointParsingModel:

#edu/stanford/nlp/international/arabic/parsesegment/JointParsingModel$GenericLatticeScorer/convertItemSpan:

#edu/stanford/nlp/international/arabic/parsesegment/JointParsingModel$GenericLatticeScorer/oPossible:

#edu/stanford/nlp/international/arabic/parsesegment/JointParsingModel$GenericLatticeScorer/iPossible:
edu.stanford.nlp.international.arabic.parsesegment.JointParsingModel$GenericLatticeScorer:
edu.stanford.nlp.international.arabic.parsesegment.JointParsingModel$1:
Warning: Method:edu.stanford.nlp.international.arabic.process.ArabicLexer.zzUnpackcmap_top has auto edges.
Warning: Method:edu.stanford.nlp.international.arabic.process.ArabicLexer.zzUnpackcmap_blocks has auto edges.
Warning: Method:edu.stanford.nlp.international.arabic.process.ArabicLexer.zzUnpackAction has auto edges.

#edu/stanford/nlp/international/arabic/process/ArabicLexer/zzUnpackRowMap:
Warning: Method:edu.stanford.nlp.international.arabic.process.ArabicLexer.zzUnpackTrans has auto edges.
Warning: Method:edu.stanford.nlp.international.arabic.process.ArabicLexer.zzUnpackAttribute has auto edges.

#edu/stanford/nlp/international/arabic/process/ArabicLexer/<init>:

#edu/stanford/nlp/international/arabic/process/ArabicLexer/setupNormalizationMap:

#edu/stanford/nlp/international/arabic/process/ArabicLexer/normalizeToken:

#edu/stanford/nlp/international/arabic/process/ArabicLexer/isLengthening:

#edu/stanford/nlp/international/arabic/process/ArabicLexer/getNext:

#edu/stanford/nlp/international/arabic/process/ArabicLexer/getEllipsis:

#edu/stanford/nlp/international/arabic/process/ArabicLexer/zzCMap:

#edu/stanford/nlp/international/arabic/process/ArabicLexer/zzRefill:

#edu/stanford/nlp/international/arabic/process/ArabicLexer/yyclose:

#edu/stanford/nlp/international/arabic/process/ArabicLexer/yyreset:

#edu/stanford/nlp/international/arabic/process/ArabicLexer/yypushback:

#edu/stanford/nlp/international/arabic/process/ArabicLexer/next:
edu.stanford.nlp.international.arabic.process.ArabicLexer:
edu.stanford.nlp.international.arabic.process.BigWindowArabicSegmenterFeatureFactory:
edu.stanford.nlp.international.arabic.process.IOBUtils$TokenType:

#edu/stanford/nlp/international/arabic/process/ArabicSegmenter/<init>:

#edu/stanford/nlp/international/arabic/process/ArabicSegmenter/getTokenizerFactory:

#edu/stanford/nlp/international/arabic/process/ArabicSegmenter/segmentStringToIOB:

#edu/stanford/nlp/international/arabic/process/ArabicSegmenter/segmentStringToTokenList:

#edu/stanford/nlp/international/arabic/process/ArabicSegmenter/segment:

#edu/stanford/nlp/international/arabic/process/ArabicSegmenter/evaluate:

#edu/stanford/nlp/international/arabic/process/ArabicSegmenter/main:

#edu/stanford/nlp/international/arabic/process/ArabicSegmenter/decode:

#edu/stanford/nlp/international/arabic/process/ArabicSegmenter/getSegmenter:
edu.stanford.nlp.international.arabic.process.ArabicSegmenter:

#edu/stanford/nlp/international/arabic/process/ArabicDocumentReaderAndWriter$1/apply:
edu.stanford.nlp.international.arabic.process.ArabicDocumentReaderAndWriter$1:

#edu/stanford/nlp/international/arabic/process/IOBUtils/StringToIOB:

#edu/stanford/nlp/international/arabic/process/IOBUtils/fillInWordStatistics:

#edu/stanford/nlp/international/arabic/process/IOBUtils/tokenToDatums:

#edu/stanford/nlp/international/arabic/process/IOBUtils/shouldNotSegment:

#edu/stanford/nlp/international/arabic/process/IOBUtils/stripSegmentationMarkers:

#edu/stanford/nlp/international/arabic/process/IOBUtils/createDatum:

#edu/stanford/nlp/international/arabic/process/IOBUtils/getTokenType:

#edu/stanford/nlp/international/arabic/process/IOBUtils/IOBToString:

#edu/stanford/nlp/international/arabic/process/IOBUtils/annotateMarkers:

#edu/stanford/nlp/international/arabic/process/IOBUtils/annotateMarkersOnWord:

#edu/stanford/nlp/international/arabic/process/IOBUtils/getHeadBounds:

#edu/stanford/nlp/international/arabic/process/IOBUtils/labelDomain:

#edu/stanford/nlp/international/arabic/process/IOBUtils/TokenSpansForIOB:
edu.stanford.nlp.international.arabic.process.IOBUtils:
edu.stanford.nlp.international.arabic.process.IOBUtils$SuffixMarkerAnnotation:

#edu/stanford/nlp/international/arabic/process/ArabicDocumentReaderAndWriter/<init>:

#edu/stanford/nlp/international/arabic/process/ArabicDocumentReaderAndWriter/printAnswers:

#edu/stanford/nlp/international/arabic/process/ArabicDocumentReaderAndWriter/main:
edu.stanford.nlp.international.arabic.process.ArabicDocumentReaderAndWriter:
edu.stanford.nlp.international.arabic.process.IOBUtils$PrefixMarkerAnnotation:

#edu/stanford/nlp/international/arabic/process/StartAndEndArabicSegmenterFeatureFactory/featuresCpC:
edu.stanford.nlp.international.arabic.process.StartAndEndArabicSegmenterFeatureFactory:

#edu/stanford/nlp/international/arabic/process/ArabicTokenizer/getNext:

#edu/stanford/nlp/international/arabic/process/ArabicTokenizer/atbFactory:

#edu/stanford/nlp/international/arabic/process/ArabicTokenizer/main:
edu.stanford.nlp.international.arabic.process.ArabicTokenizer:

#edu/stanford/nlp/international/arabic/process/ArabicSegmenterFeatureFactory/getCliqueFeatures:

#edu/stanford/nlp/international/arabic/process/ArabicSegmenterFeatureFactory/featuresC:
edu.stanford.nlp.international.arabic.process.ArabicSegmenterFeatureFactory:

#edu/stanford/nlp/international/arabic/process/ArabicTokenizer$ArabicTokenizerFactory/setOptions:
edu.stanford.nlp.international.arabic.process.ArabicTokenizer$ArabicTokenizerFactory:

#edu/stanford/nlp/international/arabic/process/ArabicTokenizerTester/main:
edu.stanford.nlp.international.arabic.process.ArabicTokenizerTester:
edu.stanford.nlp.international.arabic.process.ArabicDocumentReaderAndWriter$RewrittenArabicAnnotation:

#edu/stanford/nlp/coref/CorefSystem$1/process:
edu.stanford.nlp.coref.CorefSystem$1:
edu.stanford.nlp.coref.CorefCoreAnnotations$CorefClusterIdAnnotation:
edu.stanford.nlp.coref.CorefCoreAnnotations$CorefAnnotation:

#edu/stanford/nlp/coref/CorefSystem/annotate:

#edu/stanford/nlp/coref/CorefSystem/runOnConll:
edu.stanford.nlp.coref.CorefSystem:
edu.stanford.nlp.coref.CorefAlgorithm:

#edu/stanford/nlp/coref/CorefProperties/algorithm:

#edu/stanford/nlp/coref/CorefProperties/useConstituencyParse:

#edu/stanford/nlp/coref/CorefProperties/maxMentionDistance:

#edu/stanford/nlp/coref/CorefProperties/mdType:

#edu/stanford/nlp/coref/CorefProperties/getMentionDetectionModel:

#edu/stanford/nlp/coref/CorefProperties/conllOutputPath:

#edu/stanford/nlp/coref/CorefProperties/setInput:

#edu/stanford/nlp/coref/CorefProperties/getDataPath:

#edu/stanford/nlp/coref/CorefProperties/getLanguage:

#edu/stanford/nlp/coref/CorefProperties/getHeadFinder:

#edu/stanford/nlp/coref/CorefProperties/getCorefMentionFilter:
edu.stanford.nlp.coref.CorefProperties:
edu.stanford.nlp.coref.CorefCoreAnnotations$CorefMentionsAnnotation:
edu.stanford.nlp.coref.CorefProperties$MentionDetectionType:
edu.stanford.nlp.coref.CorefProperties$CorefAlgorithmType:
edu.stanford.nlp.coref.CorefCoreAnnotations$CorefChainAnnotation:
edu.stanford.nlp.coref.CorefCoreAnnotations$CorefClusterAnnotation:

#edu/stanford/nlp/coref/CorefPrinter/printConllOutput:

#edu/stanford/nlp/coref/CorefPrinter/printConllOutput:

#edu/stanford/nlp/coref/CorefPrinter/lambda$null$0:
edu.stanford.nlp.coref.CorefPrinter:
edu.stanford.nlp.coref.CorefDocumentProcessor:

#edu/stanford/nlp/coref/CorefScorer/getEvalSummary:

#edu/stanford/nlp/coref/CorefScorer/printScoreSummary:

#edu/stanford/nlp/coref/CorefScorer/getFinalConllScore:

#edu/stanford/nlp/coref/CorefScorer/getFinalConllScoreFromOutputDir:
edu.stanford.nlp.coref.CorefScorer:
edu.stanford.nlp.coref.CorefCoreAnnotations$CorefMentionIndexesAnnotation:

#edu/stanford/nlp/coref/CorefUtils/getMentionPairs:

#edu/stanford/nlp/coref/CorefUtils/getLabeledMentionPairs:

#edu/stanford/nlp/coref/CorefUtils/mergeCoreferenceClusters:

#edu/stanford/nlp/coref/CorefUtils/removeSingletonClusters:

#edu/stanford/nlp/coref/CorefUtils/mergePronounsBasedOnSpeaker:

#edu/stanford/nlp/coref/CorefUtils/heuristicFilter:

#edu/stanford/nlp/coref/CorefUtils/getContentWords:

#edu/stanford/nlp/coref/CorefUtils/printHumanReadableCoref:

#edu/stanford/nlp/coref/CorefUtils/getMatchingSpans:

#edu/stanford/nlp/coref/CorefUtils/getMatchingMentionsSpans:

#edu/stanford/nlp/coref/CorefUtils/lambda$null$6:

#edu/stanford/nlp/coref/CorefUtils/lambda$static$3:

#edu/stanford/nlp/coref/CorefUtils/lambda$getSortedMentions$0:
edu.stanford.nlp.coref.CorefUtils:
edu.stanford.nlp.coref.CorefCoreAnnotations$CorefGraphAnnotation:
edu.stanford.nlp.coref.CorefProperties$Dataset:

#edu/stanford/nlp/coref/CorefRules/entityBothHaveProper:

#edu/stanford/nlp/coref/CorefRules/entitySameProperHeadLastWord:

#edu/stanford/nlp/coref/CorefRules/entityAlias:

#edu/stanford/nlp/coref/CorefRules/entityIWithinI:

#edu/stanford/nlp/coref/CorefRules/entityPersonDisagree:

#edu/stanford/nlp/coref/CorefRules/entityPersonCompatible:

#edu/stanford/nlp/coref/CorefRules/entityWordsIncluded:

#edu/stanford/nlp/coref/CorefRules/entityHaveIncompatibleModifier:

#edu/stanford/nlp/coref/CorefRules/entityIsRoleAppositive:

#edu/stanford/nlp/coref/CorefRules/entityIsRelativePronoun:

#edu/stanford/nlp/coref/CorefRules/entityIsAcronym:

#edu/stanford/nlp/coref/CorefRules/isAcronym:

#edu/stanford/nlp/coref/CorefRules/entityIsPredicateNominatives:

#edu/stanford/nlp/coref/CorefRules/entityIsApposition:

#edu/stanford/nlp/coref/CorefRules/entityAttributesAgree:

#edu/stanford/nlp/coref/CorefRules/attributeSetDisagree:

#edu/stanford/nlp/coref/CorefRules/pruneAttributes:

#edu/stanford/nlp/coref/CorefRules/pruneAttributes:

#edu/stanford/nlp/coref/CorefRules/entityAttributesAgreeChinese:

#edu/stanford/nlp/coref/CorefRules/entityAttributesAgree:

#edu/stanford/nlp/coref/CorefRules/entityRelaxedHeadsAgreeBetweenMentions:

#edu/stanford/nlp/coref/CorefRules/entityHeadsAgree:

#edu/stanford/nlp/coref/CorefRules/entityExactStringMatch:

#edu/stanford/nlp/coref/CorefRules/entityExactStringMatch:

#edu/stanford/nlp/coref/CorefRules/entityRelaxedExactStringMatch:

#edu/stanford/nlp/coref/CorefRules/entityIWithinI:

#edu/stanford/nlp/coref/CorefRules/entityHaveIncompatibleModifier:

#edu/stanford/nlp/coref/CorefRules/entityHaveDifferentLocation:

#edu/stanford/nlp/coref/CorefRules/entitySameProperHeadLastWord:

#edu/stanford/nlp/coref/CorefRules/entityNumberInLaterMention:

#edu/stanford/nlp/coref/CorefRules/entityHaveExtraProperNoun:

#edu/stanford/nlp/coref/CorefRules/antecedentIsMentionSpeaker:

#edu/stanford/nlp/coref/CorefRules/antecedentMatchesMentionSpeakerAnnotation:

#edu/stanford/nlp/coref/CorefRules/mentionMatchesSpeaker:

#edu/stanford/nlp/coref/CorefRules/entityPersonDisagree:

#edu/stanford/nlp/coref/CorefRules/entityPersonCompatible:

#edu/stanford/nlp/coref/CorefRules/entitySameSpeaker:

#edu/stanford/nlp/coref/CorefRules/entityDifferentSpeaker:

#edu/stanford/nlp/coref/CorefRules/getSpeakerClusterId:

#edu/stanford/nlp/coref/CorefRules/entitySubjectObject:

#edu/stanford/nlp/coref/CorefRules/entityTokenDistance:

#edu/stanford/nlp/coref/CorefRules/entityClusterAllCorefDictionary:

#edu/stanford/nlp/coref/CorefRules/entityCorefDictionary:

#edu/stanford/nlp/coref/CorefRules/contextIncompatible:

#edu/stanford/nlp/coref/CorefRules/sentenceContextIncompatible:
edu.stanford.nlp.coref.CorefRules:
edu.stanford.nlp.coref.CorefCoreAnnotations:
edu.stanford.nlp.coref.CorefCoreAnnotations$CorefDestAnnotation:

#edu/stanford/nlp/coref/misc/SingletonPredictor/setTokenIndices:

#edu/stanford/nlp/coref/misc/SingletonPredictor/generateFeatureVectors:

#edu/stanford/nlp/coref/misc/SingletonPredictor/main:
edu.stanford.nlp.coref.misc.SingletonPredictor:

#edu/stanford/nlp/coref/misc/FromFileCorefAlgorithm/<init>:

#edu/stanford/nlp/coref/misc/FromFileCorefAlgorithm/runCoref:

#edu/stanford/nlp/coref/misc/FromFileCorefAlgorithm/lambda$new$0:
edu.stanford.nlp.coref.misc.FromFileCorefAlgorithm:

#edu/stanford/nlp/coref/misc/MentionDetectionEvaluator/process:
edu.stanford.nlp.coref.misc.MentionDetectionEvaluator:

#edu/stanford/nlp/coref/fastneural/FastNeuralCorefModel/score:

#edu/stanford/nlp/coref/fastneural/FastNeuralCorefModel/makeFeatureVector:

#edu/stanford/nlp/coref/fastneural/FastNeuralCorefModel/addDistanceFeatures:

#edu/stanford/nlp/coref/fastneural/FastNeuralCorefModel/loadMapFromTextFile:
edu.stanford.nlp.coref.fastneural.FastNeuralCorefModel:

#edu/stanford/nlp/coref/fastneural/FastNeuralCorefDataExporter/process:

#edu/stanford/nlp/coref/fastneural/FastNeuralCorefDataExporter/main:

#edu/stanford/nlp/coref/fastneural/FastNeuralCorefDataExporter/writeCompressor:

#edu/stanford/nlp/coref/fastneural/FastNeuralCorefDataExporter/lambda$getSentenceArray$1:

#edu/stanford/nlp/coref/fastneural/FastNeuralCorefDataExporter/lambda$getSentenceArray$0:
edu.stanford.nlp.coref.fastneural.FastNeuralCorefDataExporter:

#edu/stanford/nlp/coref/fastneural/FastNeuralCorefAlgorithm/runCoref:
edu.stanford.nlp.coref.fastneural.FastNeuralCorefAlgorithm:
edu.stanford.nlp.coref.fastneural.FastNeuralCorefProperties:

#edu/stanford/nlp/coref/docreader/CoreNLPDocumentReader/<init>:

#edu/stanford/nlp/coref/docreader/CoreNLPDocumentReader/getFiles:

#edu/stanford/nlp/coref/docreader/CoreNLPDocumentReader/getNextDocument:

#edu/stanford/nlp/coref/docreader/CoreNLPDocumentReader/nextDoc:

#edu/stanford/nlp/coref/docreader/CoreNLPDocumentReader/extractGoldMentions:

#edu/stanford/nlp/coref/docreader/CoreNLPDocumentReader/reset:
edu.stanford.nlp.coref.docreader.CoreNLPDocumentReader:

#edu/stanford/nlp/coref/docreader/CoNLLDocumentReader$CorpusStats/process:

#edu/stanford/nlp/coref/docreader/CoNLLDocumentReader$CorpusStats/appendIntCountStats:
edu.stanford.nlp.coref.docreader.CoNLLDocumentReader$CorpusStats:
edu.stanford.nlp.coref.docreader.CoNLLDocumentReader$CoNLLDocument:
edu.stanford.nlp.coref.docreader.DocReader:

#edu/stanford/nlp/coref/docreader/CoNLLDocumentReader/<init>:

#edu/stanford/nlp/coref/docreader/CoNLLDocumentReader/getFiles:

#edu/stanford/nlp/coref/docreader/CoNLLDocumentReader/reset:

#edu/stanford/nlp/coref/docreader/CoNLLDocumentReader/getNextDocument:

#edu/stanford/nlp/coref/docreader/CoNLLDocumentReader/getField:

#edu/stanford/nlp/coref/docreader/CoNLLDocumentReader/concatField:

#edu/stanford/nlp/coref/docreader/CoNLLDocumentReader/getMention:

#edu/stanford/nlp/coref/docreader/CoNLLDocumentReader/include:

#edu/stanford/nlp/coref/docreader/CoNLLDocumentReader/writeTabSep:

#edu/stanford/nlp/coref/docreader/CoNLLDocumentReader/main:

#edu/stanford/nlp/coref/docreader/CoNLLDocumentReader/nextDoc:

#edu/stanford/nlp/coref/docreader/CoNLLDocumentReader/setDependencyTree:

#edu/stanford/nlp/coref/docreader/CoNLLDocumentReader/extractGoldMentions:
edu.stanford.nlp.coref.docreader.CoNLLDocumentReader:
edu.stanford.nlp.coref.docreader.CoNLLDocumentReader$Options:
edu.stanford.nlp.coref.docreader.CoreNLPDocumentReader$Options:
edu.stanford.nlp.coref.docreader.CoNLLDocumentReader$NamedEntityAnnotation:
edu.stanford.nlp.coref.docreader.CoNLLDocumentReader$CorefMentionAnnotation:

#edu/stanford/nlp/coref/docreader/CoNLLDocumentReader$DocumentIterator/hasNext:

#edu/stanford/nlp/coref/docreader/CoNLLDocumentReader$DocumentIterator/next:

#edu/stanford/nlp/coref/docreader/CoNLLDocumentReader$DocumentIterator/wordsToParse:

#edu/stanford/nlp/coref/docreader/CoNLLDocumentReader$DocumentIterator/getLabelledSpans:

#edu/stanford/nlp/coref/docreader/CoNLLDocumentReader$DocumentIterator/wordsToSentence:

#edu/stanford/nlp/coref/docreader/CoNLLDocumentReader$DocumentIterator/sentencesToDocument:

#edu/stanford/nlp/coref/docreader/CoNLLDocumentReader$DocumentIterator/getTreeNonTerminal:

#edu/stanford/nlp/coref/docreader/CoNLLDocumentReader$DocumentIterator/annotateDocument:

#edu/stanford/nlp/coref/docreader/CoNLLDocumentReader$DocumentIterator/readNextDocument:
edu.stanford.nlp.coref.docreader.CoNLLDocumentReader$DocumentIterator:

#edu/stanford/nlp/coref/md/DependencyCorefMentionFinder/<init>:

#edu/stanford/nlp/coref/md/DependencyCorefMentionFinder/findMentions:

#edu/stanford/nlp/coref/md/DependencyCorefMentionFinder/assignMentionIDs:

#edu/stanford/nlp/coref/md/DependencyCorefMentionFinder/setBarePlural:

#edu/stanford/nlp/coref/md/DependencyCorefMentionFinder/extractNPorPRPFromDependency:

#edu/stanford/nlp/coref/md/DependencyCorefMentionFinder/extractMentionForHeadword:

#edu/stanford/nlp/coref/md/DependencyCorefMentionFinder/getNPSpan:

#edu/stanford/nlp/coref/md/DependencyCorefMentionFinder/getNPSpanOld:

#edu/stanford/nlp/coref/md/DependencyCorefMentionFinder/addMention:

#edu/stanford/nlp/coref/md/DependencyCorefMentionFinder/extractPronounForHeadword:

#edu/stanford/nlp/coref/md/DependencyCorefMentionFinder/findHeadInDependency:

#edu/stanford/nlp/coref/md/DependencyCorefMentionFinder/findHead:

#edu/stanford/nlp/coref/md/DependencyCorefMentionFinder/findHeadInDependency:
edu.stanford.nlp.coref.md.DependencyCorefMentionFinder:

#edu/stanford/nlp/coref/md/RuleBasedCorefMentionFinder/filterPredictedMentions:

#edu/stanford/nlp/coref/md/RuleBasedCorefMentionFinder/findMentions:

#edu/stanford/nlp/coref/md/RuleBasedCorefMentionFinder/setBarePlural:

#edu/stanford/nlp/coref/md/RuleBasedCorefMentionFinder/extractNPorPRP:

#edu/stanford/nlp/coref/md/RuleBasedCorefMentionFinder/extractNamedEntityMentions:

#edu/stanford/nlp/coref/md/RuleBasedCorefMentionFinder/removeSpuriousMentionsZhSimple:

#edu/stanford/nlp/coref/md/RuleBasedCorefMentionFinder/removeSpuriousMentionsEn:
edu.stanford.nlp.coref.md.RuleBasedCorefMentionFinder:

#edu/stanford/nlp/coref/md/MentionDetectionClassifier/extractFeatures:

#edu/stanford/nlp/coref/md/MentionDetectionClassifier/classifyMentions:
edu.stanford.nlp.coref.md.MentionDetectionClassifier:

#edu/stanford/nlp/coref/md/CorefMentionFinder/extractPremarkedEntityMentions:

#edu/stanford/nlp/coref/md/CorefMentionFinder/extractEnumerations:

#edu/stanford/nlp/coref/md/CorefMentionFinder/insideNE:

#edu/stanford/nlp/coref/md/CorefMentionFinder/inStopList:

#edu/stanford/nlp/coref/md/CorefMentionFinder/removeSpuriousMentions:

#edu/stanford/nlp/coref/md/CorefMentionFinder/removeSpuriousMentionsEn:

#edu/stanford/nlp/coref/md/CorefMentionFinder/removeSpuriousMentionsZh:

#edu/stanford/nlp/coref/md/CorefMentionFinder/mentionContainsRemoveChars:

#edu/stanford/nlp/coref/md/CorefMentionFinder/mentionIsDemonym:

#edu/stanford/nlp/coref/md/CorefMentionFinder/mentionIsRangren:

#edu/stanford/nlp/coref/md/CorefMentionFinder/mentionIsInterrogativePronoun:

#edu/stanford/nlp/coref/md/CorefMentionFinder/extractNamedEntityModifiers:

#edu/stanford/nlp/coref/md/CorefMentionFinder/addNamedEntityStrings:

#edu/stanford/nlp/coref/md/CorefMentionFinder/addGoldMentions:

#edu/stanford/nlp/coref/md/CorefMentionFinder/findHead:

#edu/stanford/nlp/coref/md/CorefMentionFinder/findHeadChinese:

#edu/stanford/nlp/coref/md/CorefMentionFinder/findSyntacticHead:

#edu/stanford/nlp/coref/md/CorefMentionFinder/findPartialSpan:

#edu/stanford/nlp/coref/md/CorefMentionFinder/funkyFindLeafWithApproximateSpan:

#edu/stanford/nlp/coref/md/CorefMentionFinder/getParser:

#edu/stanford/nlp/coref/md/CorefMentionFinder/convertToCoreLabels:

#edu/stanford/nlp/coref/md/CorefMentionFinder/safeHead:

#edu/stanford/nlp/coref/md/CorefMentionFinder/findTreeWithSpan:

#edu/stanford/nlp/coref/md/CorefMentionFinder/partitiveRule:

#edu/stanford/nlp/coref/md/CorefMentionFinder/isPleonastic:

#edu/stanford/nlp/coref/md/CorefMentionFinder/isPleonasticDebug:

#edu/stanford/nlp/coref/md/CorefMentionFinder/getPleonasticPatterns:

#edu/stanford/nlp/coref/md/CorefMentionFinder/checkPleonastic:
edu.stanford.nlp.coref.md.CorefMentionFinder:

#edu/stanford/nlp/coref/md/HybridCorefMentionFinder/<init>:

#edu/stanford/nlp/coref/md/HybridCorefMentionFinder/findMentions:

#edu/stanford/nlp/coref/md/HybridCorefMentionFinder/extractNamedEntityMentions:

#edu/stanford/nlp/coref/md/HybridCorefMentionFinder/extractNPorPRP:
edu.stanford.nlp.coref.md.HybridCorefMentionFinder:
edu.stanford.nlp.coref.statistical.SimpleLinearClassifier$7:

#edu/stanford/nlp/coref/statistical/EvalUtils$AbstractEvaluator/getRecall:

#edu/stanford/nlp/coref/statistical/EvalUtils$AbstractEvaluator/getPrecision:
edu.stanford.nlp.coref.statistical.EvalUtils$AbstractEvaluator:
edu.stanford.nlp.coref.statistical.EvalUtils$Evaluator:

#edu/stanford/nlp/coref/statistical/Clusterer$State/<init>:

#edu/stanford/nlp/coref/statistical/Clusterer$State/<init>:
Fail to analyze: ../programs/stanford-corenlp-4.4.0/target/classes/edu/stanford/nlp/coref/statistical/Clusterer$State.class
edu.stanford.nlp.coref.statistical.SimpleLinearClassifier$5:

#edu/stanford/nlp/coref/statistical/DatasetBuilder/process:

#edu/stanford/nlp/coref/statistical/DatasetBuilder/lambda$process$1:
edu.stanford.nlp.coref.statistical.DatasetBuilder:
edu.stanford.nlp.coref.statistical.MetaFeatureExtractor$SingleConjunction:
edu.stanford.nlp.coref.statistical.SimpleLinearClassifier$1:
edu.stanford.nlp.coref.statistical.Clusterer$GlobalFeatures:

#edu/stanford/nlp/coref/statistical/SimpleLinearClassifier/<init>:

#edu/stanford/nlp/coref/statistical/SimpleLinearClassifier/learn:

#edu/stanford/nlp/coref/statistical/SimpleLinearClassifier/weightFeatureProduct:

#edu/stanford/nlp/coref/statistical/SimpleLinearClassifier/printWeightVector:

#edu/stanford/nlp/coref/statistical/SimpleLinearClassifier/lambda$getWeightVector$0:
edu.stanford.nlp.coref.statistical.SimpleLinearClassifier:

#edu/stanford/nlp/coref/statistical/Clusterer/getClusterMerges:

#edu/stanford/nlp/coref/statistical/Clusterer/doTraining:

#edu/stanford/nlp/coref/statistical/Clusterer/trainPolicy:

#edu/stanford/nlp/coref/statistical/Clusterer/evaluatePolicy:

#edu/stanford/nlp/coref/statistical/Clusterer/runPolicy:

#edu/stanford/nlp/coref/statistical/Clusterer/getFeatures:

#edu/stanford/nlp/coref/statistical/Clusterer/getFeatures:

#edu/stanford/nlp/coref/statistical/Clusterer/earliestMention:

#edu/stanford/nlp/coref/statistical/Clusterer/getFeatures:

#edu/stanford/nlp/coref/statistical/Clusterer/addSuffix:
edu.stanford.nlp.coref.statistical.Clusterer:
edu.stanford.nlp.coref.statistical.SimpleLinearClassifier$LearningRateSchedule:

#edu/stanford/nlp/coref/statistical/SimpleLinearClassifier$3/derivative:
edu.stanford.nlp.coref.statistical.SimpleLinearClassifier$3:

#edu/stanford/nlp/coref/statistical/ClustererDataLoader$ClustererDoc/<init>:

#edu/stanford/nlp/coref/statistical/ClustererDataLoader$ClustererDoc/lambda$new$1:
edu.stanford.nlp.coref.statistical.ClustererDataLoader$ClustererDoc:
edu.stanford.nlp.coref.statistical.MaxMarginMentionRanker$ErrorType:
edu.stanford.nlp.coref.statistical.SimpleLinearClassifier$4:
edu.stanford.nlp.coref.statistical.SimpleLinearClassifier$6:

#edu/stanford/nlp/coref/statistical/Example/<init>:

#edu/stanford/nlp/coref/statistical/Example/isNewLink:
edu.stanford.nlp.coref.statistical.Example:

#edu/stanford/nlp/coref/statistical/PairwiseModel/<init>:

#edu/stanford/nlp/coref/statistical/PairwiseModel/writeModel:

#edu/stanford/nlp/coref/statistical/PairwiseModel/learn:

#edu/stanford/nlp/coref/statistical/PairwiseModel/learn:

#edu/stanford/nlp/coref/statistical/PairwiseModel/learn:
edu.stanford.nlp.coref.statistical.PairwiseModel:

#edu/stanford/nlp/coref/statistical/StatisticalCorefProperties/getDefaultModelPath:

#edu/stanford/nlp/coref/statistical/StatisticalCorefProperties/pairwiseScoreThresholds:
edu.stanford.nlp.coref.statistical.StatisticalCorefProperties:
edu.stanford.nlp.coref.statistical.MetaFeatureExtractor$PairConjunction:

#edu/stanford/nlp/coref/statistical/SimpleLinearClassifier$2/derivative:
edu.stanford.nlp.coref.statistical.SimpleLinearClassifier$2:

#edu/stanford/nlp/coref/statistical/Compressor/compress:

#edu/stanford/nlp/coref/statistical/Compressor/uncompress:
edu.stanford.nlp.coref.statistical.Compressor:
edu.stanford.nlp.coref.statistical.MaxMarginMentionRanker$Builder:
edu.stanford.nlp.coref.statistical.SimpleLinearClassifier$Loss:
edu.stanford.nlp.coref.statistical.CompressedFeatureVector:

#edu/stanford/nlp/coref/statistical/ClustererDataLoader/loadDocuments:
edu.stanford.nlp.coref.statistical.ClustererDataLoader:

#edu/stanford/nlp/coref/statistical/FeatureExtractor/loadVocabulary:

#edu/stanford/nlp/coref/statistical/FeatureExtractor/extract:

#edu/stanford/nlp/coref/statistical/FeatureExtractor/getFeatures:

#edu/stanford/nlp/coref/statistical/FeatureExtractor/getFeatures:

#edu/stanford/nlp/coref/statistical/FeatureExtractor/relaxedStringMatch:

#edu/stanford/nlp/coref/statistical/FeatureExtractor/getPropers:

#edu/stanford/nlp/coref/statistical/FeatureExtractor/addFeature:

#edu/stanford/nlp/coref/statistical/FeatureExtractor/bin:

#edu/stanford/nlp/coref/statistical/FeatureExtractor/getRole:

#edu/stanford/nlp/coref/statistical/FeatureExtractor/getDependencyParent:

#edu/stanford/nlp/coref/statistical/FeatureExtractor/addDependencyFeatures:

#edu/stanford/nlp/coref/statistical/FeatureExtractor/maximalNp:

#edu/stanford/nlp/coref/statistical/FeatureExtractor/numEmbeddedNps:

#edu/stanford/nlp/coref/statistical/FeatureExtractor/headEmbeddingLevel:

#edu/stanford/nlp/coref/statistical/FeatureExtractor/headContainedIn:

#edu/stanford/nlp/coref/statistical/FeatureExtractor/wordIndicator:

#edu/stanford/nlp/coref/statistical/FeatureExtractor/wordIndicator:

#edu/stanford/nlp/coref/statistical/FeatureExtractor/wordIndicator:

#edu/stanford/nlp/coref/statistical/FeatureExtractor/getPOS:

#edu/stanford/nlp/coref/statistical/FeatureExtractor/nextnextWord:

#edu/stanford/nlp/coref/statistical/FeatureExtractor/nextWord:

#edu/stanford/nlp/coref/statistical/FeatureExtractor/prevWord:

#edu/stanford/nlp/coref/statistical/FeatureExtractor/prevprevWord:

#edu/stanford/nlp/coref/statistical/FeatureExtractor/lambda$getFeatures$1:

#edu/stanford/nlp/coref/statistical/FeatureExtractor/lambda$getFeatures$0:
edu.stanford.nlp.coref.statistical.FeatureExtractor:

#edu/stanford/nlp/coref/statistical/PairwiseModelTrainer/trainRanking:

#edu/stanford/nlp/coref/statistical/PairwiseModelTrainer/getAnaphoricityExamples:

#edu/stanford/nlp/coref/statistical/PairwiseModelTrainer/getExamples:

#edu/stanford/nlp/coref/statistical/PairwiseModelTrainer/trainClassification:

#edu/stanford/nlp/coref/statistical/PairwiseModelTrainer/test:

#edu/stanford/nlp/coref/statistical/PairwiseModelTrainer/writeScores:

#edu/stanford/nlp/coref/statistical/PairwiseModelTrainer/lambda$trainRanking$0:
edu.stanford.nlp.coref.statistical.PairwiseModelTrainer:

#edu/stanford/nlp/coref/statistical/Clusterer$MergeKey/equals:
edu.stanford.nlp.coref.statistical.Clusterer$MergeKey:

#edu/stanford/nlp/coref/statistical/FeatureExtractorRunner/process:
edu.stanford.nlp.coref.statistical.FeatureExtractorRunner:

#edu/stanford/nlp/coref/statistical/Clusterer$Cluster/getMentionHash:
edu.stanford.nlp.coref.statistical.Clusterer$Cluster:
edu.stanford.nlp.coref.statistical.PairwiseModel$Builder:

#edu/stanford/nlp/coref/statistical/MetaFeatureExtractor/<init>:

#edu/stanford/nlp/coref/statistical/MetaFeatureExtractor/filterOut:

#edu/stanford/nlp/coref/statistical/MetaFeatureExtractor/getFeatures:

#edu/stanford/nlp/coref/statistical/MetaFeatureExtractor/identifiers:

#edu/stanford/nlp/coref/statistical/MetaFeatureExtractor/getConjunction:
edu.stanford.nlp.coref.statistical.MetaFeatureExtractor:

#edu/stanford/nlp/coref/statistical/ClusteringCorefAlgorithm/runCoref:
edu.stanford.nlp.coref.statistical.ClusteringCorefAlgorithm:

#edu/stanford/nlp/coref/statistical/StatisticalCorefAlgorithm/runCoref:

#edu/stanford/nlp/coref/statistical/StatisticalCorefAlgorithm/lambda$runCoref$0:
edu.stanford.nlp.coref.statistical.StatisticalCorefAlgorithm:
edu.stanford.nlp.coref.statistical.Clusterer$CandidateAction:

#edu/stanford/nlp/coref/statistical/StatisticalCorefTrainer/makeDir:

#edu/stanford/nlp/coref/statistical/StatisticalCorefTrainer/fieldValues:

#edu/stanford/nlp/coref/statistical/StatisticalCorefTrainer/preprocess:
edu.stanford.nlp.coref.statistical.StatisticalCorefTrainer:

#edu/stanford/nlp/coref/statistical/Clusterer$ClustererClassifier/bestAction:

#edu/stanford/nlp/coref/statistical/Clusterer$ClustererClassifier/learn:
edu.stanford.nlp.coref.statistical.Clusterer$ClustererClassifier:

#edu/stanford/nlp/coref/statistical/MaxMarginMentionRanker/<init>:

#edu/stanford/nlp/coref/statistical/MaxMarginMentionRanker/learn:
edu.stanford.nlp.coref.statistical.MaxMarginMentionRanker:
edu.stanford.nlp.coref.statistical.MetaFeatureExtractor$Builder:
edu.stanford.nlp.coref.statistical.Clusterer$1:

#edu/stanford/nlp/coref/statistical/EvalUtils$CombinedEvaluator/update:

#edu/stanford/nlp/coref/statistical/EvalUtils$CombinedEvaluator/getF1:
edu.stanford.nlp.coref.statistical.EvalUtils$CombinedEvaluator:

#edu/stanford/nlp/coref/statistical/EvalUtils$MUCEvaluator/getScore:
edu.stanford.nlp.coref.statistical.EvalUtils$MUCEvaluator:
edu.stanford.nlp.coref.statistical.SimpleLinearClassifier$CountBasedLearningRate:
edu.stanford.nlp.coref.statistical.DocumentExamples:

#edu/stanford/nlp/coref/statistical/EvalUtils/f1:
edu.stanford.nlp.coref.statistical.EvalUtils:

#edu/stanford/nlp/coref/statistical/MetadataWriter/process:

#edu/stanford/nlp/coref/statistical/MetadataWriter/finish:
edu.stanford.nlp.coref.statistical.MetadataWriter:

#edu/stanford/nlp/coref/statistical/EvalUtils$B3Evaluator/getScore:
edu.stanford.nlp.coref.statistical.EvalUtils$B3Evaluator:

#edu/stanford/nlp/coref/data/SpeakerInfo/<init>:

#edu/stanford/nlp/coref/data/SpeakerInfo/hasRealSpeakerName:

#edu/stanford/nlp/coref/data/SpeakerInfo/addMention:

#edu/stanford/nlp/coref/data/SpeakerInfo/getCorefClusterId:
edu.stanford.nlp.coref.data.SpeakerInfo:

#edu/stanford/nlp/coref/data/CorefChain/equals:

#edu/stanford/nlp/coref/data/CorefChain/<init>:

#edu/stanford/nlp/coref/data/CorefChain/<init>:
edu.stanford.nlp.coref.data.CorefChain:

#edu/stanford/nlp/coref/data/DocumentMaker/<init>:

#edu/stanford/nlp/coref/data/DocumentMaker/getDocumentReader:

#edu/stanford/nlp/coref/data/DocumentMaker/makeDocument:

#edu/stanford/nlp/coref/data/DocumentMaker/findGoldMentionHeads:

#edu/stanford/nlp/coref/data/DocumentMaker/getStanfordCoreNLP:

#edu/stanford/nlp/coref/data/DocumentMaker/nextDoc:
edu.stanford.nlp.coref.data.DocumentMaker:

#edu/stanford/nlp/coref/data/Mention/isPronominal:

#edu/stanford/nlp/coref/data/Mention/spanToString:

#edu/stanford/nlp/coref/data/Mention/lowercaseNormalizedSpanString:

#edu/stanford/nlp/coref/data/Mention/nerTokens:

#edu/stanford/nlp/coref/data/Mention/nerName:

#edu/stanford/nlp/coref/data/Mention/process:

#edu/stanford/nlp/coref/data/Mention/process:

#edu/stanford/nlp/coref/data/Mention/setSingleton:

#edu/stanford/nlp/coref/data/Mention/getSingletonFeatures:

#edu/stanford/nlp/coref/data/Mention/getMentionString:

#edu/stanford/nlp/coref/data/Mention/getGender:

#edu/stanford/nlp/coref/data/Mention/setDiscourse:

#edu/stanford/nlp/coref/data/Mention/setPerson:

#edu/stanford/nlp/coref/data/Mention/setSemantics:

#edu/stanford/nlp/coref/data/Mention/isListMemberOf:

#edu/stanford/nlp/coref/data/Mention/addListMember:

#edu/stanford/nlp/coref/data/Mention/addBelongsToList:

#edu/stanford/nlp/coref/data/Mention/isMemberOfSameList:

#edu/stanford/nlp/coref/data/Mention/isListLike:

#edu/stanford/nlp/coref/data/Mention/isListLikeByDependency:

#edu/stanford/nlp/coref/data/Mention/setType:

#edu/stanford/nlp/coref/data/Mention/setGender:

#edu/stanford/nlp/coref/data/Mention/setNumber:

#edu/stanford/nlp/coref/data/Mention/setAnimacy:

#edu/stanford/nlp/coref/data/Mention/knownSuffix:

#edu/stanford/nlp/coref/data/Mention/setHeadString:

#edu/stanford/nlp/coref/data/Mention/setNERString:

#edu/stanford/nlp/coref/data/Mention/sameSentence:

#edu/stanford/nlp/coref/data/Mention/included:

#edu/stanford/nlp/coref/data/Mention/headsAgree:

#edu/stanford/nlp/coref/data/Mention/numbersAgree:

#edu/stanford/nlp/coref/data/Mention/gendersAgree:

#edu/stanford/nlp/coref/data/Mention/animaciesAgree:

#edu/stanford/nlp/coref/data/Mention/entityTypesAgree:

#edu/stanford/nlp/coref/data/Mention/includedIn:

#edu/stanford/nlp/coref/data/Mention/attributesAgree:

#edu/stanford/nlp/coref/data/Mention/addApposition:

#edu/stanford/nlp/coref/data/Mention/isApposition:

#edu/stanford/nlp/coref/data/Mention/addPredicateNominatives:

#edu/stanford/nlp/coref/data/Mention/isPredicateNominatives:

#edu/stanford/nlp/coref/data/Mention/addRelativePronoun:

#edu/stanford/nlp/coref/data/Mention/appearEarlierThan:

#edu/stanford/nlp/coref/data/Mention/longestNNPEndsWithHead:

#edu/stanford/nlp/coref/data/Mention/lowestNPIncludesHead:

#edu/stanford/nlp/coref/data/Mention/stringWithoutArticle:

#edu/stanford/nlp/coref/data/Mention/preprocessSearchTerm:

#edu/stanford/nlp/coref/data/Mention/buildQueryText:

#edu/stanford/nlp/coref/data/Mention/removePhraseAfterHead:

#edu/stanford/nlp/coref/data/Mention/removeParenthesis:

#edu/stanford/nlp/coref/data/Mention/isTheCommonNoun:

#edu/stanford/nlp/coref/data/Mention/findDependentVerb:

#edu/stanford/nlp/coref/data/Mention/insideIn:

#edu/stanford/nlp/coref/data/Mention/moreRepresentativeThan:

#edu/stanford/nlp/coref/data/Mention/getPremodifiers:

#edu/stanford/nlp/coref/data/Mention/getPostmodifiers:

#edu/stanford/nlp/coref/data/Mention/getSplitPattern:

#edu/stanford/nlp/coref/data/Mention/getPattern:

#edu/stanford/nlp/coref/data/Mention/getPattern:

#edu/stanford/nlp/coref/data/Mention/isCoordinated:

#edu/stanford/nlp/coref/data/Mention/getContextHelper:

#edu/stanford/nlp/coref/data/Mention/getPremodifierContext:

#edu/stanford/nlp/coref/data/Mention/isRelativePronoun:

#edu/stanford/nlp/coref/data/Mention/isRoleAppositive:

#edu/stanford/nlp/coref/data/Mention/isDemonym:

#edu/stanford/nlp/coref/data/Mention/getPosition:

#edu/stanford/nlp/coref/data/Mention/getHeadParent:

#edu/stanford/nlp/coref/data/Mention/getHeadChildren:

#edu/stanford/nlp/coref/data/Mention/getHeadSiblings:

#edu/stanford/nlp/coref/data/Mention/getHeadPathToRoot:

#edu/stanford/nlp/coref/data/Mention/getRelation:

#edu/stanford/nlp/coref/data/Mention/getModifiers:

#edu/stanford/nlp/coref/data/Mention/getQuantification:

#edu/stanford/nlp/coref/data/Mention/getNegation:

#edu/stanford/nlp/coref/data/Mention/getModal:

#edu/stanford/nlp/coref/data/Mention/getReportEmbedding:

#edu/stanford/nlp/coref/data/Mention/getCoordination:

#edu/stanford/nlp/coref/data/Mention/equals:
edu.stanford.nlp.coref.data.Mention:
edu.stanford.nlp.coref.data.Dictionaries$Animacy:

#edu/stanford/nlp/coref/data/Dictionaries/readWordLists:

#edu/stanford/nlp/coref/data/Dictionaries/loadStateAbbreviation:

#edu/stanford/nlp/coref/data/Dictionaries/loadDemonymLists:

#edu/stanford/nlp/coref/data/Dictionaries/getDemonyms:

#edu/stanford/nlp/coref/data/Dictionaries/getWordsFromFile:

#edu/stanford/nlp/coref/data/Dictionaries/loadCountriesLists:

#edu/stanford/nlp/coref/data/Dictionaries/loadGenderNumber:

#edu/stanford/nlp/coref/data/Dictionaries/loadChineseGenderNumberAnimacy:

#edu/stanford/nlp/coref/data/Dictionaries/loadCorefDict:

#edu/stanford/nlp/coref/data/Dictionaries/loadCorefDictPMI:

#edu/stanford/nlp/coref/data/Dictionaries/loadSignatures:

#edu/stanford/nlp/coref/data/Dictionaries/loadSemantics:

#edu/stanford/nlp/coref/data/Dictionaries/<init>:

#edu/stanford/nlp/coref/data/Dictionaries/signature:

#edu/stanford/nlp/coref/data/Dictionaries/<init>:
edu.stanford.nlp.coref.data.Dictionaries:
edu.stanford.nlp.coref.data.InputDoc:

#edu/stanford/nlp/coref/data/CorefChain$MentionComparator/compare:
edu.stanford.nlp.coref.data.CorefChain$MentionComparator:
edu.stanford.nlp.coref.data.WordLists:
edu.stanford.nlp.coref.data.Document$DocType:

#edu/stanford/nlp/coref/data/CorefChain$CorefMention/equals:

#edu/stanford/nlp/coref/data/CorefChain$CorefMention/moreRepresentativeThan:
edu.stanford.nlp.coref.data.CorefChain$CorefMention:

#edu/stanford/nlp/coref/data/DocumentPreprocessor/preprocess:

#edu/stanford/nlp/coref/data/DocumentPreprocessor/extractGoldClusters:

#edu/stanford/nlp/coref/data/DocumentPreprocessor/assignMentionNumbers:

#edu/stanford/nlp/coref/data/DocumentPreprocessor/mentionReordering:

#edu/stanford/nlp/coref/data/DocumentPreprocessor/getHeadIndex:

#edu/stanford/nlp/coref/data/DocumentPreprocessor/fillSyntacticInfo:

#edu/stanford/nlp/coref/data/DocumentPreprocessor/initializeMentions:

#edu/stanford/nlp/coref/data/DocumentPreprocessor/assignMentionIDs:

#edu/stanford/nlp/coref/data/DocumentPreprocessor/findTwinMentions:

#edu/stanford/nlp/coref/data/DocumentPreprocessor/findTwinMentionsStrict:

#edu/stanford/nlp/coref/data/DocumentPreprocessor/findTwinMentionsRelaxed:

#edu/stanford/nlp/coref/data/DocumentPreprocessor/fillMentionInfo:

#edu/stanford/nlp/coref/data/DocumentPreprocessor/findSyntacticRelationsFromDependency:

#edu/stanford/nlp/coref/data/DocumentPreprocessor/initializeClusters:

#edu/stanford/nlp/coref/data/DocumentPreprocessor/findDocType:

#edu/stanford/nlp/coref/data/DocumentPreprocessor/setParagraphAnnotation:

#edu/stanford/nlp/coref/data/DocumentPreprocessor/processDiscourse:

#edu/stanford/nlp/coref/data/DocumentPreprocessor/setUtteranceAndSpeakerAnnotation:

#edu/stanford/nlp/coref/data/DocumentPreprocessor/findSpeakers:

#edu/stanford/nlp/coref/data/DocumentPreprocessor/findSpeakersInArticle:

#edu/stanford/nlp/coref/data/DocumentPreprocessor/findQuotationSpeaker:

#edu/stanford/nlp/coref/data/DocumentPreprocessor/findSpeaker:

#edu/stanford/nlp/coref/data/DocumentPreprocessor/findSubject:

#edu/stanford/nlp/coref/data/DocumentPreprocessor/findSpeakersInConversation:

#edu/stanford/nlp/coref/data/DocumentPreprocessor/findParagraphSpeaker:

#edu/stanford/nlp/coref/data/DocumentPreprocessor/findNextParagraphSpeaker:

#edu/stanford/nlp/coref/data/DocumentPreprocessor/isSpeaker:

#edu/stanford/nlp/coref/data/DocumentPreprocessor/markListMemberRelation:

#edu/stanford/nlp/coref/data/DocumentPreprocessor/markMentionRelation:
edu.stanford.nlp.coref.data.DocumentPreprocessor:
edu.stanford.nlp.coref.data.Dictionaries$Gender:

#edu/stanford/nlp/coref/data/CorefCluster/<init>:

#edu/stanford/nlp/coref/data/CorefCluster/mergeClusters:

#edu/stanford/nlp/coref/data/CorefCluster/printCorefCluster:

#edu/stanford/nlp/coref/data/CorefCluster/isSinglePronounCluster:
edu.stanford.nlp.coref.data.CorefCluster:
edu.stanford.nlp.coref.data.Dictionaries$MentionType:

#edu/stanford/nlp/coref/data/Document/getSentenceWordLists:

#edu/stanford/nlp/coref/data/Document/mergeIncompatibles:

#edu/stanford/nlp/coref/data/Document/mergeAcronymCache:

#edu/stanford/nlp/coref/data/Document/getGoldLinks:

#edu/stanford/nlp/coref/data/Document/extractGoldLinks:

#edu/stanford/nlp/coref/data/Document/isCoref:
edu.stanford.nlp.coref.data.Document:
edu.stanford.nlp.coref.data.Semantics:
edu.stanford.nlp.coref.data.Dictionaries$Person:

#edu/stanford/nlp/coref/data/CorefChain$CorefMentionComparator/compare:
edu.stanford.nlp.coref.data.CorefChain$CorefMentionComparator:
edu.stanford.nlp.coref.data.Dictionaries$Number:

#edu/stanford/nlp/coref/data/DocumentPreprocessor$1/compare:
edu.stanford.nlp.coref.data.DocumentPreprocessor$1:

#edu/stanford/nlp/coref/neural/NeuralCorefAlgorithm/runCoref:
edu.stanford.nlp.coref.neural.NeuralCorefAlgorithm:

#edu/stanford/nlp/coref/neural/NeuralCorefProperties/modelPath:

#edu/stanford/nlp/coref/neural/NeuralCorefProperties/pretrainedEmbeddingsPath:
edu.stanford.nlp.coref.neural.NeuralCorefProperties:

#edu/stanford/nlp/coref/neural/ModelSerializer/main:
edu.stanford.nlp.coref.neural.ModelSerializer:

#edu/stanford/nlp/coref/neural/CategoricalFeatureExtractor/<init>:

#edu/stanford/nlp/coref/neural/CategoricalFeatureExtractor/getPairFeatures:

#edu/stanford/nlp/coref/neural/CategoricalFeatureExtractor/pairwiseFeatures:

#edu/stanford/nlp/coref/neural/CategoricalFeatureExtractor/getMentionFeatures:

#edu/stanford/nlp/coref/neural/CategoricalFeatureExtractor/encodeDistance:

#edu/stanford/nlp/coref/neural/CategoricalFeatureExtractor/encodeGenre:

#edu/stanford/nlp/coref/neural/CategoricalFeatureExtractor/lambda$getMentionFeatures$0:
edu.stanford.nlp.coref.neural.CategoricalFeatureExtractor:

#edu/stanford/nlp/coref/neural/EmbeddingExtractor/getDocumentEmbedding:

#edu/stanford/nlp/coref/neural/EmbeddingExtractor/getMentionEmbeddingsForFast:

#edu/stanford/nlp/coref/neural/EmbeddingExtractor/getMentionEmbeddings:

#edu/stanford/nlp/coref/neural/EmbeddingExtractor/getAverageEmbedding:

#edu/stanford/nlp/coref/neural/EmbeddingExtractor/getWordEmbedding:

#edu/stanford/nlp/coref/neural/EmbeddingExtractor/getWordEmbedding:

#edu/stanford/nlp/coref/neural/EmbeddingExtractor/normalizeWord:
edu.stanford.nlp.coref.neural.EmbeddingExtractor:

#edu/stanford/nlp/coref/neural/NeuralCorefModel/score:
edu.stanford.nlp.coref.neural.NeuralCorefModel:

#edu/stanford/nlp/coref/neural/NeuralCorefDataExporter/process:

#edu/stanford/nlp/coref/neural/NeuralCorefDataExporter/main:

#edu/stanford/nlp/coref/neural/NeuralCorefDataExporter/lambda$getSentenceArray$3:

#edu/stanford/nlp/coref/neural/NeuralCorefDataExporter/lambda$getSentenceArray$2:

#edu/stanford/nlp/coref/neural/NeuralCorefDataExporter/lambda$process$1:
edu.stanford.nlp.coref.neural.NeuralCorefDataExporter:

#edu/stanford/nlp/coref/hybrid/HybridCorefSystem/<init>:

#edu/stanford/nlp/coref/hybrid/HybridCorefSystem/<init>:

#edu/stanford/nlp/coref/hybrid/HybridCorefSystem/runCoref:
Warning: Method:edu.stanford.nlp.coref.hybrid.HybridCorefSystem.logOutput has incoming edges.

#edu/stanford/nlp/coref/hybrid/HybridCorefSystem/coref:

#edu/stanford/nlp/coref/hybrid/HybridCorefSystem/makeCorefOutput:

#edu/stanford/nlp/coref/hybrid/HybridCorefSystem/postProcessing:
edu.stanford.nlp.coref.hybrid.HybridCorefSystem:
edu.stanford.nlp.coref.hybrid.HybridCorefPrinter$1:

#edu/stanford/nlp/coref/hybrid/HybridCorefPrinter/printRawDoc:

#edu/stanford/nlp/coref/hybrid/HybridCorefPrinter/printErrorLog:

#edu/stanford/nlp/coref/hybrid/HybridCorefPrinter/isFirstMention:

#edu/stanford/nlp/coref/hybrid/HybridCorefPrinter/sentenceStringWithMention:

#edu/stanford/nlp/coref/hybrid/HybridCorefPrinter/printMentionDetectionLog:

#edu/stanford/nlp/coref/hybrid/HybridCorefPrinter/printErrorLogDcoref:

#edu/stanford/nlp/coref/hybrid/HybridCorefPrinter/linkDistanceAnalysis:
edu.stanford.nlp.coref.hybrid.HybridCorefPrinter:

#edu/stanford/nlp/coref/hybrid/HybridCorefProperties/getLanguage:

#edu/stanford/nlp/coref/hybrid/HybridCorefProperties/getClassifierType:

#edu/stanford/nlp/coref/hybrid/HybridCorefProperties/getMentionTypes:

#edu/stanford/nlp/coref/hybrid/HybridCorefProperties/getMentionTypeStr:
edu.stanford.nlp.coref.hybrid.HybridCorefProperties:
edu.stanford.nlp.coref.hybrid.HybridCorefSystem$1:

#edu/stanford/nlp/coref/hybrid/demo/ChineseHcorefDemo/main:
edu.stanford.nlp.coref.hybrid.demo.ChineseHcorefDemo:

#edu/stanford/nlp/coref/hybrid/rf/DecisionTreeNode/isLeaf:
edu.stanford.nlp.coref.hybrid.rf.DecisionTreeNode:

#edu/stanford/nlp/coref/hybrid/rf/DecisionTree/probabilityOfTrue:
edu.stanford.nlp.coref.hybrid.rf.DecisionTree:

#edu/stanford/nlp/coref/hybrid/rf/RandomForest/probabilityOfTrue:
edu.stanford.nlp.coref.hybrid.rf.RandomForest:
edu.stanford.nlp.coref.hybrid.sieve.StrictHeadMatch1:

#edu/stanford/nlp/coref/hybrid/sieve/Sieve/resolveMention:

#edu/stanford/nlp/coref/hybrid/sieve/Sieve/loadSieve:

#edu/stanford/nlp/coref/hybrid/sieve/Sieve/loadSieves:

#edu/stanford/nlp/coref/hybrid/sieve/Sieve/hasThat:

#edu/stanford/nlp/coref/hybrid/sieve/Sieve/hasToVerb:

#edu/stanford/nlp/coref/hybrid/sieve/Sieve/skipMentionType:

#edu/stanford/nlp/coref/hybrid/sieve/Sieve/merge:

#edu/stanford/nlp/coref/hybrid/sieve/Sieve/isReallyCoref:

#edu/stanford/nlp/coref/hybrid/sieve/Sieve/skipForAnalysis:

#edu/stanford/nlp/coref/hybrid/sieve/Sieve/matchedMentionType:

#edu/stanford/nlp/coref/hybrid/sieve/Sieve/matchedMentionType:

#edu/stanford/nlp/coref/hybrid/sieve/Sieve/getOrderedAntecedents:

#edu/stanford/nlp/coref/hybrid/sieve/Sieve/sortMentionsByClause:
edu.stanford.nlp.coref.hybrid.sieve.Sieve:
edu.stanford.nlp.coref.hybrid.sieve.RelaxedHeadMatch:
edu.stanford.nlp.coref.hybrid.sieve.StrictHeadMatch3:
edu.stanford.nlp.coref.hybrid.sieve.MarkRole:

#edu/stanford/nlp/coref/hybrid/sieve/DcorefSieveOptions/toString:
edu.stanford.nlp.coref.hybrid.sieve.DcorefSieveOptions:
edu.stanford.nlp.coref.hybrid.sieve.Sieve$ClassifierType:
edu.stanford.nlp.coref.hybrid.sieve.StrictHeadMatch2:

#edu/stanford/nlp/coref/hybrid/sieve/DeterministicCorefSieve/findCoreferentAntecedent:

#edu/stanford/nlp/coref/hybrid/sieve/DeterministicCorefSieve/skipThisMention:
Warning: Method:edu.stanford.nlp.coref.hybrid.sieve.DeterministicCorefSieve.coreferent has auto edges.

#edu/stanford/nlp/coref/hybrid/sieve/DeterministicCorefSieve/getOrderedAntecedents:

#edu/stanford/nlp/coref/hybrid/sieve/DeterministicCorefSieve/sortMentionsForPronoun:
edu.stanford.nlp.coref.hybrid.sieve.DeterministicCorefSieve:
edu.stanford.nlp.coref.hybrid.sieve.MentionMatcher:
edu.stanford.nlp.coref.hybrid.sieve.LexicalChainMatch:
edu.stanford.nlp.coref.hybrid.sieve.PreciseConstructs:
edu.stanford.nlp.coref.hybrid.sieve.StrictHeadMatch4:
edu.stanford.nlp.coref.hybrid.sieve.ExactStringMatch:

#edu/stanford/nlp/coref/hybrid/sieve/RFSieve/findCoreferentAntecedent:

#edu/stanford/nlp/coref/hybrid/sieve/RFSieve/extractDatum:

#edu/stanford/nlp/coref/hybrid/sieve/RFSieve/numEntitiesInList:
edu.stanford.nlp.coref.hybrid.sieve.RFSieve:
edu.stanford.nlp.coref.hybrid.sieve.ChineseHeadMatch:
edu.stanford.nlp.coref.hybrid.sieve.SpeakerMatch:
edu.stanford.nlp.coref.hybrid.sieve.NameMatchPrecise:

#edu/stanford/nlp/coref/hybrid/sieve/OracleSieve/findCoreferentAntecedent:
edu.stanford.nlp.coref.hybrid.sieve.OracleSieve:
edu.stanford.nlp.coref.hybrid.sieve.PronounMatch:
edu.stanford.nlp.coref.hybrid.sieve.CorefDictionaryMatch:
edu.stanford.nlp.coref.hybrid.sieve.AliasMatch:
edu.stanford.nlp.coref.hybrid.sieve.RelaxedExactStringMatch:

#edu/stanford/nlp/coref/hybrid/sieve/NameMatch/isNamedMention:

#edu/stanford/nlp/coref/hybrid/sieve/NameMatch/checkEntityMatch:
edu.stanford.nlp.coref.hybrid.sieve.NameMatch:
edu.stanford.nlp.coref.hybrid.sieve.Sieve$1:
edu.stanford.nlp.coref.hybrid.sieve.DiscourseMatch:

#edu/stanford/nlp/process/TSVSentenceIterator/toCoreMap:
edu.stanford.nlp.process.TSVSentenceIterator:
Warning: Method:edu.stanford.nlp.process.WhitespaceLexer.zzUnpackcmap_top has auto edges.
Warning: Method:edu.stanford.nlp.process.WhitespaceLexer.zzUnpackcmap_blocks has auto edges.
Warning: Method:edu.stanford.nlp.process.WhitespaceLexer.zzUnpackAction has auto edges.

#edu/stanford/nlp/process/WhitespaceLexer/zzUnpackRowMap:
Warning: Method:edu.stanford.nlp.process.WhitespaceLexer.zzUnpackTrans has auto edges.
Warning: Method:edu.stanford.nlp.process.WhitespaceLexer.zzUnpackAttribute has auto edges.

#edu/stanford/nlp/process/WhitespaceLexer/zzCMap:

#edu/stanford/nlp/process/WhitespaceLexer/zzRefill:

#edu/stanford/nlp/process/WhitespaceLexer/yyclose:

#edu/stanford/nlp/process/WhitespaceLexer/yyreset:

#edu/stanford/nlp/process/WhitespaceLexer/yypushback:

#edu/stanford/nlp/process/WhitespaceLexer/next:
edu.stanford.nlp.process.WhitespaceLexer:
edu.stanford.nlp.process.LexerUtils$1:
edu.stanford.nlp.process.TransformXML:

#edu/stanford/nlp/process/CoreLabelTokenFactory/makeToken:
edu.stanford.nlp.process.CoreLabelTokenFactory:
edu.stanford.nlp.process.WordShapeClassifier$1:
edu.stanford.nlp.process.PTBLexer$1:

#edu/stanford/nlp/process/WordToTaggedWordProcessor/process:

#edu/stanford/nlp/process/WordToTaggedWordProcessor/splitTag:

#edu/stanford/nlp/process/WordToTaggedWordProcessor/main:
edu.stanford.nlp.process.WordToTaggedWordProcessor:
edu.stanford.nlp.process.PTBTokenizer$1:
edu.stanford.nlp.process.TSVSentenceProcessor$SentenceField:

#edu/stanford/nlp/process/TransformXML$SAXInterface/outputTextAndTag:

#edu/stanford/nlp/process/TransformXML$SAXInterface/startElement:

#edu/stanford/nlp/process/TransformXML$SAXInterface/endElement:

#edu/stanford/nlp/process/TransformXML$SAXInterface/processText:
edu.stanford.nlp.process.TransformXML$SAXInterface:

#edu/stanford/nlp/process/AbstractListProcessor/processLists:
edu.stanford.nlp.process.AbstractListProcessor:

#edu/stanford/nlp/process/DistSimClassifier/<init>:

#edu/stanford/nlp/process/DistSimClassifier/distSimClass:
edu.stanford.nlp.process.DistSimClassifier:

#edu/stanford/nlp/process/WordSegmentingTokenizer$WordSegmentingTokenizerFactory/getTokenizer:
edu.stanford.nlp.process.WordSegmentingTokenizer$WordSegmentingTokenizerFactory:
edu.stanford.nlp.process.WordSegmenter:
edu.stanford.nlp.process.CoreLabelProcessor:
edu.stanford.nlp.process.WordToSentenceProcessor$NewlineIsSentenceBreak:
Warning: Method:edu.stanford.nlp.process.PTB2TextLexer.zzUnpackcmap_top has auto edges.
Warning: Method:edu.stanford.nlp.process.PTB2TextLexer.zzUnpackcmap_blocks has auto edges.
Warning: Method:edu.stanford.nlp.process.PTB2TextLexer.zzUnpackAction has auto edges.

#edu/stanford/nlp/process/PTB2TextLexer/zzUnpackRowMap:
Warning: Method:edu.stanford.nlp.process.PTB2TextLexer.zzUnpackTrans has auto edges.
Warning: Method:edu.stanford.nlp.process.PTB2TextLexer.zzUnpackAttribute has auto edges.

#edu/stanford/nlp/process/PTB2TextLexer/removeWhite:

#edu/stanford/nlp/process/PTB2TextLexer/zzCMap:

#edu/stanford/nlp/process/PTB2TextLexer/zzRefill:

#edu/stanford/nlp/process/PTB2TextLexer/yyclose:

#edu/stanford/nlp/process/PTB2TextLexer/yyreset:

#edu/stanford/nlp/process/PTB2TextLexer/yypushback:

#edu/stanford/nlp/process/PTB2TextLexer/next:
edu.stanford.nlp.process.PTB2TextLexer:

#edu/stanford/nlp/process/LowercaseFunction/apply:
edu.stanford.nlp.process.LowercaseFunction:

#edu/stanford/nlp/process/TSVSentenceIterator$SentenceField/isToken:
edu.stanford.nlp.process.TSVSentenceIterator$SentenceField:
edu.stanford.nlp.process.Tokenizer:

#edu/stanford/nlp/process/WordToSentenceProcessor/stringToNewlineIsSentenceBreak:

#edu/stanford/nlp/process/WordToSentenceProcessor/isForcedEndToken:

#edu/stanford/nlp/process/WordToSentenceProcessor/getString:

#edu/stanford/nlp/process/WordToSentenceProcessor/matches:

#edu/stanford/nlp/process/WordToSentenceProcessor/process:

#edu/stanford/nlp/process/WordToSentenceProcessor/plausibleToAdd:

#edu/stanford/nlp/process/WordToSentenceProcessor/wordsToSentences:

#edu/stanford/nlp/process/WordToSentenceProcessor/<init>:

#edu/stanford/nlp/process/WordToSentenceProcessor/<init>:
edu.stanford.nlp.process.WordToSentenceProcessor:
edu.stanford.nlp.process.SerializableFunction:

#edu/stanford/nlp/process/Morphology/next:

#edu/stanford/nlp/process/Morphology/lemmatize:

#edu/stanford/nlp/process/Morphology/initStaticLexer:

#edu/stanford/nlp/process/Morphology/apply:

#edu/stanford/nlp/process/Morphology/main:
edu.stanford.nlp.process.Morphology:

#edu/stanford/nlp/process/Stemmer/add:

#edu/stanford/nlp/process/Stemmer/cons:

#edu/stanford/nlp/process/Stemmer/m:

#edu/stanford/nlp/process/Stemmer/vowelinstem:

#edu/stanford/nlp/process/Stemmer/doublec:

#edu/stanford/nlp/process/Stemmer/cvc:

#edu/stanford/nlp/process/Stemmer/ends:

#edu/stanford/nlp/process/Stemmer/setto:

#edu/stanford/nlp/process/Stemmer/r:

#edu/stanford/nlp/process/Stemmer/step1:

#edu/stanford/nlp/process/Stemmer/step2:

#edu/stanford/nlp/process/Stemmer/step3:

#edu/stanford/nlp/process/Stemmer/step4:

#edu/stanford/nlp/process/Stemmer/step5:

#edu/stanford/nlp/process/Stemmer/step6:

#edu/stanford/nlp/process/Stemmer/stem:

#edu/stanford/nlp/process/Stemmer/main:

#edu/stanford/nlp/process/Stemmer/stem:
edu.stanford.nlp.process.Stemmer:
edu.stanford.nlp.process.LexerUtils$QuotesEnum:
edu.stanford.nlp.process.TSVSentenceProcessor:

#edu/stanford/nlp/process/TSVUtils/unescapeSQL:

#edu/stanford/nlp/process/TSVUtils/parseArray:

#edu/stanford/nlp/process/TSVUtils/parseTree:

#edu/stanford/nlp/process/TSVUtils/parseJsonTree:

#edu/stanford/nlp/process/TSVUtils/parseSentence:
edu.stanford.nlp.process.TSVUtils:
edu.stanford.nlp.process.CoreTokenFactory:
edu.stanford.nlp.process.WordTokenFactory:

#edu/stanford/nlp/process/DocumentPreprocessor$PlainTextIterator/<init>:

#edu/stanford/nlp/process/DocumentPreprocessor$PlainTextIterator/primeNext:

#edu/stanford/nlp/process/DocumentPreprocessor$PlainTextIterator/hasNext:

#edu/stanford/nlp/process/DocumentPreprocessor$PlainTextIterator/next:
edu.stanford.nlp.process.DocumentPreprocessor$PlainTextIterator:
edu.stanford.nlp.process.ListProcessor:

#edu/stanford/nlp/process/TransformXML$NoEscapingSAXInterface/processText:
edu.stanford.nlp.process.TransformXML$NoEscapingSAXInterface:
edu.stanford.nlp.process.LexedTokenFactory:
edu.stanford.nlp.process.PTBLexer$UntokenizableOptions:

#edu/stanford/nlp/process/DocumentPreprocessor/<init>:

#edu/stanford/nlp/process/DocumentPreprocessor/<init>:

#edu/stanford/nlp/process/DocumentPreprocessor/iterator:

#edu/stanford/nlp/process/DocumentPreprocessor/main:
edu.stanford.nlp.process.DocumentPreprocessor:
edu.stanford.nlp.process.TSVSentenceIterator$1:

#edu/stanford/nlp/process/PTBTokenizer/<init>:

#edu/stanford/nlp/process/PTBTokenizer/ptb2Text:

#edu/stanford/nlp/process/PTBTokenizer/ptb2Text:

#edu/stanford/nlp/process/PTBTokenizer/untok:

#edu/stanford/nlp/process/PTBTokenizer/labelList2Text:

#edu/stanford/nlp/process/PTBTokenizer/tok:

#edu/stanford/nlp/process/PTBTokenizer/tokReader:

#edu/stanford/nlp/process/PTBTokenizer/main:
edu.stanford.nlp.process.PTBTokenizer:

#edu/stanford/nlp/process/PTBEscapingProcessor/unprocess:

#edu/stanford/nlp/process/PTBEscapingProcessor/process:

#edu/stanford/nlp/process/PTBEscapingProcessor/fixQuotes:

#edu/stanford/nlp/process/PTBEscapingProcessor/escapeString:

#edu/stanford/nlp/process/PTBEscapingProcessor/maybeAppendOneMore:

#edu/stanford/nlp/process/PTBEscapingProcessor/main:
edu.stanford.nlp.process.PTBEscapingProcessor:
edu.stanford.nlp.process.WhitespaceTokenizer$WhitespaceTokenizerFactory:

#edu/stanford/nlp/process/ChineseDocumentToSentenceProcessor$MyHTMLParser/handleText:

#edu/stanford/nlp/process/ChineseDocumentToSentenceProcessor$MyHTMLParser/handleStartTag:

#edu/stanford/nlp/process/ChineseDocumentToSentenceProcessor$MyHTMLParser/handleEndTag:
edu.stanford.nlp.process.ChineseDocumentToSentenceProcessor$MyHTMLParser:

#edu/stanford/nlp/process/CodepointCoreLabelProcessor/process:

#edu/stanford/nlp/process/CodepointCoreLabelProcessor/restore:
edu.stanford.nlp.process.CodepointCoreLabelProcessor:
Warning: Method:edu.stanford.nlp.process.JFlexDummyLexer.zzUnpackcmap_top has auto edges.
Warning: Method:edu.stanford.nlp.process.JFlexDummyLexer.zzUnpackcmap_blocks has auto edges.
Warning: Method:edu.stanford.nlp.process.JFlexDummyLexer.zzUnpackAction has auto edges.

#edu/stanford/nlp/process/JFlexDummyLexer/zzUnpackRowMap:
Warning: Method:edu.stanford.nlp.process.JFlexDummyLexer.zzUnpackTrans has auto edges.
Warning: Method:edu.stanford.nlp.process.JFlexDummyLexer.zzUnpackAttribute has auto edges.

#edu/stanford/nlp/process/JFlexDummyLexer/zzCMap:

#edu/stanford/nlp/process/JFlexDummyLexer/zzRefill:

#edu/stanford/nlp/process/JFlexDummyLexer/yyclose:

#edu/stanford/nlp/process/JFlexDummyLexer/yyreset:

#edu/stanford/nlp/process/JFlexDummyLexer/yypushback:

#edu/stanford/nlp/process/JFlexDummyLexer/yylex:
edu.stanford.nlp.process.JFlexDummyLexer:
edu.stanford.nlp.process.DocumentProcessor:
edu.stanford.nlp.process.WordShapeClassifier$DistributionalClusters$LcMap:

#edu/stanford/nlp/process/ChineseDocumentToSentenceProcessor/<init>:

#edu/stanford/nlp/process/ChineseDocumentToSentenceProcessor/normalize:

#edu/stanford/nlp/process/ChineseDocumentToSentenceProcessor/main:

#edu/stanford/nlp/process/ChineseDocumentToSentenceProcessor/fromHTML:

#edu/stanford/nlp/process/ChineseDocumentToSentenceProcessor/fromPlainText:

#edu/stanford/nlp/process/ChineseDocumentToSentenceProcessor/removeWhitespace:
edu.stanford.nlp.process.ChineseDocumentToSentenceProcessor:

#edu/stanford/nlp/process/AmericanizeFunction/apply:
edu.stanford.nlp.process.AmericanizeFunction:
Warning: Method:edu.stanford.nlp.process.DocumentPreprocessor$XMLIterator.primeNext has incoming edges.

#edu/stanford/nlp/process/DocumentPreprocessor$XMLIterator/hasNext:

#edu/stanford/nlp/process/DocumentPreprocessor$XMLIterator/next:
edu.stanford.nlp.process.DocumentPreprocessor$XMLIterator:

#edu/stanford/nlp/process/LexerUtils/normalizeFractions:

#edu/stanford/nlp/process/LexerUtils/removeSoftHyphens:

#edu/stanford/nlp/process/LexerUtils/escapeChar:

#edu/stanford/nlp/process/LexerUtils/latexQuotes:

#edu/stanford/nlp/process/LexerUtils/unicodeQuotes:

#edu/stanford/nlp/process/LexerUtils/handleQuotes:

#edu/stanford/nlp/process/LexerUtils/handleEllipsis:

#edu/stanford/nlp/process/LexerUtils/handleDashes:

#edu/stanford/nlp/process/LexerUtils/pennNormalizeParens:
edu.stanford.nlp.process.LexerUtils:

#edu/stanford/nlp/process/WhitespaceTokenizer/getNext:

#edu/stanford/nlp/process/WhitespaceTokenizer/<init>:

#edu/stanford/nlp/process/WhitespaceTokenizer/main:
edu.stanford.nlp.process.WhitespaceTokenizer:

#edu/stanford/nlp/process/Americanize/<init>:

#edu/stanford/nlp/process/Americanize/apply:

#edu/stanford/nlp/process/Americanize/americanize:

#edu/stanford/nlp/process/Americanize/main:
edu.stanford.nlp.process.Americanize:

#edu/stanford/nlp/process/LowercaseAndAmericanizeFunction/apply:
edu.stanford.nlp.process.LowercaseAndAmericanizeFunction:
edu.stanford.nlp.process.LexerUtils$EllipsesEnum:

#edu/stanford/nlp/process/TokenizerAdapter/getNext:

#edu/stanford/nlp/process/TokenizerAdapter/setEolString:
edu.stanford.nlp.process.TokenizerAdapter:

#edu/stanford/nlp/process/LexerTokenizer/getNext:

#edu/stanford/nlp/process/LexerTokenizer/<init>:

#edu/stanford/nlp/process/LexerTokenizer/main:
edu.stanford.nlp.process.LexerTokenizer:

#edu/stanford/nlp/process/DocumentPreprocessor$PlainTextIterator$1/apply:
edu.stanford.nlp.process.DocumentPreprocessor$PlainTextIterator$1:

#edu/stanford/nlp/process/AbstractTokenizer/next:

#edu/stanford/nlp/process/AbstractTokenizer/hasNext:

#edu/stanford/nlp/process/AbstractTokenizer/peek:

#edu/stanford/nlp/process/AbstractTokenizer/tokenize:
edu.stanford.nlp.process.AbstractTokenizer:
Warning: Method:edu.stanford.nlp.process.PTBLexer.zzUnpackcmap_top has auto edges.
Warning: Method:edu.stanford.nlp.process.PTBLexer.zzUnpackcmap_blocks has auto edges.
Warning: Method:edu.stanford.nlp.process.PTBLexer.zzUnpackAction has auto edges.

#edu/stanford/nlp/process/PTBLexer/zzUnpackRowMap:
Warning: Method:edu.stanford.nlp.process.PTBLexer.zzUnpackTrans has auto edges.
Warning: Method:edu.stanford.nlp.process.PTBLexer.zzUnpackAttribute has auto edges.

#edu/stanford/nlp/process/PTBLexer/<init>:

#edu/stanford/nlp/process/PTBLexer/breakByHyphensSlashes:

#edu/stanford/nlp/process/PTBLexer/handleHyphenatedNumber:

#edu/stanford/nlp/process/PTBLexer/removeFromNumber:

#edu/stanford/nlp/process/PTBLexer/indexOfSpace:

#edu/stanford/nlp/process/PTBLexer/getNext:
Warning: Method:edu.stanford.nlp.process.PTBLexer.fixJFlex4SpaceAfterTokenBug has incoming edges.

#edu/stanford/nlp/process/PTBLexer/processAcronym:

#edu/stanford/nlp/process/PTBLexer/processAbbrev1:

#edu/stanford/nlp/process/PTBLexer/zzCMap:

#edu/stanford/nlp/process/PTBLexer/zzRefill:

#edu/stanford/nlp/process/PTBLexer/yyclose:

#edu/stanford/nlp/process/PTBLexer/yyreset:

#edu/stanford/nlp/process/PTBLexer/yypushback:

#edu/stanford/nlp/process/PTBLexer/next:
edu.stanford.nlp.process.PTBLexer:
edu.stanford.nlp.process.DocumentPreprocessor$DocType:
edu.stanford.nlp.process.LexerUtils$DashesEnum:

#edu/stanford/nlp/process/StripTagsProcessor/process:
edu.stanford.nlp.process.StripTagsProcessor:
edu.stanford.nlp.process.TokenizerFactory:
Warning: Method:edu.stanford.nlp.process.Morpha.zzUnpackcmap_top has auto edges.
Warning: Method:edu.stanford.nlp.process.Morpha.zzUnpackcmap_blocks has auto edges.
Warning: Method:edu.stanford.nlp.process.Morpha.zzUnpackAction has auto edges.

#edu/stanford/nlp/process/Morpha/zzUnpackRowMap:
Warning: Method:edu.stanford.nlp.process.Morpha.zzUnpackTrans has auto edges.
Warning: Method:edu.stanford.nlp.process.Morpha.zzUnpackAttribute has auto edges.

#edu/stanford/nlp/process/Morpha/setOptions:

#edu/stanford/nlp/process/Morpha/common_noun_stem:

#edu/stanford/nlp/process/Morpha/capitalise:

#edu/stanford/nlp/process/Morpha/condub_stem:

#edu/stanford/nlp/process/Morpha/stem:

#edu/stanford/nlp/process/Morpha/semi_reg_stem:

#edu/stanford/nlp/process/Morpha/<init>:

#edu/stanford/nlp/process/Morpha/zzCMap:

#edu/stanford/nlp/process/Morpha/zzRefill:

#edu/stanford/nlp/process/Morpha/yyclose:

#edu/stanford/nlp/process/Morpha/yyreset:

#edu/stanford/nlp/process/Morpha/yypushback:

#edu/stanford/nlp/process/Morpha/next:
edu.stanford.nlp.process.Morpha:

#edu/stanford/nlp/process/PTBTokenizer$PTBTokenizerFactory/<init>:

#edu/stanford/nlp/process/PTBTokenizer$PTBTokenizerFactory/getTokenizer:
edu.stanford.nlp.process.PTBTokenizer$PTBTokenizerFactory:

#edu/stanford/nlp/process/StoplistFilter/processDocument:
edu.stanford.nlp.process.StoplistFilter:

#edu/stanford/nlp/process/StopList/<init>:

#edu/stanford/nlp/process/StopList/addGenericWords:
edu.stanford.nlp.process.StopList:
Warning: Method:edu.stanford.nlp.process.WordSegmentingTokenizer.getNext has incoming edges.
edu.stanford.nlp.process.WordSegmentingTokenizer:

#edu/stanford/nlp/process/WordShapeClassifier/lookupShaper:

#edu/stanford/nlp/process/WordShapeClassifier/dontUseLC:

#edu/stanford/nlp/process/WordShapeClassifier/wordShape:

#edu/stanford/nlp/process/WordShapeClassifier/wordShapeDan1:

#edu/stanford/nlp/process/WordShapeClassifier/wordShapeDan2:

#edu/stanford/nlp/process/WordShapeClassifier/wordShapeJenny1:

#edu/stanford/nlp/process/WordShapeClassifier/wordShapeChris2:

#edu/stanford/nlp/process/WordShapeClassifier/wordShapeChris2Short:

#edu/stanford/nlp/process/WordShapeClassifier/wordShapeChris2Long:

#edu/stanford/nlp/process/WordShapeClassifier/chris4equivalenceClass:

#edu/stanford/nlp/process/WordShapeClassifier/wordShapeChris4:

#edu/stanford/nlp/process/WordShapeClassifier/wordShapeChris4Short:

#edu/stanford/nlp/process/WordShapeClassifier/wordShapeChris4Long:

#edu/stanford/nlp/process/WordShapeClassifier/wordShapeDan2Bio:

#edu/stanford/nlp/process/WordShapeClassifier/wordShapeChris1:

#edu/stanford/nlp/process/WordShapeClassifier/wordShapeDigits:

#edu/stanford/nlp/process/WordShapeClassifier/wordShapeCluster1:

#edu/stanford/nlp/process/WordShapeClassifier/main:
edu.stanford.nlp.process.WordShapeClassifier:

#edu/stanford/nlp/process/WordShapeClassifier$DistributionalClusters/loadWordClusters:
edu.stanford.nlp.process.WordShapeClassifier$DistributionalClusters:

#edu/stanford/nlp/process/stattok/StatTokSentTrainer/fileToTrainSet:

#edu/stanford/nlp/process/stattok/StatTokSentTrainer/addFeatures:

#edu/stanford/nlp/process/stattok/StatTokSentTrainer/readMultiWordRules:

#edu/stanford/nlp/process/stattok/StatTokSentTrainer/writeMultiWordRules:

#edu/stanford/nlp/process/stattok/StatTokSentTrainer/inferMultiWordRules:

#edu/stanford/nlp/process/stattok/StatTokSentTrainer/main:
edu.stanford.nlp.process.stattok.StatTokSentTrainer:

#edu/stanford/nlp/process/stattok/BuildMultiWordRules/main:
edu.stanford.nlp.process.stattok.BuildMultiWordRules:

#edu/stanford/nlp/process/stattok/StatTokSent/<init>:

#edu/stanford/nlp/process/stattok/StatTokSent/readMultiWordRules:

#edu/stanford/nlp/process/stattok/StatTokSent/classify:

#edu/stanford/nlp/process/stattok/StatTokSent/textToFeatures:

#edu/stanford/nlp/process/stattok/StatTokSent/tokenToSplit:

#edu/stanford/nlp/process/stattok/StatTokSent/splitToken:

#edu/stanford/nlp/process/stattok/StatTokSent/makeSentenceTokens:

#edu/stanford/nlp/process/stattok/StatTokSent/tokenize:

#edu/stanford/nlp/process/stattok/StatTokSent/main:
edu.stanford.nlp.process.stattok.StatTokSent:

#edu/stanford/nlp/truecaser/MixDisambiguation/main:
edu.stanford.nlp.truecaser.MixDisambiguation:
13,601 methods analyzed in 45 minutes and 24 seconds
Unconstrained DUAs time (ms):2724406
