{
"Class" : "com.google.javascript.jscomp.ExpressionDecomposer", 
"Methods" : [{ "Name" : "maybeExposeExpression" ,
"Nodes" : 6,
"0" : [ ],
"1" : [ ],
"2" : [ 1, 4, 8],
"3" : [ 0, 2, 3, 5, 7, 9],
"4" : [ 0, 2, 3, 5, 6, 7, 9, 10],
"5" : [ ],
"CoveredDUAsByNodes" : 11,
"Duas" : 13
},{ "Name" : "exposeExpression" ,
"Nodes" : 5,
"0" : [ ],
"1" : [ 5],
"3" : [ 4],
"2" : [ 0, 1, 2, 3, 6],
"4" : [ 0, 1, 2, 3, 6],
"CoveredDUAsByNodes" : 7,
"Duas" : 7
},{ "Name" : "exposeExpression" ,
"Nodes" : 32,
"0" : [ ],
"1" : [ ],
"2" : [ 12],
"3" : [ 16, 17, 12, 14],
"4" : [ 16, 112, 17, 12, 14],
"7" : [ 16, 17, 12, 14, 111],
"5" : [ 0, 16, 17, 18, 19, 12, 14],
"8" : [ 12, 13, 15],
"6" : [ 12],
"31" : [ 12],
"9" : [ 11, 45, 47],
"29" : [ 11, 45, 47],
"30" : [ 11, 45, 47],
"10" : [ 11, 45, 47],
"11" : [ 11, 45, 47],
"12" : [ 11, 45, 47, 63],
"17" : [ 64, 11, 45, 47, 63],
"13" : [ 11, 45, 47, 63],
"14" : [ 1, 67, 20, 11, 45, 47, 63],
"16" : [ 2, 66, 21, 11, 45, 47, 63],
"18" : [ 64, 3, 22, 11, 45, 47, 63],
"20" : [ 64, 3, 4, 22, 23, 11, 75, 45, 31, 47, 63],
"21" : [ 64, 3, 4, 6, 11, 75, 45, 77, 47, 22, 23, 25, 26, 31, 63],
"19" : [ 64, 3, 11, 45, 47, 22, 63],
"22" : [ 11, 45, 47, 62],
"23" : [ 8, 11, 45, 47, 28, 62],
"25" : [ 68, 70, 8, 11, 45, 47, 28, 62],
"27" : [ 68, 70, 8, 72, 73, 10, 11, 45, 47, 28, 30, 62],
"26" : [ 68, 70, 71, 8, 9, 11, 45, 47, 28, 29, 62],
"24" : [ 8, 11, 45, 47, 28, 62],
"28" : [ 7, 11, 45, 47, 27, 62],
"15" : [ 38, 11, 45, 47],
"CoveredDUAsByNodes" : 47,
"Duas" : 113
},{ "Name" : "findNonconditionalParent" ,
"Nodes" : 8,
"0" : [ ],
"1" : [ ],
"2" : [ 1],
"7" : [ 1],
"3" : [ 0, 5],
"5" : [ 0, 5],
"6" : [ 0, 5],
"4" : [ 0, 5, 9],
"CoveredDUAsByNodes" : 4,
"Duas" : 24
},{ "Name" : "decomposeObjectLiteralKeys" ,
"Nodes" : 5,
"0" : [ ],
"2" : [ 2],
"3" : [ 0, 1, 2, 5, 6, 7, 9, 10, 11, 12, 13],
"1" : [ ],
"4" : [ ],
"CoveredDUAsByNodes" : 11,
"Duas" : 14
},{ "Name" : "decomposeSubExpressions" ,
"Nodes" : 10,
"0" : [ ],
"2" : [ 4],
"3" : [ 4, 7, 15],
"4" : [ 4, 7, 9, 15],
"8" : [ 4, 7, 8, 15],
"5" : [ 0, 16, 17, 4, 7, 10, 15],
"7" : [ 0, 1, 3, 4, 7, 10, 11, 13, 15, 16, 17, 18, 20, 21, 22, 24],
"6" : [ 0, 4, 7, 10, 15, 16, 17],
"1" : [ ],
"9" : [ ],
"CoveredDUAsByNodes" : 18,
"Duas" : 25
},{ "Name" : "extractConditional" ,
"Nodes" : 13,
"0" : [ ],
"1" : [ 33, 3, 36, 21, 22, 9, 10, 29],
"9" : [ 2, 34, 25, 26, 43, 13, 14, 30],
"10" : [ 16, 32, 1, 35, 39, 27, 28, 44, 15, 31],
"2" : [ ],
"3" : [ 37, 41],
"8" : [ 38, 40, 42],
"4" : [ 4],
"5" : [ 17, 18, 19, 4, 12],
"7" : [ 4, 20, 5, 6, 7, 23, 8, 24, 11],
"6" : [ 4],
"11" : [ 0],
"12" : [ ],
"CoveredDUAsByNodes" : 45,
"Duas" : 59
},{ "Name" : "buildResultExpression" ,
"Nodes" : 4,
"0" : [ ],
"1" : [ 0, 3],
"2" : [ 1, 2, 4],
"3" : [ ],
"CoveredDUAsByNodes" : 5,
"Duas" : 5
},{ "Name" : "isConstantName" ,
"Nodes" : 7,
"0" : [ ],
"3" : [ 0],
"5" : [ 0, 2],
"1" : [ ],
"4" : [ 0],
"2" : [ ],
"6" : [ ],
"CoveredDUAsByNodes" : 2,
"Duas" : 8
},{ "Name" : "extractExpression" ,
"Nodes" : 25,
"0" : [ ],
"21" : [ 22],
"22" : [ 22, 30],
"1" : [ ],
"23" : [ 32, 22, 30, 15],
"2" : [ ],
"13" : [ 34],
"14" : [ 34, 12, 14],
"15" : [ 34, 12, 14],
"3" : [ 0, 4],
"4" : [ 0, 4, 5, 37, 6, 24, 58],
"8" : [ 0, 4, 36],
"11" : [ 0, 4, 36, 7],
"12" : [ 0, 4, 36, 7, 11],
"9" : [ 0, 4, 36],
"10" : [ 0, 4, 36, 9, 25, 26, 27, 59, 28, 29],
"5" : [ 0, 17, 18, 4, 57],
"7" : [ 0, 17, 18, 4, 57, 62],
"6" : [ 0, 17, 18, 4, 57],
"24" : [ 0, 17, 18, 4, 57],
"16" : [ 34, 43, 12, 45, 14],
"18" : [ 34, 43, 12, 45, 14, 46],
"19" : [ 48, 1, 34, 50, 3, 19, 20, 43, 12, 45, 14, 46],
"20" : [ 1, 34, 3, 41, 43, 12, 45, 14, 46, 48, 50, 19, 51, 20],
"17" : [ 34, 43, 12, 45, 14],
"CoveredDUAsByNodes" : 39,
"Duas" : 64
},{ "Name" : "rewriteCallExpression" ,
"Nodes" : 4,
"0" : [ ],
"2" : [ 0, 4, 7],
"1" : [ 2, 3, 5, 6],
"3" : [ 2, 3, 5, 6],
"CoveredDUAsByNodes" : 7,
"Duas" : 8
},{ "Name" : "findInjectionPoint" ,
"Nodes" : 5,
"0" : [ ],
"1" : [ ],
"2" : [ ],
"4" : [ ],
"3" : [ 2, 4],
"CoveredDUAsByNodes" : 2,
"Duas" : 10
},{ "Name" : "isConditionalOp" ,
"Nodes" : 4,
"0" : [ ],
"1" : [ 1],
"2" : [ 0],
"3" : [ ],
"CoveredDUAsByNodes" : 2,
"Duas" : 2
},{ "Name" : "findExpressionRoot" ,
"Nodes" : 11,
"0" : [ ],
"1" : [ ],
"2" : [ 3],
"3" : [ 2, 4],
"4" : [ 2, 4, 11],
"5" : [ 2, 4, 10],
"6" : [ 2, 4, 6, 10],
"8" : [ 2, 4, 5, 10],
"7" : [ 2, 4, 7, 10],
"10" : [ ],
"9" : [ 2, 4, 8, 9],
"CoveredDUAsByNodes" : 10,
"Duas" : 14
},{ "Name" : "canExposeExpression" ,
"Nodes" : 4,
"0" : [ ],
"1" : [ 2, 4],
"2" : [ 0, 1, 3, 5],
"3" : [ ],
"CoveredDUAsByNodes" : 6,
"Duas" : 6
},{ "Name" : "isSubexpressionMovable" ,
"Nodes" : 28,
"0" : [ ],
"1" : [ ],
"2" : [ 25],
"3" : [ 24, 26],
"4" : [ 7, 24, 26, 28, 29],
"5" : [ 7, 24, 26, 28, 29, 31],
"6" : [ 1, 17, 33, 34, 7, 24, 26, 28, 29, 31],
"7" : [ 1, 17, 33, 34, 7, 24, 26, 28, 29, 31],
"15" : [ 1, 17, 33, 34, 7, 24, 26, 28, 29, 45, 31, 47],
"16" : [ 1, 33, 34, 7, 45, 47, 17, 49, 24, 26, 28, 29, 31],
"18" : [ 1, 33, 34, 4, 7, 45, 47, 17, 49, 18, 50, 24, 26, 28, 29, 31],
"17" : [ 1, 33, 34, 7, 45, 47, 17, 49, 24, 26, 28, 29, 31],
"19" : [ 1, 33, 34, 7, 45, 47, 48, 17, 24, 26, 28, 29, 31],
"8" : [ 1, 33, 34, 35, 7, 17, 24, 26, 28, 29, 31],
"10" : [ 1, 33, 34, 35, 7, 17, 24, 26, 28, 29, 31],
"11" : [ 1, 33, 34, 35, 37, 7, 17, 24, 26, 28, 29, 31],
"12" : [ 1, 33, 34, 35, 37, 7, 17, 24, 26, 28, 60, 29, 31],
"13" : [ 1, 33, 34, 3, 35, 37, 7, 9, 17, 24, 26, 28, 60, 29, 31, 63],
"14" : [ 1, 33, 2, 34, 35, 37, 7, 11, 17, 24, 26, 28, 60, 29, 62, 31],
"20" : [ 0, 32, 7, 24, 26, 28, 29, 31],
"21" : [ 7, 24, 26, 28, 29, 30],
"22" : [ 7, 39, 24, 26, 28, 29, 30],
"9" : [ 36, 7, 24, 26, 28, 29],
"23" : [ 6, 24, 26, 27],
"24" : [ 6, 24, 26, 27],
"26" : [ 6, 24, 26, 27],
"25" : [ 6, 8, 10, 24, 26, 27],
"27" : [ ],
"CoveredDUAsByNodes" : 36,
"Duas" : 68
},{ "Name" : "isSafeAssign" ,
"Nodes" : 14,
"0" : [ ],
"2" : [ 6, 8],
"3" : [ 18, 6, 8],
"4" : [ 17, 6, 8],
"7" : [ 0, 17, 19, 6, 8, 9],
"5" : [ 17, 6, 8],
"8" : [ 0, 17, 2, 19, 21, 6, 8, 9, 11],
"6" : [ 17, 6, 8],
"9" : [ 16, 6, 8],
"10" : [ 16, 5, 6, 8, 24, 14],
"12" : [ 16, 4, 6, 23, 8, 13],
"11" : [ 16, 6, 8],
"1" : [ ],
"13" : [ ],
"CoveredDUAsByNodes" : 17,
"Duas" : 25
},{ "Name" : "isExpressionTreeUnsafe" ,
"Nodes" : 4,
"0" : [ ],
"1" : [ 0, 2, 5, 7],
"2" : [ 1, 3, 4, 6],
"3" : [ ],
"CoveredDUAsByNodes" : 8,
"Duas" : 8
}]
}