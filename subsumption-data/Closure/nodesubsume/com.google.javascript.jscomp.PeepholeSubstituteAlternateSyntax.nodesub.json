{
"Class" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax", 
"Methods" : [{ "Name" : "optimizeSubtree" ,
"Nodes" : 30,
"0" : [ ],
"1" : [ 0, 38, 39, 40],
"2" : [ 1, 37, 41],
"3" : [ 36],
"5" : [ 2, 3, 36, 42, 45, 46],
"4" : [ 36, 44],
"6" : [ 48, 35, 4, 47],
"7" : [ 49, 34, 50, 5, 6],
"8" : [ 33, 51, 52, 7],
"9" : [ 32, 53, 8],
"10" : [ 54, 9, 31],
"11" : [ 55, 10, 30],
"12" : [ 86, 55, 57, 10, 58, 11, 30],
"13" : [ 85, 55, 87, 56, 10, 30],
"14" : [ 59, 12, 29],
"15" : [ 28, 60, 13],
"20" : [ 17, 68, 26],
"16" : [ 14],
"18" : [ 98, 14, 15],
"19" : [ 16, 98, 101, 14, 15],
"17" : [ 14],
"21" : [ 17, 97, 68, 88, 26],
"22" : [ 18, 19, 69, 70, 25],
"23" : [ 20, 71, 24],
"24" : [ 80, 20, 21, 71, 24, 73, 74],
"25" : [ 80, 83, 20, 21, 22, 71, 24, 73, 74, 76, 77],
"26" : [ 80, 82, 20, 84, 21, 71, 24, 73, 74, 75],
"27" : [ 81, 20, 71, 24, 72, 79],
"28" : [ 23, 78],
"29" : [ ],
"CoveredDUAsByNodes" : 83,
"Duas" : 105
},{ "Name" : "tryJoinForCondition" ,
"Nodes" : 16,
"0" : [ ],
"1" : [ 1, 3, 8],
"3" : [ 1, 3, 8, 11],
"4" : [ 1, 3, 8, 11, 13, 15],
"5" : [ 1, 3, 20, 8, 11, 13, 15],
"6" : [ 1, 3, 20, 22, 8, 11, 13, 15],
"7" : [ 1, 3, 20, 22, 8, 24, 11, 13, 15],
"8" : [ 1, 17, 3, 20, 22, 8, 24, 9, 11, 13, 15],
"13" : [ 16, 1, 3, 19, 20, 22, 8, 24, 10, 11, 13, 15],
"9" : [ 1, 18, 3, 4, 20, 22, 8, 24, 11, 13, 15],
"10" : [ 1, 3, 4, 5, 8, 11, 13, 15, 18, 20, 22, 24, 26, 29, 30, 31],
"12" : [ 32, 1, 3, 4, 6, 8, 11, 13, 15, 18, 20, 22, 24, 27, 28],
"11" : [ 1, 2, 3, 4, 8, 11, 13, 15, 18, 20, 22, 24],
"2" : [ 1, 3, 8],
"14" : [ 0, 7],
"15" : [ ],
"CoveredDUAsByNodes" : 28,
"Duas" : 33
},{ "Name" : "tryFoldSimpleFunctionCall" ,
"Nodes" : 9,
"0" : [ ],
"2" : [ 3],
"3" : [ 3, 5],
"4" : [ 3, 5, 7, 9],
"5" : [ 3, 5, 7, 9, 11],
"6" : [ 3, 5, 7, 9, 11, 13],
"1" : [ 1],
"7" : [ 0, 17, 2, 3, 5, 7, 9, 10, 11, 13, 15],
"8" : [ ],
"CoveredDUAsByNodes" : 12,
"Duas" : 18
},{ "Name" : "tryFoldImmediateCallToBoundFunction" ,
"Nodes" : 8,
"0" : [ ],
"2" : [ 0, 3, 20, 21, 22, 23, 8, 9, 11, 12, 13, 14],
"5" : [ 0, 3, 8, 9, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24],
"3" : [ 0, 3, 4, 8, 9, 11, 12, 13, 14, 20, 21, 22, 23],
"6" : [ 0, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30],
"4" : [ 0, 1, 3, 8, 9, 11, 12, 13, 14, 20, 21, 22, 23],
"1" : [ 2],
"7" : [ 2],
"CoveredDUAsByNodes" : 26,
"Duas" : 31
},{ "Name" : "addParameterAfter" ,
"Nodes" : 4,
"0" : [ ],
"2" : [ 0, 1, 3, 4, 5, 6],
"1" : [ ],
"3" : [ ],
"CoveredDUAsByNodes" : 6,
"Duas" : 7
},{ "Name" : "trySplitComma" ,
"Nodes" : 7,
"0" : [ ],
"1" : [ 1, 3, 4, 5, 12],
"3" : [ 1, 3, 4, 5, 12, 13],
"2" : [ 1, 3, 4, 5, 6, 12],
"4" : [ 1, 2, 3, 4, 5, 7, 8, 9, 12, 13, 15, 17, 18, 19, 20, 21],
"5" : [ 0, 10, 11],
"6" : [ ],
"CoveredDUAsByNodes" : 20,
"Duas" : 22
},{ "Name" : "tryReplaceIf" ,
"Nodes" : 27,
"0" : [ ],
"1" : [ ],
"2" : [ 15],
"26" : [ 15],
"3" : [ 19],
"5" : [ 19],
"17" : [ 19, 60],
"18" : [ 19, 58, 60],
"19" : [ 19, 58, 11, 60, 46],
"6" : [ 19],
"10" : [ 19, 62],
"11" : [ 19, 56, 62],
"12" : [ 3, 19, 56, 41, 62],
"7" : [ 19],
"8" : [ 19, 52],
"9" : [ 0, 16, 2, 19, 52, 54, 39, 55],
"13" : [ 64, 3, 19, 5, 56, 41, 62],
"14" : [ 64, 3, 19, 5, 8, 56, 41, 44, 62],
"16" : [ 64, 3, 19, 5, 7, 56, 41, 10, 43, 45, 62],
"15" : [ 64, 66, 3, 35, 67, 36, 5, 9, 41, 17, 18, 19, 56, 62],
"20" : [ 68, 70, 11, 46, 19, 58, 60],
"21" : [ 68, 70, 11, 46, 78, 49, 19, 58, 60],
"23" : [ 68, 70, 11, 46, 78, 79, 49, 19, 58, 60],
"24" : [ 68, 37, 70, 71, 73, 74, 11, 13, 46, 78, 79, 49, 81, 50, 19, 58, 60],
"25" : [ 68, 38, 70, 72, 11, 75, 76, 77, 14, 46, 48, 19, 58, 60],
"22" : [ 68, 70, 11, 46, 19, 58, 60],
"4" : [ 19, 23],
"CoveredDUAsByNodes" : 52,
"Duas" : 101
},{ "Name" : "statementMustExitParent" ,
"Nodes" : 7,
"0" : [ ],
"1" : [ 3],
"2" : [ 3, 5],
"3" : [ 0, 3, 4, 6],
"4" : [ 2],
"5" : [ 1],
"6" : [ ],
"CoveredDUAsByNodes" : 7,
"Duas" : 7
},{ "Name" : "tryReplaceUndefined" ,
"Nodes" : 6,
"0" : [ ],
"2" : [ 0],
"3" : [ 0, 4],
"1" : [ 3],
"4" : [ 0, 2, 4, 6, 8, 9],
"5" : [ ],
"CoveredDUAsByNodes" : 7,
"Duas" : 10
},{ "Name" : "tryReduceReturn" ,
"Nodes" : 8,
"0" : [ ],
"2" : [ 7],
"3" : [ 7, 11, 12],
"4" : [ 0, 2, 5, 7, 11, 12, 14],
"5" : [ 7, 10, 13],
"6" : [ 16, 3, 6, 7, 10, 13],
"1" : [ 4],
"7" : [ 4],
"CoveredDUAsByNodes" : 13,
"Duas" : 18
},{ "Name" : "tryReplaceExitWithBreak" ,
"Nodes" : 18,
"0" : [ ],
"1" : [ ],
"2" : [ 0],
"11" : [ 0, 35, 37],
"3" : [ 0],
"8" : [ 0, 39],
"10" : [ 0, 39, 10],
"4" : [ 0],
"6" : [ 0, 41],
"7" : [ 0, 3, 8, 9, 41, 44],
"5" : [ 0, 1, 6],
"9" : [ 0, 39, 12],
"12" : [ 0, 17, 35, 4, 37, 13],
"13" : [ 19],
"15" : [ 19, 22],
"16" : [ 19, 22, 25, 26],
"14" : [ 19, 14],
"17" : [ ],
"CoveredDUAsByNodes" : 21,
"Duas" : 45
},{ "Name" : "tryRemoveRedundantExit" ,
"Nodes" : 12,
"0" : [ ],
"9" : [ 17, 19],
"1" : [ ],
"6" : [ 21],
"8" : [ 21, 9],
"2" : [ ],
"4" : [ 23],
"5" : [ 2, 7, 23, 8, 26],
"3" : [ 0, 5],
"7" : [ 21, 11],
"10" : [ 17, 3, 19, 12, 15],
"11" : [ ],
"CoveredDUAsByNodes" : 15,
"Duas" : 27
},{ "Name" : "isPure" ,
"Nodes" : 7,
"0" : [ ],
"3" : [ 2],
"5" : [ 2, 4],
"4" : [ 2],
"1" : [ ],
"2" : [ ],
"6" : [ ],
"CoveredDUAsByNodes" : 2,
"Duas" : 8
},,{ "Name" : "areMatchingExits" ,
"Nodes" : 7,
"0" : [ ],
"3" : [ 4, 10],
"5" : [ 0, 4, 6, 10],
"1" : [ ],
"4" : [ 4, 10],
"2" : [ ],
"6" : [ ],
"CoveredDUAsByNodes" : 4,
"Duas" : 14
},{ "Name" : "isExceptionPossible" ,
"Nodes" : 11,
"0" : [ ],
"8" : [ 0],
"9" : [ 0, 9],
"1" : [ ],
"2" : [ ],
"5" : [ 2],
"7" : [ 2, 4],
"6" : [ 2],
"3" : [ ],
"4" : [ ],
"10" : [ ],
"CoveredDUAsByNodes" : 4,
"Duas" : 10
},{ "Name" : "tryMinimizeNot" ,
"Nodes" : 8,
"0" : [ ],
"1" : [ 9],
"3" : [ 8],
"4" : [ 7],
"5" : [ 6],
"2" : [ 0, 1, 2, 4],
"6" : [ 3, 5],
"7" : [ ],
"CoveredDUAsByNodes" : 10,
"Duas" : 14
},{ "Name" : "tryMinimizeIf" ,
"Nodes" : 55,
"0" : [ ],
"1" : [ 110, 111],
"2" : [ 0, 55, 110, 158, 111],
"30" : [ 0, 112, 55, 110, 158, 111],
"3" : [ 0, 55, 110, 158, 111],
"28" : [ 0, 1, 55, 137, 110, 158, 111],
"4" : [ 0, 3, 4, 55, 139, 110, 158, 111, 159],
"21" : [ 0, 3, 4, 55, 139, 188, 110, 158, 111, 159],
"5" : [ 0, 160, 3, 4, 5, 6, 139, 140, 110, 111, 55, 158, 159],
"14" : [ 0, 160, 3, 4, 5, 6, 139, 140, 110, 111, 55, 219, 158, 159],
"15" : [ 0, 160, 192, 3, 4, 5, 6, 139, 140, 110, 111, 55, 219, 158, 159],
"6" : [ 0, 160, 3, 4, 5, 6, 139, 140, 110, 111, 55, 158, 159],
"8" : [ 0, 160, 3, 4, 5, 6, 139, 140, 110, 111, 55, 221, 158, 159],
"9" : [ 0, 160, 3, 4, 5, 6, 139, 140, 110, 111, 55, 221, 158, 190, 159],
"10" : [ 0, 160, 161, 3, 4, 5, 6, 7, 9, 10, 139, 140, 141, 110, 111, 143, 55, 221, 158, 190, 159],
"11" : [ 0, 160, 161, 3, 4, 5, 6, 7, 9, 10, 139, 140, 141, 110, 111, 143, 245, 55, 221, 158, 190, 159],
"12" : [ 0, 160, 161, 3, 4, 5, 6, 7, 9, 10, 139, 140, 141, 110, 111, 143, 241, 245, 55, 221, 158, 190, 159],
"13" : [ 0, 3, 4, 5, 6, 7, 9, 10, 11, 139, 140, 141, 143, 221, 158, 159, 160, 161, 102, 237, 110, 238, 111, 239, 240, 241, 114, 115, 243, 245, 55, 247, 57, 249, 58, 250, 190],
"16" : [ 0, 192, 3, 4, 5, 6, 139, 12, 140, 14, 15, 144, 219, 158, 159, 160, 162, 164, 110, 111, 55],
"18" : [ 0, 192, 3, 4, 5, 6, 139, 12, 140, 14, 15, 144, 219, 158, 159, 160, 162, 227, 164, 110, 111, 55],
"19" : [ 0, 192, 3, 4, 5, 6, 139, 12, 140, 14, 15, 144, 219, 158, 159, 160, 162, 227, 164, 233, 110, 111, 55],
"17" : [ 0, 192, 3, 4, 5, 6, 139, 12, 140, 14, 15, 144, 219, 158, 159, 160, 162, 164, 110, 111, 55],
"7" : [ 0, 3, 4, 5, 6, 139, 140, 158, 159, 160, 110, 111, 55, 56],
"20" : [ 0, 192, 3, 4, 5, 6, 139, 12, 140, 14, 15, 16, 144, 219, 158, 159, 223, 160, 224, 225, 162, 226, 227, 164, 229, 103, 231, 232, 233, 235, 110, 111, 116, 117, 55, 59, 60],
"22" : [ 0, 194, 3, 4, 139, 17, 145, 18, 158, 159, 165, 110, 111, 55, 188],
"24" : [ 0, 194, 3, 4, 196, 139, 207, 17, 145, 18, 158, 159, 165, 110, 111, 55, 188],
"25" : [ 0, 194, 3, 4, 196, 200, 202, 139, 207, 17, 145, 18, 158, 159, 165, 110, 111, 55, 188],
"26" : [ 0, 194, 3, 4, 196, 200, 202, 139, 207, 17, 145, 18, 211, 20, 215, 158, 159, 165, 110, 111, 55, 188],
"23" : [ 0, 194, 3, 4, 198, 199, 139, 17, 145, 209, 18, 210, 19, 158, 159, 165, 104, 110, 111, 118, 55, 119, 188, 61, 62, 63],
"27" : [ 0, 64, 65, 66, 194, 3, 4, 196, 200, 202, 139, 203, 204, 205, 206, 207, 17, 145, 18, 211, 20, 213, 22, 214, 215, 24, 217, 158, 159, 165, 105, 110, 111, 55, 120, 121, 188],
"29" : [ 0, 1, 67, 68, 69, 137, 146, 25, 27, 28, 29, 158, 166, 168, 106, 110, 111, 55, 122, 123],
"31" : [ 0, 70, 71, 72, 73, 147, 148, 30, 158, 32, 169, 110, 111, 112, 55, 124],
"32" : [ 157, 110, 111],
"33" : [ 150, 157, 34, 110, 111],
"35" : [ 150, 151, 157, 34, 110, 111],
"36" : [ 150, 151, 153, 155, 157, 34, 110, 111],
"37" : [ 150, 151, 153, 155, 157, 34, 110, 111, 179, 181],
"38" : [ 150, 151, 153, 155, 157, 34, 110, 111, 179, 181, 186],
"40" : [ 150, 151, 153, 155, 157, 94, 34, 35, 110, 111, 179, 181, 186, 125],
"34" : [ 74, 150, 157, 34, 110, 111],
"39" : [ 75, 76, 77, 78, 150, 151, 153, 155, 157, 34, 37, 110, 111, 179, 181, 182, 185, 186, 127],
"41" : [ 149, 156, 157, 33, 40, 110, 111],
"51" : [ 149, 88, 156, 157, 33, 40, 41, 110, 111],
"42" : [ 149, 156, 157, 33, 40, 110, 111],
"43" : [ 129, 149, 156, 157, 33, 40, 110, 111],
"45" : [ 129, 130, 149, 156, 157, 33, 98, 40, 43, 110, 111],
"44" : [ 129, 132, 133, 79, 80, 81, 149, 156, 157, 33, 40, 107, 171, 45, 110, 111],
"46" : [ 129, 130, 82, 149, 156, 157, 33, 98, 100, 40, 43, 172, 46, 110, 111],
"47" : [ 128, 149, 156, 157, 33, 40, 110, 111],
"49" : [ 128, 134, 149, 90, 156, 157, 33, 40, 110, 111, 48],
"48" : [ 128, 136, 83, 84, 149, 156, 157, 33, 40, 108, 110, 174, 111, 50],
"50" : [ 128, 134, 85, 149, 90, 92, 156, 157, 33, 40, 110, 111, 175, 48, 51],
"52" : [ 149, 86, 88, 156, 157, 33, 40, 41, 110, 111, 177, 53],
"53" : [ 87, 109],
"54" : [ ],
"CoveredDUAsByNodes" : 189,
"Duas" : 251
},{ "Name" : "tryRemoveRepeatedStatements" ,
"Nodes" : 10,
"0" : [ ],
"1" : [ 3, 6],
"2" : [ 3, 6, 8, 9],
"4" : [ 3, 6, 8, 9, 10],
"5" : [ 16, 3, 6, 8, 9, 10],
"6" : [ 1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 19, 20],
"7" : [ 0, 3, 6, 8, 9, 10, 12, 16, 18],
"3" : [ 3, 6, 8, 9],
"8" : [ 5],
"9" : [ ],
"CoveredDUAsByNodes" : 19,
"Duas" : 21
},{ "Name" : "isFoldableExpressBlock" ,
"Nodes" : 13,
"0" : [ ],
"2" : [ 0],
"1" : [ ],
"3" : [ 0, 2, 4],
"4" : [ 0, 2, 4, 6],
"5" : [ 0, 2, 4, 5],
"7" : [ 0, 2, 4, 5, 7, 9],
"8" : [ 0, 2, 4, 5, 7, 9, 11],
"9" : [ 0, 2, 4, 5, 7, 9, 11, 12],
"6" : [ 0, 2, 4, 5],
"10" : [ 0, 2, 4, 5, 7, 9, 11, 12, 14],
"11" : [ 0, 2, 4, 5, 7, 9, 10],
"12" : [ ],
"CoveredDUAsByNodes" : 11,
"Duas" : 16
},{ "Name" : "isReturnBlock" ,
"Nodes" : 5,
"0" : [ ],
"2" : [ 0],
"1" : [ ],
"3" : [ 0, 2, 4],
"4" : [ ],
"CoveredDUAsByNodes" : 3,
"Duas" : 5
},{ "Name" : "isReturnExpressBlock" ,
"Nodes" : 6,
"0" : [ ],
"2" : [ 0],
"3" : [ 0, 2, 4],
"1" : [ ],
"4" : [ 0, 2, 4, 5, 7],
"5" : [ ],
"CoveredDUAsByNodes" : 5,
"Duas" : 8
},{ "Name" : "isReturnExpression" ,
"Nodes" : 4,
"0" : [ ],
"1" : [ 1],
"2" : [ 0, 2],
"3" : [ ],
"CoveredDUAsByNodes" : 3,
"Duas" : 3
},{ "Name" : "isVarBlock" ,
"Nodes" : 6,
"0" : [ ],
"2" : [ 0],
"3" : [ 0, 2, 4],
"1" : [ ],
"4" : [ 0, 2, 4, 5, 7],
"5" : [ ],
"CoveredDUAsByNodes" : 5,
"Duas" : 8
},,{ "Name" : "isLowerPrecedence" ,
"Nodes" : 5,
"0" : [ ],
"1" : [ 1, 3],
"3" : [ 0, 2],
"2" : [ ],
"4" : [ ],
"CoveredDUAsByNodes" : 4,
"Duas" : 4
},{ "Name" : "isHigherPrecedence" ,
"Nodes" : 5,
"0" : [ ],
"1" : [ 1, 3],
"3" : [ 0, 2],
"2" : [ ],
"4" : [ ],
"CoveredDUAsByNodes" : 4,
"Duas" : 4
},{ "Name" : "tryMinimizeCondition" ,
"Nodes" : 57,
"0" : [ ],
"1" : [ 0, 1, 23, 24, 25],
"3" : [ 0, 1, 50, 23, 24, 25, 122, 27, 125],
"11" : [ 0, 1, 50, 23, 24, 25, 122, 27, 125, 126],
"4" : [ 0, 1, 50, 23, 24, 25, 122, 27, 125],
"9" : [ 0, 128, 1, 50, 23, 24, 25, 122, 27, 125],
"5" : [ 0, 1, 50, 23, 24, 25, 122, 27, 125],
"8" : [ 0, 1, 2, 50, 23, 119, 24, 25, 122, 27, 124, 125],
"10" : [ 0, 1, 50, 23, 24, 25, 121, 122, 27, 125],
"6" : [ 0, 1, 50, 23, 24, 25, 122, 27, 125],
"2" : [ 0, 1, 23, 24, 25, 26],
"7" : [ 0, 1, 4, 68, 50, 23, 24, 25, 122, 27, 28, 29, 125],
"12" : [ 32, 5, 6, 22, 30, 31],
"23" : [ 32, 5, 6, 22, 56, 30, 158, 31],
"13" : [ 32, 5, 6, 22, 30, 31],
"21" : [ 32, 160, 5, 6, 22, 30, 62, 31],
"14" : [ 32, 5, 6, 22, 30, 31],
"15" : [ 32, 163, 5, 6, 22, 59, 30, 31],
"19" : [ 32, 64, 35, 163, 164, 5, 6, 146, 22, 152, 59, 30, 31],
"20" : [ 32, 162, 36, 5, 6, 147, 22, 153, 58, 30, 31],
"22" : [ 32, 160, 5, 6, 166, 148, 149, 22, 60, 30, 62, 31],
"24" : [ 32, 66, 5, 6, 168, 22, 150, 151, 56, 30, 158, 31],
"16" : [ 32, 5, 6, 22, 30, 31],
"18" : [ 32, 34, 5, 69, 6, 7, 22, 30, 31],
"17" : [ 32, 5, 6, 22, 30, 31],
"25" : [ 37, 21],
"26" : [ 37, 76, 77, 78, 21],
"37" : [ 37, 76, 77, 78, 84, 21],
"38" : [ 100, 37, 76, 77, 78, 81, 84, 21],
"42" : [ 100, 37, 9, 76, 77, 46, 78, 81, 84, 21, 91],
"39" : [ 100, 37, 76, 77, 78, 81, 84, 21],
"40" : [ 100, 37, 102, 11, 76, 77, 78, 48, 81, 84, 21],
"27" : [ 37, 76, 77, 78, 21],
"28" : [ 37, 76, 77, 78, 21, 87, 88, 89],
"36" : [ 37, 76, 77, 78, 21, 86, 90],
"29" : [ 37, 76, 77, 78, 21],
"30" : [ 96, 97, 98, 37, 76, 77, 78, 21],
"35" : [ 99, 37, 76, 77, 78, 21, 95],
"31" : [ 37, 76, 77, 78, 21],
"32" : [ 37, 76, 77, 78, 80, 21],
"34" : [ 37, 76, 77, 78, 79, 21],
"33" : [ 37, 38, 70, 8, 76, 77, 78, 21],
"41" : [ 100, 37, 39, 76, 77, 78, 81, 84, 21],
"43" : [ 37, 71, 40, 75, 17, 82, 21],
"44" : [ 37, 74, 83, 21],
"45" : [ 37, 41, 74, 83, 115, 21, 53],
"46" : [ 37, 74, 114, 83, 52, 116, 21],
"47" : [ 37, 74, 114, 83, 52, 116, 21, 118],
"49" : [ 37, 74, 114, 83, 52, 116, 21, 117],
"48" : [ 37, 72, 42, 74, 18, 114, 83, 52, 116, 21],
"50" : [ 43, 20],
"51" : [ 43, 44, 20, 55, 188],
"52" : [ 43, 20, 54, 187, 189],
"53" : [ 43, 20, 54, 187, 189, 191],
"55" : [ 43, 20, 54, 187, 189, 190],
"54" : [ 73, 43, 45, 19, 20, 54, 187, 189],
"56" : [ ],
"CoveredDUAsByNodes" : 114,
"Duas" : 192
},{ "Name" : "maybeReplaceChildWithNumber" ,
"Nodes" : 4,
"0" : [ ],
"1" : [ 2, 3, 7],
"2" : [ 0, 1, 4, 5, 6, 8, 9],
"3" : [ ],
"CoveredDUAsByNodes" : 10,
"Duas" : 10
},{ "Name" : "tryFoldStandardConstructors" ,
"Nodes" : 6,
"0" : [ ],
"2" : [ 0],
"3" : [ 0, 4, 6],
"4" : [ 0, 2, 4, 6, 7, 8, 9, 11],
"1" : [ 3],
"5" : [ 3],
"CoveredDUAsByNodes" : 9,
"Duas" : 13
},{ "Name" : "tryFoldLiteralConstructor" ,
"Nodes" : 23,
"0" : [ ],
"20" : [ 5],
"21" : [ 5, 13],
"1" : [ ],
"2" : [ 7],
"4" : [ 0, 7],
"5" : [ 0, 20, 22, 7],
"6" : [ 0, 20, 22, 7, 31],
"7" : [ 0, 20, 22, 7, 24, 31],
"18" : [ 0, 20, 22, 7, 23, 31],
"8" : [ 0, 20, 22, 7, 31],
"16" : [ 0, 32, 20, 22, 7, 31],
"9" : [ 0, 20, 22, 7, 31],
"12" : [ 0, 34, 3, 20, 22, 7, 25, 31],
"15" : [ 0, 34, 3, 20, 22, 7, 25, 43, 14, 31],
"13" : [ 0, 34, 3, 20, 22, 7, 25, 10, 31],
"14" : [ 0, 34, 3, 7, 10, 42, 45, 16, 20, 53, 22, 25, 31],
"17" : [ 0, 32, 36, 7, 20, 22, 31],
"10" : [ 0, 7, 20, 22, 31],
"3" : [ 7, 8],
"11" : [ 0, 2, 7, 9, 20, 22, 31],
"19" : [ 0, 4, 7, 11, 20, 22, 30],
"22" : [ 7],
"CoveredDUAsByNodes" : 27,
"Duas" : 54
},{ "Name" : "isSafeToFoldArrayConstructor" ,
"Nodes" : 11,
"0" : [ ],
"1" : [ 1],
"2" : [ 1, 3],
"3" : [ 1, 3, 7, 12],
"4" : [ 1, 3, 6, 13],
"5" : [ 1, 3, 5],
"6" : [ 1, 3, 5, 8, 10],
"8" : [ 1, 2, 14],
"9" : [ 0, 11],
"7" : [ ],
"10" : [ ],
"CoveredDUAsByNodes" : 13,
"Duas" : 21
},{ "Name" : "tryFoldRegularExpressionConstructor" ,
"Nodes" : 25,
"0" : [ ],
"1" : [ 15],
"23" : [ 14],
"2" : [ 16],
"4" : [ 16, 17],
"22" : [ 16, 17, 28],
"5" : [ 16, 17],
"7" : [ 16, 17, 19],
"8" : [ 16, 17, 19, 21],
"9" : [ 16, 17, 19, 21, 23],
"21" : [ 16, 17, 19, 21, 23, 30],
"10" : [ 16, 17, 19, 21, 23],
"20" : [ 0, 16, 17, 19, 21, 23],
"6" : [ 16, 17, 7],
"11" : [ 16, 17, 19, 21, 23, 25],
"14" : [ 16, 32, 17, 19, 21, 23, 25],
"15" : [ 16, 32, 17, 19, 35, 21, 23, 25],
"16" : [ 16, 32, 17, 19, 35, 21, 37, 23, 25],
"17" : [ 32, 35, 4, 37, 39, 40, 9, 41, 16, 48, 17, 19, 21, 23, 25],
"18" : [ 32, 3, 35, 37, 38, 10, 16, 17, 19, 21, 23, 25],
"19" : [ 32, 35, 36, 5, 42, 11, 12, 16, 17, 19, 21, 23, 25],
"12" : [ 47, 16, 17, 19, 21, 23, 25],
"13" : [ 2, 8, 13, 16, 17, 19, 21, 23, 25],
"3" : [ 6, 16],
"24" : [ 16],
"CoveredDUAsByNodes" : 34,
"Duas" : 53
},{ "Name" : "reduceTrueFalse" ,
"Nodes" : 7,
"0" : [ ],
"1" : [ 1, 3, 9],
"2" : [ 0, 8],
"3" : [ 0, 5, 8],
"5" : [ 0, 4, 8],
"4" : [ 0, 2, 6, 7, 8],
"6" : [ ],
"CoveredDUAsByNodes" : 10,
"Duas" : 10
},{ "Name" : "tryMinimizeArrayLiteral" ,
"Nodes" : 9,
"0" : [ ],
"1" : [ ],
"2" : [ ],
"3" : [ 1],
"4" : [ 0, 2],
"8" : [ ],
"5" : [ 5],
"7" : [ 5],
"6" : [ 5, 9],
"CoveredDUAsByNodes" : 5,
"Duas" : 17
},{ "Name" : "tryMinimizeStringArrayLiteral" ,
"Nodes" : 11,
"0" : [ ],
"1" : [ 1, 2, 5, 14, 15],
"2" : [ 1, 17, 2, 5, 6, 7, 14, 15],
"3" : [ 1, 17, 2, 5, 6, 7, 14, 15],
"4" : [ 1, 17, 2, 18, 3, 5, 6, 7, 14, 15],
"5" : [ 32, 1, 17, 2, 18, 3, 5, 6, 7, 8, 14, 15],
"6" : [ 1, 33, 2, 34, 3, 4, 5, 6, 7, 9, 10, 14, 15, 17, 18, 19, 31],
"7" : [ 1, 2, 5, 6, 7, 14, 15, 17, 20, 21, 22, 24, 25],
"8" : [ 1, 2, 5, 11, 14, 15, 16],
"9" : [ 0, 12, 13],
"10" : [ ],
"CoveredDUAsByNodes" : 29,
"Duas" : 35
},{ "Name" : "pickDelimiter" ,
"Nodes" : 17,
"0" : [ ],
"1" : [ ],
"13" : [ 3, 4, 6, 8],
"14" : [ 3, 4, 6, 8, 9, 11],
"15" : [ 3, 4, 6, 8, 10],
"2" : [ ],
"3" : [ ],
"4" : [ ],
"6" : [ 0, 18, 23],
"7" : [ 0, 18, 23],
"8" : [ 0, 18, 23, 31],
"5" : [ 20],
"9" : [ 0, 32, 18, 34, 23, 29, 30],
"10" : [ 0, 32, 18, 34, 35, 37, 22, 23, 29, 30],
"11" : [ 0, 32, 18, 34, 36, 21, 23, 26, 28, 29, 30],
"12" : [ ],
"16" : [ ],
"CoveredDUAsByNodes" : 23,
"Duas" : 48
},{ "Name" : "areSafeFlagsToFold" ,
"Nodes" : 6,
"0" : [ ],
"3" : [ 0],
"4" : [ 0, 3],
"1" : [ ],
"2" : [ ],
"5" : [ ],
"CoveredDUAsByNodes" : 2,
"Duas" : 4
},{ "Name" : "makeForwardSlashBracketSafe" ,
"Nodes" : 33,
"0" : [ ],
"1" : [ ],
"2" : [ 3],
"3" : [ 0, 3, 4],
"4" : [ 1, 3],
"32" : [ 3],
"5" : [ 2, 5, 42, 44],
"6" : [ 2, 5, 56, 42, 44],
"7" : [ 2, 5, 56, 42, 44],
"8" : [ 2, 5, 55, 42, 44],
"9" : [ 2, 5, 55, 42, 44],
"12" : [ 2, 5, 55, 42, 44],
"10" : [ 2, 5, 55, 42, 44],
"13" : [ 2, 5, 54, 42, 44],
"14" : [ 2, 5, 54, 42, 44],
"15" : [ 2, 5, 53, 42, 44],
"16" : [ 2, 5, 53, 42, 44],
"17" : [ 2, 5, 53, 42, 44],
"19" : [ 2, 5, 53, 7, 42, 44],
"18" : [ 2, 5, 53, 6, 42, 44],
"20" : [ 2, 52, 5, 42, 44],
"30" : [ 2, 52, 5, 10, 42, 44],
"21" : [ 2, 52, 5, 42, 44],
"22" : [ 2, 52, 5, 8, 42, 44],
"29" : [ 2, 52, 5, 9, 42, 44],
"23" : [ 2, 52, 5, 42, 44],
"24" : [ 2, 52, 5, 42, 44, 61],
"25" : [ 2, 52, 5, 42, 44, 60],
"26" : [ 2, 52, 5, 42, 59, 44],
"27" : [ 2, 52, 5, 42, 58, 44],
"28" : [ 2, 52, 5, 42, 44],
"31" : [ 2, 5, 42, 44],
"11" : [ 2, 5, 42, 44, 45],
"CoveredDUAsByNodes" : 23,
"Duas" : 133
},{ "Name" : "containsUnicodeEscape" ,
"Nodes" : 11,
"0" : [ ],
"1" : [ 0, 5],
"2" : [ 0, 2, 5, 7],
"3" : [ 0, 1, 5, 6],
"4" : [ 0, 1, 5, 6],
"8" : [ 0, 1, 5, 6, 8, 13],
"5" : [ 0, 1, 5, 6],
"6" : [ 0, 1, 5, 6],
"7" : [ 0, 1, 5, 6],
"10" : [ 0, 5],
"9" : [ 0, 1, 17, 3, 19, 5, 6, 8, 11, 13],
"CoveredDUAsByNodes" : 12,
"Duas" : 27
}]
}