{
"Class" : "com.google.javascript.jscomp.RuntimeTypeCheck$AddChecks", 
"Methods" : [{ "Name" : "visit" ,
"Duas" : 10,
"0" :  "(220,223, this)",
"1" :  "(220,221, this)",
"2" :  "(220,223, t)",
"3" :  "(220,221, t)",
"4" :  "(220,(220,221), n)",
"5" :  "(220,(220,222), n)",
"6" :  "(220,(222,223), n)",
"7" :  "(220,(222,225), n)",
"8" :  "(220,223, n)",
"9" :  "(220,221, n)"},{ "Name" : "visitFunction" ,
"Duas" : 52,
"0" :  "(231,250, this)",
"1" :  "(231,266, this)",
"2" :  "(231,266, this.this$0)",
"3" :  "(231,244, funType)",
"4" :  "(232,263, block)",
"5" :  "(232,261, block)",
"6" :  "(233,(246,247), paramName)",
"7" :  "(233,(246,250), paramName)",
"8" :  "(233,250, paramName)",
"9" :  "(233,267, paramName)",
"10" :  "(233,255, paramName)",
"11" :  "(234,(260,261), insertionPoint)",
"12" :  "(234,(260,263), insertionPoint)",
"13" :  "(234,263, insertionPoint)",
"14" :  "(238,(239,239), next)",
"15" :  "(238,(239,244), next)",
"16" :  "(238,(239,241), next)",
"17" :  "(238,(239,244), next)",
"18" :  "(238,241, next)",
"19" :  "(238,240, next)",
"20" :  "(241,(260,261), insertionPoint)",
"21" :  "(241,(260,263), insertionPoint)",
"22" :  "(241,263, insertionPoint)",
"23" :  "(240,(239,239), next)",
"24" :  "(240,(239,244), next)",
"25" :  "(240,(239,241), next)",
"26" :  "(240,(239,244), next)",
"27" :  "(240,241, next)",
"28" :  "(240,240, next)",
"29" :  "(244,(244,244), i$)",
"30" :  "(244,(244,270), i$)",
"31" :  "(244,244, i$)",
"32" :  "(244,250, paramType)",
"33" :  "(250,(253,255), checkNode)",
"34" :  "(250,(253,259), checkNode)",
"35" :  "(250,259, checkNode)",
"36" :  "(255,(246,247), paramName)",
"37" :  "(255,(246,250), paramName)",
"38" :  "(255,250, paramName)",
"39" :  "(255,267, paramName)",
"40" :  "(255,255, paramName)",
"41" :  "(259,263, checkNode)",
"42" :  "(259,268, checkNode)",
"43" :  "(259,261, checkNode)",
"44" :  "(267,(246,247), paramName)",
"45" :  "(267,(246,250), paramName)",
"46" :  "(267,250, paramName)",
"47" :  "(267,267, paramName)",
"48" :  "(267,255, paramName)",
"49" :  "(268,(260,261), insertionPoint)",
"50" :  "(268,(260,263), insertionPoint)",
"51" :  "(268,263, insertionPoint)"},{ "Name" : "visitReturn" ,
"Duas" : 12,
"0" :  "(273,281, this)",
"1" :  "(273,289, this)",
"2" :  "(273,288, n)",
"3" :  "(273,289, this.this$0)",
"4" :  "(274,281, funType)",
"5" :  "(276,(277,278), retValue)",
"6" :  "(276,(277,281), retValue)",
"7" :  "(276,281, retValue)",
"8" :  "(276,288, retValue)",
"9" :  "(281,(284,285), checkNode)",
"10" :  "(281,(284,288), checkNode)",
"11" :  "(281,288, checkNode)"},{ "Name" : "createCheckTypeCallNode" ,
"Duas" : 18,
"0" :  "(302,317, this)",
"1" :  "(302,311, this)",
"2" :  "(302,(304,305), type)",
"3" :  "(302,(304,308), type)",
"4" :  "(302,308, type)",
"5" :  "(302,306, type)",
"6" :  "(302,317, expr)",
"7" :  "(302,317, this.this$0)",
"8" :  "(302,317, arrayNode)",
"9" :  "(302,315, arrayNode)",
"10" :  "(305,310, alternates)",
"11" :  "(308,310, alternates)",
"12" :  "(310,(310,310), i$)",
"13" :  "(310,(310,317), i$)",
"14" :  "(310,310, i$)",
"15" :  "(311,(312,313), checkerNode)",
"16" :  "(311,(312,315), checkerNode)",
"17" :  "(311,315, checkerNode)"},{ "Name" : "createCheckerNode" ,
"Duas" : 30,
"0" :  "(328,335, this)",
"1" :  "(328,347, this)",
"2" :  "(328,352, this)",
"3" :  "(328,329, this)",
"4" :  "(328,(328,329), type)",
"5" :  "(328,(328,331), type)",
"6" :  "(328,(331,331), type)",
"7" :  "(328,(331,335), type)",
"8" :  "(328,335, type)",
"9" :  "(328,(331,331), type)",
"10" :  "(328,(331,335), type)",
"11" :  "(328,(331,331), type)",
"12" :  "(328,(331,335), type)",
"13" :  "(328,(331,335), type)",
"14" :  "(328,(331,339), type)",
"15" :  "(328,(339,340), type)",
"16" :  "(328,(339,359), type)",
"17" :  "(328,340, type)",
"18" :  "(328,335, this.this$0)",
"19" :  "(328,347, this.this$0)",
"20" :  "(328,352, this.this$0)",
"21" :  "(328,329, this.this$0)",
"22" :  "(340,(352,352), objType)",
"23" :  "(340,(352,352), objType)",
"24" :  "(342,347, refName)",
"25" :  "(342,352, refName)",
"26" :  "(344,(346,346), sourceFile)",
"27" :  "(344,(346,347), sourceFile)",
"28" :  "(344,(346,347), sourceFile)",
"29" :  "(344,(346,352), sourceFile)"}]
}