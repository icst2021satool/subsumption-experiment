{
"Class" : "weka.estimators.KKConditionalEstimator", 
"Methods" : [{ "Name" : "findNearestPair" ,
"Duas" : 55,
"0" :  "(88,93, this)",
"1" :  "(88,95, this)",
"2" :  "(88,(94,95), key)",
"3" :  "(88,(94,105), key)",
"4" :  "(88,(105,106), key)",
"5" :  "(88,(105,107), key)",
"6" :  "(88,(107,108), key)",
"7" :  "(88,(107,110), key)",
"8" :  "(88,(96,97), secondaryKey)",
"9" :  "(88,(96,99), secondaryKey)",
"10" :  "(88,(99,100), secondaryKey)",
"11" :  "(88,(99,101), secondaryKey)",
"12" :  "(88,(101,102), secondaryKey)",
"13" :  "(88,(101,105), secondaryKey)",
"14" :  "(88,93, this.m_CondValues)",
"15" :  "(88,95, this.m_Values)",
"16" :  "(88,(91,92), low)",
"17" :  "(88,(91,111), low)",
"18" :  "(88,111, low)",
"19" :  "(88,92, low)",
"20" :  "(89,(91,92), high)",
"21" :  "(89,(91,111), high)",
"22" :  "(89,92, high)",
"23" :  "(92,108, middle)",
"24" :  "(92,106, middle)",
"25" :  "(92,95, middle)",
"26" :  "(92,102, middle)",
"27" :  "(92,100, middle)",
"28" :  "(92,97, middle)",
"29" :  "(93,(94,95), current)",
"30" :  "(93,(94,105), current)",
"31" :  "(93,(105,106), current)",
"32" :  "(93,(105,107), current)",
"33" :  "(93,(107,108), current)",
"34" :  "(93,(107,110), current)",
"35" :  "(95,(96,97), secondary)",
"36" :  "(95,(96,99), secondary)",
"37" :  "(95,(99,100), secondary)",
"38" :  "(95,(99,101), secondary)",
"39" :  "(95,(101,102), secondary)",
"40" :  "(95,(101,105), secondary)",
"41" :  "(100,(91,92), high)",
"42" :  "(100,(91,111), high)",
"43" :  "(100,92, high)",
"44" :  "(102,(91,92), low)",
"45" :  "(102,(91,111), low)",
"46" :  "(102,111, low)",
"47" :  "(102,92, low)",
"48" :  "(106,(91,92), high)",
"49" :  "(106,(91,111), high)",
"50" :  "(106,92, high)",
"51" :  "(108,(91,92), low)",
"52" :  "(108,(91,111), low)",
"53" :  "(108,111, low)",
"54" :  "(108,92, low)"},{ "Name" : "addValue" ,
"Duas" : 111,
"0" :  "(160,(163,163), this)",
"1" :  "(160,(163,164), this)",
"2" :  "(160,(164,165), this)",
"3" :  "(160,(164,174), this)",
"4" :  "(160,174, this)",
"5" :  "(160,175, this)",
"6" :  "(160,176, this)",
"7" :  "(160,177, this)",
"8" :  "(160,178, this)",
"9" :  "(160,179, this)",
"10" :  "(160,180, this)",
"11" :  "(160,184, this)",
"12" :  "(160,185, this)",
"13" :  "(160,186, this)",
"14" :  "(160,187, this)",
"15" :  "(160,188, this)",
"16" :  "(160,189, this)",
"17" :  "(160,190, this)",
"18" :  "(160,199, this)",
"19" :  "(160,200, this)",
"20" :  "(160,201, this)",
"21" :  "(160,193, this)",
"22" :  "(160,165, this)",
"23" :  "(160,166, this)",
"24" :  "(160,167, this)",
"25" :  "(160,168, this)",
"26" :  "(160,169, this)",
"27" :  "(160,170, this)",
"28" :  "(160,171, this)",
"29" :  "(160,172, this)",
"30" :  "(160,(163,163), this)",
"31" :  "(160,(163,164), this)",
"32" :  "(160,(163,164), this)",
"33" :  "(160,(163,196), this)",
"34" :  "(160,196, this)",
"35" :  "(160,197, this)",
"36" :  "(160,183, weight)",
"37" :  "(160,(192,193), weight)",
"38" :  "(160,(192,199), weight)",
"39" :  "(160,199, weight)",
"40" :  "(160,171, weight)",
"41" :  "(160,196, weight)",
"42" :  "(160,(163,163), this.m_NumValues)",
"43" :  "(160,(163,164), this.m_NumValues)",
"44" :  "(160,(164,165), this.m_NumValues)",
"45" :  "(160,(164,174), this.m_NumValues)",
"46" :  "(160,177, this.m_NumValues)",
"47" :  "(160,187, this.m_NumValues)",
"48" :  "(160,165, this.m_NumValues)",
"49" :  "(160,172, this.m_NumValues)",
"50" :  "(160,200, this.m_NumValues)",
"51" :  "(160,179, this.m_CondValues)",
"52" :  "(160,185, this.m_CondValues)",
"53" :  "(160,167, this.m_CondValues)",
"54" :  "(160,170, this.m_CondValues)",
"55" :  "(160,200, this.m_CondValues)",
"56" :  "(160,(163,163), this.m_CondValues)",
"57" :  "(160,(163,164), this.m_CondValues)",
"58" :  "(160,(164,165), this.m_Values)",
"59" :  "(160,(164,174), this.m_Values)",
"60" :  "(160,174, this.m_Values)",
"61" :  "(160,175, this.m_Values)",
"62" :  "(160,176, this.m_Values)",
"63" :  "(160,178, this.m_Values)",
"64" :  "(160,184, this.m_Values)",
"65" :  "(160,166, this.m_Values)",
"66" :  "(160,169, this.m_Values)",
"67" :  "(160,(163,164), this.m_Values)",
"68" :  "(160,(163,196), this.m_Values)",
"69" :  "(160,180, this.m_Weights)",
"70" :  "(160,186, this.m_Weights)",
"71" :  "(160,168, this.m_Weights)",
"72" :  "(160,171, this.m_Weights)",
"73" :  "(160,196, this.m_Weights)",
"74" :  "(160,199, this.m_SumOfWeights)",
"75" :  "(160,201, this.m_Precision)",
"76" :  "(160,181, data)",
"77" :  "(160,169, data)",
"78" :  "(160,(163,164), data)",
"79" :  "(160,(163,196), data)",
"80" :  "(161,182, given)",
"81" :  "(161,170, given)",
"82" :  "(161,(163,163), given)",
"83" :  "(161,(163,164), given)",
"84" :  "(162,(163,163), insertIndex)",
"85" :  "(162,(163,164), insertIndex)",
"86" :  "(162,177, insertIndex)",
"87" :  "(162,178, insertIndex)",
"88" :  "(162,179, insertIndex)",
"89" :  "(162,180, insertIndex)",
"90" :  "(162,181, insertIndex)",
"91" :  "(162,182, insertIndex)",
"92" :  "(162,183, insertIndex)",
"93" :  "(162,184, insertIndex)",
"94" :  "(162,185, insertIndex)",
"95" :  "(162,186, insertIndex)",
"96" :  "(162,165, insertIndex)",
"97" :  "(162,166, insertIndex)",
"98" :  "(162,167, insertIndex)",
"99" :  "(162,168, insertIndex)",
"100" :  "(162,169, insertIndex)",
"101" :  "(162,170, insertIndex)",
"102" :  "(162,171, insertIndex)",
"103" :  "(162,(163,163), insertIndex)",
"104" :  "(162,(163,164), insertIndex)",
"105" :  "(162,(163,164), insertIndex)",
"106" :  "(162,(163,196), insertIndex)",
"107" :  "(162,196, insertIndex)",
"108" :  "(172,200, this.m_NumValues)",
"109" :  "(187,200, this.m_NumValues)",
"110" :  "(189,200, this.m_CondValues)"},{ "Name" : "getEstimator" ,
"Duas" : 62,
"0" :  "(214,(215,216), this)",
"1" :  "(214,(215,219), this)",
"2" :  "(214,219, this)",
"3" :  "(214,223, this)",
"4" :  "(214,(225,226), this)",
"5" :  "(214,(225,234), this)",
"6" :  "(214,234, this)",
"7" :  "(214,(235,236), this)",
"8" :  "(214,(235,238), this)",
"9" :  "(214,236, this)",
"10" :  "(214,226, this)",
"11" :  "(214,227, this)",
"12" :  "(214,228, this)",
"13" :  "(214,229, this)",
"14" :  "(214,219, given)",
"15" :  "(214,227, this.m_Precision)",
"16" :  "(214,228, this.m_Precision)",
"17" :  "(214,(215,216), this.m_NumValues)",
"18" :  "(214,(215,219), this.m_NumValues)",
"19" :  "(214,223, this.m_NumValues)",
"20" :  "(214,(225,226), this.m_NumValues)",
"21" :  "(214,(225,234), this.m_NumValues)",
"22" :  "(214,(235,236), this.m_NumValues)",
"23" :  "(214,(235,238), this.m_NumValues)",
"24" :  "(214,226, this.m_CondValues)",
"25" :  "(214,227, this.m_StandardDev)",
"26" :  "(214,228, this.m_StandardDev)",
"27" :  "(214,229, this.m_Weights)",
"28" :  "(214,234, this.m_SumOfWeights)",
"29" :  "(214,236, this.m_Values)",
"30" :  "(214,238, result)",
"31" :  "(214,236, result)",
"32" :  "(214,216, result)",
"33" :  "(219,226, given)",
"34" :  "(223,236, newWeight)",
"35" :  "(223,229, newWeight)",
"36" :  "(223,230, newWeight)",
"37" :  "(224,234, sumOfNewWeights)",
"38" :  "(224,230, sumOfNewWeights)",
"39" :  "(225,(225,226), i)",
"40" :  "(225,(225,234), i)",
"41" :  "(225,226, i)",
"42" :  "(225,229, i)",
"43" :  "(225,230, i)",
"44" :  "(225,225, i)",
"45" :  "(230,234, sumOfNewWeights)",
"46" :  "(230,230, sumOfNewWeights)",
"47" :  "(225,(225,226), i)",
"48" :  "(225,(225,234), i)",
"49" :  "(225,226, i)",
"50" :  "(225,229, i)",
"51" :  "(225,230, i)",
"52" :  "(225,225, i)",
"53" :  "(234,236, factor)",
"54" :  "(235,(235,236), i)",
"55" :  "(235,(235,238), i)",
"56" :  "(235,236, i)",
"57" :  "(235,235, i)",
"58" :  "(235,(235,236), i)",
"59" :  "(235,(235,238), i)",
"60" :  "(235,236, i)",
"61" :  "(235,235, i)"},{ "Name" : "toString" ,
"Duas" : 30,
"0" :  "(258,(262,263), this)",
"1" :  "(258,(262,268), this)",
"2" :  "(258,263, this)",
"3" :  "(258,(264,265), this)",
"4" :  "(258,(264,262), this)",
"5" :  "(258,265, this)",
"6" :  "(258,(262,263), this.m_NumValues)",
"7" :  "(258,(262,268), this.m_NumValues)",
"8" :  "(258,263, this.m_Values)",
"9" :  "(258,263, this.m_CondValues)",
"10" :  "(258,(264,265), this.m_AllWeightsOne)",
"11" :  "(258,(264,262), this.m_AllWeightsOne)",
"12" :  "(258,265, this.m_Weights)",
"13" :  "(260,268, result)",
"14" :  "(260,263, result)",
"15" :  "(262,(262,263), i)",
"16" :  "(262,(262,268), i)",
"17" :  "(262,263, i)",
"18" :  "(262,262, i)",
"19" :  "(262,265, i)",
"20" :  "(263,268, result)",
"21" :  "(263,263, result)",
"22" :  "(263,265, result)",
"23" :  "(265,268, result)",
"24" :  "(265,263, result)",
"25" :  "(262,(262,263), i)",
"26" :  "(262,(262,268), i)",
"27" :  "(262,263, i)",
"28" :  "(262,262, i)",
"29" :  "(262,265, i)"},{ "Name" : "main" ,
"Duas" : 42,
"0" :  "(290,(291,292), argv)",
"1" :  "(290,(291,294), argv)",
"2" :  "(290,(300,301), argv)",
"3" :  "(290,(300,303), argv)",
"4" :  "(290,(311,312), argv)",
"5" :  "(290,(311,314), argv)",
"6" :  "(290,312, argv)",
"7" :  "(290,301, argv)",
"8" :  "(290,292, argv)",
"9" :  "(290,316, out)",
"10" :  "(290,319, out)",
"11" :  "(290,306, out)",
"12" :  "(290,297, seed)",
"13" :  "(292,297, seed)",
"14" :  "(294,317, newEst)",
"15" :  "(294,307, newEst)",
"16" :  "(297,314, r)",
"17" :  "(297,304, r)",
"18" :  "(297,305, r)",
"19" :  "(299,(303,304), numPoints)",
"20" :  "(299,(303,311), numPoints)",
"21" :  "(301,(303,304), numPoints)",
"22" :  "(301,(303,311), numPoints)",
"23" :  "(303,(303,304), i)",
"24" :  "(303,(303,311), i)",
"25" :  "(303,303, i)",
"26" :  "(303,(303,304), i)",
"27" :  "(303,(303,311), i)",
"28" :  "(303,303, i)",
"29" :  "(312,316, cond)",
"30" :  "(312,317, cond)",
"31" :  "(314,316, cond)",
"32" :  "(314,317, cond)",
"33" :  "(317,319, result)",
"34" :  "(318,(318,319), i)",
"35" :  "(318,(318,323), i)",
"36" :  "(318,319, i)",
"37" :  "(318,318, i)",
"38" :  "(318,(318,319), i)",
"39" :  "(318,(318,323), i)",
"40" :  "(318,319, i)",
"41" :  "(318,318, i)"}]
}