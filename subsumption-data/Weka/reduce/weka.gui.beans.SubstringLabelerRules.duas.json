{
"Class" : "weka.gui.beans.SubstringLabelerRules", 
"Methods" : [{ "Name" : "matchRulesFromInternal" ,
"Duas" : 12,
"0" :  "(246,255, inputStructure)",
"1" :  "(246,(253,253), statusMessagePrefix)",
"2" :  "(246,(253,253), statusMessagePrefix)",
"3" :  "(246,253, statusMessagePrefix)",
"4" :  "(246,254, log)",
"5" :  "(246,255, env)",
"6" :  "(246,259, matchRules)",
"7" :  "(246,256, matchRules)",
"8" :  "(251,253, m)",
"9" :  "(251,254, m)",
"10" :  "(251,255, m)",
"11" :  "(251,256, m)"},{ "Name" : "makeOutputStructure" ,
"Duas" : 64,
"0" :  "(270,(270,272), this)",
"1" :  "(270,(270,326), this)",
"2" :  "(270,326, this)",
"3" :  "(270,326, this)",
"4" :  "(270,276, this)",
"5" :  "(270,298, this)",
"6" :  "(270,299, this)",
"7" :  "(270,(301,302), this)",
"8" :  "(270,(301,303), this)",
"9" :  "(270,(303,304), this)",
"10" :  "(270,(303,308), this)",
"11" :  "(270,308, this)",
"12" :  "(270,311, this)",
"13" :  "(270,306, this)",
"14" :  "(270,302, this)",
"15" :  "(270,(291,292), this)",
"16" :  "(270,(291,294), this)",
"17" :  "(270,292, this)",
"18" :  "(270,(270,272), this.m_matchRules)",
"19" :  "(270,(270,326), this.m_matchRules)",
"20" :  "(270,276, this.m_matchRules)",
"21" :  "(270,(291,292), this.m_matchRules)",
"22" :  "(270,(291,294), this.m_matchRules)",
"23" :  "(270,(301,302), this.m_hasLabels)",
"24" :  "(270,(301,303), this.m_hasLabels)",
"25" :  "(270,326, this.m_inputStructure)",
"26" :  "(270,298, this.m_inputStructure)",
"27" :  "(270,308, this.m_attName)",
"28" :  "(270,306, this.m_attName)",
"29" :  "(270,302, this.m_attName)",
"30" :  "(270,(303,304), this.m_nominalBinary)",
"31" :  "(270,(303,308), this.m_nominalBinary)",
"32" :  "(272,(290,291), labelCount)",
"33" :  "(272,(290,298), labelCount)",
"34" :  "(272,(291,292), labelCount)",
"35" :  "(272,(291,294), labelCount)",
"36" :  "(272,286, labelCount)",
"37" :  "(274,(278,283), uniqueLabels)",
"38" :  "(274,(278,286), uniqueLabels)",
"39" :  "(274,283, uniqueLabels)",
"40" :  "(275,304, labelVec)",
"41" :  "(275,305, labelVec)",
"42" :  "(275,306, labelVec)",
"43" :  "(275,302, labelVec)",
"44" :  "(275,284, labelVec)",
"45" :  "(276,(277,277), m)",
"46" :  "(276,(277,288), m)",
"47" :  "(276,(277,278), m)",
"48" :  "(276,(277,288), m)",
"49" :  "(276,(278,283), m)",
"50" :  "(276,(278,286), m)",
"51" :  "(276,283, m)",
"52" :  "(276,284, m)",
"53" :  "(286,(290,291), labelCount)",
"54" :  "(286,(290,298), labelCount)",
"55" :  "(286,(291,292), labelCount)",
"56" :  "(286,(291,294), labelCount)",
"57" :  "(286,286, labelCount)",
"58" :  "(292,(301,302), this.m_hasLabels)",
"59" :  "(292,(301,303), this.m_hasLabels)",
"60" :  "(299,311, this.m_outputStructure)",
"61" :  "(302,311, newAtt)",
"62" :  "(306,311, newAtt)",
"63" :  "(308,311, newAtt)"},{ "Name" : "makeOutputInstance" ,
"Duas" : 111,
"0" :  "(342,(342,343), this)",
"1" :  "(342,(342,346), this)",
"2" :  "(342,346, this)",
"3" :  "(342,(349,350), this)",
"4" :  "(342,(349,410), this)",
"5" :  "(342,351, this)",
"6" :  "(342,353, this)",
"7" :  "(342,(366,366), this)",
"8" :  "(342,(366,371), this)",
"9" :  "(342,371, this)",
"10" :  "(342,(395,396), this)",
"11" :  "(342,(395,402), this)",
"12" :  "(342,407, this)",
"13" :  "(342,(396,397), this)",
"14" :  "(342,(396,399), this)",
"15" :  "(342,(388,389), this)",
"16" :  "(342,(388,392), this)",
"17" :  "(342,390, this)",
"18" :  "(342,382, this)",
"19" :  "(342,379, this)",
"20" :  "(342,368, this)",
"21" :  "(342,(357,358), this)",
"22" :  "(342,(357,366), this)",
"23" :  "(342,348, inputI)",
"24" :  "(342,(372,373), inputI)",
"25" :  "(342,(372,387), inputI)",
"26" :  "(342,(373,374), inputI)",
"27" :  "(342,(373,376), inputI)",
"28" :  "(342,381, inputI)",
"29" :  "(342,378, inputI)",
"30" :  "(342,374, inputI)",
"31" :  "(342,354, inputI)",
"32" :  "(342,(376,377), batch)",
"33" :  "(342,(376,381), batch)",
"34" :  "(342,(342,343), this.m_outputStructure)",
"35" :  "(342,(342,346), this.m_outputStructure)",
"36" :  "(342,346, this.m_outputStructure)",
"37" :  "(342,371, this.m_outputStructure)",
"38" :  "(342,407, this.m_outputStructure)",
"39" :  "(342,390, this.m_outputStructure)",
"40" :  "(342,382, this.m_outputStructure)",
"41" :  "(342,379, this.m_outputStructure)",
"42" :  "(342,(349,350), this.m_matchRules)",
"43" :  "(342,(349,410), this.m_matchRules)",
"44" :  "(342,351, this.m_matchRules)",
"45" :  "(342,353, this.m_matchRules)",
"46" :  "(342,368, this.m_matchRules)",
"47" :  "(342,(366,366), this.m_voteLabels)",
"48" :  "(342,(366,371), this.m_voteLabels)",
"49" :  "(342,(357,358), this.m_voteLabels)",
"50" :  "(342,(357,366), this.m_voteLabels)",
"51" :  "(342,(395,396), this.m_hasLabels)",
"52" :  "(342,(395,402), this.m_hasLabels)",
"53" :  "(342,(388,389), this.m_hasLabels)",
"54" :  "(342,(388,392), this.m_hasLabels)",
"55" :  "(342,390, this.m_attName)",
"56" :  "(346,402, newAttIndex)",
"57" :  "(346,397, newAttIndex)",
"58" :  "(346,392, newAttIndex)",
"59" :  "(346,390, newAttIndex)",
"60" :  "(348,410, result)",
"61" :  "(350,(387,388), label)",
"62" :  "(350,(387,395), label)",
"63" :  "(350,390, label)",
"64" :  "(351,(366,367), labelVotes)",
"65" :  "(351,(366,371), labelVotes)",
"66" :  "(351,367, labelVotes)",
"67" :  "(351,358, labelVotes)",
"68" :  "(352,363, index)",
"69" :  "(352,358, index)",
"70" :  "(354,(356,357), label)",
"71" :  "(354,(356,363), label)",
"72" :  "(354,(387,388), label)",
"73" :  "(354,(387,395), label)",
"74" :  "(354,390, label)",
"75" :  "(363,363, index)",
"76" :  "(363,358, index)",
"77" :  "(368,(387,388), label)",
"78" :  "(368,(387,395), label)",
"79" :  "(368,390, label)",
"80" :  "(371,402, vals)",
"81" :  "(371,406, vals)",
"82" :  "(371,397, vals)",
"83" :  "(371,392, vals)",
"84" :  "(371,390, vals)",
"85" :  "(371,382, vals)",
"86" :  "(371,377, vals)",
"87" :  "(371,374, vals)",
"88" :  "(372,(372,373), i)",
"89" :  "(372,(372,387), i)",
"90" :  "(372,(373,374), i)",
"91" :  "(372,(373,376), i)",
"92" :  "(372,381, i)",
"93" :  "(372,382, i)",
"94" :  "(372,372, i)",
"95" :  "(372,377, i)",
"96" :  "(372,378, i)",
"97" :  "(372,379, i)",
"98" :  "(372,374, i)",
"99" :  "(372,(372,373), i)",
"100" :  "(372,(372,387), i)",
"101" :  "(372,(373,374), i)",
"102" :  "(372,(373,376), i)",
"103" :  "(372,381, i)",
"104" :  "(372,382, i)",
"105" :  "(372,372, i)",
"106" :  "(372,377, i)",
"107" :  "(372,378, i)",
"108" :  "(372,379, i)",
"109" :  "(372,374, i)",
"110" :  "(406,410, result)"}]
}