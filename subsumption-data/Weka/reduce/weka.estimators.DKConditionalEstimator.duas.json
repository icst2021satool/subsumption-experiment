{
"Class" : "weka.estimators.DKConditionalEstimator", 
"Methods" : [{ "Name" : "<init>" ,
"Duas" : 15,
"0" :  "(60,66, this)",
"1" :  "(60,64, this)",
"2" :  "(60,(63,64), numSymbols)",
"3" :  "(60,(63,66), numSymbols)",
"4" :  "(60,66, numSymbols)",
"5" :  "(60,64, precision)",
"6" :  "(62,64, this.m_Estimators)",
"7" :  "(63,(63,64), i)",
"8" :  "(63,(63,66), i)",
"9" :  "(63,64, i)",
"10" :  "(63,63, i)",
"11" :  "(63,(63,64), i)",
"12" :  "(63,(63,66), i)",
"13" :  "(63,64, i)",
"14" :  "(63,63, i)"},{ "Name" : "getEstimator" ,
"Duas" : 18,
"0" :  "(90,(91,96), this)",
"1" :  "(90,(91,99), this)",
"2" :  "(90,96, this)",
"3" :  "(90,96, given)",
"4" :  "(90,(91,96), this.m_Estimators)",
"5" :  "(90,(91,99), this.m_Estimators)",
"6" :  "(90,96, this.m_Estimators)",
"7" :  "(90,96, this.m_Weights)",
"8" :  "(90,99, result)",
"9" :  "(90,96, result)",
"10" :  "(91,(91,96), i)",
"11" :  "(91,(91,99), i)",
"12" :  "(91,96, i)",
"13" :  "(91,91, i)",
"14" :  "(91,(91,96), i)",
"15" :  "(91,(91,99), i)",
"16" :  "(91,96, i)",
"17" :  "(91,91, i)"},{ "Name" : "toString" ,
"Duas" : 20,
"0" :  "(119,(121,122), this)",
"1" :  "(119,(121,124), this)",
"2" :  "(119,124, this)",
"3" :  "(119,122, this)",
"4" :  "(119,(121,122), this.m_Estimators)",
"5" :  "(119,(121,124), this.m_Estimators)",
"6" :  "(119,122, this.m_Estimators)",
"7" :  "(119,124, this.m_Weights)",
"8" :  "(119,124, result)",
"9" :  "(119,122, result)",
"10" :  "(121,(121,122), i)",
"11" :  "(121,(121,124), i)",
"12" :  "(121,122, i)",
"13" :  "(121,121, i)",
"14" :  "(122,124, result)",
"15" :  "(122,122, result)",
"16" :  "(121,(121,122), i)",
"17" :  "(121,(121,124), i)",
"18" :  "(121,122, i)",
"19" :  "(121,121, i)"},{ "Name" : "main" ,
"Duas" : 54,
"0" :  "(146,(146,147), argv)",
"1" :  "(146,(146,150), argv)",
"2" :  "(146,150, argv)",
"3" :  "(146,152, argv)",
"4" :  "(146,(154,155), argv)",
"5" :  "(146,(154,164), argv)",
"6" :  "(146,(166,167), argv)",
"7" :  "(146,(166,177), argv)",
"8" :  "(146,167, argv)",
"9" :  "(146,168, argv)",
"10" :  "(146,155, argv)",
"11" :  "(146,156, argv)",
"12" :  "(146,169, out)",
"13" :  "(146,170, out)",
"14" :  "(146,147, out)",
"15" :  "(151,164, maxA)",
"16" :  "(151,(157,158), maxA)",
"17" :  "(151,(157,160), maxA)",
"18" :  "(153,(160,161), maxB)",
"19" :  "(153,(160,154), maxB)",
"20" :  "(154,(154,155), i)",
"21" :  "(154,(154,164), i)",
"22" :  "(154,155, i)",
"23" :  "(154,156, i)",
"24" :  "(154,154, i)",
"25" :  "(155,(157,158), currentA)",
"26" :  "(155,(157,160), currentA)",
"27" :  "(155,158, currentA)",
"28" :  "(156,(160,161), currentB)",
"29" :  "(156,(160,154), currentB)",
"30" :  "(156,161, currentB)",
"31" :  "(158,164, maxA)",
"32" :  "(158,(157,158), maxA)",
"33" :  "(158,(157,160), maxA)",
"34" :  "(161,(160,161), maxB)",
"35" :  "(161,(160,154), maxB)",
"36" :  "(154,(154,155), i)",
"37" :  "(154,(154,164), i)",
"38" :  "(154,155, i)",
"39" :  "(154,156, i)",
"40" :  "(154,154, i)",
"41" :  "(164,169, newEst)",
"42" :  "(164,170, newEst)",
"43" :  "(164,173, newEst)",
"44" :  "(166,(166,167), i)",
"45" :  "(166,(166,177), i)",
"46" :  "(166,167, i)",
"47" :  "(166,168, i)",
"48" :  "(166,166, i)",
"49" :  "(166,(166,167), i)",
"50" :  "(166,(166,177), i)",
"51" :  "(166,167, i)",
"52" :  "(166,168, i)",
"53" :  "(166,166, i)"}]
}