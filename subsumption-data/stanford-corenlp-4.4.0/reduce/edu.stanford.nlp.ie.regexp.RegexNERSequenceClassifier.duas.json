{
"Class" : "edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifier", 
"Methods" : [{ "Name" : "<init>" ,
"Duas" : 27,
"0" :  "(106,110, this)",
"1" :  "(106,113, this)",
"2" :  "(106,118, this)",
"3" :  "(106,119, this)",
"4" :  "(106,121, this)",
"5" :  "(106,122, this)",
"6" :  "(106,124, this)",
"7" :  "(106,124, this)",
"8" :  "(106,108, this)",
"9" :  "(106,112, mapping)",
"10" :  "(106,113, ignoreCase)",
"11" :  "(106,118, ignoreCase)",
"12" :  "(106,(123,124), overwriteMyLabels)",
"13" :  "(106,(123,127), overwriteMyLabels)",
"14" :  "(106,(107,107), validPosRegex)",
"15" :  "(106,(107,110), validPosRegex)",
"16" :  "(106,(107,108), validPosRegex)",
"17" :  "(106,(107,110), validPosRegex)",
"18" :  "(106,108, validPosRegex)",
"19" :  "(106,121, this.flags)",
"20" :  "(106,121, this.backgroundSymbol)",
"21" :  "(112,(114,114), rd)",
"22" :  "(112,(114,116), rd)",
"23" :  "(112,114, rd)",
"24" :  "(112,114, rd)",
"25" :  "(113,124, this.entries)",
"26" :  "(119,124, this.myLabels)"},{ "Name" : "<init>" ,
"Duas" : 23,
"0" :  "(148,152, this)",
"1" :  "(148,155, this)",
"2" :  "(148,160, this)",
"3" :  "(148,161, this)",
"4" :  "(148,163, this)",
"5" :  "(148,164, this)",
"6" :  "(148,166, this)",
"7" :  "(148,166, this)",
"8" :  "(148,150, this)",
"9" :  "(148,155, reader)",
"10" :  "(148,155, ignoreCase)",
"11" :  "(148,160, ignoreCase)",
"12" :  "(148,(165,166), overwriteMyLabels)",
"13" :  "(148,(165,169), overwriteMyLabels)",
"14" :  "(148,(149,149), validPosRegex)",
"15" :  "(148,(149,152), validPosRegex)",
"16" :  "(148,(149,150), validPosRegex)",
"17" :  "(148,(149,152), validPosRegex)",
"18" :  "(148,150, validPosRegex)",
"19" :  "(148,163, this.flags)",
"20" :  "(148,163, this.backgroundSymbol)",
"21" :  "(155,166, this.entries)",
"22" :  "(161,166, this.myLabels)"},{ "Name" : "containsValidPos" ,
"Duas" : 26,
"0" :  "(224,(224,225), this)",
"1" :  "(224,(224,228), this)",
"2" :  "(224,233, this)",
"3" :  "(224,(230,231), tokens)",
"4" :  "(224,(230,233), tokens)",
"5" :  "(224,233, tokens)",
"6" :  "(224,228, start)",
"7" :  "(224,(228,230), end)",
"8" :  "(224,(228,236), end)",
"9" :  "(224,(224,225), this.validPosPattern)",
"10" :  "(224,(224,228), this.validPosPattern)",
"11" :  "(224,233, this.validPosPattern)",
"12" :  "(228,(228,230), i)",
"13" :  "(228,(228,236), i)",
"14" :  "(228,(230,231), i)",
"15" :  "(228,(230,233), i)",
"16" :  "(228,233, i)",
"17" :  "(228,228, i)",
"18" :  "(233,(234,234), m)",
"19" :  "(233,(234,228), m)",
"20" :  "(228,(228,230), i)",
"21" :  "(228,(228,236), i)",
"22" :  "(228,(230,231), i)",
"23" :  "(228,(230,233), i)",
"24" :  "(228,233, i)",
"25" :  "(228,228, i)"},{ "Name" : "classify" ,
"Duas" : 39,
"0" :  "(243,248, this)",
"1" :  "(243,(252,254), this)",
"2" :  "(243,(252,259), this)",
"3" :  "(243,262, document)",
"4" :  "(243,248, document)",
"5" :  "(243,(252,254), document)",
"6" :  "(243,(252,259), document)",
"7" :  "(243,255, document)",
"8" :  "(243,248, this.myLabels)",
"9" :  "(243,248, this.ignoreCase)",
"10" :  "(243,248, entry)",
"11" :  "(243,(252,254), entry)",
"12" :  "(243,(252,259), entry)",
"13" :  "(243,(254,255), entry)",
"14" :  "(243,(254,259), entry)",
"15" :  "(243,256, entry)",
"16" :  "(243,(252,254), entry.regex)",
"17" :  "(243,(252,259), entry.regex)",
"18" :  "(243,(254,255), entry.regex)",
"19" :  "(243,(254,259), entry.regex)",
"20" :  "(243,256, entry.type)",
"21" :  "(244,248, start)",
"22" :  "(248,(249,249), start)",
"23" :  "(248,(249,252), start)",
"24" :  "(248,(252,254), start)",
"25" :  "(248,(252,259), start)",
"26" :  "(248,259, start)",
"27" :  "(248,254, start)",
"28" :  "(248,(254,255), start)",
"29" :  "(248,(254,259), start)",
"30" :  "(254,(254,255), i)",
"31" :  "(254,(254,259), i)",
"32" :  "(254,255, i)",
"33" :  "(254,254, i)",
"34" :  "(254,(254,255), i)",
"35" :  "(254,(254,259), i)",
"36" :  "(254,255, i)",
"37" :  "(254,254, i)",
"38" :  "(259,248, start)"},{ "Name" : "readEntries" ,
"Duas" : 38,
"0" :  "(273,276, mapping)",
"1" :  "(273,(276,277), mapping)",
"2" :  "(273,(276,318), mapping)",
"3" :  "(273,(308,308), ignoreCase)",
"4" :  "(273,(308,309), ignoreCase)",
"5" :  "(273,318, entries)",
"6" :  "(273,321, entries)",
"7" :  "(273,315, entries)",
"8" :  "(275,277, lineCount)",
"9" :  "(276,(279,280), line)",
"10" :  "(276,(279,282), line)",
"11" :  "(276,282, line)",
"12" :  "(276,284, line)",
"13" :  "(277,277, lineCount)",
"14" :  "(282,(283,283), split)",
"15" :  "(282,(283,284), split)",
"16" :  "(282,(283,284), split)",
"17" :  "(282,(283,286), split)",
"18" :  "(282,286, split)",
"19" :  "(282,287, split)",
"20" :  "(282,(292,293), split)",
"21" :  "(282,(292,296), split)",
"22" :  "(282,(298,300), split)",
"23" :  "(282,(298,307), split)",
"24" :  "(282,300, split)",
"25" :  "(282,293, split)",
"26" :  "(286,307, regexes)",
"27" :  "(287,315, type)",
"28" :  "(288,296, overwritableTypes)",
"29" :  "(288,315, overwritableTypes)",
"30" :  "(288,293, overwritableTypes)",
"31" :  "(289,315, priority)",
"32" :  "(290,315, tokens)",
"33" :  "(290,309, tokens)",
"34" :  "(290,308, tokens)",
"35" :  "(300,315, priority)",
"36" :  "(307,309, str)",
"37" :  "(307,308, str)"},{ "Name" : "findStartIndex" ,
"Duas" : 68,
"0" :  "(334,342, entry)",
"1" :  "(334,(355,355), entry)",
"2" :  "(334,(355,355), entry)",
"3" :  "(334,(353,353), entry)",
"4" :  "(334,(353,358), entry)",
"5" :  "(334,343, document)",
"6" :  "(334,(355,355), myLabels)",
"7" :  "(334,(355,358), myLabels)",
"8" :  "(334,(353,353), ignoreCase)",
"9" :  "(334,(353,354), ignoreCase)",
"10" :  "(334,342, entry.exact)",
"11" :  "(334,(355,355), entry.overwritableTypes)",
"12" :  "(334,(355,355), entry.overwritableTypes)",
"13" :  "(334,(353,353), entry.overwritableTypes)",
"14" :  "(334,(353,358), entry.overwritableTypes)",
"15" :  "(334,341, regex)",
"16" :  "(335,(340,341), rSize)",
"17" :  "(335,(340,362), rSize)",
"18" :  "(338,(338,339), start)",
"19" :  "(338,(338,369), start)",
"20" :  "(338,338, start)",
"21" :  "(338,366, start)",
"22" :  "(338,343, start)",
"23" :  "(338,(338,339), end)",
"24" :  "(338,(338,369), end)",
"25" :  "(339,(362,366), failed)",
"26" :  "(339,(362,338), failed)",
"27" :  "(340,(340,341), i)",
"28" :  "(340,(340,362), i)",
"29" :  "(340,341, i)",
"30" :  "(340,342, i)",
"31" :  "(340,343, i)",
"32" :  "(340,340, i)",
"33" :  "(341,(356,358), pattern)",
"34" :  "(341,(356,340), pattern)",
"35" :  "(342,(353,353), exact)",
"36" :  "(342,(353,354), exact)",
"37" :  "(342,(354,354), exact)",
"38" :  "(342,(354,358), exact)",
"39" :  "(342,(354,354), exact)",
"40" :  "(342,(354,358), exact)",
"41" :  "(343,(356,358), token)",
"42" :  "(343,(356,340), token)",
"43" :  "(343,(354,354), token)",
"44" :  "(343,(354,358), token)",
"45" :  "(343,(354,354), token)",
"46" :  "(343,(354,358), token)",
"47" :  "(344,(355,355), NERType)",
"48" :  "(344,(355,355), NERType)",
"49" :  "(344,(355,355), NERType)",
"50" :  "(344,(355,358), NERType)",
"51" :  "(345,(352,352), currentType)",
"52" :  "(345,(352,353), currentType)",
"53" :  "(345,(353,353), currentType)",
"54" :  "(345,(353,358), currentType)",
"55" :  "(358,(362,366), failed)",
"56" :  "(358,(362,338), failed)",
"57" :  "(340,(340,341), i)",
"58" :  "(340,(340,362), i)",
"59" :  "(340,341, i)",
"60" :  "(340,342, i)",
"61" :  "(340,343, i)",
"62" :  "(340,340, i)",
"63" :  "(338,(338,339), start)",
"64" :  "(338,(338,369), start)",
"65" :  "(338,338, start)",
"66" :  "(338,366, start)",
"67" :  "(338,343, start)"}]
}