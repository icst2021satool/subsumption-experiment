{
"Class" : "edu.stanford.nlp.ling.tokensregex.SequenceMatcher", 
"Methods" : [{ "Name" : "<init>" ,
"Duas" : 16,
"0" :  "(91,99, this)",
"1" :  "(91,100, this)",
"2" :  "(91,101, this)",
"3" :  "(91,102, this)",
"4" :  "(91,103, this)",
"5" :  "(91,100, pattern)",
"6" :  "(91,101, pattern)",
"7" :  "(91,102, pattern)",
"8" :  "(91,103, pattern)",
"9" :  "(91,(96,97), elements)",
"10" :  "(91,(96,99), elements)",
"11" :  "(91,99, elements)",
"12" :  "(91,100, pattern.priority)",
"13" :  "(91,101, pattern.weight)",
"14" :  "(91,102, pattern.varGroupBindings)",
"15" :  "(91,103, pattern.totalGroups)"},{ "Name" : "replaceAllExtended" ,
"Duas" : 17,
"0" :  "(212,(216,218), this)",
"1" :  "(212,(216,224), this)",
"2" :  "(212,224, this)",
"3" :  "(212,225, this)",
"4" :  "(212,218, this)",
"5" :  "(212,222, this)",
"6" :  "(212,220, this)",
"7" :  "(212,219, replacement)",
"8" :  "(212,224, res)",
"9" :  "(212,226, res)",
"10" :  "(212,218, res)",
"11" :  "(212,220, res)",
"12" :  "(213,225, oldFindType)",
"13" :  "(215,224, index)",
"14" :  "(215,218, index)",
"15" :  "(222,224, index)",
"16" :  "(222,218, index)"},{ "Name" : "replaceFirstExtended" ,
"Duas" : 16,
"0" :  "(239,(243,245), this)",
"1" :  "(239,(243,251), this)",
"2" :  "(239,251, this)",
"3" :  "(239,252, this)",
"4" :  "(239,245, this)",
"5" :  "(239,249, this)",
"6" :  "(239,247, this)",
"7" :  "(239,246, replacement)",
"8" :  "(239,251, res)",
"9" :  "(239,253, res)",
"10" :  "(239,245, res)",
"11" :  "(239,247, res)",
"12" :  "(240,252, oldFindType)",
"13" :  "(242,251, index)",
"14" :  "(242,245, index)",
"15" :  "(249,251, index)"},{ "Name" : "replaceAll" ,
"Duas" : 16,
"0" :  "(267,(271,273), this)",
"1" :  "(267,(271,277), this)",
"2" :  "(267,277, this)",
"3" :  "(267,278, this)",
"4" :  "(267,273, this)",
"5" :  "(267,275, this)",
"6" :  "(267,274, replacement)",
"7" :  "(267,277, res)",
"8" :  "(267,279, res)",
"9" :  "(267,273, res)",
"10" :  "(267,274, res)",
"11" :  "(268,278, oldFindType)",
"12" :  "(270,277, index)",
"13" :  "(270,273, index)",
"14" :  "(275,277, index)",
"15" :  "(275,273, index)"},{ "Name" : "replaceFirst" ,
"Duas" : 15,
"0" :  "(293,(297,299), this)",
"1" :  "(293,(297,303), this)",
"2" :  "(293,303, this)",
"3" :  "(293,304, this)",
"4" :  "(293,299, this)",
"5" :  "(293,301, this)",
"6" :  "(293,300, replacement)",
"7" :  "(293,303, res)",
"8" :  "(293,305, res)",
"9" :  "(293,299, res)",
"10" :  "(293,300, res)",
"11" :  "(294,304, oldFindType)",
"12" :  "(296,303, index)",
"13" :  "(296,299, index)",
"14" :  "(301,303, index)"},{ "Name" : "find" ,
"Duas" : 14,
"0" :  "(333,334, this)",
"1" :  "(333,(333,334), this)",
"2" :  "(333,(333,336), this)",
"3" :  "(333,336, this)",
"4" :  "(333,337, this)",
"5" :  "(333,(333,333), start)",
"6" :  "(333,(333,334), start)",
"7" :  "(333,334, start)",
"8" :  "(333,(333,334), start)",
"9" :  "(333,(333,336), start)",
"10" :  "(333,337, start)",
"11" :  "(333,334, this.elements)",
"12" :  "(333,(333,334), this.elements)",
"13" :  "(333,(333,336), this.elements)"},{ "Name" : "find" ,
"Duas" : 22,
"0" :  "(341,343, this)",
"1" :  "(341,345, this)",
"2" :  "(341,(346,346), this)",
"3" :  "(341,(346,348), this)",
"4" :  "(341,343, start)",
"5" :  "(341,348, start)",
"6" :  "(341,343, matchStart)",
"7" :  "(341,(346,346), this.includeEmptyMatches)",
"8" :  "(341,(346,348), this.includeEmptyMatches)",
"9" :  "(341,(342,343), done)",
"10" :  "(341,(342,353), done)",
"11" :  "(343,(344,345), res)",
"12" :  "(343,(344,351), res)",
"13" :  "(343,(351,351), res)",
"14" :  "(343,(351,351), res)",
"15" :  "(343,346, res)",
"16" :  "(345,(346,346), empty)",
"17" :  "(345,(346,346), empty)",
"18" :  "(348,343, start)",
"19" :  "(348,348, start)",
"20" :  "(351,(342,343), done)",
"21" :  "(351,(342,353), done)"},{ "Name" : "find0" ,
"Duas" : 40,
"0" :  "(357,(363,364), this)",
"1" :  "(357,(363,370), this)",
"2" :  "(357,370, this)",
"3" :  "(357,371, this)",
"4" :  "(357,(372,373), this)",
"5" :  "(357,(372,375), this)",
"6" :  "(357,375, this)",
"7" :  "(357,(373,373), this)",
"8" :  "(357,(373,373), this)",
"9" :  "(357,373, this)",
"10" :  "(357,364, this)",
"11" :  "(357,361, this)",
"12" :  "(357,363, start)",
"13" :  "(357,361, start)",
"14" :  "(357,(360,361), matchStart)",
"15" :  "(357,(360,363), matchStart)",
"16" :  "(357,(363,364), this.regionEnd)",
"17" :  "(357,(363,370), this.regionEnd)",
"18" :  "(357,(373,373), FIND_NONOVERLAPPING)",
"19" :  "(357,(373,373), FIND_NONOVERLAPPING)",
"20" :  "(357,(373,373), this.findType)",
"21" :  "(357,(373,373), this.findType)",
"22" :  "(357,370, match)",
"23" :  "(357,377, match)",
"24" :  "(361,370, match)",
"25" :  "(361,377, match)",
"26" :  "(363,(363,364), i)",
"27" :  "(363,(363,370), i)",
"28" :  "(363,364, i)",
"29" :  "(363,363, i)",
"30" :  "(364,(365,366), match)",
"31" :  "(364,(365,363), match)",
"32" :  "(364,370, match)",
"33" :  "(364,377, match)",
"34" :  "(363,(363,364), i)",
"35" :  "(363,(363,370), i)",
"36" :  "(363,364, i)",
"37" :  "(363,363, i)",
"38" :  "(370,(372,373), this.matched)",
"39" :  "(370,(372,375), this.matched)"},{ "Name" : "findNextNonOverlapping" ,
"Duas" : 6,
"0" :  "(387,(387,387), this)",
"1" :  "(387,(387,388), this)",
"2" :  "(387,388, this)",
"3" :  "(387,(387,387), this.nextMatchStart)",
"4" :  "(387,(387,388), this.nextMatchStart)",
"5" :  "(387,388, this.nextMatchStart)"},{ "Name" : "findNextAll" ,
"Duas" : 45,
"0" :  "(393,(393,393), this)",
"1" :  "(393,(393,404), this)",
"2" :  "(393,(404,404), this)",
"3" :  "(393,(404,405), this)",
"4" :  "(393,405, this)",
"5" :  "(393,406, this)",
"6" :  "(393,408, this)",
"7" :  "(393,409, this)",
"8" :  "(393,410, this)",
"9" :  "(393,411, this)",
"10" :  "(393,412, this)",
"11" :  "(393,(393,394), this)",
"12" :  "(393,(393,404), this)",
"13" :  "(393,(394,395), this)",
"14" :  "(393,(394,404), this)",
"15" :  "(393,395, this)",
"16" :  "(393,396, this)",
"17" :  "(393,397, this)",
"18" :  "(393,(398,399), this)",
"19" :  "(393,(398,402), this)",
"20" :  "(393,399, this)",
"21" :  "(393,(393,393), this.curMatchIter)",
"22" :  "(393,(393,404), this.curMatchIter)",
"23" :  "(393,(393,394), this.curMatchIter)",
"24" :  "(393,(393,404), this.curMatchIter)",
"25" :  "(393,(394,395), this.curMatchIter)",
"26" :  "(393,(394,404), this.curMatchIter)",
"27" :  "(393,395, this.curMatchIter)",
"28" :  "(393,408, this.curMatchStates)",
"29" :  "(393,411, this.curMatchStates)",
"30" :  "(393,396, this.curMatchStates)",
"31" :  "(393,405, this.prevMatchedSignatures)",
"32" :  "(393,412, this.prevMatchedSignatures)",
"33" :  "(393,(398,399), this.prevMatchedSignatures)",
"34" :  "(393,(398,402), this.prevMatchedSignatures)",
"35" :  "(393,399, this.prevMatchedSignatures)",
"36" :  "(393,(404,404), this.nextMatchStart)",
"37" :  "(393,(404,405), this.nextMatchStart)",
"38" :  "(393,406, this.nextMatchStart)",
"39" :  "(397,(398,399), sig)",
"40" :  "(397,(398,402), sig)",
"41" :  "(397,399, sig)",
"42" :  "(406,(407,408), matched)",
"43" :  "(406,(407,414), matched)",
"44" :  "(406,414, matched)"},{ "Name" : "find" ,
"Duas" : 13,
"0" :  "(466,(466,472), this)",
"1" :  "(466,(466,468), this)",
"2" :  "(466,(466,470), this)",
"3" :  "(466,470, this)",
"4" :  "(466,468, this)",
"5" :  "(466,472, this)",
"6" :  "(466,(466,472), $SwitchMap$edu$stanford$nlp$ling$tokensregex$SequenceMatcher$FindType)",
"7" :  "(466,(466,468), $SwitchMap$edu$stanford$nlp$ling$tokensregex$SequenceMatcher$FindType)",
"8" :  "(466,(466,470), $SwitchMap$edu$stanford$nlp$ling$tokensregex$SequenceMatcher$FindType)",
"9" :  "(466,(466,472), this.findType)",
"10" :  "(466,(466,468), this.findType)",
"11" :  "(466,(466,470), this.findType)",
"12" :  "(466,472, this.findType)"},{ "Name" : "findMatchStart" ,
"Duas" : 17,
"0" :  "(477,(477,485), this)",
"1" :  "(477,(477,479), this)",
"2" :  "(477,(477,483), this)",
"3" :  "(477,483, this)",
"4" :  "(477,479, this)",
"5" :  "(477,485, this)",
"6" :  "(477,483, start)",
"7" :  "(477,479, start)",
"8" :  "(477,483, matchAllTokens)",
"9" :  "(477,479, matchAllTokens)",
"10" :  "(477,(477,485), $SwitchMap$edu$stanford$nlp$ling$tokensregex$SequenceMatcher$FindType)",
"11" :  "(477,(477,479), $SwitchMap$edu$stanford$nlp$ling$tokensregex$SequenceMatcher$FindType)",
"12" :  "(477,(477,483), $SwitchMap$edu$stanford$nlp$ling$tokensregex$SequenceMatcher$FindType)",
"13" :  "(477,(477,485), this.findType)",
"14" :  "(477,(477,479), this.findType)",
"15" :  "(477,(477,483), this.findType)",
"16" :  "(477,485, this.findType)"},{ "Name" : "findMatchStartNoBacktracking" ,
"Duas" : 28,
"0" :  "(491,(496,497), this)",
"1" :  "(491,(496,509), this)",
"2" :  "(491,(501,502), matchAllTokens)",
"3" :  "(491,(501,496), matchAllTokens)",
"4" :  "(491,(496,497), this.regionEnd)",
"5" :  "(491,(496,509), this.regionEnd)",
"6" :  "(491,(502,502), matchAll)",
"7" :  "(491,(502,502), matchAll)",
"8" :  "(491,(502,502), matchAll)",
"9" :  "(491,(502,496), matchAll)",
"10" :  "(492,509, cStates)",
"11" :  "(492,510, cStates)",
"12" :  "(492,497, cStates)",
"13" :  "(492,(498,499), cStates)",
"14" :  "(492,(498,501), cStates)",
"15" :  "(492,(503,504), cStates)",
"16" :  "(492,(503,496), cStates)",
"17" :  "(492,504, cStates)",
"18" :  "(492,(502,502), cStates)",
"19" :  "(492,(502,504), cStates)",
"20" :  "(496,(496,497), i)",
"21" :  "(496,(496,509), i)",
"22" :  "(496,497, i)",
"23" :  "(496,496, i)",
"24" :  "(496,(496,497), i)",
"25" :  "(496,(496,509), i)",
"26" :  "(496,497, i)",
"27" :  "(496,496, i)"},{ "Name" : "findMatchStartBacktracking" ,
"Duas" : 47,
"0" :  "(515,(524,525), this)",
"1" :  "(515,(524,544), this)",
"2" :  "(515,(539,539), this)",
"3" :  "(515,(539,524), this)",
"4" :  "(515,(539,540), this)",
"5" :  "(515,(539,524), this)",
"6" :  "(515,540, this)",
"7" :  "(515,(532,533), matchAllTokens)",
"8" :  "(515,(532,539), matchAllTokens)",
"9" :  "(515,(524,525), this.regionEnd)",
"10" :  "(515,(524,544), this.regionEnd)",
"11" :  "(515,(539,539), this.branchLimit)",
"12" :  "(515,(539,524), this.branchLimit)",
"13" :  "(515,(539,540), this.branchLimit)",
"14" :  "(515,(539,524), this.branchLimit)",
"15" :  "(515,540, this.branchLimit)",
"16" :  "(515,(533,533), matchAll)",
"17" :  "(515,(533,533), matchAll)",
"18" :  "(515,(533,533), matchAll)",
"19" :  "(515,(533,539), matchAll)",
"20" :  "(516,(521,522), todo)",
"21" :  "(516,(521,550), todo)",
"22" :  "(516,522, todo)",
"23" :  "(516,541, todo)",
"24" :  "(522,(544,545), cStates)",
"25" :  "(522,(544,548), cStates)",
"26" :  "(522,548, cStates)",
"27" :  "(522,545, cStates)",
"28" :  "(522,528, cStates)",
"29" :  "(522,(529,530), cStates)",
"30" :  "(522,(529,532), cStates)",
"31" :  "(522,(539,540), cStates)",
"32" :  "(522,(539,524), cStates)",
"33" :  "(522,540, cStates)",
"34" :  "(522,(534,535), cStates)",
"35" :  "(522,(534,539), cStates)",
"36" :  "(522,535, cStates)",
"37" :  "(522,(533,533), cStates)",
"38" :  "(522,(533,535), cStates)",
"39" :  "(524,(524,525), i)",
"40" :  "(524,(524,544), i)",
"41" :  "(524,528, i)",
"42" :  "(524,524, i)",
"43" :  "(524,(524,525), i)",
"44" :  "(524,(524,544), i)",
"45" :  "(524,528, i)",
"46" :  "(524,524, i)"},{ "Name" : "matches" ,
"Duas" : 20,
"0" :  "(559,566, this)",
"1" :  "(559,567, this)",
"2" :  "(559,(564,564), this)",
"3" :  "(559,(564,564), this)",
"4" :  "(559,(564,564), this)",
"5" :  "(559,(564,564), this)",
"6" :  "(559,(564,564), this.regionStart)",
"7" :  "(559,(564,564), this.regionStart)",
"8" :  "(559,(564,564), this.matchedGroups)",
"9" :  "(559,(564,564), this.matchedGroups)",
"10" :  "(559,(564,564), this.matchedGroups)",
"11" :  "(559,(564,564), this.matchedGroups)",
"12" :  "(559,(564,564), this.regionEnd)",
"13" :  "(559,(564,564), this.regionEnd)",
"14" :  "(561,(562,564), status)",
"15" :  "(561,(562,566), status)",
"16" :  "(561,567, status)",
"17" :  "(561,568, status)",
"18" :  "(564,567, status)",
"19" :  "(564,568, status)"},{ "Name" : "clearMatched" ,
"Duas" : 32,
"0" :  "(572,(572,573), this)",
"1" :  "(572,(572,575), this)",
"2" :  "(572,(575,576), this)",
"3" :  "(572,(575,580), this)",
"4" :  "(572,(576,577), this)",
"5" :  "(572,(576,580), this)",
"6" :  "(572,577, this)",
"7" :  "(572,573, this)",
"8" :  "(572,(572,573), this.matchedGroups)",
"9" :  "(572,(572,575), this.matchedGroups)",
"10" :  "(572,573, this.matchedGroups)",
"11" :  "(572,(575,576), this.matchedResults)",
"12" :  "(572,(575,580), this.matchedResults)",
"13" :  "(572,(576,577), this.matchedResults)",
"14" :  "(572,(576,580), this.matchedResults)",
"15" :  "(572,577, this.matchedResults)",
"16" :  "(572,(572,573), i)",
"17" :  "(572,(572,575), i)",
"18" :  "(572,573, i)",
"19" :  "(572,572, i)",
"20" :  "(572,(572,573), i)",
"21" :  "(572,(572,575), i)",
"22" :  "(572,573, i)",
"23" :  "(572,572, i)",
"24" :  "(576,(576,577), i)",
"25" :  "(576,(576,580), i)",
"26" :  "(576,577, i)",
"27" :  "(576,576, i)",
"28" :  "(576,(576,577), i)",
"29" :  "(576,(576,580), i)",
"30" :  "(576,577, i)",
"31" :  "(576,576, i)"},{ "Name" : "getStateMessage" ,
"Duas" : 8,
"0" :  "(583,(583,584), this)",
"1" :  "(583,(583,585), this)",
"2" :  "(583,(585,586), this)",
"3" :  "(583,(585,588), this)",
"4" :  "(583,(583,584), this.matchingCompleted)",
"5" :  "(583,(583,585), this.matchingCompleted)",
"6" :  "(583,(585,586), this.matched)",
"7" :  "(583,(585,588), this.matched)"},{ "Name" : "region" ,
"Duas" : 34,
"0" :  "(598,599, this)",
"1" :  "(598,(598,599), this)",
"2" :  "(598,(598,601), this)",
"3" :  "(598,602, this)",
"4" :  "(598,(601,602), this)",
"5" :  "(598,(601,604), this)",
"6" :  "(598,607, this)",
"7" :  "(598,608, this)",
"8" :  "(598,609, this)",
"9" :  "(598,(598,598), start)",
"10" :  "(598,(598,599), start)",
"11" :  "(598,599, start)",
"12" :  "(598,(598,599), start)",
"13" :  "(598,(598,601), start)",
"14" :  "(598,(604,605), start)",
"15" :  "(598,(604,607), start)",
"16" :  "(598,607, start)",
"17" :  "(598,608, start)",
"18" :  "(598,605, start)",
"19" :  "(598,(601,601), end)",
"20" :  "(598,(601,602), end)",
"21" :  "(598,602, end)",
"22" :  "(598,(601,602), end)",
"23" :  "(598,(601,604), end)",
"24" :  "(598,(604,605), end)",
"25" :  "(598,(604,607), end)",
"26" :  "(598,609, end)",
"27" :  "(598,605, end)",
"28" :  "(598,599, this.elements)",
"29" :  "(598,(598,599), this.elements)",
"30" :  "(598,(598,601), this.elements)",
"31" :  "(598,602, this.elements)",
"32" :  "(598,(601,602), this.elements)",
"33" :  "(598,(601,604), this.elements)"},{ "Name" : "toBasicSequenceMatchResult" ,
"Duas" : 10,
"0" :  "(631,(631,631), this)",
"1" :  "(631,(631,634), this)",
"2" :  "(631,634, this)",
"3" :  "(631,(631,632), this)",
"4" :  "(631,(631,634), this)",
"5" :  "(631,632, this)",
"6" :  "(631,(631,631), this.matchingCompleted)",
"7" :  "(631,(631,634), this.matchingCompleted)",
"8" :  "(631,(631,632), this.matched)",
"9" :  "(631,(631,634), this.matched)"},{ "Name" : "start" ,
"Duas" : 11,
"0" :  "(641,(641,641), this)",
"1" :  "(641,(641,644), this)",
"2" :  "(641,644, this)",
"3" :  "(641,(641,642), this)",
"4" :  "(641,(641,644), this)",
"5" :  "(641,642, this)",
"6" :  "(641,642, group)",
"7" :  "(641,(641,641), this.matchingCompleted)",
"8" :  "(641,(641,644), this.matchingCompleted)",
"9" :  "(641,(641,642), this.matched)",
"10" :  "(641,(641,644), this.matched)"},{ "Name" : "end" ,
"Duas" : 11,
"0" :  "(651,(651,651), this)",
"1" :  "(651,(651,654), this)",
"2" :  "(651,654, this)",
"3" :  "(651,(651,652), this)",
"4" :  "(651,(651,654), this)",
"5" :  "(651,652, this)",
"6" :  "(651,652, group)",
"7" :  "(651,(651,651), this.matchingCompleted)",
"8" :  "(651,(651,654), this.matchingCompleted)",
"9" :  "(651,(651,652), this.matched)",
"10" :  "(651,(651,654), this.matched)"},{ "Name" : "groupNodes" ,
"Duas" : 11,
"0" :  "(661,(661,661), this)",
"1" :  "(661,(661,664), this)",
"2" :  "(661,664, this)",
"3" :  "(661,(661,662), this)",
"4" :  "(661,(661,664), this)",
"5" :  "(661,662, this)",
"6" :  "(661,662, group)",
"7" :  "(661,(661,661), this.matchingCompleted)",
"8" :  "(661,(661,664), this.matchingCompleted)",
"9" :  "(661,(661,662), this.matched)",
"10" :  "(661,(661,664), this.matched)"},{ "Name" : "groupValue" ,
"Duas" : 11,
"0" :  "(671,(671,671), this)",
"1" :  "(671,(671,674), this)",
"2" :  "(671,674, this)",
"3" :  "(671,(671,672), this)",
"4" :  "(671,(671,674), this)",
"5" :  "(671,672, this)",
"6" :  "(671,672, group)",
"7" :  "(671,(671,671), this.matchingCompleted)",
"8" :  "(671,(671,674), this.matchingCompleted)",
"9" :  "(671,(671,672), this.matched)",
"10" :  "(671,(671,674), this.matched)"},{ "Name" : "groupInfo" ,
"Duas" : 11,
"0" :  "(681,(681,681), this)",
"1" :  "(681,(681,684), this)",
"2" :  "(681,684, this)",
"3" :  "(681,(681,682), this)",
"4" :  "(681,(681,684), this)",
"5" :  "(681,682, this)",
"6" :  "(681,682, group)",
"7" :  "(681,(681,681), this.matchingCompleted)",
"8" :  "(681,(681,684), this.matchingCompleted)",
"9" :  "(681,(681,682), this.matched)",
"10" :  "(681,(681,684), this.matched)"},{ "Name" : "groupMatchResults" ,
"Duas" : 11,
"0" :  "(691,(691,691), this)",
"1" :  "(691,(691,694), this)",
"2" :  "(691,694, this)",
"3" :  "(691,(691,692), this)",
"4" :  "(691,(691,694), this)",
"5" :  "(691,692, this)",
"6" :  "(691,692, group)",
"7" :  "(691,(691,691), this.matchingCompleted)",
"8" :  "(691,(691,694), this.matchingCompleted)",
"9" :  "(691,(691,692), this.matched)",
"10" :  "(691,(691,694), this.matched)"},{ "Name" : "groupMatchResult" ,
"Duas" : 12,
"0" :  "(701,(701,701), this)",
"1" :  "(701,(701,704), this)",
"2" :  "(701,704, this)",
"3" :  "(701,(701,702), this)",
"4" :  "(701,(701,704), this)",
"5" :  "(701,702, this)",
"6" :  "(701,702, group)",
"7" :  "(701,702, index)",
"8" :  "(701,(701,701), this.matchingCompleted)",
"9" :  "(701,(701,704), this.matchingCompleted)",
"10" :  "(701,(701,702), this.matched)",
"11" :  "(701,(701,704), this.matched)"},{ "Name" : "nodeMatchResult" ,
"Duas" : 11,
"0" :  "(711,(711,711), this)",
"1" :  "(711,(711,714), this)",
"2" :  "(711,714, this)",
"3" :  "(711,(711,712), this)",
"4" :  "(711,(711,714), this)",
"5" :  "(711,712, this)",
"6" :  "(711,712, index)",
"7" :  "(711,(711,711), this.matchingCompleted)",
"8" :  "(711,(711,714), this.matchingCompleted)",
"9" :  "(711,(711,712), this.matched)",
"10" :  "(711,(711,714), this.matched)"},{ "Name" : "getMatchedSignature" ,
"Duas" : 8,
"0" :  "(1313,(1313,1313), this)",
"1" :  "(1313,(1313,1314), this)",
"2" :  "(1313,1315, this)",
"3" :  "(1313,(1313,1313), this.matchedGroups)",
"4" :  "(1313,(1313,1314), this.matchedGroups)",
"5" :  "(1313,1315, this.matchedGroups)",
"6" :  "(1314,1318, sb)",
"7" :  "(1314,1316, sb)"}]
}