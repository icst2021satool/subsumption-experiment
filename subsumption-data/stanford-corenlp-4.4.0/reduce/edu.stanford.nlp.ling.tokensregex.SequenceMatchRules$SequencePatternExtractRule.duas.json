{
"Class" : "edu.stanford.nlp.ling.tokensregex.SequenceMatchRules$SequencePatternExtractRule", 
"Methods" : [{ "Name" : "extract" ,
"Duas" : 23,
"0" :  "(992,994, this)",
"1" :  "(992,(995,996), this)",
"2" :  "(992,(995,998), this)",
"3" :  "(992,998, this)",
"4" :  "(992,1000, this)",
"5" :  "(992,996, this)",
"6" :  "(992,(992,992), seq)",
"7" :  "(992,(992,993), seq)",
"8" :  "(992,994, seq)",
"9" :  "(992,1000, out)",
"10" :  "(992,994, this.pattern)",
"11" :  "(992,(995,996), this.findType)",
"12" :  "(992,(995,998), this.findType)",
"13" :  "(992,996, this.findType)",
"14" :  "(992,998, this.matchWithResult)",
"15" :  "(992,1000, this.extractor)",
"16" :  "(993,1004, extracted)",
"17" :  "(994,998, m)",
"18" :  "(994,(999,1000), m)",
"19" :  "(994,(999,1004), m)",
"20" :  "(994,1000, m)",
"21" :  "(994,996, m)",
"22" :  "(1001,1004, extracted)"},{ "Name" : "apply" ,
"Duas" : 12,
"0" :  "(1009,1010, this)",
"1" :  "(1009,1011, this)",
"2" :  "(1009,1013, this)",
"3" :  "(1009,(1009,1009), seq)",
"4" :  "(1009,(1009,1010), seq)",
"5" :  "(1009,1010, seq)",
"6" :  "(1009,1010, this.pattern)",
"7" :  "(1009,1011, this.matchWithResult)",
"8" :  "(1009,1013, this.extractor)",
"9" :  "(1010,(1012,1013), m)",
"10" :  "(1010,(1012,1015), m)",
"11" :  "(1010,1013, m)"}]
}