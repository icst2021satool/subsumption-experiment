{
"Class" : "edu.stanford.nlp.ling.tokensregex.parser.TokenMgrError", 
"Methods" : [{ "Name" : "addEscapes" ,
"Duas" : 59,
"0" :  "(51,(53,54), str)",
"1" :  "(51,(53,90), str)",
"2" :  "(51,(54,81), str)",
"3" :  "(51,(54,57), str)",
"4" :  "(51,(54,60), str)",
"5" :  "(51,(54,63), str)",
"6" :  "(51,(54,66), str)",
"7" :  "(51,(54,69), str)",
"8" :  "(51,(54,72), str)",
"9" :  "(51,(54,75), str)",
"10" :  "(51,(54,78), str)",
"11" :  "(51,81, str)",
"12" :  "(51,(81,81), str)",
"13" :  "(51,(81,82), str)",
"14" :  "(51,90, retval)",
"15" :  "(51,78, retval)",
"16" :  "(51,75, retval)",
"17" :  "(51,72, retval)",
"18" :  "(51,69, retval)",
"19" :  "(51,66, retval)",
"20" :  "(51,63, retval)",
"21" :  "(51,60, retval)",
"22" :  "(51,57, retval)",
"23" :  "(51,83, retval)",
"24" :  "(51,85, retval)",
"25" :  "(53,(53,54), i)",
"26" :  "(53,(53,90), i)",
"27" :  "(53,(54,81), i)",
"28" :  "(53,(54,57), i)",
"29" :  "(53,(54,60), i)",
"30" :  "(53,(54,63), i)",
"31" :  "(53,(54,66), i)",
"32" :  "(53,(54,69), i)",
"33" :  "(53,(54,72), i)",
"34" :  "(53,(54,75), i)",
"35" :  "(53,(54,78), i)",
"36" :  "(53,53, i)",
"37" :  "(53,81, i)",
"38" :  "(53,(81,81), i)",
"39" :  "(53,(81,82), i)",
"40" :  "(81,82, ch)",
"41" :  "(81,(81,82), ch)",
"42" :  "(81,(81,85), ch)",
"43" :  "(81,85, ch)",
"44" :  "(53,(53,54), i)",
"45" :  "(53,(53,90), i)",
"46" :  "(53,(54,81), i)",
"47" :  "(53,(54,57), i)",
"48" :  "(53,(54,60), i)",
"49" :  "(53,(54,63), i)",
"50" :  "(53,(54,66), i)",
"51" :  "(53,(54,69), i)",
"52" :  "(53,(54,72), i)",
"53" :  "(53,(54,75), i)",
"54" :  "(53,(54,78), i)",
"55" :  "(53,53, i)",
"56" :  "(53,81, i)",
"57" :  "(53,(81,81), i)",
"58" :  "(53,(81,82), i)"},{ "Name" : "LexicalErr" ,
"Duas" : 7,
"0" :  "(106,(107,107), EOFSeen)",
"1" :  "(106,(107,107), EOFSeen)",
"2" :  "(106,107, errorLine)",
"3" :  "(106,107, errorColumn)",
"4" :  "(106,107, errorAfter)",
"5" :  "(106,107, curChar)",
"6" :  "(106,107, curChar1)"}]
}