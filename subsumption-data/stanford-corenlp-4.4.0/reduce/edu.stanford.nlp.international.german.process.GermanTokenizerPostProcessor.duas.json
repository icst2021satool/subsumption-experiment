{
"Class" : "edu.stanford.nlp.international.german.process.GermanTokenizerPostProcessor", 
"Methods" : [{ "Name" : "condenseUmlauts" ,
"Duas" : 9,
"0" :  "(55,61, token)",
"1" :  "(55,64, token)",
"2" :  "(55,58, token)",
"3" :  "(56,(57,58), updatedValue)",
"4" :  "(56,(57,61), updatedValue)",
"5" :  "(56,58, updatedValue)",
"6" :  "(62,(63,64), updatedWord)",
"7" :  "(62,(63,66), updatedWord)",
"8" :  "(62,64, updatedWord)"},{ "Name" : "condenseUmlauts" ,
"Duas" : 67,
"0" :  "(69,(70,71), value)",
"1" :  "(69,(70,100), value)",
"2" :  "(69,71, value)",
"3" :  "(69,75, value)",
"4" :  "(69,76, value)",
"5" :  "(69,(100,101), ns)",
"6" :  "(69,(100,103), ns)",
"7" :  "(69,101, ns)",
"8" :  "(69,(95,96), ns)",
"9" :  "(69,(95,70), ns)",
"10" :  "(69,96, ns)",
"11" :  "(69,(74,75), ns)",
"12" :  "(69,(74,78), ns)",
"13" :  "(69,(78,78), ns)",
"14" :  "(69,(78,78), ns)",
"15" :  "(69,78, ns)",
"16" :  "(69,92, ns)",
"17" :  "(69,90, ns)",
"18" :  "(69,88, ns)",
"19" :  "(69,86, ns)",
"20" :  "(69,84, ns)",
"21" :  "(69,82, ns)",
"22" :  "(69,80, ns)",
"23" :  "(70,(70,71), i)",
"24" :  "(70,(70,100), i)",
"25" :  "(70,71, i)",
"26" :  "(70,70, i)",
"27" :  "(70,76, i)",
"28" :  "(71,(72,74), cur)",
"29" :  "(71,(72,95), cur)",
"30" :  "(71,96, cur)",
"31" :  "(71,92, cur)",
"32" :  "(75,(78,78), ns)",
"33" :  "(75,(78,78), ns)",
"34" :  "(75,78, ns)",
"35" :  "(75,92, ns)",
"36" :  "(75,(100,101), ns)",
"37" :  "(75,(100,103), ns)",
"38" :  "(75,101, ns)",
"39" :  "(75,(95,96), ns)",
"40" :  "(75,(95,70), ns)",
"41" :  "(75,96, ns)",
"42" :  "(75,(74,75), ns)",
"43" :  "(75,(74,78), ns)",
"44" :  "(75,90, ns)",
"45" :  "(75,88, ns)",
"46" :  "(75,86, ns)",
"47" :  "(75,84, ns)",
"48" :  "(75,82, ns)",
"49" :  "(75,80, ns)",
"50" :  "(78,(79,80), prev)",
"51" :  "(78,(79,81), prev)",
"52" :  "(78,(81,82), prev)",
"53" :  "(78,(81,83), prev)",
"54" :  "(78,(83,84), prev)",
"55" :  "(78,(83,85), prev)",
"56" :  "(78,(85,86), prev)",
"57" :  "(78,(85,87), prev)",
"58" :  "(78,(87,88), prev)",
"59" :  "(78,(87,89), prev)",
"60" :  "(78,(89,90), prev)",
"61" :  "(78,(89,92), prev)",
"62" :  "(70,(70,71), i)",
"63" :  "(70,(70,100), i)",
"64" :  "(70,71, i)",
"65" :  "(70,70, i)",
"66" :  "(70,76, i)"},{ "Name" : "process" ,
"Duas" : 82,
"0" :  "(108,117, this)",
"1" :  "(108,(128,128), this)",
"2" :  "(108,(128,129), this)",
"3" :  "(108,(120,120), this)",
"4" :  "(108,(120,120), this)",
"5" :  "(108,(110,111), tokens)",
"6" :  "(108,(110,113), tokens)",
"7" :  "(108,(113,114), tokens)",
"8" :  "(108,(113,137), tokens)",
"9" :  "(108,114, tokens)",
"10" :  "(108,(123,123), tokens)",
"11" :  "(108,(123,123), tokens)",
"12" :  "(108,(123,123), tokens)",
"13" :  "(108,(123,123), tokens)",
"14" :  "(108,(120,120), tokens)",
"15" :  "(108,(120,120), tokens)",
"16" :  "(108,(120,120), tokens)",
"17" :  "(108,(120,120), tokens)",
"18" :  "(108,111, tokens)",
"19" :  "(108,117, this.afterIsEmpty)",
"20" :  "(108,(120,120), this.ordinalPredictingWords)",
"21" :  "(108,(120,120), this.ordinalPredictingWords)",
"22" :  "(108,(128,128), this.germanAbbreviations)",
"23" :  "(108,(128,129), this.germanAbbreviations)",
"24" :  "(108,137, processedTokens)",
"25" :  "(108,140, processedTokens)",
"26" :  "(108,115, processedTokens)",
"27" :  "(108,133, processedTokens)",
"28" :  "(108,111, processedTokens)",
"29" :  "(113,(113,114), i)",
"30" :  "(113,(113,137), i)",
"31" :  "(113,114, i)",
"32" :  "(113,113, i)",
"33" :  "(113,(123,123), i)",
"34" :  "(113,(123,123), i)",
"35" :  "(113,(123,123), i)",
"36" :  "(113,(123,123), i)",
"37" :  "(113,(120,120), i)",
"38" :  "(113,(120,120), i)",
"39" :  "(113,(120,120), i)",
"40" :  "(113,(120,120), i)",
"41" :  "(114,133, currToken)",
"42" :  "(114,131, currToken)",
"43" :  "(114,(129,129), currToken)",
"44" :  "(114,(129,129), currToken)",
"45" :  "(114,(126,126), currToken)",
"46" :  "(114,(126,126), currToken)",
"47" :  "(114,(123,123), currToken)",
"48" :  "(114,(123,123), currToken)",
"49" :  "(114,(119,119), currToken)",
"50" :  "(114,(119,120), currToken)",
"51" :  "(115,(119,119), lastProcessedToken)",
"52" :  "(115,(119,120), lastProcessedToken)",
"53" :  "(115,(122,122), lastProcessedToken)",
"54" :  "(115,(122,123), lastProcessedToken)",
"55" :  "(115,(125,125), lastProcessedToken)",
"56" :  "(115,(125,126), lastProcessedToken)",
"57" :  "(115,(128,128), lastProcessedToken)",
"58" :  "(115,(128,129), lastProcessedToken)",
"59" :  "(115,131, lastProcessedToken)",
"60" :  "(117,(130,130), emptyAfter)",
"61" :  "(117,(130,133), emptyAfter)",
"62" :  "(120,(130,130), ordinalMerge)",
"63" :  "(120,(130,131), ordinalMerge)",
"64" :  "(123,(130,130), numberToHyphenMerge)",
"65" :  "(123,(130,131), numberToHyphenMerge)",
"66" :  "(126,(130,130), hyphenToNumberMerge)",
"67" :  "(126,(130,131), hyphenToNumberMerge)",
"68" :  "(129,(130,131), abbreviationMerge)",
"69" :  "(129,(130,133), abbreviationMerge)",
"70" :  "(113,(113,114), i)",
"71" :  "(113,(113,137), i)",
"72" :  "(113,114, i)",
"73" :  "(113,113, i)",
"74" :  "(113,(123,123), i)",
"75" :  "(113,(123,123), i)",
"76" :  "(113,(123,123), i)",
"77" :  "(113,(123,123), i)",
"78" :  "(113,(120,120), i)",
"79" :  "(113,(120,120), i)",
"80" :  "(113,(120,120), i)",
"81" :  "(113,(120,120), i)"},{ "Name" : "lambda$new$0" ,
"Duas" : 4,
"0" :  "(28,(28,28), tok)",
"1" :  "(28,(28,28), tok)",
"2" :  "(28,(28,28), tok)",
"3" :  "(28,(28,28), tok)"}]
}