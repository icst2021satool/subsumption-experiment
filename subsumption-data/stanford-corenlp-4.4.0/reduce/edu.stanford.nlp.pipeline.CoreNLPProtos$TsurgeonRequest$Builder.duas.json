{
"Class" : "edu.stanford.nlp.pipeline.CoreNLPProtos$TsurgeonRequest$Builder", 
"Methods" : [{ "Name" : "maybeForceBuilderInitialization" ,
"Duas" : 2,
"0" :  "(-1,-1, this)",
"1" :  "(-1,-1, this)"},{ "Name" : "clear" ,
"Duas" : 20,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,(-1,-1), this)",
"4" :  "(-1,(-1,-1), this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,-1, this)",
"7" :  "(-1,-1, this)",
"8" :  "(-1,-1, this)",
"9" :  "(-1,-1, this)",
"10" :  "(-1,-1, this)",
"11" :  "(-1,(-1,-1), this.operationsBuilder_)",
"12" :  "(-1,(-1,-1), this.operationsBuilder_)",
"13" :  "(-1,-1, this.operationsBuilder_)",
"14" :  "(-1,-1, this.bitField0_)",
"15" :  "(-1,-1, this.bitField0_)",
"16" :  "(-1,(-1,-1), this.treesBuilder_)",
"17" :  "(-1,(-1,-1), this.treesBuilder_)",
"18" :  "(-1,-1, this.treesBuilder_)",
"19" :  "(-1,-1, this.bitField0_)"},{ "Name" : "build" ,
"Duas" : 4,
"0" :  "(-1,(-1,-1), result)",
"1" :  "(-1,(-1,-1), result)",
"2" :  "(-1,-1, result)",
"3" :  "(-1,-1, result)"},{ "Name" : "buildPartial" ,
"Duas" : 43,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,(-1,-1), this)",
"4" :  "(-1,(-1,-1), this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,-1, this)",
"7" :  "(-1,(-1,-1), this)",
"8" :  "(-1,(-1,-1), this)",
"9" :  "(-1,-1, this)",
"10" :  "(-1,-1, this)",
"11" :  "(-1,-1, this)",
"12" :  "(-1,(-1,-1), this)",
"13" :  "(-1,(-1,-1), this)",
"14" :  "(-1,-1, this)",
"15" :  "(-1,-1, this)",
"16" :  "(-1,-1, this)",
"17" :  "(-1,(-1,-1), this.bitField0_)",
"18" :  "(-1,(-1,-1), this.bitField0_)",
"19" :  "(-1,-1, this.bitField0_)",
"20" :  "(-1,(-1,-1), this.bitField0_)",
"21" :  "(-1,(-1,-1), this.bitField0_)",
"22" :  "(-1,-1, this.bitField0_)",
"23" :  "(-1,(-1,-1), this.operationsBuilder_)",
"24" :  "(-1,(-1,-1), this.operationsBuilder_)",
"25" :  "(-1,-1, this.operationsBuilder_)",
"26" :  "(-1,-1, this.operations_)",
"27" :  "(-1,-1, this.operations_)",
"28" :  "(-1,(-1,-1), this.treesBuilder_)",
"29" :  "(-1,(-1,-1), this.treesBuilder_)",
"30" :  "(-1,-1, this.treesBuilder_)",
"31" :  "(-1,-1, this.trees_)",
"32" :  "(-1,-1, this.trees_)",
"33" :  "(-1,-1, result)",
"34" :  "(-1,-1, result)",
"35" :  "(-1,-1, result)",
"36" :  "(-1,-1, result)",
"37" :  "(-1,-1, result)",
"38" :  "(-1,-1, this.operations_)",
"39" :  "(-1,(-1,-1), this.bitField0_)",
"40" :  "(-1,(-1,-1), this.bitField0_)",
"41" :  "(-1,-1, this.bitField0_)",
"42" :  "(-1,-1, this.trees_)"},{ "Name" : "mergeFrom" ,
"Duas" : 7,
"0" :  "(-1,-1, this)",
"1" :  "(-1,-1, this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,(-1,-1), other)",
"4" :  "(-1,(-1,-1), other)",
"5" :  "(-1,-1, other)",
"6" :  "(-1,-1, other)"},{ "Name" : "mergeFrom" ,
"Duas" : 83,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,(-1,-1), this)",
"3" :  "(-1,(-1,-1), this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,-1, this)",
"7" :  "(-1,(-1,-1), this)",
"8" :  "(-1,(-1,-1), this)",
"9" :  "(-1,-1, this)",
"10" :  "(-1,-1, this)",
"11" :  "(-1,-1, this)",
"12" :  "(-1,-1, this)",
"13" :  "(-1,-1, this)",
"14" :  "(-1,-1, this)",
"15" :  "(-1,(-1,-1), this)",
"16" :  "(-1,(-1,-1), this)",
"17" :  "(-1,-1, this)",
"18" :  "(-1,-1, this)",
"19" :  "(-1,-1, this)",
"20" :  "(-1,-1, this)",
"21" :  "(-1,-1, this)",
"22" :  "(-1,(-1,-1), this)",
"23" :  "(-1,(-1,-1), this)",
"24" :  "(-1,-1, this)",
"25" :  "(-1,-1, this)",
"26" :  "(-1,-1, this)",
"27" :  "(-1,-1, this)",
"28" :  "(-1,-1, this)",
"29" :  "(-1,-1, this)",
"30" :  "(-1,(-1,-1), this)",
"31" :  "(-1,(-1,-1), this)",
"32" :  "(-1,-1, this)",
"33" :  "(-1,-1, this)",
"34" :  "(-1,-1, this)",
"35" :  "(-1,-1, this)",
"36" :  "(-1,-1, this)",
"37" :  "(-1,-1, this)",
"38" :  "(-1,(-1,-1), other)",
"39" :  "(-1,(-1,-1), other)",
"40" :  "(-1,(-1,-1), other)",
"41" :  "(-1,(-1,-1), other)",
"42" :  "(-1,(-1,-1), other)",
"43" :  "(-1,(-1,-1), other)",
"44" :  "(-1,-1, other)",
"45" :  "(-1,-1, other)",
"46" :  "(-1,-1, other)",
"47" :  "(-1,(-1,-1), other)",
"48" :  "(-1,(-1,-1), other)",
"49" :  "(-1,-1, other)",
"50" :  "(-1,-1, other)",
"51" :  "(-1,-1, other)",
"52" :  "(-1,-1, other)",
"53" :  "(-1,(-1,-1), other)",
"54" :  "(-1,(-1,-1), other)",
"55" :  "(-1,-1, other)",
"56" :  "(-1,-1, other)",
"57" :  "(-1,(-1,-1), this.operationsBuilder_)",
"58" :  "(-1,(-1,-1), this.operationsBuilder_)",
"59" :  "(-1,(-1,-1), this.operationsBuilder_)",
"60" :  "(-1,(-1,-1), this.operationsBuilder_)",
"61" :  "(-1,-1, this.operationsBuilder_)",
"62" :  "(-1,-1, this.operationsBuilder_)",
"63" :  "(-1,(-1,-1), this.operations_)",
"64" :  "(-1,(-1,-1), this.operations_)",
"65" :  "(-1,-1, this.operations_)",
"66" :  "(-1,-1, this.bitField0_)",
"67" :  "(-1,-1, this.bitField0_)",
"68" :  "(-1,-1, this.bitField0_)",
"69" :  "(-1,-1, this.bitField0_)",
"70" :  "(-1,(-1,-1), this.treesBuilder_)",
"71" :  "(-1,(-1,-1), this.treesBuilder_)",
"72" :  "(-1,(-1,-1), this.treesBuilder_)",
"73" :  "(-1,(-1,-1), this.treesBuilder_)",
"74" :  "(-1,-1, this.treesBuilder_)",
"75" :  "(-1,-1, this.treesBuilder_)",
"76" :  "(-1,(-1,-1), this.trees_)",
"77" :  "(-1,(-1,-1), this.trees_)",
"78" :  "(-1,-1, this.trees_)",
"79" :  "(-1,-1, this.bitField0_)",
"80" :  "(-1,-1, this.bitField0_)",
"81" :  "(-1,-1, this.bitField0_)",
"82" :  "(-1,-1, this.bitField0_)"},{ "Name" : "isInitialized" ,
"Duas" : 14,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,(-1,-1), this)",
"3" :  "(-1,(-1,-1), this)",
"4" :  "(-1,(-1,-1), i)",
"5" :  "(-1,(-1,-1), i)",
"6" :  "(-1,(-1,-1), i)",
"7" :  "(-1,(-1,-1), i)",
"8" :  "(-1,-1, i)",
"9" :  "(-1,(-1,-1), i)",
"10" :  "(-1,(-1,-1), i)",
"11" :  "(-1,(-1,-1), i)",
"12" :  "(-1,(-1,-1), i)",
"13" :  "(-1,-1, i)"},{ "Name" : "mergeFrom" ,
"Duas" : 5,
"0" :  "(-1,-1, this)",
"1" :  "(-1,-1, this)",
"2" :  "(-1,(-1,-1), parsedMessage)",
"3" :  "(-1,(-1,-1), parsedMessage)",
"4" :  "(-1,-1, parsedMessage)"},{ "Name" : "ensureOperationsIsMutable" ,
"Duas" : 9,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,(-1,-1), this.bitField0_)",
"6" :  "(-1,(-1,-1), this.bitField0_)",
"7" :  "(-1,-1, this.bitField0_)",
"8" :  "(-1,-1, this.operations_)"},{ "Name" : "getOperationsList" ,
"Duas" : 8,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,(-1,-1), this.operationsBuilder_)",
"5" :  "(-1,(-1,-1), this.operationsBuilder_)",
"6" :  "(-1,-1, this.operationsBuilder_)",
"7" :  "(-1,-1, this.operations_)"},{ "Name" : "getOperationsCount" ,
"Duas" : 8,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,(-1,-1), this.operationsBuilder_)",
"5" :  "(-1,(-1,-1), this.operationsBuilder_)",
"6" :  "(-1,-1, this.operationsBuilder_)",
"7" :  "(-1,-1, this.operations_)"},{ "Name" : "getOperations" ,
"Duas" : 10,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, index)",
"5" :  "(-1,-1, index)",
"6" :  "(-1,(-1,-1), this.operationsBuilder_)",
"7" :  "(-1,(-1,-1), this.operationsBuilder_)",
"8" :  "(-1,-1, this.operationsBuilder_)",
"9" :  "(-1,-1, this.operations_)"},{ "Name" : "setOperations" ,
"Duas" : 17,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,-1, this)",
"7" :  "(-1,-1, index)",
"8" :  "(-1,-1, index)",
"9" :  "(-1,-1, value)",
"10" :  "(-1,(-1,-1), value)",
"11" :  "(-1,(-1,-1), value)",
"12" :  "(-1,-1, value)",
"13" :  "(-1,(-1,-1), this.operationsBuilder_)",
"14" :  "(-1,(-1,-1), this.operationsBuilder_)",
"15" :  "(-1,-1, this.operationsBuilder_)",
"16" :  "(-1,-1, this.operations_)"},{ "Name" : "setOperations" ,
"Duas" : 15,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,-1, this)",
"7" :  "(-1,-1, index)",
"8" :  "(-1,-1, index)",
"9" :  "(-1,-1, builderForValue)",
"10" :  "(-1,-1, builderForValue)",
"11" :  "(-1,(-1,-1), this.operationsBuilder_)",
"12" :  "(-1,(-1,-1), this.operationsBuilder_)",
"13" :  "(-1,-1, this.operationsBuilder_)",
"14" :  "(-1,-1, this.operations_)"},{ "Name" : "addOperations" ,
"Duas" : 15,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,-1, this)",
"7" :  "(-1,-1, value)",
"8" :  "(-1,(-1,-1), value)",
"9" :  "(-1,(-1,-1), value)",
"10" :  "(-1,-1, value)",
"11" :  "(-1,(-1,-1), this.operationsBuilder_)",
"12" :  "(-1,(-1,-1), this.operationsBuilder_)",
"13" :  "(-1,-1, this.operationsBuilder_)",
"14" :  "(-1,-1, this.operations_)"},{ "Name" : "addOperations" ,
"Duas" : 17,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,-1, this)",
"7" :  "(-1,-1, index)",
"8" :  "(-1,-1, index)",
"9" :  "(-1,-1, value)",
"10" :  "(-1,(-1,-1), value)",
"11" :  "(-1,(-1,-1), value)",
"12" :  "(-1,-1, value)",
"13" :  "(-1,(-1,-1), this.operationsBuilder_)",
"14" :  "(-1,(-1,-1), this.operationsBuilder_)",
"15" :  "(-1,-1, this.operationsBuilder_)",
"16" :  "(-1,-1, this.operations_)"},{ "Name" : "addOperations" ,
"Duas" : 13,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,-1, this)",
"7" :  "(-1,-1, builderForValue)",
"8" :  "(-1,-1, builderForValue)",
"9" :  "(-1,(-1,-1), this.operationsBuilder_)",
"10" :  "(-1,(-1,-1), this.operationsBuilder_)",
"11" :  "(-1,-1, this.operationsBuilder_)",
"12" :  "(-1,-1, this.operations_)"},{ "Name" : "addOperations" ,
"Duas" : 15,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,-1, this)",
"7" :  "(-1,-1, index)",
"8" :  "(-1,-1, index)",
"9" :  "(-1,-1, builderForValue)",
"10" :  "(-1,-1, builderForValue)",
"11" :  "(-1,(-1,-1), this.operationsBuilder_)",
"12" :  "(-1,(-1,-1), this.operationsBuilder_)",
"13" :  "(-1,-1, this.operationsBuilder_)",
"14" :  "(-1,-1, this.operations_)"},{ "Name" : "addAllOperations" ,
"Duas" : 13,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,-1, this)",
"7" :  "(-1,-1, values)",
"8" :  "(-1,-1, values)",
"9" :  "(-1,(-1,-1), this.operationsBuilder_)",
"10" :  "(-1,(-1,-1), this.operationsBuilder_)",
"11" :  "(-1,-1, this.operationsBuilder_)",
"12" :  "(-1,-1, this.operations_)"},{ "Name" : "clearOperations" ,
"Duas" : 11,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,-1, this)",
"7" :  "(-1,(-1,-1), this.operationsBuilder_)",
"8" :  "(-1,(-1,-1), this.operationsBuilder_)",
"9" :  "(-1,-1, this.operationsBuilder_)",
"10" :  "(-1,-1, this.bitField0_)"},{ "Name" : "removeOperations" ,
"Duas" : 13,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,-1, this)",
"7" :  "(-1,-1, index)",
"8" :  "(-1,-1, index)",
"9" :  "(-1,(-1,-1), this.operationsBuilder_)",
"10" :  "(-1,(-1,-1), this.operationsBuilder_)",
"11" :  "(-1,-1, this.operationsBuilder_)",
"12" :  "(-1,-1, this.operations_)"},{ "Name" : "getOperationsOrBuilder" ,
"Duas" : 10,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, index)",
"5" :  "(-1,-1, index)",
"6" :  "(-1,(-1,-1), this.operationsBuilder_)",
"7" :  "(-1,(-1,-1), this.operationsBuilder_)",
"8" :  "(-1,-1, this.operationsBuilder_)",
"9" :  "(-1,-1, this.operations_)"},{ "Name" : "getOperationsOrBuilderList" ,
"Duas" : 8,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,(-1,-1), this.operationsBuilder_)",
"5" :  "(-1,(-1,-1), this.operationsBuilder_)",
"6" :  "(-1,-1, this.operationsBuilder_)",
"7" :  "(-1,-1, this.operations_)"},{ "Name" : "getOperationsFieldBuilder" ,
"Duas" : 15,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,(-1,-1), this)",
"4" :  "(-1,(-1,-1), this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,-1, this)",
"7" :  "(-1,-1, this)",
"8" :  "(-1,(-1,-1), this.operationsBuilder_)",
"9" :  "(-1,(-1,-1), this.operationsBuilder_)",
"10" :  "(-1,-1, this.operationsBuilder_)",
"11" :  "(-1,(-1,-1), this.bitField0_)",
"12" :  "(-1,(-1,-1), this.bitField0_)",
"13" :  "(-1,-1, this.operations_)",
"14" :  "(-1,-1, this.operationsBuilder_)"},{ "Name" : "ensureTreesIsMutable" ,
"Duas" : 9,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,(-1,-1), this.bitField0_)",
"6" :  "(-1,(-1,-1), this.bitField0_)",
"7" :  "(-1,-1, this.bitField0_)",
"8" :  "(-1,-1, this.trees_)"},{ "Name" : "getTreesList" ,
"Duas" : 8,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,(-1,-1), this.treesBuilder_)",
"5" :  "(-1,(-1,-1), this.treesBuilder_)",
"6" :  "(-1,-1, this.treesBuilder_)",
"7" :  "(-1,-1, this.trees_)"},{ "Name" : "getTreesCount" ,
"Duas" : 8,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,(-1,-1), this.treesBuilder_)",
"5" :  "(-1,(-1,-1), this.treesBuilder_)",
"6" :  "(-1,-1, this.treesBuilder_)",
"7" :  "(-1,-1, this.trees_)"},{ "Name" : "getTrees" ,
"Duas" : 10,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, index)",
"5" :  "(-1,-1, index)",
"6" :  "(-1,(-1,-1), this.treesBuilder_)",
"7" :  "(-1,(-1,-1), this.treesBuilder_)",
"8" :  "(-1,-1, this.treesBuilder_)",
"9" :  "(-1,-1, this.trees_)"},{ "Name" : "setTrees" ,
"Duas" : 17,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,-1, this)",
"7" :  "(-1,-1, index)",
"8" :  "(-1,-1, index)",
"9" :  "(-1,-1, value)",
"10" :  "(-1,(-1,-1), value)",
"11" :  "(-1,(-1,-1), value)",
"12" :  "(-1,-1, value)",
"13" :  "(-1,(-1,-1), this.treesBuilder_)",
"14" :  "(-1,(-1,-1), this.treesBuilder_)",
"15" :  "(-1,-1, this.treesBuilder_)",
"16" :  "(-1,-1, this.trees_)"},{ "Name" : "setTrees" ,
"Duas" : 15,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,-1, this)",
"7" :  "(-1,-1, index)",
"8" :  "(-1,-1, index)",
"9" :  "(-1,-1, builderForValue)",
"10" :  "(-1,-1, builderForValue)",
"11" :  "(-1,(-1,-1), this.treesBuilder_)",
"12" :  "(-1,(-1,-1), this.treesBuilder_)",
"13" :  "(-1,-1, this.treesBuilder_)",
"14" :  "(-1,-1, this.trees_)"},{ "Name" : "addTrees" ,
"Duas" : 15,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,-1, this)",
"7" :  "(-1,-1, value)",
"8" :  "(-1,(-1,-1), value)",
"9" :  "(-1,(-1,-1), value)",
"10" :  "(-1,-1, value)",
"11" :  "(-1,(-1,-1), this.treesBuilder_)",
"12" :  "(-1,(-1,-1), this.treesBuilder_)",
"13" :  "(-1,-1, this.treesBuilder_)",
"14" :  "(-1,-1, this.trees_)"},{ "Name" : "addTrees" ,
"Duas" : 17,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,-1, this)",
"7" :  "(-1,-1, index)",
"8" :  "(-1,-1, index)",
"9" :  "(-1,-1, value)",
"10" :  "(-1,(-1,-1), value)",
"11" :  "(-1,(-1,-1), value)",
"12" :  "(-1,-1, value)",
"13" :  "(-1,(-1,-1), this.treesBuilder_)",
"14" :  "(-1,(-1,-1), this.treesBuilder_)",
"15" :  "(-1,-1, this.treesBuilder_)",
"16" :  "(-1,-1, this.trees_)"},{ "Name" : "addTrees" ,
"Duas" : 13,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,-1, this)",
"7" :  "(-1,-1, builderForValue)",
"8" :  "(-1,-1, builderForValue)",
"9" :  "(-1,(-1,-1), this.treesBuilder_)",
"10" :  "(-1,(-1,-1), this.treesBuilder_)",
"11" :  "(-1,-1, this.treesBuilder_)",
"12" :  "(-1,-1, this.trees_)"},{ "Name" : "addTrees" ,
"Duas" : 15,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,-1, this)",
"7" :  "(-1,-1, index)",
"8" :  "(-1,-1, index)",
"9" :  "(-1,-1, builderForValue)",
"10" :  "(-1,-1, builderForValue)",
"11" :  "(-1,(-1,-1), this.treesBuilder_)",
"12" :  "(-1,(-1,-1), this.treesBuilder_)",
"13" :  "(-1,-1, this.treesBuilder_)",
"14" :  "(-1,-1, this.trees_)"},{ "Name" : "addAllTrees" ,
"Duas" : 13,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,-1, this)",
"7" :  "(-1,-1, values)",
"8" :  "(-1,-1, values)",
"9" :  "(-1,(-1,-1), this.treesBuilder_)",
"10" :  "(-1,(-1,-1), this.treesBuilder_)",
"11" :  "(-1,-1, this.treesBuilder_)",
"12" :  "(-1,-1, this.trees_)"},{ "Name" : "clearTrees" ,
"Duas" : 11,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,-1, this)",
"7" :  "(-1,(-1,-1), this.treesBuilder_)",
"8" :  "(-1,(-1,-1), this.treesBuilder_)",
"9" :  "(-1,-1, this.treesBuilder_)",
"10" :  "(-1,-1, this.bitField0_)"},{ "Name" : "removeTrees" ,
"Duas" : 13,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,-1, this)",
"7" :  "(-1,-1, index)",
"8" :  "(-1,-1, index)",
"9" :  "(-1,(-1,-1), this.treesBuilder_)",
"10" :  "(-1,(-1,-1), this.treesBuilder_)",
"11" :  "(-1,-1, this.treesBuilder_)",
"12" :  "(-1,-1, this.trees_)"},{ "Name" : "getTreesOrBuilder" ,
"Duas" : 10,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, index)",
"5" :  "(-1,-1, index)",
"6" :  "(-1,(-1,-1), this.treesBuilder_)",
"7" :  "(-1,(-1,-1), this.treesBuilder_)",
"8" :  "(-1,-1, this.treesBuilder_)",
"9" :  "(-1,-1, this.trees_)"},{ "Name" : "getTreesOrBuilderList" ,
"Duas" : 8,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,(-1,-1), this.treesBuilder_)",
"5" :  "(-1,(-1,-1), this.treesBuilder_)",
"6" :  "(-1,-1, this.treesBuilder_)",
"7" :  "(-1,-1, this.trees_)"},{ "Name" : "getTreesFieldBuilder" ,
"Duas" : 15,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,(-1,-1), this)",
"4" :  "(-1,(-1,-1), this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,-1, this)",
"7" :  "(-1,-1, this)",
"8" :  "(-1,(-1,-1), this.treesBuilder_)",
"9" :  "(-1,(-1,-1), this.treesBuilder_)",
"10" :  "(-1,-1, this.treesBuilder_)",
"11" :  "(-1,(-1,-1), this.bitField0_)",
"12" :  "(-1,(-1,-1), this.bitField0_)",
"13" :  "(-1,-1, this.trees_)",
"14" :  "(-1,-1, this.treesBuilder_)"}]
}