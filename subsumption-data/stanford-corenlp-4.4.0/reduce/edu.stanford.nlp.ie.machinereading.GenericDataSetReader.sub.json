{
"Class" : "edu.stanford.nlp.ie.machinereading.GenericDataSetReader", 
"Methods" : [{ "Name" : "<init>" ,
"Duas" : "11" ,
"Subsumers" : 2,
"0" : [ 7, 5, 4], "S0" : [0, 1, 2, 3, 4, 5, 7, 8, 9, 10 ],
"1" : [ 6], "S1" : [0, 1, 2, 3, 6, 8, 9, 10 ]
},{ "Name" : "getParser" ,
"Duas" : "14" ,
"Subsumers" : 4,
"0" : [ 12, 4], "S0" : [0, 3, 4, 6, 9, 12 ],
"1" : [ 13, 5], "S1" : [0, 2, 3, 5, 6, 9, 11, 13 ],
"2" : [ 10], "S2" : [0, 2, 3, 6, 10, 11 ],
"3" : [ 8, 7, 1], "S3" : [1, 2, 7, 8 ]
},{ "Name" : "parse" ,
"Duas" : "12" ,
"Subsumers" : 3,
"0" : [ 11, 8, 6, 3], "S0" : [0, 2, 3, 4, 6, 8, 9, 10, 11 ],
"1" : [ 7], "S1" : [0, 2, 4, 7, 9, 10 ],
"2" : [ 5, 1], "S2" : [1, 5, 9 ]
},{ "Name" : "modifyUsingCoreNLPNER" ,
"Duas" : "18" ,
"Subsumers" : 3,
"0" : [ 16, 17, 14], "S0" : [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17 ],
"1" : [ 11], "S1" : [0, 1, 3, 5, 7, 8, 11 ],
"2" : [ 2], "S2" : [2 ]
},{ "Name" : "sentenceToString" ,
"Duas" : "11" ,
"Subsumers" : 5,
"0" : [ 6], "S0" : [0, 2, 3, 4, 5, 6, 8 ],
"1" : [ 9], "S1" : [0, 2, 3, 4, 5, 8, 9 ],
"2" : [ 7], "S2" : [0, 2, 3, 4, 7, 8 ],
"3" : [ 10], "S3" : [0, 2, 3, 4, 8, 10 ],
"4" : [ 1], "S4" : [1, 3 ]
},{ "Name" : "assignSyntacticHead" ,
"Duas" : "36" ,
"Subsumers" : 4,
"0" : [ 32], "S0" : [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32 ],
"1" : [ 35], "S1" : [0, 1, 2, 6, 7, 8, 9, 11, 12, 14, 15, 17, 18, 20, 22, 23, 26, 28, 33, 34, 35 ],
"2" : [ 21], "S2" : [0, 1, 2, 6, 7, 8, 9, 11, 14, 15, 17, 18, 21, 22, 23 ],
"3" : [ 13, 5], "S3" : [5, 13 ]
},{ "Name" : "preProcessSentences" ,
"Duas" : "68" ,
"Subsumers" : 20,
"0" : [ 43], "S0" : [0, 2, 13, 16, 17, 19, 27, 29, 43 ],
"1" : [ 45], "S1" : [0, 2, 13, 16, 17, 19, 27, 29, 42, 45 ],
"2" : [ 44, 31, 32, 28, 18, 14, 15], "S2" : [0, 2, 14, 15, 16, 17, 18, 19, 28, 29, 31, 32, 42, 44 ],
"3" : [ 30, 1], "S3" : [1, 2, 16, 19, 30 ],
"4" : [ 20, 3], "S4" : [2, 3, 16, 19, 20 ],
"5" : [ 59], "S5" : [2, 4, 5, 8, 12, 16, 19, 21, 23, 26, 33, 52, 53, 54, 56, 59 ],
"6" : [ 61], "S6" : [2, 4, 5, 8, 12, 16, 19, 21, 23, 26, 33, 52, 53, 54, 56, 58, 61 ],
"7" : [ 60], "S7" : [2, 4, 5, 7, 8, 16, 19, 21, 22, 23, 33, 52, 53, 54, 55, 56, 58, 60 ],
"8" : [ 34, 6], "S8" : [2, 4, 6, 7, 8, 16, 19, 21, 22, 23, 34, 52, 53, 54, 55, 56 ],
"9" : [ 66], "S9" : [2, 4, 8, 9, 10, 11, 16, 19, 21, 23, 24, 25, 35, 36, 46, 48, 49, 50, 52, 53, 54, 56, 57, 66 ],
"10" : [ 67], "S10" : [2, 4, 8, 9, 10, 11, 16, 19, 21, 23, 24, 25, 35, 36, 46, 48, 49, 50, 52, 53, 54, 56, 57, 67 ],
"11" : [ 37], "S11" : [2, 4, 8, 9, 10, 11, 16, 19, 21, 23, 24, 25, 35, 37, 46, 48, 49, 50, 52, 53, 54, 56, 57 ],
"12" : [ 64], "S12" : [2, 4, 8, 9, 10, 11, 16, 19, 21, 23, 24, 25, 35, 38, 46, 48, 49, 50, 52, 53, 54, 56, 57, 64 ],
"13" : [ 65], "S13" : [2, 4, 8, 9, 10, 11, 16, 19, 21, 23, 24, 25, 35, 38, 46, 48, 49, 50, 52, 53, 54, 56, 57, 65 ],
"14" : [ 39], "S14" : [2, 4, 8, 9, 10, 11, 16, 19, 21, 23, 24, 25, 35, 39, 46, 48, 49, 50, 52, 53, 54, 56, 57 ],
"15" : [ 62], "S15" : [2, 4, 8, 9, 10, 11, 16, 19, 21, 23, 24, 25, 35, 40, 46, 48, 49, 50, 52, 53, 54, 56, 57, 62 ],
"16" : [ 63], "S16" : [2, 4, 8, 9, 10, 11, 16, 19, 21, 23, 24, 25, 35, 40, 46, 48, 49, 50, 52, 53, 54, 56, 57, 63 ],
"17" : [ 41], "S17" : [2, 4, 8, 9, 10, 11, 16, 19, 21, 23, 24, 25, 35, 41, 46, 48, 49, 50, 52, 53, 54, 56, 57 ],
"18" : [ 47], "S18" : [2, 4, 8, 16, 19, 21, 23, 47, 52, 53, 54, 56 ],
"19" : [ 51], "S19" : [2, 4, 16, 19, 21, 51 ]
},{ "Name" : "convertToCoreLabels" ,
"Duas" : "5" ,
"Subsumers" : 2,
"0" : [ 4, 2, 1], "S0" : [0, 1, 2, 4 ],
"1" : [ 3], "S1" : [0, 3 ]
},{ "Name" : "safeHead" ,
"Duas" : "8" ,
"Subsumers" : 3,
"0" : [ 6, 1], "S0" : [0, 1, 3, 6 ],
"1" : [ 7, 5], "S1" : [0, 3, 5, 7 ],
"2" : [ 4, 2], "S2" : [2, 4 ]
},{ "Name" : "findSyntacticHead" ,
"Duas" : "68" ,
"Subsumers" : 13,
"0" : [ 28, 27, 24, 21, 12, 0], "S0" : [0, 12, 21, 24, 27, 28 ],
"1" : [ 67, 64, 33, 9], "S1" : [1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 17, 18, 19, 22, 23, 29, 30, 31, 32, 33, 38, 43, 44, 45, 61, 64, 66, 67 ],
"2" : [ 36], "S2" : [1, 2, 3, 4, 5, 6, 7, 8, 13, 14, 15, 17, 18, 19, 22, 23, 29, 30, 31, 32, 36, 38, 43, 44, 45, 61, 66 ],
"3" : [ 41], "S3" : [1, 2, 3, 4, 5, 6, 7, 8, 13, 14, 15, 17, 18, 19, 22, 23, 29, 30, 31, 32, 38, 41, 43, 44, 45, 61, 66 ],
"4" : [ 54], "S4" : [1, 2, 3, 4, 5, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 22, 23, 25, 29, 30, 31, 32, 38, 42, 43, 44, 45, 47, 49, 50, 53, 54, 57, 61, 66 ],
"5" : [ 63], "S5" : [1, 2, 3, 4, 5, 6, 7, 8, 13, 14, 15, 17, 18, 19, 22, 23, 29, 30, 31, 32, 35, 38, 43, 44, 45, 61, 63, 66 ],
"6" : [ 65], "S6" : [1, 2, 3, 4, 5, 6, 7, 8, 13, 14, 15, 17, 18, 19, 22, 23, 29, 30, 31, 32, 38, 43, 44, 45, 61, 65, 66 ],
"7" : [ 51], "S7" : [1, 2, 3, 4, 5, 6, 7, 13, 14, 15, 16, 17, 18, 19, 22, 25, 26, 29, 30, 31, 32, 38, 43, 44, 45, 46, 47, 49, 50, 51, 52, 57 ],
"8" : [ 60], "S8" : [1, 2, 3, 4, 5, 6, 7, 13, 14, 15, 16, 17, 18, 19, 22, 25, 26, 29, 30, 31, 32, 38, 43, 44, 45, 46, 47, 49, 50, 52, 56, 57, 58, 59, 60 ],
"9" : [ 55], "S9" : [1, 2, 3, 4, 5, 6, 7, 13, 14, 15, 16, 17, 18, 19, 22, 25, 29, 30, 31, 32, 38, 42, 43, 44, 45, 47, 49, 50, 53, 55, 56, 57, 58, 59 ],
"10" : [ 62], "S10" : [1, 2, 3, 4, 5, 6, 7, 13, 14, 15, 17, 18, 19, 22, 29, 30, 31, 32, 35, 38, 43, 44, 45, 62 ],
"11" : [ 48], "S11" : [1, 2, 3, 4, 5, 6, 7, 13, 14, 15, 17, 18, 19, 22, 29, 30, 31, 32, 38, 43, 44, 45, 48 ],
"12" : [ 39, 40, 37, 34, 20, 10, 11], "S12" : [1, 2, 10, 11, 13, 14, 20, 22, 29, 30, 34, 37, 39, 40 ]
},{ "Name" : "findPartialSpan" ,
"Duas" : "22" ,
"Subsumers" : 5,
"0" : [ 20, 17, 13, 11, 0], "S0" : [0, 2, 7, 9, 11, 13, 16, 17, 18, 20 ],
"1" : [ 15, 14, 6, 4, 5, 1], "S1" : [1, 4, 5, 6, 14, 15 ],
"2" : [ 8, 3], "S2" : [2, 3, 7, 8, 16 ],
"3" : [ 21, 12], "S3" : [2, 7, 9, 12, 16, 18, 21 ],
"4" : [ 19, 10], "S4" : [2, 7, 10, 16, 19 ]
},{ "Name" : "funkyFindLeafWithApproximateSpan" ,
"Duas" : "23" ,
"Subsumers" : 5,
"0" : [ 14, 15, 11, 6, 3, 2, 0, 1], "S0" : [0, 1, 2, 3, 6, 11, 14, 15 ],
"1" : [ 21, 18, 12, 9], "S1" : [4, 7, 9, 12, 16, 18, 19, 21 ],
"2" : [ 22, 13, 10], "S2" : [4, 7, 10, 13, 16, 19, 22 ],
"3" : [ 20, 8], "S3" : [4, 8, 16, 20 ],
"4" : [ 17, 5], "S4" : [5, 17 ]
},{ "Name" : "originalFindSyntacticHead" ,
"Duas" : "38" ,
"Subsumers" : 9,
"0" : [ 30, 31, 28], "S0" : [0, 1, 2, 5, 6, 7, 8, 11, 12, 19, 22, 23, 24, 26, 27, 28, 29, 30, 31 ],
"1" : [ 15], "S1" : [0, 1, 2, 5, 7, 8, 10, 12, 15, 19, 22, 32 ],
"2" : [ 36], "S2" : [0, 1, 2, 5, 7, 8, 10, 12, 16, 19, 22, 32, 36 ],
"3" : [ 37], "S3" : [0, 1, 2, 5, 7, 8, 10, 12, 16, 19, 22, 32, 35, 37 ],
"4" : [ 17], "S4" : [0, 1, 2, 5, 7, 8, 10, 12, 17, 19, 22, 32, 35 ],
"5" : [ 34], "S5" : [0, 1, 2, 5, 7, 8, 10, 12, 14, 19, 22, 32, 34 ],
"6" : [ 33], "S6" : [0, 1, 2, 5, 7, 8, 12, 14, 19, 22, 33 ],
"7" : [ 25], "S7" : [0, 1, 2, 5, 7, 8, 12, 19, 22, 25 ],
"8" : [ 20, 21, 18, 13, 9, 3, 4], "S8" : [3, 4, 9, 13, 18, 20, 21 ]
},{ "Name" : "parseStrings" ,
"Duas" : "3" ,
"Subsumers" : 1,
"0" : [ 2], "S0" : [0, 1, 2 ]
},{ "Name" : "findTreeWithSpan" ,
"Duas" : "34" ,
"Subsumers" : 12,
"0" : [ 33, 31], "S0" : [0, 2, 7, 29, 30, 31, 33 ],
"1" : [ 32], "S1" : [0, 2, 7, 29, 30, 32 ],
"2" : [ 25, 6], "S2" : [0, 6, 9, 12, 14, 16, 18, 19, 23, 25 ],
"3" : [ 13], "S3" : [0, 13 ],
"4" : [ 15], "S4" : [0, 12, 15 ],
"5" : [ 17], "S5" : [0, 12, 14, 17 ],
"6" : [ 28], "S6" : [0, 28 ],
"7" : [ 26, 10, 1], "S7" : [1, 3, 10, 12, 14, 16, 18, 19, 20, 26 ],
"8" : [ 27, 11], "S8" : [3, 11, 12, 14, 16, 18, 19, 20, 27 ],
"9" : [ 21, 4], "S9" : [4, 12, 14, 16, 18, 19, 21 ],
"10" : [ 24, 5], "S10" : [5, 9, 12, 14, 16, 18, 19, 23, 24 ],
"11" : [ 22, 8], "S11" : [8, 12, 14, 16, 18, 19, 22 ]
}]
}