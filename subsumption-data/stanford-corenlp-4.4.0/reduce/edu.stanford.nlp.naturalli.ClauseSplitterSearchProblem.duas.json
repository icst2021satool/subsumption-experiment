{
"Class" : "edu.stanford.nlp.naturalli.ClauseSplitterSearchProblem", 
"Methods" : [{ "Name" : "<init>" ,
"Duas" : 19,
"0" :  "(267,282, this)",
"1" :  "(267,283, this)",
"2" :  "(267,286, this)",
"3" :  "(267,287, this)",
"4" :  "(267,(284,284), this)",
"5" :  "(267,(284,285), this)",
"6" :  "(267,279, this)",
"7" :  "(267,280, this)",
"8" :  "(267,(284,284), $assertionsDisabled)",
"9" :  "(267,(284,285), $assertionsDisabled)",
"10" :  "(119,286, this.extraEdgesByGovernor)",
"11" :  "(119,279, this.extraEdgesByGovernor)",
"12" :  "(123,287, this.extraEdgesByDependent)",
"13" :  "(123,280, this.extraEdgesByDependent)",
"14" :  "(268,282, this.tree)",
"15" :  "(268,283, this.tree)",
"16" :  "(268,(284,284), this.tree)",
"17" :  "(268,(284,285), this.tree)",
"18" :  "(283,285, extraEdges)"},{ "Name" : "splitToChildOfEdge" ,
"Duas" : 32,
"0" :  "(311,346, tree)",
"1" :  "(311,346, tree)",
"2" :  "(311,348, tree)",
"3" :  "(311,339, tree)",
"4" :  "(311,327, tree)",
"5" :  "(311,317, tree)",
"6" :  "(311,(333,339), toKeep)",
"7" :  "(311,(333,346), toKeep)",
"8" :  "(311,348, toKeep)",
"9" :  "(311,339, toKeep)",
"10" :  "(311,(328,329), toKeep)",
"11" :  "(311,(328,331), toKeep)",
"12" :  "(311,(318,319), toKeep)",
"13" :  "(311,(318,321), toKeep)",
"14" :  "(311,(324,325), fringe)",
"15" :  "(311,(324,333), fringe)",
"16" :  "(311,325, fringe)",
"17" :  "(311,329, fringe)",
"18" :  "(311,319, fringe)",
"19" :  "(312,346, nodesToRemove)",
"20" :  "(312,341, nodesToRemove)",
"21" :  "(312,326, nodesToRemove)",
"22" :  "(312,316, nodesToRemove)",
"23" :  "(317,(318,319), out)",
"24" :  "(317,(318,321), out)",
"25" :  "(317,319, out)",
"26" :  "(327,(328,329), out)",
"27" :  "(327,(328,331), out)",
"28" :  "(327,329, out)",
"29" :  "(339,(340,341), out)",
"30" :  "(339,(340,343), out)",
"31" :  "(339,341, out)"},{ "Name" : "simpleClause" ,
"Duas" : 22,
"0" :  "(362,382, this)",
"1" :  "(362,368, this)",
"2" :  "(362,377, tree)",
"3" :  "(362,381, tree)",
"4" :  "(362,382, tree)",
"5" :  "(362,(370,371), tree)",
"6" :  "(362,(370,373), tree)",
"7" :  "(362,368, this.extraEdgesByDependent)",
"8" :  "(362,382, this.tree)",
"9" :  "(365,376, refReplaceMap)",
"10" :  "(365,371, refReplaceMap)",
"11" :  "(367,371, vertex)",
"12" :  "(368,(369,369), edge)",
"13" :  "(368,(369,373), edge)",
"14" :  "(368,(370,371), edge)",
"15" :  "(368,(370,373), edge)",
"16" :  "(368,371, edge)",
"17" :  "(376,381, entry)",
"18" :  "(376,382, entry)",
"19" :  "(377,(378,378), iter)",
"20" :  "(377,(378,379), iter)",
"21" :  "(377,379, iter)"},{ "Name" : "addSubtree" ,
"Duas" : 54,
"0" :  "(413,(413,414), toModify)",
"1" :  "(413,(413,416), toModify)",
"2" :  "(413,446, toModify)",
"3" :  "(413,447, toModify)",
"4" :  "(413,450, toModify)",
"5" :  "(413,450, toModify)",
"6" :  "(413,454, toModify)",
"7" :  "(413,(453,453), toModify)",
"8" :  "(413,(453,454), toModify)",
"9" :  "(413,(435,437), toModify)",
"10" :  "(413,(435,439), toModify)",
"11" :  "(413,(422,424), toModify)",
"12" :  "(413,(422,426), toModify)",
"13" :  "(413,447, root)",
"14" :  "(413,447, rel)",
"15" :  "(413,420, originalTree)",
"16" :  "(413,433, originalTree)",
"17" :  "(413,(413,414), subject)",
"18" :  "(413,(413,416), subject)",
"19" :  "(413,420, subject)",
"20" :  "(413,446, subject)",
"21" :  "(413,447, subject)",
"22" :  "(413,(434,435), ignoredEdges)",
"23" :  "(413,(434,442), ignoredEdges)",
"24" :  "(413,(421,422), ignoredEdges)",
"25" :  "(413,(421,429), ignoredEdges)",
"26" :  "(413,447, English)",
"27" :  "(413,(453,453), $assertionsDisabled)",
"28" :  "(413,(453,454), $assertionsDisabled)",
"29" :  "(416,(430,431), fringe)",
"30" :  "(416,(430,446), fringe)",
"31" :  "(416,431, fringe)",
"32" :  "(416,440, fringe)",
"33" :  "(416,427, fringe)",
"34" :  "(417,450, wordsToAdd)",
"35" :  "(417,432, wordsToAdd)",
"36" :  "(418,452, edgesToAdd)",
"37" :  "(418,439, edgesToAdd)",
"38" :  "(418,426, edgesToAdd)",
"39" :  "(420,(421,422), edge)",
"40" :  "(420,(421,429), edge)",
"41" :  "(420,(422,424), edge)",
"42" :  "(420,(422,426), edge)",
"43" :  "(420,426, edge)",
"44" :  "(420,427, edge)",
"45" :  "(433,(434,435), edge)",
"46" :  "(433,(434,442), edge)",
"47" :  "(433,(435,437), edge)",
"48" :  "(433,(435,439), edge)",
"49" :  "(433,439, edge)",
"50" :  "(433,440, edge)",
"51" :  "(452,454, edge)",
"52" :  "(452,(453,453), edge)",
"53" :  "(452,(453,454), edge)"},{ "Name" : "stripAuxMark" ,
"Duas" : 13,
"0" :  "(464,472, toModify)",
"1" :  "(464,473, toModify)",
"2" :  "(464,(467,468), toModify)",
"3" :  "(464,(467,470), toModify)",
"4" :  "(464,471, toClean)",
"5" :  "(464,468, toClean)",
"6" :  "(465,(467,468), edge)",
"7" :  "(465,(467,470), edge)",
"8" :  "(465,468, edge)",
"9" :  "(466,(467,467), rel)",
"10" :  "(466,(467,467), rel)",
"11" :  "(466,(467,467), rel)",
"12" :  "(466,(467,470), rel)"},{ "Name" : "search" ,
"Duas" : 18,
"0" :  "(536,(536,537), this)",
"1" :  "(536,(536,543), this)",
"2" :  "(536,(543,544), this)",
"3" :  "(536,(543,546), this)",
"4" :  "(536,546, this)",
"5" :  "(536,537, this)",
"6" :  "(536,546, candidateFragments)",
"7" :  "(536,537, candidateFragments)",
"8" :  "(536,(536,537), this.isClauseClassifier)",
"9" :  "(536,(536,543), this.isClauseClassifier)",
"10" :  "(536,(543,544), this.isClauseClassifier)",
"11" :  "(536,(543,546), this.isClauseClassifier)",
"12" :  "(536,546, this.isClauseClassifier)",
"13" :  "(536,546, HARD_SPLITS)",
"14" :  "(536,537, HARD_SPLITS)",
"15" :  "(536,546, this.featurizer)",
"16" :  "(536,537, this.featurizer)",
"17" :  "(536,537, DEFAULT_FEATURIZER)"},{ "Name" : "search" ,
"Duas" : 7,
"0" :  "(574,743, this)",
"1" :  "(574,743, candidateFragments)",
"2" :  "(574,743, classifier)",
"3" :  "(574,743, hardCodedSplits)",
"4" :  "(574,743, featurizer)",
"5" :  "(574,743, maxTicks)",
"6" :  "(574,743, actionSpace)"},{ "Name" : "orderActions" ,
"Duas" : 14,
"0" :  "(751,763, tmp)",
"1" :  "(751,754, tmp)",
"2" :  "(752,763, out)",
"3" :  "(752,764, out)",
"4" :  "(752,758, out)",
"5" :  "(753,(757,758), key)",
"6" :  "(753,(757,761), key)",
"7" :  "(754,(755,756), iter)",
"8" :  "(754,(755,762), iter)",
"9" :  "(754,756, iter)",
"10" :  "(754,759, iter)",
"11" :  "(756,(757,758), a)",
"12" :  "(756,(757,761), a)",
"13" :  "(756,758, a)"},{ "Name" : "search" ,
"Duas" : 160,
"0" :  "(797,845, this)",
"1" :  "(797,856, this)",
"2" :  "(797,(875,876), this)",
"3" :  "(797,(875,878), this)",
"4" :  "(797,882, this)",
"5" :  "(797,910, this)",
"6" :  "(797,(821,838), this)",
"7" :  "(797,(821,843), this)",
"8" :  "(797,817, root)",
"9" :  "(797,(821,838), candidateFragments)",
"10" :  "(797,(821,843), candidateFragments)",
"11" :  "(797,897, classifier)",
"12" :  "(797,867, hardCodedSplits)",
"13" :  "(797,869, hardCodedSplits)",
"14" :  "(797,888, featurizer)",
"15" :  "(797,873, actionSpace)",
"16" :  "(797,(807,809), maxTicks)",
"17" :  "(797,(807,812), maxTicks)",
"18" :  "(797,(813,813), $assertionsDisabled)",
"19" :  "(797,(813,814), $assertionsDisabled)",
"20" :  "(797,845, this.tree)",
"21" :  "(797,856, this.tree)",
"22" :  "(797,(875,876), this.tree)",
"23" :  "(797,(875,878), this.tree)",
"24" :  "(797,882, this.tree)",
"25" :  "(797,(862,863), INDIRECT_SPEECH_LEMMAS)",
"26" :  "(797,(862,866), INDIRECT_SPEECH_LEMMAS)",
"27" :  "(797,(861,861), INDIRECT_SPEECH_LEMMAS)",
"28" :  "(797,(861,856), INDIRECT_SPEECH_LEMMAS)",
"29" :  "(797,906, CLAUSE_SPLIT)",
"30" :  "(797,891, CLAUSE_SPLIT)",
"31" :  "(797,895, CLAUSE_INTERM)",
"32" :  "(797,903, NOT_A_CLAUSE)",
"33" :  "(797,(909,910), NOT_A_CLAUSE)",
"34" :  "(797,(909,920), NOT_A_CLAUSE)",
"35" :  "(797,(806,807), fringe)",
"36" :  "(797,(806,926), fringe)",
"37" :  "(797,812, fringe)",
"38" :  "(797,814, fringe)",
"39" :  "(797,916, fringe)",
"40" :  "(799,923, seenWords)",
"41" :  "(799,(914,916), seenWords)",
"42" :  "(799,(914,920), seenWords)",
"43" :  "(804,807, ticks)",
"44" :  "(807,(807,809), ticks)",
"45" :  "(807,(807,812), ticks)",
"46" :  "(807,807, ticks)",
"47" :  "(812,(821,838), logProbSoFar)",
"48" :  "(812,(821,843), logProbSoFar)",
"49" :  "(812,(813,813), logProbSoFar)",
"50" :  "(812,(813,814), logProbSoFar)",
"51" :  "(815,(817,817), lastState)",
"52" :  "(815,(817,817), lastState)",
"53" :  "(815,817, lastState)",
"54" :  "(815,(820,821), lastState)",
"55" :  "(815,(820,843), lastState)",
"56" :  "(815,882, lastState)",
"57" :  "(815,888, lastState)",
"58" :  "(815,(821,838), lastState)",
"59" :  "(815,(821,843), lastState)",
"60" :  "(815,(817,817), lastState.edge)",
"61" :  "(815,(817,817), lastState.edge)",
"62" :  "(815,817, lastState.edge)",
"63" :  "(815,(820,821), lastState.isDone)",
"64" :  "(815,(820,843), lastState.isDone)",
"65" :  "(816,910, featuresSoFar)",
"66" :  "(816,(821,838), featuresSoFar)",
"67" :  "(816,(821,843), featuresSoFar)",
"68" :  "(817,845, rootWord)",
"69" :  "(817,856, rootWord)",
"70" :  "(817,923, rootWord)",
"71" :  "(843,882, subjOrNull)",
"72" :  "(844,882, objOrNull)",
"73" :  "(845,850, auxEdge)",
"74" :  "(845,848, auxEdge)",
"75" :  "(846,(847,848), relString)",
"76" :  "(846,(847,849), relString)",
"77" :  "(846,(849,850), relString)",
"78" :  "(846,(849,852), relString)",
"79" :  "(848,882, objOrNull)",
"80" :  "(850,882, subjOrNull)",
"81" :  "(856,(860,860), outgoingEdge)",
"82" :  "(856,(860,866), outgoingEdge)",
"83" :  "(856,866, outgoingEdge)",
"84" :  "(856,(875,876), outgoingEdge)",
"85" :  "(856,(875,878), outgoingEdge)",
"86" :  "(856,882, outgoingEdge)",
"87" :  "(856,901, outgoingEdge)",
"88" :  "(856,(861,861), outgoingEdge)",
"89" :  "(856,(861,861), outgoingEdge)",
"90" :  "(856,(862,863), outgoingEdge)",
"91" :  "(856,(862,866), outgoingEdge)",
"92" :  "(856,(861,861), outgoingEdge)",
"93" :  "(856,(861,856), outgoingEdge)",
"94" :  "(866,(868,869), outgoingEdgeRelation)",
"95" :  "(866,(868,871), outgoingEdgeRelation)",
"96" :  "(866,869, outgoingEdgeRelation)",
"97" :  "(867,(868,868), forcedArcOrder)",
"98" :  "(867,(868,871), forcedArcOrder)",
"99" :  "(867,(873,873), forcedArcOrder)",
"100" :  "(867,(873,873), forcedArcOrder)",
"101" :  "(867,873, forcedArcOrder)",
"102" :  "(867,(878,878), forcedArcOrder)",
"103" :  "(867,(878,882), forcedArcOrder)",
"104" :  "(867,(889,889), forcedArcOrder)",
"105" :  "(867,(889,893), forcedArcOrder)",
"106" :  "(869,(873,873), forcedArcOrder)",
"107" :  "(869,(873,873), forcedArcOrder)",
"108" :  "(869,873, forcedArcOrder)",
"109" :  "(869,(878,878), forcedArcOrder)",
"110" :  "(869,(878,882), forcedArcOrder)",
"111" :  "(869,(889,889), forcedArcOrder)",
"112" :  "(869,(889,893), forcedArcOrder)",
"113" :  "(871,(889,890), doneForcedArc)",
"114" :  "(871,(889,893), doneForcedArc)",
"115" :  "(871,(878,879), doneForcedArc)",
"116" :  "(871,(878,882), doneForcedArc)",
"117" :  "(873,(875,876), action)",
"118" :  "(873,(875,878), action)",
"119" :  "(873,882, action)",
"120" :  "(873,888, action)",
"121" :  "(882,(885,888), candidate)",
"122" :  "(882,(885,920), candidate)",
"123" :  "(882,888, candidate)",
"124" :  "(882,910, candidate)",
"125" :  "(888,(893,894), features)",
"126" :  "(888,(893,897), features)",
"127" :  "(888,897, features)",
"128" :  "(888,910, features)",
"129" :  "(890,916, logProbability)",
"130" :  "(891,(909,910), bestLabel)",
"131" :  "(891,(909,920), bestLabel)",
"132" :  "(891,910, bestLabel)",
"133" :  "(892,(889,890), doneForcedArc)",
"134" :  "(892,(889,893), doneForcedArc)",
"135" :  "(892,(878,879), doneForcedArc)",
"136" :  "(892,(878,882), doneForcedArc)",
"137" :  "(894,916, logProbability)",
"138" :  "(895,(909,910), bestLabel)",
"139" :  "(895,(909,920), bestLabel)",
"140" :  "(895,910, bestLabel)",
"141" :  "(897,(898,899), scores)",
"142" :  "(897,(898,901), scores)",
"143" :  "(897,903, scores)",
"144" :  "(897,905, scores)",
"145" :  "(897,906, scores)",
"146" :  "(897,899, scores)",
"147" :  "(901,(902,902), rel)",
"148" :  "(901,(902,903), rel)",
"149" :  "(901,(902,903), rel)",
"150" :  "(901,(902,905), rel)",
"151" :  "(905,916, logProbability)",
"152" :  "(906,(909,910), bestLabel)",
"153" :  "(906,(909,920), bestLabel)",
"154" :  "(906,910, bestLabel)",
"155" :  "(910,(914,916), childState)",
"156" :  "(910,(914,920), childState)",
"157" :  "(910,916, childState)",
"158" :  "(910,(914,916), childState.first)",
"159" :  "(910,(914,920), childState.first)"},{ "Name" : "lambda$null$2" ,
"Duas" : 24,
"0" :  "(825,(826,827), this)",
"1" :  "(825,(826,834), this)",
"2" :  "(825,827, this)",
"3" :  "(825,830, this)",
"4" :  "(825,830, x)",
"5" :  "(825,(831,831), x)",
"6" :  "(825,(831,832), x)",
"7" :  "(825,(828,828), x)",
"8" :  "(825,(828,830), x)",
"9" :  "(825,(826,827), this.extraEdgesByGovernor)",
"10" :  "(825,(826,834), this.extraEdgesByGovernor)",
"11" :  "(825,827, this.extraEdgesByGovernor)",
"12" :  "(825,(828,828), $assertionsDisabled)",
"13" :  "(825,(828,830), $assertionsDisabled)",
"14" :  "(825,(831,831), $assertionsDisabled)",
"15" :  "(825,(831,832), $assertionsDisabled)",
"16" :  "(825,830, this.tree)",
"17" :  "(825,(826,826), newTreeRoot)",
"18" :  "(825,(826,834), newTreeRoot)",
"19" :  "(825,(826,827), newTreeRoot)",
"20" :  "(825,(826,834), newTreeRoot)",
"21" :  "(825,827, newTreeRoot)",
"22" :  "(825,830, newTreeRoot)",
"23" :  "(827,830, extraEdge)"},{ "Name" : "lambda$topClauses$0" ,
"Duas" : 28,
"0" :  "(511,(516,517), thresholdProbability)",
"1" :  "(511,(516,522), thresholdProbability)",
"2" :  "(511,519, results)",
"3" :  "(511,512, triple)",
"4" :  "(511,517, triple)",
"5" :  "(511,(511,511), triple)",
"6" :  "(511,(511,512), triple)",
"7" :  "(511,(511,511), $assertionsDisabled)",
"8" :  "(511,(511,512), $assertionsDisabled)",
"9" :  "(511,(513,513), $assertionsDisabled)",
"10" :  "(511,(513,514), $assertionsDisabled)",
"11" :  "(511,(514,514), $assertionsDisabled)",
"12" :  "(511,(514,515), $assertionsDisabled)",
"13" :  "(511,(515,515), $assertionsDisabled)",
"14" :  "(511,(515,516), $assertionsDisabled)",
"15" :  "(511,512, triple.first)",
"16" :  "(511,(511,511), triple.first)",
"17" :  "(511,(511,512), triple.first)",
"18" :  "(511,517, triple.third)",
"19" :  "(512,(516,517), prob)",
"20" :  "(512,(516,522), prob)",
"21" :  "(512,518, prob)",
"22" :  "(512,(515,515), prob)",
"23" :  "(512,(515,516), prob)",
"24" :  "(512,(514,514), prob)",
"25" :  "(512,(514,515), prob)",
"26" :  "(512,(513,513), prob)",
"27" :  "(512,(513,514), prob)"}]
}