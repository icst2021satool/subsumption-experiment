{
"Class" : "edu.stanford.nlp.ling.tokensregex.matcher.Match", 
"Methods" : [{ "Name" : "getMatchedLength" ,
"Duas" : 6,
"0" :  "(41,(41,41), this)",
"1" :  "(41,(41,41), this)",
"2" :  "(41,41, this)",
"3" :  "(41,(41,41), this.matched)",
"4" :  "(41,(41,41), this.matched)",
"5" :  "(41,41, this.matched)"},{ "Name" : "equals" ,
"Duas" : 59,
"0" :  "(66,(66,66), this)",
"1" :  "(66,(66,67), this)",
"2" :  "(66,(67,67), this)",
"3" :  "(66,(67,69), this)",
"4" :  "(66,(71,71), this)",
"5" :  "(66,(71,72), this)",
"6" :  "(66,(72,72), this)",
"7" :  "(66,(72,73), this)",
"8" :  "(66,(73,73), this)",
"9" :  "(66,(73,73), this)",
"10" :  "(66,(74,74), this)",
"11" :  "(66,(74,74), this)",
"12" :  "(66,(74,74), this)",
"13" :  "(66,(74,76), this)",
"14" :  "(66,(73,73), this)",
"15" :  "(66,(73,74), this)",
"16" :  "(66,(66,66), o)",
"17" :  "(66,(66,67), o)",
"18" :  "(66,(67,67), o)",
"19" :  "(66,(67,67), o)",
"20" :  "(66,(67,67), o)",
"21" :  "(66,(67,69), o)",
"22" :  "(66,69, o)",
"23" :  "(66,(71,71), this.begin)",
"24" :  "(66,(71,72), this.begin)",
"25" :  "(66,(72,72), this.end)",
"26" :  "(66,(72,73), this.end)",
"27" :  "(66,(73,73), this.matched)",
"28" :  "(66,(73,73), this.matched)",
"29" :  "(66,(73,73), this.matched)",
"30" :  "(66,(73,74), this.matched)",
"31" :  "(66,(74,74), this.value)",
"32" :  "(66,(74,74), this.value)",
"33" :  "(66,(74,74), this.value)",
"34" :  "(66,(74,76), this.value)",
"35" :  "(69,(71,71), match)",
"36" :  "(69,(71,72), match)",
"37" :  "(69,(72,72), match)",
"38" :  "(69,(72,73), match)",
"39" :  "(69,(73,73), match)",
"40" :  "(69,(73,74), match)",
"41" :  "(69,(74,74), match)",
"42" :  "(69,(74,76), match)",
"43" :  "(69,(74,74), match)",
"44" :  "(69,(74,76), match)",
"45" :  "(69,(73,73), match)",
"46" :  "(69,(73,74), match)",
"47" :  "(69,(71,71), match.begin)",
"48" :  "(69,(71,72), match.begin)",
"49" :  "(69,(72,72), match.end)",
"50" :  "(69,(72,73), match.end)",
"51" :  "(69,(73,73), match.matched)",
"52" :  "(69,(73,74), match.matched)",
"53" :  "(69,(73,73), match.matched)",
"54" :  "(69,(73,74), match.matched)",
"55" :  "(69,(74,74), match.value)",
"56" :  "(69,(74,76), match.value)",
"57" :  "(69,(74,74), match.value)",
"58" :  "(69,(74,76), match.value)"},{ "Name" : "hashCode" ,
"Duas" : 10,
"0" :  "(81,(81,81), this)",
"1" :  "(81,(81,81), this)",
"2" :  "(81,81, this)",
"3" :  "(81,82, this)",
"4" :  "(81,83, this)",
"5" :  "(81,(81,81), this.matched)",
"6" :  "(81,(81,81), this.matched)",
"7" :  "(81,81, this.matched)",
"8" :  "(81,82, this.begin)",
"9" :  "(81,83, this.end)"},{ "Name" : "toString" ,
"Duas" : 15,
"0" :  "(88,(89,89), this)",
"1" :  "(88,(89,89), this)",
"2" :  "(88,90, this)",
"3" :  "(88,91, this)",
"4" :  "(88,92, this)",
"5" :  "(88,(89,89), this.matched)",
"6" :  "(88,(89,89), this.matched)",
"7" :  "(88,90, this.value)",
"8" :  "(88,91, this.begin)",
"9" :  "(88,92, this.end)",
"10" :  "(88,89, sb)",
"11" :  "(88,90, sb)",
"12" :  "(88,91, sb)",
"13" :  "(88,92, sb)",
"14" :  "(88,93, sb)"},{ "Name" : "getInterval" ,
"Duas" : 10,
"0" :  "(97,(97,97), this)",
"1" :  "(97,(97,98), this)",
"2" :  "(97,98, this)",
"3" :  "(97,97, this)",
"4" :  "(97,(97,97), this.span)",
"5" :  "(97,(97,98), this.span)",
"6" :  "(97,98, this.span)",
"7" :  "(97,97, this.begin)",
"8" :  "(97,97, this.end)",
"9" :  "(97,98, this.span)"}]
}