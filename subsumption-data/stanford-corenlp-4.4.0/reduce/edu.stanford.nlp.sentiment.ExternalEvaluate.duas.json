{
"Class" : "edu.stanford.nlp.sentiment.ExternalEvaluate", 
"Methods" : [{ "Name" : "populatePredictedLabels" ,
"Duas" : 35,
"0" :  "(30,(30,31), this)",
"1" :  "(30,(30,33), this)",
"2" :  "(30,35, this)",
"3" :  "(30,(30,31), trees)",
"4" :  "(30,(30,33), trees)",
"5" :  "(30,(33,34), trees)",
"6" :  "(30,(33,50), trees)",
"7" :  "(30,34, trees)",
"8" :  "(30,(30,31), this.predicted)",
"9" :  "(30,(30,33), this.predicted)",
"10" :  "(30,35, this.predicted)",
"11" :  "(33,(33,34), i)",
"12" :  "(33,(33,50), i)",
"13" :  "(33,34, i)",
"14" :  "(33,35, i)",
"15" :  "(33,33, i)",
"16" :  "(34,(36,36), goldTree)",
"17" :  "(34,(36,37), goldTree)",
"18" :  "(34,37, goldTree)",
"19" :  "(35,38, predictedTree)",
"20" :  "(35,(36,37), predictedTree)",
"21" :  "(35,(36,33), predictedTree)",
"22" :  "(37,(39,39), goldNode)",
"23" :  "(37,(39,40), goldNode)",
"24" :  "(37,(42,43), goldNode)",
"25" :  "(37,(42,45), goldNode)",
"26" :  "(37,45, goldNode)",
"27" :  "(38,(39,40), predictedNode)",
"28" :  "(38,(39,42), predictedNode)",
"29" :  "(38,46, predictedNode)",
"30" :  "(33,(33,34), i)",
"31" :  "(33,(33,50), i)",
"32" :  "(33,34, i)",
"33" :  "(33,35, i)",
"34" :  "(33,33, i)"},{ "Name" : "main" ,
"Duas" : 85,
"0" :  "(59,(62,63), args)",
"1" :  "(59,(62,77), args)",
"2" :  "(59,(63,64), args)",
"3" :  "(59,(63,66), args)",
"4" :  "(59,(66,67), args)",
"5" :  "(59,(66,70), args)",
"6" :  "(59,70, args)",
"7" :  "(59,72, args)",
"8" :  "(59,67, args)",
"9" :  "(59,64, args)",
"10" :  "(59,83, log)",
"11" :  "(59,78, log)",
"12" :  "(59,90, curOptions)",
"13" :  "(59,70, curOptions)",
"14" :  "(60,(77,78), goldPath)",
"15" :  "(60,(77,82), goldPath)",
"16" :  "(60,88, goldPath)",
"17" :  "(61,(82,83), predictedPath)",
"18" :  "(61,(82,88), predictedPath)",
"19" :  "(61,89, predictedPath)",
"20" :  "(62,(62,63), argIndex)",
"21" :  "(62,(62,77), argIndex)",
"22" :  "(62,(63,64), argIndex)",
"23" :  "(62,(63,66), argIndex)",
"24" :  "(62,(66,67), argIndex)",
"25" :  "(62,(66,70), argIndex)",
"26" :  "(62,70, argIndex)",
"27" :  "(62,(71,72), argIndex)",
"28" :  "(62,(71,74), argIndex)",
"29" :  "(62,72, argIndex)",
"30" :  "(62,67, argIndex)",
"31" :  "(62,68, argIndex)",
"32" :  "(62,64, argIndex)",
"33" :  "(62,65, argIndex)",
"34" :  "(64,(77,78), goldPath)",
"35" :  "(64,(77,82), goldPath)",
"36" :  "(64,88, goldPath)",
"37" :  "(65,(62,63), argIndex)",
"38" :  "(65,(62,77), argIndex)",
"39" :  "(65,(63,64), argIndex)",
"40" :  "(65,(63,66), argIndex)",
"41" :  "(65,(66,67), argIndex)",
"42" :  "(65,(66,70), argIndex)",
"43" :  "(65,70, argIndex)",
"44" :  "(65,(71,72), argIndex)",
"45" :  "(65,(71,74), argIndex)",
"46" :  "(65,72, argIndex)",
"47" :  "(65,67, argIndex)",
"48" :  "(65,68, argIndex)",
"49" :  "(65,64, argIndex)",
"50" :  "(65,65, argIndex)",
"51" :  "(67,(82,83), predictedPath)",
"52" :  "(67,(82,88), predictedPath)",
"53" :  "(67,89, predictedPath)",
"54" :  "(68,(62,63), argIndex)",
"55" :  "(68,(62,77), argIndex)",
"56" :  "(68,(63,64), argIndex)",
"57" :  "(68,(63,66), argIndex)",
"58" :  "(68,(66,67), argIndex)",
"59" :  "(68,(66,70), argIndex)",
"60" :  "(68,70, argIndex)",
"61" :  "(68,(71,72), argIndex)",
"62" :  "(68,(71,74), argIndex)",
"63" :  "(68,72, argIndex)",
"64" :  "(68,67, argIndex)",
"65" :  "(68,68, argIndex)",
"66" :  "(68,64, argIndex)",
"67" :  "(68,65, argIndex)",
"68" :  "(70,(71,72), newArgIndex)",
"69" :  "(70,(71,74), newArgIndex)",
"70" :  "(70,74, newArgIndex)",
"71" :  "(74,(62,63), argIndex)",
"72" :  "(74,(62,77), argIndex)",
"73" :  "(74,(63,64), argIndex)",
"74" :  "(74,(63,66), argIndex)",
"75" :  "(74,(66,67), argIndex)",
"76" :  "(74,(66,70), argIndex)",
"77" :  "(74,70, argIndex)",
"78" :  "(74,(71,72), argIndex)",
"79" :  "(74,(71,74), argIndex)",
"80" :  "(74,72, argIndex)",
"81" :  "(74,67, argIndex)",
"82" :  "(74,68, argIndex)",
"83" :  "(74,64, argIndex)",
"84" :  "(74,65, argIndex)"}]
}