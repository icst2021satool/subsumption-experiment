{
"Class" : "edu.stanford.nlp.optimization.SparseAdaGradMinimizer", 
"Methods" : [{ "Name" : "minimize" ,
"Duas" : 69,
"0" :  "(72,(86,87), this)",
"1" :  "(72,(86,128), this)",
"2" :  "(72,90, this)",
"3" :  "(72,97, this)",
"4" :  "(72,99, this)",
"5" :  "(72,100, this)",
"6" :  "(72,108, this)",
"7" :  "(72,109, this)",
"8" :  "(72,123, this)",
"9" :  "(72,120, this)",
"10" :  "(72,90, function)",
"11" :  "(72,92, function)",
"12" :  "(72,93, function)",
"13" :  "(72,128, x)",
"14" :  "(72,92, x)",
"15" :  "(72,93, x)",
"16" :  "(72,101, x)",
"17" :  "(72,114, x)",
"18" :  "(72,112, x)",
"19" :  "(72,(119,120), maxIterations)",
"20" :  "(72,(119,123), maxIterations)",
"21" :  "(72,90, this.batchSize)",
"22" :  "(72,(86,87), this.numPasses)",
"23" :  "(72,(86,128), this.numPasses)",
"24" :  "(72,97, this.eta)",
"25" :  "(72,100, this.eta)",
"26" :  "(72,97, this.sumGradSquare)",
"27" :  "(72,99, this.sumGradSquare)",
"28" :  "(72,108, this.lambdaL1)",
"29" :  "(72,109, this.lambdaL2)",
"30" :  "(72,123, out)",
"31" :  "(75,(89,90), numBatches)",
"32" :  "(75,(89,86), numBatches)",
"33" :  "(80,102, lastUpdated)",
"34" :  "(80,104, lastUpdated)",
"35" :  "(81,103, timeStep)",
"36" :  "(81,104, timeStep)",
"37" :  "(81,118, timeStep)",
"38" :  "(83,124, total)",
"39" :  "(86,(86,87), iter)",
"40" :  "(86,(86,128), iter)",
"41" :  "(86,86, iter)",
"42" :  "(86,123, iter)",
"43" :  "(87,93, totalObjValue)",
"44" :  "(89,(89,90), j)",
"45" :  "(89,(89,86), j)",
"46" :  "(89,89, j)",
"47" :  "(92,96, gradient)",
"48" :  "(92,101, gradient)",
"49" :  "(93,93, totalObjValue)",
"50" :  "(93,124, totalObjValue)",
"51" :  "(95,114, feature)",
"52" :  "(95,112, feature)",
"53" :  "(110,(111,112), realupdate)",
"54" :  "(110,(111,114), realupdate)",
"55" :  "(110,114, realupdate)",
"56" :  "(118,(119,120), timeStep)",
"57" :  "(118,(119,123), timeStep)",
"58" :  "(118,123, timeStep)",
"59" :  "(118,103, timeStep)",
"60" :  "(118,104, timeStep)",
"61" :  "(118,118, timeStep)",
"62" :  "(89,(89,90), j)",
"63" :  "(89,(89,86), j)",
"64" :  "(89,89, j)",
"65" :  "(86,(86,87), iter)",
"66" :  "(86,(86,128), iter)",
"67" :  "(86,86, iter)",
"68" :  "(86,123, iter)"},{ "Name" : "getSample" ,
"Duas" : 15,
"0" :  "(136,138, this)",
"1" :  "(136,138, function)",
"2" :  "(136,(137,138), sampleSize)",
"3" :  "(136,(137,140), sampleSize)",
"4" :  "(136,138, this.randGenerator)",
"5" :  "(136,140, sample)",
"6" :  "(136,138, sample)",
"7" :  "(137,(137,138), i)",
"8" :  "(137,(137,140), i)",
"9" :  "(137,138, i)",
"10" :  "(137,137, i)",
"11" :  "(137,(137,138), i)",
"12" :  "(137,(137,140), i)",
"13" :  "(137,138, i)",
"14" :  "(137,137, i)"},{ "Name" : "sayln" ,
"Duas" : 6,
"0" :  "(151,(151,152), this)",
"1" :  "(151,(151,154), this)",
"2" :  "(151,152, s)",
"3" :  "(151,(151,152), this.quiet)",
"4" :  "(151,(151,154), this.quiet)",
"5" :  "(151,152, log)"}]
}