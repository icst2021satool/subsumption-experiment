{
"Class" : "edu.stanford.nlp.parser.lexparser.EnglishUnknownWordModelTrainer", 
"Methods" : [{ "Name" : "train" ,
"Duas" : 34,
"0" :  "(54,(61,64), this)",
"1" :  "(54,(61,91), this)",
"2" :  "(54,(64,66), this)",
"3" :  "(54,(64,91), this)",
"4" :  "(54,66, this)",
"5" :  "(54,78, this)",
"6" :  "(54,79, this)",
"7" :  "(54,80, this)",
"8" :  "(54,81, this)",
"9" :  "(54,66, loc)",
"10" :  "(54,78, weight)",
"11" :  "(54,79, weight)",
"12" :  "(54,80, weight)",
"13" :  "(54,81, weight)",
"14" :  "(54,66, this.wordIndex)",
"15" :  "(54,(64,66), this.seenCounter)",
"16" :  "(54,(64,91), this.seenCounter)",
"17" :  "(54,(61,64), this.treesRead)",
"18" :  "(54,(61,91), this.treesRead)",
"19" :  "(54,(61,64), this.indexToStartUnkCounting)",
"20" :  "(54,(61,91), this.indexToStartUnkCounting)",
"21" :  "(54,66, this.model)",
"22" :  "(54,78, this.unSeenCounter)",
"23" :  "(54,79, this.unSeenCounter)",
"24" :  "(54,80, this.unSeenCounter)",
"25" :  "(54,81, this.unSeenCounter)",
"26" :  "(55,66, iTW)",
"27" :  "(55,76, iTW)",
"28" :  "(55,76, iTW.tag)",
"29" :  "(55,66, iTW.word)",
"30" :  "(56,79, iT)",
"31" :  "(57,(64,66), iW)",
"32" :  "(57,(64,91), iW)",
"33" :  "(59,81, i)"},{ "Name" : "finishTraining" ,
"Duas" : 31,
"0" :  "(97,(97,98), this)",
"1" :  "(97,(97,114), this)",
"2" :  "(97,114, this)",
"3" :  "(97,98, this)",
"4" :  "(97,(100,101), this)",
"5" :  "(97,(100,99), this)",
"6" :  "(97,103, this)",
"7" :  "(97,104, this)",
"8" :  "(97,(97,98), this.unSeenCounter)",
"9" :  "(97,(97,114), this.unSeenCounter)",
"10" :  "(97,103, this.unSeenCounter)",
"11" :  "(97,104, this.unSeenCounter)",
"12" :  "(97,98, this.tagIndex)",
"13" :  "(97,(100,101), this.tagIndex)",
"14" :  "(97,(100,99), this.tagIndex)",
"15" :  "(97,102, NULL_ITW)",
"16" :  "(97,114, this.model)",
"17" :  "(98,(99,100), numTags)",
"18" :  "(98,(99,114), numTags)",
"19" :  "(99,(99,100), tt)",
"20" :  "(99,(99,114), tt)",
"21" :  "(99,(100,101), tt)",
"22" :  "(99,(100,99), tt)",
"23" :  "(99,99, tt)",
"24" :  "(99,101, tt)",
"25" :  "(99,(99,100), tt)",
"26" :  "(99,(99,114), tt)",
"27" :  "(99,(100,101), tt)",
"28" :  "(99,(100,99), tt)",
"29" :  "(99,99, tt)",
"30" :  "(99,101, tt)"}]
}