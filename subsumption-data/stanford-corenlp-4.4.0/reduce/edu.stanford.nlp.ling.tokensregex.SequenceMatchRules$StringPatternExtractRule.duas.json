{
"Class" : "edu.stanford.nlp.ling.tokensregex.SequenceMatchRules$StringPatternExtractRule", 
"Methods" : [{ "Name" : "<init>" ,
"Duas" : 12,
"0" :  "(1076,1082, this)",
"1" :  "(1076,1080, this)",
"2" :  "(1076,(1079,1080), env)",
"3" :  "(1076,(1079,1082), env)",
"4" :  "(1076,1080, env)",
"5" :  "(1076,1082, regex)",
"6" :  "(1076,1080, regex)",
"7" :  "(1076,1078, regex)",
"8" :  "(1076,(1078,1078), addWordBoundaries)",
"9" :  "(1076,(1078,1079), addWordBoundaries)",
"10" :  "(1078,1082, regex)",
"11" :  "(1078,1080, regex)"},{ "Name" : "extract" ,
"Duas" : 13,
"0" :  "(1088,1090, this)",
"1" :  "(1088,1092, this)",
"2" :  "(1088,(1088,1088), str)",
"3" :  "(1088,(1088,1089), str)",
"4" :  "(1088,1090, str)",
"5" :  "(1088,1092, out)",
"6" :  "(1088,1090, this.pattern)",
"7" :  "(1088,1092, this.extractor)",
"8" :  "(1089,1096, extracted)",
"9" :  "(1090,(1091,1092), m)",
"10" :  "(1090,(1091,1096), m)",
"11" :  "(1090,1092, m)",
"12" :  "(1094,1096, extracted)"},{ "Name" : "apply" ,
"Duas" : 10,
"0" :  "(1101,1102, this)",
"1" :  "(1101,1104, this)",
"2" :  "(1101,(1101,1101), str)",
"3" :  "(1101,(1101,1102), str)",
"4" :  "(1101,1102, str)",
"5" :  "(1101,1102, this.pattern)",
"6" :  "(1101,1104, this.extractor)",
"7" :  "(1102,(1103,1104), m)",
"8" :  "(1102,(1103,1106), m)",
"9" :  "(1102,1104, m)"}]
}