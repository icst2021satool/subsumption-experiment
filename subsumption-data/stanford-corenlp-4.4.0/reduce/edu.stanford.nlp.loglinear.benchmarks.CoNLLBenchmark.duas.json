{
"Class" : "edu.stanford.nlp.loglinear.benchmarks.CoNLLBenchmark", 
"Methods" : [{ "Name" : "benchmarkOptimizer" ,
"Duas" : 119,
"0" :  "(40,54, this)",
"1" :  "(40,87, this)",
"2" :  "(40,66, this)",
"3" :  "(40,56, log)",
"4" :  "(40,69, log)",
"5" :  "(40,76, log)",
"6" :  "(40,102, log)",
"7" :  "(40,104, log)",
"8" :  "(40,110, log)",
"9" :  "(40,111, log)",
"10" :  "(40,112, log)",
"11" :  "(40,113, log)",
"12" :  "(40,64, log)",
"13" :  "(40,60, train)",
"14" :  "(40,66, train)",
"15" :  "(41,86, testA)",
"16" :  "(44,54, allData)",
"17" :  "(49,52, tagsSet)",
"18" :  "(49,50, tagsSet)",
"19" :  "(51,106, tags)",
"20" :  "(51,87, tags)",
"21" :  "(51,91, tags)",
"22" :  "(51,66, tags)",
"23" :  "(58,74, namespace)",
"24" :  "(58,87, namespace)",
"25" :  "(58,66, namespace)",
"26" :  "(60,(62,63), trainSize)",
"27" :  "(60,(62,69), trainSize)",
"28" :  "(60,64, trainSize)",
"29" :  "(61,74, trainingSet)",
"30" :  "(61,66, trainingSet)",
"31" :  "(62,(62,63), i)",
"32" :  "(62,(62,69), i)",
"33" :  "(62,(63,64), i)",
"34" :  "(62,(63,66), i)",
"35" :  "(62,66, i)",
"36" :  "(62,62, i)",
"37" :  "(62,64, i)",
"38" :  "(62,(62,63), i)",
"39" :  "(62,(62,69), i)",
"40" :  "(62,(63,64), i)",
"41" :  "(62,(63,66), i)",
"42" :  "(62,66, i)",
"43" :  "(62,62, i)",
"44" :  "(62,64, i)",
"45" :  "(74,88, weights)",
"46" :  "(80,107, correctChunk)",
"47" :  "(80,108, correctChunk)",
"48" :  "(80,111, correctChunk)",
"49" :  "(80,112, correctChunk)",
"50" :  "(80,94, correctChunk)",
"51" :  "(81,(108,108), foundCorrect)",
"52" :  "(81,(108,108), foundCorrect)",
"53" :  "(81,108, foundCorrect)",
"54" :  "(81,110, foundCorrect)",
"55" :  "(81,112, foundCorrect)",
"56" :  "(81,97, foundCorrect)",
"57" :  "(82,(107,107), foundGuessed)",
"58" :  "(82,(107,107), foundGuessed)",
"59" :  "(82,107, foundGuessed)",
"60" :  "(82,111, foundGuessed)",
"61" :  "(82,98, foundGuessed)",
"62" :  "(83,104, correct)",
"63" :  "(83,93, correct)",
"64" :  "(84,104, total)",
"65" :  "(84,96, total)",
"66" :  "(86,(92,93), sentence)",
"67" :  "(86,(92,96), sentence)",
"68" :  "(86,97, sentence)",
"69" :  "(86,(92,93), sentence.ner)",
"70" :  "(86,(92,96), sentence.ner)",
"71" :  "(86,97, sentence.ner)",
"72" :  "(88,(90,91), guesses)",
"73" :  "(88,(90,100), guesses)",
"74" :  "(88,91, guesses)",
"75" :  "(89,91, nerGuesses)",
"76" :  "(89,(92,93), nerGuesses)",
"77" :  "(89,(92,96), nerGuesses)",
"78" :  "(89,98, nerGuesses)",
"79" :  "(89,94, nerGuesses)",
"80" :  "(90,(90,91), i)",
"81" :  "(90,(90,100), i)",
"82" :  "(90,91, i)",
"83" :  "(90,(92,93), i)",
"84" :  "(90,(92,96), i)",
"85" :  "(90,97, i)",
"86" :  "(90,98, i)",
"87" :  "(90,90, i)",
"88" :  "(90,94, i)",
"89" :  "(93,104, correct)",
"90" :  "(93,93, correct)",
"91" :  "(96,104, total)",
"92" :  "(96,96, total)",
"93" :  "(90,(90,91), i)",
"94" :  "(90,(90,100), i)",
"95" :  "(90,91, i)",
"96" :  "(90,(92,93), i)",
"97" :  "(90,(92,96), i)",
"98" :  "(90,97, i)",
"99" :  "(90,98, i)",
"100" :  "(90,90, i)",
"101" :  "(90,94, i)",
"102" :  "(106,(107,107), tag)",
"103" :  "(106,(107,107), tag)",
"104" :  "(106,107, tag)",
"105" :  "(106,(108,108), tag)",
"106" :  "(106,(108,108), tag)",
"107" :  "(106,108, tag)",
"108" :  "(106,110, tag)",
"109" :  "(106,111, tag)",
"110" :  "(106,112, tag)",
"111" :  "(107,(109,109), precision)",
"112" :  "(107,(109,109), precision)",
"113" :  "(107,109, precision)",
"114" :  "(107,111, precision)",
"115" :  "(108,(109,109), recall)",
"116" :  "(108,(109,109), recall)",
"117" :  "(108,109, recall)",
"118" :  "(108,112, recall)"},{ "Name" : "getWordShape" ,
"Duas" : 14,
"0" :  "(122,(122,122), string)",
"1" :  "(122,(122,123), string)",
"2" :  "(122,(123,123), string)",
"3" :  "(122,(123,124), string)",
"4" :  "(122,(124,124), string)",
"5" :  "(122,(124,125), string)",
"6" :  "(122,(125,125), string)",
"7" :  "(122,(125,127), string)",
"8" :  "(122,(125,125), string)",
"9" :  "(122,(125,127), string)",
"10" :  "(122,(125,126), string)",
"11" :  "(122,(125,127), string)",
"12" :  "(122,(122,122), string)",
"13" :  "(122,(122,123), string)"},{ "Name" : "generateSentenceModel" ,
"Duas" : 52,
"0" :  "(131,147, this)",
"1" :  "(131,147, namespace)",
"2" :  "(131,(133,137), sentence)",
"3" :  "(131,(133,147), sentence)",
"4" :  "(131,139, sentence)",
"5" :  "(131,141, sentence)",
"6" :  "(131,142, sentence)",
"7" :  "(131,143, sentence)",
"8" :  "(131,144, sentence)",
"9" :  "(131,147, tags)",
"10" :  "(131,139, tags)",
"11" :  "(131,(133,137), sentence.token)",
"12" :  "(131,(133,147), sentence.token)",
"13" :  "(131,141, sentence.token)",
"14" :  "(131,139, sentence.ner)",
"15" :  "(131,144, sentence.ner)",
"16" :  "(131,142, sentence.pos)",
"17" :  "(131,143, sentence.npchunk)",
"18" :  "(131,147, this.embeddings)",
"19" :  "(131,(149,149), $assertionsDisabled)",
"20" :  "(131,(149,150), $assertionsDisabled)",
"21" :  "(131,(151,151), $assertionsDisabled)",
"22" :  "(131,(151,152), $assertionsDisabled)",
"23" :  "(131,147, model)",
"24" :  "(131,150, model)",
"25" :  "(131,154, model)",
"26" :  "(131,(149,149), model)",
"27" :  "(131,(149,150), model)",
"28" :  "(131,137, model)",
"29" :  "(131,150, model.factors)",
"30" :  "(131,(149,149), model.factors)",
"31" :  "(131,(149,150), model.factors)",
"32" :  "(133,(133,137), i)",
"33" :  "(133,(133,147), i)",
"34" :  "(133,137, i)",
"35" :  "(133,139, i)",
"36" :  "(133,141, i)",
"37" :  "(133,142, i)",
"38" :  "(133,143, i)",
"39" :  "(133,144, i)",
"40" :  "(133,133, i)",
"41" :  "(133,(133,137), i)",
"42" :  "(133,(133,147), i)",
"43" :  "(133,137, i)",
"44" :  "(133,139, i)",
"45" :  "(133,141, i)",
"46" :  "(133,142, i)",
"47" :  "(133,143, i)",
"48" :  "(133,144, i)",
"49" :  "(133,133, i)",
"50" :  "(150,(151,151), f)",
"51" :  "(150,(151,152), f)"},{ "Name" : "getSentences" ,
"Duas" : 36,
"0" :  "(176,208, sentences)",
"1" :  "(176,199, sentences)",
"2" :  "(178,189, tokens)",
"3" :  "(178,199, tokens)",
"4" :  "(179,196, ner)",
"5" :  "(179,199, ner)",
"6" :  "(179,194, ner)",
"7" :  "(180,190, pos)",
"8" :  "(180,199, pos)",
"9" :  "(181,191, npchunk)",
"10" :  "(181,199, npchunk)",
"11" :  "(183,186, br)",
"12" :  "(183,(186,187), br)",
"13" :  "(183,(186,208), br)",
"14" :  "(186,187, line)",
"15" :  "(187,(188,189), parts)",
"16" :  "(187,(188,206), parts)",
"17" :  "(187,189, parts)",
"18" :  "(187,190, parts)",
"19" :  "(187,191, parts)",
"20" :  "(187,192, parts)",
"21" :  "(187,(198,199), parts)",
"22" :  "(187,(198,206), parts)",
"23" :  "(192,(193,194), tag)",
"24" :  "(192,(193,196), tag)",
"25" :  "(192,196, tag)",
"26" :  "(192,194, tag)",
"27" :  "(200,189, tokens)",
"28" :  "(200,199, tokens)",
"29" :  "(201,196, ner)",
"30" :  "(201,199, ner)",
"31" :  "(201,194, ner)",
"32" :  "(202,190, pos)",
"33" :  "(202,199, pos)",
"34" :  "(203,191, npchunk)",
"35" :  "(203,199, npchunk)"},{ "Name" : "getEmbeddings" ,
"Duas" : 20,
"0" :  "(213,238, cacheFilename)",
"1" :  "(213,232, cacheFilename)",
"2" :  "(213,222, sentences)",
"3" :  "(213,220, log)",
"4" :  "(213,229, log)",
"5" :  "(213,236, log)",
"6" :  "(213,(216,217), f)",
"7" :  "(213,(216,238), f)",
"8" :  "(213,231, f)",
"9" :  "(217,229, trimmedSet)",
"10" :  "(217,233, trimmedSet)",
"11" :  "(217,243, trimmedSet)",
"12" :  "(217,225, trimmedSet)",
"13" :  "(219,(224,225), massiveSet)",
"14" :  "(219,(224,227), massiveSet)",
"15" :  "(219,225, massiveSet)",
"16" :  "(223,(224,225), token)",
"17" :  "(223,(224,227), token)",
"18" :  "(223,225, token)",
"19" :  "(239,243, trimmedSet)"},{ "Name" : "loadEmbeddingsFromFile" ,
"Duas" : 29,
"0" :  "(247,268, log)",
"1" :  "(247,272, embeddings)",
"2" :  "(247,263, embeddings)",
"3" :  "(249,254, br)",
"4" :  "(249,(254,255), br)",
"5" :  "(249,(254,272), br)",
"6" :  "(251,266, readLines)",
"7" :  "(254,255, line)",
"8" :  "(255,(257,258), parts)",
"9" :  "(255,(257,266), parts)",
"10" :  "(255,258, parts)",
"11" :  "(255,(260,261), parts)",
"12" :  "(255,(260,263), parts)",
"13" :  "(255,261, parts)",
"14" :  "(258,263, token)",
"15" :  "(259,263, embedding)",
"16" :  "(259,261, embedding)",
"17" :  "(260,(260,261), i)",
"18" :  "(260,(260,263), i)",
"19" :  "(260,261, i)",
"20" :  "(260,260, i)",
"21" :  "(260,(260,261), i)",
"22" :  "(260,(260,263), i)",
"23" :  "(260,261, i)",
"24" :  "(260,260, i)",
"25" :  "(266,(267,268), readLines)",
"26" :  "(266,(267,270), readLines)",
"27" :  "(266,266, readLines)",
"28" :  "(266,268, readLines)"}]
}