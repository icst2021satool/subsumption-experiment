{
"Class" : "edu.stanford.nlp.international.french.process.FrenchTokenizer", 
"Methods" : [{ "Name" : "<init>" ,
"Duas" : 5,
"0" :  "(83,87, this)",
"1" :  "(83,(87,87), splitCompounds)",
"2" :  "(83,(87,87), splitCompounds)",
"3" :  "(83,(87,87), splitContractions)",
"4" :  "(83,(87,88), splitContractions)"},{ "Name" : "getNext" ,
"Duas" : 51,
"0" :  "(94,(99,99), this)",
"1" :  "(94,(99,99), this)",
"2" :  "(94,(99,99), this)",
"3" :  "(94,(99,100), this)",
"4" :  "(94,101, this)",
"5" :  "(94,(105,105), this)",
"6" :  "(94,(105,113), this)",
"7" :  "(94,(113,113), this)",
"8" :  "(94,(113,120), this)",
"9" :  "(94,116, this)",
"10" :  "(94,108, this)",
"11" :  "(94,(99,99), this)",
"12" :  "(94,(99,100), this)",
"13" :  "(94,(99,99), this.splitContractions)",
"14" :  "(94,(99,99), this.splitContractions)",
"15" :  "(94,(113,113), this.splitContractions)",
"16" :  "(94,(113,120), this.splitContractions)",
"17" :  "(94,(105,105), this.splitCompounds)",
"18" :  "(94,(105,113), this.splitCompounds)",
"19" :  "(94,(99,99), this.splitCompounds)",
"20" :  "(94,(99,100), this.splitCompounds)",
"21" :  "(94,(99,99), this.compoundBuffer)",
"22" :  "(94,(99,100), this.compoundBuffer)",
"23" :  "(94,101, this.compoundBuffer)",
"24" :  "(94,101, this.lexer)",
"25" :  "(101,(102,102), nextToken)",
"26" :  "(101,(102,105), nextToken)",
"27" :  "(101,120, nextToken)",
"28" :  "(101,(113,114), nextToken)",
"29" :  "(101,(113,120), nextToken)",
"30" :  "(101,114, nextToken)",
"31" :  "(101,(105,106), nextToken)",
"32" :  "(101,(105,113), nextToken)",
"33" :  "(101,106, nextToken)",
"34" :  "(101,(102,105), nextToken)",
"35" :  "(101,(102,99), nextToken)",
"36" :  "(106,(107,107), cl)",
"37" :  "(106,(107,113), cl)",
"38" :  "(106,(107,108), cl)",
"39" :  "(106,(107,113), cl)",
"40" :  "(106,108, cl)",
"41" :  "(108,120, nextToken)",
"42" :  "(108,(113,114), nextToken)",
"43" :  "(108,(113,120), nextToken)",
"44" :  "(108,114, nextToken)",
"45" :  "(114,(115,115), cl)",
"46" :  "(114,(115,120), cl)",
"47" :  "(114,(115,116), cl)",
"48" :  "(114,(115,120), cl)",
"49" :  "(114,116, cl)",
"50" :  "(116,120, nextToken)"},{ "Name" : "processCompound" ,
"Duas" : 5,
"0" :  "(146,155, this)",
"1" :  "(146,153, this)",
"2" :  "(146,149, cl)",
"3" :  "(146,155, this.compoundBuffer)",
"4" :  "(146,153, this.compoundBuffer)"},{ "Name" : "processContraction" ,
"Duas" : 17,
"0" :  "(168,200, this)",
"1" :  "(168,198, cl)",
"2" :  "(168,200, cl)",
"3" :  "(168,201, cl)",
"4" :  "(168,200, this.compoundBuffer)",
"5" :  "(177,201, first)",
"6" :  "(178,200, second)",
"7" :  "(179,198, secondOffset)",
"8" :  "(180,199, secondLength)",
"9" :  "(183,201, first)",
"10" :  "(184,200, second)",
"11" :  "(185,198, secondOffset)",
"12" :  "(186,199, secondLength)",
"13" :  "(189,201, first)",
"14" :  "(190,200, second)",
"15" :  "(191,198, secondOffset)",
"16" :  "(192,199, secondLength)"},{ "Name" : "main" ,
"Duas" : 44,
"0" :  "(355,357, log)",
"1" :  "(355,379, in)",
"2" :  "(355,391, out)",
"3" :  "(355,389, out)",
"4" :  "(355,387, out)",
"5" :  "(355,390, FRENCH)",
"6" :  "(355,400, err)",
"7" :  "(355,(356,357), options)",
"8" :  "(355,(356,362), options)",
"9" :  "(355,(362,363), options)",
"10" :  "(355,(362,363), options)",
"11" :  "(355,364, options)",
"12" :  "(355,371, options)",
"13" :  "(355,372, options)",
"14" :  "(363,368, tf)",
"15" :  "(363,379, tf)",
"16" :  "(364,(367,367), orthoOptions)",
"17" :  "(364,(367,367), orthoOptions)",
"18" :  "(364,367, orthoOptions)",
"19" :  "(372,(390,390), toLower)",
"20" :  "(372,(390,390), toLower)",
"21" :  "(375,399, nLines)",
"22" :  "(375,400, nLines)",
"23" :  "(375,385, nLines)",
"24" :  "(376,400, nTokens)",
"25" :  "(376,382, nTokens)",
"26" :  "(377,398, startTime)",
"27" :  "(379,(381,382), tokenizer)",
"28" :  "(379,(381,397), tokenizer)",
"29" :  "(379,383, tokenizer)",
"30" :  "(380,(389,389), printSpace)",
"31" :  "(380,(389,390), printSpace)",
"32" :  "(382,400, nTokens)",
"33" :  "(382,382, nTokens)",
"34" :  "(383,(384,385), word)",
"35" :  "(383,(384,389), word)",
"36" :  "(383,390, word)",
"37" :  "(385,399, nLines)",
"38" :  "(385,400, nLines)",
"39" :  "(385,385, nLines)",
"40" :  "(386,(389,389), printSpace)",
"41" :  "(386,(389,390), printSpace)",
"42" :  "(392,(389,389), printSpace)",
"43" :  "(392,(389,390), printSpace)"}]
}