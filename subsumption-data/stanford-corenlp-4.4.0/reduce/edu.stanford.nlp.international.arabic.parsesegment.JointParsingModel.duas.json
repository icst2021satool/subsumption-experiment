{
"Class" : "edu.stanford.nlp.international.arabic.parsesegment.JointParsingModel", 
"Methods" : [{ "Name" : "removeDeleteSplittersFromSplitters" ,
"Duas" : 46,
"0" :  "(59,(59,60), this)",
"1" :  "(59,(59,78), this)",
"2" :  "(59,61, this)",
"3" :  "(59,(74,75), this)",
"4" :  "(59,(74,78), this)",
"5" :  "(59,64, this)",
"6" :  "(59,62, tlp)",
"7" :  "(59,66, tlp)",
"8" :  "(59,(59,60), this.op)",
"9" :  "(59,(59,78), this.op)",
"10" :  "(59,61, this.op)",
"11" :  "(59,(74,75), this.op)",
"12" :  "(59,(74,78), this.op)",
"13" :  "(59,64, this.op)",
"14" :  "(59,(59,60), this.trainOptions)",
"15" :  "(59,(59,78), this.trainOptions)",
"16" :  "(59,61, this.trainOptions)",
"17" :  "(59,64, this.trainOptions)",
"18" :  "(59,(59,60), this.deleteSplitters)",
"19" :  "(59,(59,78), this.deleteSplitters)",
"20" :  "(59,61, this.deleteSplitters)",
"21" :  "(59,64, this.splitters)",
"22" :  "(59,(74,75), this.testOptions)",
"23" :  "(59,(74,78), this.testOptions)",
"24" :  "(59,(74,75), this.verbose)",
"25" :  "(59,(74,78), this.verbose)",
"26" :  "(59,75, log)",
"27" :  "(60,75, deleted)",
"28" :  "(60,70, deleted)",
"29" :  "(61,(67,67), del)",
"30" :  "(61,(67,67), del)",
"31" :  "(62,(67,67), baseDel)",
"32" :  "(62,(67,67), baseDel)",
"33" :  "(63,(67,67), checkBasic)",
"34" :  "(63,(67,67), checkBasic)",
"35" :  "(64,(64,65), it)",
"36" :  "(64,(64,73), it)",
"37" :  "(64,65, it)",
"38" :  "(64,69, it)",
"39" :  "(65,(67,67), elem)",
"40" :  "(65,(67,67), elem)",
"41" :  "(65,70, elem)",
"42" :  "(66,(67,67), baseElem)",
"43" :  "(66,(67,67), baseElem)",
"44" :  "(67,(68,69), delStr)",
"45" :  "(67,(68,72), delStr)"},{ "Name" : "getAnnotatedBinaryTreebankFromTreebank" ,
"Duas" : 79,
"0" :  "(81,(84,84), this)",
"1" :  "(81,(84,86), this)",
"2" :  "(81,(87,87), this)",
"3" :  "(81,(87,87), this)",
"4" :  "(81,87, this)",
"5" :  "(81,(90,91), this)",
"6" :  "(81,(90,108), this)",
"7" :  "(81,(108,110), this)",
"8" :  "(81,(108,122), this)",
"9" :  "(81,110, this)",
"10" :  "(81,111, this)",
"11" :  "(81,117, this)",
"12" :  "(81,91, this)",
"13" :  "(81,92, this)",
"14" :  "(81,(93,94), this)",
"15" :  "(81,(93,108), this)",
"16" :  "(81,94, this)",
"17" :  "(81,123, trainTreebank)",
"18" :  "(81,113, trainTreebank)",
"19" :  "(81,91, trainTreebank)",
"20" :  "(81,84, trainTreebank)",
"21" :  "(81,(87,87), this.op)",
"22" :  "(81,(87,87), this.op)",
"23" :  "(81,87, this.op)",
"24" :  "(81,(90,91), this.op)",
"25" :  "(81,(90,108), this.op)",
"26" :  "(81,(108,110), this.op)",
"27" :  "(81,(108,122), this.op)",
"28" :  "(81,110, this.op)",
"29" :  "(81,111, this.op)",
"30" :  "(81,117, this.op)",
"31" :  "(81,91, this.op)",
"32" :  "(81,(93,94), this.op)",
"33" :  "(81,(93,108), this.op)",
"34" :  "(81,94, this.op)",
"35" :  "(81,(84,84), this.VERBOSE)",
"36" :  "(81,(84,86), this.VERBOSE)",
"37" :  "(81,86, log)",
"38" :  "(81,96, log)",
"39" :  "(81,84, log)",
"40" :  "(81,(87,87), this.trainOptions)",
"41" :  "(81,(87,87), this.trainOptions)",
"42" :  "(81,(90,91), this.trainOptions)",
"43" :  "(81,(90,108), this.trainOptions)",
"44" :  "(81,(108,110), this.trainOptions)",
"45" :  "(81,(108,122), this.trainOptions)",
"46" :  "(81,110, this.trainOptions)",
"47" :  "(81,111, this.trainOptions)",
"48" :  "(81,117, this.trainOptions)",
"49" :  "(81,91, this.trainOptions)",
"50" :  "(81,94, this.trainOptions)",
"51" :  "(81,87, this.forceCNF)",
"52" :  "(81,(90,91), this.selectiveSplit)",
"53" :  "(81,(90,108), this.selectiveSplit)",
"54" :  "(81,91, this.tagSelectiveSplit)",
"55" :  "(81,91, this.selectiveSplitCutOff)",
"56" :  "(81,91, this.tagSelectiveSplitCutOff)",
"57" :  "(81,(93,94), this.testOptions)",
"58" :  "(81,(93,108), this.testOptions)",
"59" :  "(81,(93,94), this.verbose)",
"60" :  "(81,(93,108), this.verbose)",
"61" :  "(81,(108,110), this.hSelSplit)",
"62" :  "(81,(108,122), this.hSelSplit)",
"63" :  "(81,110, this.printTreeTransformations)",
"64" :  "(81,87, tlpParams)",
"65" :  "(82,91, tlp)",
"66" :  "(82,92, tlp)",
"67" :  "(82,84, tlp)",
"68" :  "(87,124, binarizer)",
"69" :  "(87,112, binarizer)",
"70" :  "(87,116, binarizer)",
"71" :  "(87,114, binarizer)",
"72" :  "(91,94, this.splitters)",
"73" :  "(110,117, ptt)",
"74" :  "(122,137, binaryTrainTrees)",
"75" :  "(122,126, binaryTrainTrees)",
"76" :  "(124,(125,126), tree)",
"77" :  "(124,(125,128), tree)",
"78" :  "(124,126, tree)"},{ "Name" : "getParserDataFromTreebank" ,
"Duas" : 21,
"0" :  "(143,(171,172), this)",
"1" :  "(143,(171,178), this)",
"2" :  "(143,180, this)",
"3" :  "(143,178, log)",
"4" :  "(143,172, log)",
"5" :  "(143,(171,172), this.op)",
"6" :  "(143,(171,178), this.op)",
"7" :  "(143,180, this.op)",
"8" :  "(143,(171,172), this.doDep)",
"9" :  "(143,(171,178), this.doDep)",
"10" :  "(144,173, binaryTrainTrees)",
"11" :  "(147,180, stateIndex)",
"12" :  "(153,180, bg)",
"13" :  "(156,180, ug)",
"14" :  "(161,180, wordIndex)",
"15" :  "(162,180, tagIndex)",
"16" :  "(163,180, lex)",
"17" :  "(163,174, lex)",
"18" :  "(169,173, dgExtractor)",
"19" :  "(170,180, dg)",
"20" :  "(173,180, dg)"},{ "Name" : "makeParsers" ,
"Duas" : 32,
"0" :  "(184,(184,185), this)",
"1" :  "(184,(184,188), this)",
"2" :  "(184,188, this)",
"3" :  "(184,189, this)",
"4" :  "(184,190, this)",
"5" :  "(184,190, this)",
"6" :  "(184,185, this)",
"7" :  "(184,(184,185), this.lp)",
"8" :  "(184,(184,188), this.lp)",
"9" :  "(184,188, this.lp)",
"10" :  "(184,189, this.lp)",
"11" :  "(184,190, this.lp)",
"12" :  "(184,188, this.bg)",
"13" :  "(184,190, this.bg)",
"14" :  "(184,188, this.ug)",
"15" :  "(184,190, this.ug)",
"16" :  "(184,188, this.lex)",
"17" :  "(184,189, this.lex)",
"18" :  "(184,190, this.lex)",
"19" :  "(184,188, this.op)",
"20" :  "(184,189, this.op)",
"21" :  "(184,190, this.op)",
"22" :  "(184,188, this.stateIndex)",
"23" :  "(184,190, this.stateIndex)",
"24" :  "(184,188, this.wordIndex)",
"25" :  "(184,189, this.wordIndex)",
"26" :  "(184,190, this.wordIndex)",
"27" :  "(184,188, this.tagIndex)",
"28" :  "(184,189, this.tagIndex)",
"29" :  "(184,190, this.tagIndex)",
"30" :  "(184,189, this.dg)",
"31" :  "(184,190, this.dg)"},{ "Name" : "parse" ,
"Duas" : 122,
"0" :  "(194,(196,197), this)",
"1" :  "(194,(196,201), this)",
"2" :  "(194,201, this)",
"3" :  "(194,(209,210), this)",
"4" :  "(194,(209,215), this)",
"5" :  "(194,(222,222), this)",
"6" :  "(194,(222,240), this)",
"7" :  "(194,240, this)",
"8" :  "(194,248, this)",
"9" :  "(194,249, this)",
"10" :  "(194,250, this)",
"11" :  "(194,245, this)",
"12" :  "(194,(227,227), this)",
"13" :  "(194,(227,236), this)",
"14" :  "(194,236, this)",
"15" :  "(194,228, this)",
"16" :  "(194,(229,230), this)",
"17" :  "(194,(229,244), this)",
"18" :  "(194,230, this)",
"19" :  "(194,231, this)",
"20" :  "(194,210, this)",
"21" :  "(194,197, this)",
"22" :  "(194,(196,197), inputStream)",
"23" :  "(194,(196,201), inputStream)",
"24" :  "(194,(196,197), this.serInput)",
"25" :  "(194,(196,201), this.serInput)",
"26" :  "(194,201, err)",
"27" :  "(194,228, err)",
"28" :  "(194,230, err)",
"29" :  "(194,210, err)",
"30" :  "(194,197, err)",
"31" :  "(194,(209,210), this.op)",
"32" :  "(194,(209,215), this.op)",
"33" :  "(194,(222,222), this.op)",
"34" :  "(194,(222,240), this.op)",
"35" :  "(194,(227,227), this.op)",
"36" :  "(194,(227,236), this.op)",
"37" :  "(194,(209,210), this.testOptions)",
"38" :  "(194,(209,215), this.testOptions)",
"39" :  "(194,(209,210), this.maxLength)",
"40" :  "(194,(209,215), this.maxLength)",
"41" :  "(194,(222,222), this.doPCFG)",
"42" :  "(194,(222,240), this.doPCFG)",
"43" :  "(194,(222,223), pparser)",
"44" :  "(194,(222,240), pparser)",
"45" :  "(194,223, pparser)",
"46" :  "(194,(227,227), this.doDep)",
"47" :  "(194,(227,236), this.doDep)",
"48" :  "(194,(227,228), dparser)",
"49" :  "(194,(227,236), dparser)",
"50" :  "(194,(229,230), this.bparser)",
"51" :  "(194,(229,244), this.bparser)",
"52" :  "(194,231, this.bparser)",
"53" :  "(194,240, out)",
"54" :  "(194,245, out)",
"55" :  "(194,236, out)",
"56" :  "(194,248, this.debinarizer)",
"57" :  "(194,249, this.subcategoryStripper)",
"58" :  "(194,250, this.treePrint)",
"59" :  "(194,264, log)",
"60" :  "(194,265, log)",
"61" :  "(194,266, log)",
"62" :  "(194,267, log)",
"63" :  "(194,268, log)",
"64" :  "(194,269, log)",
"65" :  "(194,270, log)",
"66" :  "(194,271, log)",
"67" :  "(194,(196,197), reader)",
"68" :  "(194,(196,201), reader)",
"69" :  "(194,207, reader)",
"70" :  "(203,267, latticeNum)",
"71" :  "(203,240, latticeNum)",
"72" :  "(203,261, latticeNum)",
"73" :  "(203,245, latticeNum)",
"74" :  "(203,210, latticeNum)",
"75" :  "(203,211, latticeNum)",
"76" :  "(204,268, parseable)",
"77" :  "(204,271, parseable)",
"78" :  "(204,215, parseable)",
"79" :  "(205,269, successes)",
"80" :  "(205,271, successes)",
"81" :  "(205,252, successes)",
"82" :  "(206,270, fParseSucceeded)",
"83" :  "(206,232, fParseSucceeded)",
"84" :  "(207,(209,210), lattice)",
"85" :  "(207,(209,215), lattice)",
"86" :  "(207,(222,223), lattice)",
"87" :  "(207,(222,240), lattice)",
"88" :  "(207,210, lattice)",
"89" :  "(211,267, latticeNum)",
"90" :  "(211,240, latticeNum)",
"91" :  "(211,261, latticeNum)",
"92" :  "(211,245, latticeNum)",
"93" :  "(211,210, latticeNum)",
"94" :  "(211,211, latticeNum)",
"95" :  "(215,268, parseable)",
"96" :  "(215,271, parseable)",
"97" :  "(215,215, parseable)",
"98" :  "(221,(244,245), rawTree)",
"99" :  "(221,(244,248), rawTree)",
"100" :  "(221,248, rawTree)",
"101" :  "(223,(244,245), rawTree)",
"102" :  "(223,(244,248), rawTree)",
"103" :  "(223,248, rawTree)",
"104" :  "(225,(227,228), bestSegmentationB)",
"105" :  "(225,(227,236), bestSegmentationB)",
"106" :  "(225,(229,230), bestSegmentationB)",
"107" :  "(225,(229,244), bestSegmentationB)",
"108" :  "(231,(244,245), rawTree)",
"109" :  "(231,(244,248), rawTree)",
"110" :  "(231,248, rawTree)",
"111" :  "(232,270, fParseSucceeded)",
"112" :  "(232,232, fParseSucceeded)",
"113" :  "(252,269, successes)",
"114" :  "(252,271, successes)",
"115" :  "(252,252, successes)",
"116" :  "(261,267, latticeNum)",
"117" :  "(261,240, latticeNum)",
"118" :  "(261,261, latticeNum)",
"119" :  "(261,245, latticeNum)",
"120" :  "(261,210, latticeNum)",
"121" :  "(261,211, latticeNum)"},{ "Name" : "run" ,
"Duas" : 33,
"0" :  "(278,(303,304), this)",
"1" :  "(278,(303,318), this)",
"2" :  "(278,318, this)",
"3" :  "(278,304, this)",
"4" :  "(278,305, this)",
"5" :  "(278,312, this)",
"6" :  "(278,314, this)",
"7" :  "(278,315, this)",
"8" :  "(278,318, inputStream)",
"9" :  "(278,(303,304), this.VERBOSE)",
"10" :  "(278,(303,318), this.VERBOSE)",
"11" :  "(278,(305,305), pparser)",
"12" :  "(278,(305,305), pparser)",
"13" :  "(278,(310,310), pparser)",
"14" :  "(278,(310,311), pparser)",
"15" :  "(278,(311,311), pparser)",
"16" :  "(278,(311,312), pparser)",
"17" :  "(278,305, this.lex)",
"18" :  "(278,315, this.lex)",
"19" :  "(278,306, log)",
"20" :  "(278,307, log)",
"21" :  "(278,314, log)",
"22" :  "(278,315, log)",
"23" :  "(278,312, this.stateIndex)",
"24" :  "(278,312, this.tagIndex)",
"25" :  "(278,312, this.wordIndex)",
"26" :  "(278,304, this.op)",
"27" :  "(278,314, this.op)",
"28" :  "(279,314, this.tlpParams)",
"29" :  "(299,305, this.lp)",
"30" :  "(299,312, this.lp)",
"31" :  "(299,315, this.lp)",
"32" :  "(305,312, lexNumRules)"}]
}