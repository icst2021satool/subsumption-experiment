{
"Class" : "edu.stanford.nlp.parser.shiftreduce.ShiftTransition", 
"Methods" : [{ "Name" : "isLegal" ,
"Duas" : 42,
"0" :  "(20,(20,21), state)",
"1" :  "(20,(20,23), state)",
"2" :  "(20,(23,24), state)",
"3" :  "(20,(23,39), state)",
"4" :  "(20,(39,40), state)",
"5" :  "(20,(39,42), state)",
"6" :  "(20,42, state)",
"7" :  "(20,(39,39), constraints)",
"8" :  "(20,(39,40), constraints)",
"9" :  "(20,46, constraints)",
"10" :  "(20,(20,21), state.finished)",
"11" :  "(20,(20,23), state.finished)",
"12" :  "(20,(23,24), state.sentence)",
"13" :  "(20,(23,39), state.sentence)",
"14" :  "(20,(23,24), state.tokenPosition)",
"15" :  "(20,(23,39), state.tokenPosition)",
"16" :  "(20,(39,40), state.stack)",
"17" :  "(20,(39,42), state.stack)",
"18" :  "(20,42, state.stack)",
"19" :  "(42,(48,49), top)",
"20" :  "(42,(48,51), top)",
"21" :  "(42,51, top)",
"22" :  "(42,(58,59), top)",
"23" :  "(42,(58,61), top)",
"24" :  "(46,(48,49), constraint)",
"25" :  "(46,(48,51), constraint)",
"26" :  "(46,(52,53), constraint)",
"27" :  "(46,(52,55), constraint)",
"28" :  "(46,(55,56), constraint)",
"29" :  "(46,(55,58), constraint)",
"30" :  "(46,(58,59), constraint)",
"31" :  "(46,(58,61), constraint)",
"32" :  "(46,(48,49), constraint.end)",
"33" :  "(46,(48,51), constraint.end)",
"34" :  "(46,(52,53), constraint.start)",
"35" :  "(46,(52,55), constraint.start)",
"36" :  "(46,(55,56), constraint.start)",
"37" :  "(46,(55,58), constraint.start)",
"38" :  "(51,(52,53), left)",
"39" :  "(51,(52,55), left)",
"40" :  "(51,(55,56), left)",
"41" :  "(51,(55,58), left)"},{ "Name" : "apply" ,
"Duas" : 13,
"0" :  "(77,83, this)",
"1" :  "(77,83, state)",
"2" :  "(77,83, scoreDelta)",
"3" :  "(77,83, state.sentence)",
"4" :  "(77,83, state.tokenPosition)",
"5" :  "(77,83, state.stack)",
"6" :  "(77,83, state.transitions)",
"7" :  "(77,83, state.separators)",
"8" :  "(77,83, state.score)",
"9" :  "(77,(78,79), tagNode)",
"10" :  "(77,(78,81), tagNode)",
"11" :  "(77,81, tagNode)",
"12" :  "(77,83, tagNode)"},{ "Name" : "equals" ,
"Duas" : 6,
"0" :  "(88,(88,89), this)",
"1" :  "(88,(88,91), this)",
"2" :  "(88,(88,89), o)",
"3" :  "(88,(88,91), o)",
"4" :  "(88,(91,92), o)",
"5" :  "(88,(91,94), o)"}]
}