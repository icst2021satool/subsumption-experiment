{
"Class" : "edu.stanford.nlp.ie.pascal.Alignment", 
"Methods" : [{ "Name" : "serialize" ,
"Duas" : 3,
"0" :  "(26,32, writer)",
"1" :  "(28,32, sb)",
"2" :  "(28,30, sb)"},{ "Name" : "<init>" ,
"Duas" : 36,
"0" :  "(35,41, this)",
"1" :  "(35,46, this)",
"2" :  "(35,(52,53), this)",
"3" :  "(35,(52,55), this)",
"4" :  "(35,55, this)",
"5" :  "(35,(56,57), this)",
"6" :  "(35,(56,59), this)",
"7" :  "(35,57, this)",
"8" :  "(35,42, reader)",
"9" :  "(35,47, reader)",
"10" :  "(37,(38,39), line)",
"11" :  "(37,(38,41), line)",
"12" :  "(37,41, line)",
"13" :  "(42,(43,44), line)",
"14" :  "(42,(43,46), line)",
"15" :  "(42,46, line)",
"16" :  "(46,(52,53), this.shortForm)",
"17" :  "(46,(52,55), this.shortForm)",
"18" :  "(47,(48,49), line)",
"19" :  "(47,(48,51), line)",
"20" :  "(47,51, line)",
"21" :  "(51,(52,53), pstrings)",
"22" :  "(51,(52,55), pstrings)",
"23" :  "(51,55, pstrings)",
"24" :  "(51,57, pstrings)",
"25" :  "(55,(56,57), this.pointers)",
"26" :  "(55,(56,59), this.pointers)",
"27" :  "(55,57, this.pointers)",
"28" :  "(56,(56,57), i)",
"29" :  "(56,(56,59), i)",
"30" :  "(56,57, i)",
"31" :  "(56,56, i)",
"32" :  "(56,(56,57), i)",
"33" :  "(56,(56,59), i)",
"34" :  "(56,57, i)",
"35" :  "(56,56, i)"},{ "Name" : "toString" ,
"Duas" : 65,
"0" :  "(73,(79,80), this)",
"1" :  "(73,(79,91), this)",
"2" :  "(73,(80,81), this)",
"3" :  "(73,(80,83), this)",
"4" :  "(73,(83,83), this)",
"5" :  "(73,(83,86), this)",
"6" :  "(73,(86,87), this)",
"7" :  "(73,(86,79), this)",
"8" :  "(73,87, this)",
"9" :  "(73,(83,84), this)",
"10" :  "(73,(83,86), this)",
"11" :  "(73,(83,83), this.longForm)",
"12" :  "(73,(83,86), this.longForm)",
"13" :  "(73,(86,87), this.longForm)",
"14" :  "(73,(86,79), this.longForm)",
"15" :  "(73,(79,80), this.shortForm)",
"16" :  "(73,(79,91), this.shortForm)",
"17" :  "(73,87, this.shortForm)",
"18" :  "(73,(80,81), this.pointers)",
"19" :  "(73,(80,83), this.pointers)",
"20" :  "(73,(83,84), this.pointers)",
"21" :  "(73,(83,86), this.pointers)",
"22" :  "(73,91, builder)",
"23" :  "(73,87, builder)",
"24" :  "(73,84, builder)",
"25" :  "(78,(83,83), l)",
"26" :  "(78,(83,86), l)",
"27" :  "(78,(86,87), l)",
"28" :  "(78,(86,79), l)",
"29" :  "(78,88, l)",
"30" :  "(78,(83,84), l)",
"31" :  "(78,(83,86), l)",
"32" :  "(78,83, l)",
"33" :  "(79,(79,80), s)",
"34" :  "(79,(79,91), s)",
"35" :  "(79,(80,81), s)",
"36" :  "(79,(80,83), s)",
"37" :  "(79,79, s)",
"38" :  "(79,87, s)",
"39" :  "(79,(83,84), s)",
"40" :  "(79,(83,86), s)",
"41" :  "(83,(83,83), l)",
"42" :  "(83,(83,86), l)",
"43" :  "(83,(86,87), l)",
"44" :  "(83,(86,79), l)",
"45" :  "(83,88, l)",
"46" :  "(83,(83,84), l)",
"47" :  "(83,(83,86), l)",
"48" :  "(83,83, l)",
"49" :  "(88,(83,83), l)",
"50" :  "(88,(83,86), l)",
"51" :  "(88,(86,87), l)",
"52" :  "(88,(86,79), l)",
"53" :  "(88,88, l)",
"54" :  "(88,(83,84), l)",
"55" :  "(88,(83,86), l)",
"56" :  "(88,83, l)",
"57" :  "(79,(79,80), s)",
"58" :  "(79,(79,91), s)",
"59" :  "(79,(80,81), s)",
"60" :  "(79,(80,83), s)",
"61" :  "(79,79, s)",
"62" :  "(79,87, s)",
"63" :  "(79,(83,84), s)",
"64" :  "(79,(83,86), s)"},{ "Name" : "equals" ,
"Duas" : 29,
"0" :  "(96,(101,101), this)",
"1" :  "(96,(101,101), this)",
"2" :  "(96,(101,101), this)",
"3" :  "(96,(101,101), this)",
"4" :  "(96,(101,101), this)",
"5" :  "(96,(101,101), this)",
"6" :  "(96,(96,96), o)",
"7" :  "(96,(96,97), o)",
"8" :  "(96,(96,97), o)",
"9" :  "(96,(96,99), o)",
"10" :  "(96,99, o)",
"11" :  "(96,(101,101), this.longForm)",
"12" :  "(96,(101,101), this.longForm)",
"13" :  "(96,(101,101), this.shortForm)",
"14" :  "(96,(101,101), this.shortForm)",
"15" :  "(96,(101,101), this.pointers)",
"16" :  "(96,(101,101), this.pointers)",
"17" :  "(99,(101,101), cmp)",
"18" :  "(99,(101,101), cmp)",
"19" :  "(99,(101,101), cmp)",
"20" :  "(99,(101,101), cmp)",
"21" :  "(99,(101,101), cmp)",
"22" :  "(99,(101,101), cmp)",
"23" :  "(99,(101,101), cmp.longForm)",
"24" :  "(99,(101,101), cmp.longForm)",
"25" :  "(99,(101,101), cmp.shortForm)",
"26" :  "(99,(101,101), cmp.shortForm)",
"27" :  "(99,(101,101), cmp.pointers)",
"28" :  "(99,(101,101), cmp.pointers)"},{ "Name" : "hashCode" ,
"Duas" : 4,
"0" :  "(106,111, code)",
"1" :  "(106,108, code)",
"2" :  "(109,111, code)",
"3" :  "(109,108, code)"}]
}