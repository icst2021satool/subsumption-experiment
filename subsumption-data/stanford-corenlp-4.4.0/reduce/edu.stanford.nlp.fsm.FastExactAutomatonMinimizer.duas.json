{
"Class" : "edu.stanford.nlp.fsm.FastExactAutomatonMinimizer", 
"Methods" : [{ "Name" : "buildMinimizedFA" ,
"Duas" : 21,
"0" :  "(86,99, this)",
"1" :  "(86,101, this)",
"2" :  "(86,89, this)",
"3" :  "(86,90, this)",
"4" :  "(86,99, minimizedFA)",
"5" :  "(86,104, minimizedFA)",
"6" :  "(86,101, minimizedFA)",
"7" :  "(86,(92,93), minimizedFA)",
"8" :  "(86,(92,97), minimizedFA)",
"9" :  "(86,93, minimizedFA)",
"10" :  "(87,99, unminimizedFA)",
"11" :  "(87,100, unminimizedFA)",
"12" :  "(88,(92,93), arc)",
"13" :  "(88,(92,97), arc)",
"14" :  "(88,93, arc)",
"15" :  "(89,(92,93), source)",
"16" :  "(89,(92,97), source)",
"17" :  "(89,93, source)",
"18" :  "(90,(92,93), target)",
"19" :  "(90,(92,97), target)",
"20" :  "(90,93, target)"},{ "Name" : "hasSplit" ,
"Duas" : 4,
"0" :  "(114,(114,114), this)",
"1" :  "(114,(114,114), this)",
"2" :  "(114,(114,114), this.splits)",
"3" :  "(114,(114,114), this.splits)"},{ "Name" : "sortIntoBlocks" ,
"Duas" : 3,
"0" :  "(135,137, this)",
"1" :  "(135,140, blockToMembers)",
"2" :  "(135,138, blockToMembers)"},{ "Name" : "makeBlock" ,
"Duas" : 10,
"0" :  "(144,151, this)",
"1" :  "(144,148, this)",
"2" :  "(144,(146,148), SINK_NODE)",
"3" :  "(144,(146,150), SINK_NODE)",
"4" :  "(144,148, this.memberToBlock)",
"5" :  "(144,151, block)",
"6" :  "(144,148, block)",
"7" :  "(145,(146,148), member)",
"8" :  "(145,(146,150), member)",
"9" :  "(145,148, member)"},{ "Name" : "addSplits" ,
"Duas" : 6,
"0" :  "(155,165, this)",
"1" :  "(155,157, this)",
"2" :  "(155,165, block)",
"3" :  "(155,164, symbolToTarget)",
"4" :  "(155,165, symbolToTarget)",
"5" :  "(155,161, symbolToTarget)"},{ "Name" : "removeAll" ,
"Duas" : 1,
"0" :  "(171,172, block)"},{ "Name" : "difference" ,
"Duas" : 7,
"0" :  "(177,(179,180), members)",
"1" :  "(177,(179,182), members)",
"2" :  "(177,183, difference)",
"3" :  "(177,180, difference)",
"4" :  "(178,(179,180), member)",
"5" :  "(178,(179,182), member)",
"6" :  "(178,180, member)"},{ "Name" : "getBlock" ,
"Duas" : 9,
"0" :  "(187,191, this)",
"1" :  "(187,189, o)",
"2" :  "(187,191, this.memberToBlock)",
"3" :  "(187,189, out)",
"4" :  "(187,190, out)",
"5" :  "(187,192, out)",
"6" :  "(187,(188,189), result)",
"7" :  "(187,(188,196), result)",
"8" :  "(187,196, result)"},{ "Name" : "getInverseImages" ,
"Duas" : 9,
"0" :  "(200,207, this)",
"1" :  "(200,214, inverseImages)",
"2" :  "(200,211, inverseImages)",
"3" :  "(201,207, symbol)",
"4" :  "(202,(204,205), block)",
"5" :  "(202,(204,207), block)",
"6" :  "(203,(204,205), member)",
"7" :  "(203,(204,207), member)",
"8" :  "(203,207, member)"},{ "Name" : "getInverseArcs" ,
"Duas" : 9,
"0" :  "(218,221, this)",
"1" :  "(218,219, this)",
"2" :  "(218,(218,219), member)",
"3" :  "(218,(218,221), member)",
"4" :  "(218,219, member)",
"5" :  "(218,221, symbol)",
"6" :  "(218,219, symbol)",
"7" :  "(218,(218,219), SINK_NODE)",
"8" :  "(218,(218,221), SINK_NODE)"},{ "Name" : "getInverseArcs" ,
"Duas" : 7,
"0" :  "(225,228, this)",
"1" :  "(225,226, this)",
"2" :  "(225,(225,226), member)",
"3" :  "(225,(225,228), member)",
"4" :  "(225,226, member)",
"5" :  "(225,(225,226), SINK_NODE)",
"6" :  "(225,(225,228), SINK_NODE)"},{ "Name" : "minimize" ,
"Duas" : 26,
"0" :  "(244,(245,246), this)",
"1" :  "(244,(245,262), this)",
"2" :  "(244,246, this)",
"3" :  "(244,247, this)",
"4" :  "(244,248, this)",
"5" :  "(244,258, this)",
"6" :  "(244,259, this)",
"7" :  "(244,256, this)",
"8" :  "(248,251, inverseImagesByBlock)",
"9" :  "(250,(252,253), block)",
"10" :  "(250,(252,255), block)",
"11" :  "(250,(255,256), block)",
"12" :  "(250,(255,258), block)",
"13" :  "(250,258, block)",
"14" :  "(250,256, block)",
"15" :  "(251,(252,252), members)",
"16" :  "(251,(252,249), members)",
"17" :  "(251,(252,253), members)",
"18" :  "(251,(252,255), members)",
"19" :  "(251,(255,256), members)",
"20" :  "(251,(255,258), members)",
"21" :  "(251,258, members)",
"22" :  "(251,259, members)",
"23" :  "(251,256, members)",
"24" :  "(256,258, members)",
"25" :  "(256,259, members)"}]
}