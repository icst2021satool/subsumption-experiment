{
"Class" : "edu.stanford.nlp.pipeline.CoreNLPProtos$MapIntString$Builder", 
"Methods" : [{ "Name" : "build" ,
"Duas" : 4,
"0" :  "(-1,(-1,-1), result)",
"1" :  "(-1,(-1,-1), result)",
"2" :  "(-1,-1, result)",
"3" :  "(-1,-1, result)"},{ "Name" : "buildPartial" ,
"Duas" : 28,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,(-1,-1), this)",
"4" :  "(-1,(-1,-1), this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,-1, this)",
"7" :  "(-1,-1, this)",
"8" :  "(-1,-1, this)",
"9" :  "(-1,-1, this)",
"10" :  "(-1,-1, this)",
"11" :  "(-1,(-1,-1), this.bitField0_)",
"12" :  "(-1,(-1,-1), this.bitField0_)",
"13" :  "(-1,(-1,-1), this.bitField0_)",
"14" :  "(-1,(-1,-1), this.bitField0_)",
"15" :  "(-1,-1, this.bitField0_)",
"16" :  "(-1,-1, this.bitField0_)",
"17" :  "(-1,-1, this.key_)",
"18" :  "(-1,-1, this.key_)",
"19" :  "(-1,-1, this.value_)",
"20" :  "(-1,-1, this.value_)",
"21" :  "(-1,-1, result)",
"22" :  "(-1,-1, result)",
"23" :  "(-1,-1, result)",
"24" :  "(-1,(-1,-1), this.bitField0_)",
"25" :  "(-1,(-1,-1), this.bitField0_)",
"26" :  "(-1,-1, this.bitField0_)",
"27" :  "(-1,-1, this.value_)"},{ "Name" : "mergeFrom" ,
"Duas" : 7,
"0" :  "(-1,-1, this)",
"1" :  "(-1,-1, this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,(-1,-1), other)",
"4" :  "(-1,(-1,-1), other)",
"5" :  "(-1,-1, other)",
"6" :  "(-1,-1, other)"},{ "Name" : "mergeFrom" ,
"Duas" : 38,
"0" :  "(-1,-1, this)",
"1" :  "(-1,-1, this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,(-1,-1), this)",
"4" :  "(-1,(-1,-1), this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,-1, this)",
"7" :  "(-1,-1, this)",
"8" :  "(-1,-1, this)",
"9" :  "(-1,-1, this)",
"10" :  "(-1,(-1,-1), this)",
"11" :  "(-1,(-1,-1), this)",
"12" :  "(-1,-1, this)",
"13" :  "(-1,-1, this)",
"14" :  "(-1,-1, this)",
"15" :  "(-1,-1, this)",
"16" :  "(-1,-1, this)",
"17" :  "(-1,-1, this)",
"18" :  "(-1,(-1,-1), other)",
"19" :  "(-1,(-1,-1), other)",
"20" :  "(-1,(-1,-1), other)",
"21" :  "(-1,(-1,-1), other)",
"22" :  "(-1,(-1,-1), other)",
"23" :  "(-1,(-1,-1), other)",
"24" :  "(-1,-1, other)",
"25" :  "(-1,-1, other)",
"26" :  "(-1,-1, other)",
"27" :  "(-1,-1, other)",
"28" :  "(-1,-1, other)",
"29" :  "(-1,(-1,-1), this.key_)",
"30" :  "(-1,(-1,-1), this.key_)",
"31" :  "(-1,-1, this.key_)",
"32" :  "(-1,-1, this.bitField0_)",
"33" :  "(-1,-1, this.bitField0_)",
"34" :  "(-1,(-1,-1), this.value_)",
"35" :  "(-1,(-1,-1), this.value_)",
"36" :  "(-1,-1, this.value_)",
"37" :  "(-1,-1, this.bitField0_)"},{ "Name" : "mergeFrom" ,
"Duas" : 5,
"0" :  "(-1,-1, this)",
"1" :  "(-1,-1, this)",
"2" :  "(-1,(-1,-1), parsedMessage)",
"3" :  "(-1,(-1,-1), parsedMessage)",
"4" :  "(-1,-1, parsedMessage)"},{ "Name" : "ensureKeyIsMutable" ,
"Duas" : 8,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,(-1,-1), this.bitField0_)",
"5" :  "(-1,(-1,-1), this.bitField0_)",
"6" :  "(-1,-1, this.bitField0_)",
"7" :  "(-1,-1, this.key_)"},{ "Name" : "getKeyList" ,
"Duas" : 6,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,(-1,-1), this.bitField0_)",
"4" :  "(-1,(-1,-1), this.bitField0_)",
"5" :  "(-1,-1, this.key_)"},{ "Name" : "ensureValueIsMutable" ,
"Duas" : 9,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,(-1,-1), this.bitField0_)",
"6" :  "(-1,(-1,-1), this.bitField0_)",
"7" :  "(-1,-1, this.bitField0_)",
"8" :  "(-1,-1, this.value_)"},{ "Name" : "setValue" ,
"Duas" : 9,
"0" :  "(-1,-1, this)",
"1" :  "(-1,-1, this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, index)",
"5" :  "(-1,(-1,-1), value)",
"6" :  "(-1,(-1,-1), value)",
"7" :  "(-1,-1, value)",
"8" :  "(-1,-1, this.value_)"},{ "Name" : "addValue" ,
"Duas" : 8,
"0" :  "(-1,-1, this)",
"1" :  "(-1,-1, this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,(-1,-1), value)",
"5" :  "(-1,(-1,-1), value)",
"6" :  "(-1,-1, value)",
"7" :  "(-1,-1, this.value_)"},{ "Name" : "addValueBytes" ,
"Duas" : 8,
"0" :  "(-1,-1, this)",
"1" :  "(-1,-1, this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,(-1,-1), value)",
"5" :  "(-1,(-1,-1), value)",
"6" :  "(-1,-1, value)",
"7" :  "(-1,-1, this.value_)"}]
}