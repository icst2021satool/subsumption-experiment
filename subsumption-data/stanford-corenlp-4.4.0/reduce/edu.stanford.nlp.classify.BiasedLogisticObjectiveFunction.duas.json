{
"Class" : "edu.stanford.nlp.classify.BiasedLogisticObjectiveFunction", 
"Methods" : [{ "Name" : "calculate" ,
"Duas" : 64,
"0" :  "(29,(29,30), this)",
"1" :  "(29,(29,33), this)",
"2" :  "(29,33, this)",
"3" :  "(29,34, this)",
"4" :  "(29,(36,37), this)",
"5" :  "(29,(36,73), this)",
"6" :  "(29,73, this)",
"7" :  "(29,37, this)",
"8" :  "(29,(46,47), this)",
"9" :  "(29,(46,50), this)",
"10" :  "(29,(50,51), this)",
"11" :  "(29,(50,61), this)",
"12" :  "(29,63, this)",
"13" :  "(29,64, this)",
"14" :  "(29,65, this)",
"15" :  "(29,69, this)",
"16" :  "(29,53, this)",
"17" :  "(29,73, x)",
"18" :  "(29,41, x)",
"19" :  "(29,(29,30), this.dataValues)",
"20" :  "(29,(29,33), this.dataValues)",
"21" :  "(29,34, this.derivative)",
"22" :  "(29,73, this.derivative)",
"23" :  "(29,69, this.derivative)",
"24" :  "(29,(36,37), this.data)",
"25" :  "(29,(36,73), this.data)",
"26" :  "(29,37, this.data)",
"27" :  "(29,(46,47), this.dataweights)",
"28" :  "(29,(46,50), this.dataweights)",
"29" :  "(29,(50,51), this.labels)",
"30" :  "(29,(50,61), this.labels)",
"31" :  "(29,63, this.probCorrect)",
"32" :  "(29,65, this.probCorrect)",
"33" :  "(29,73, this.prior)",
"34" :  "(33,73, this.value)",
"35" :  "(33,64, this.value)",
"36" :  "(33,53, this.value)",
"37" :  "(36,(36,37), d)",
"38" :  "(36,(36,73), d)",
"39" :  "(36,37, d)",
"40" :  "(36,(50,51), d)",
"41" :  "(36,(50,61), d)",
"42" :  "(36,36, d)",
"43" :  "(37,68, features)",
"44" :  "(38,61, sum)",
"45" :  "(38,51, sum)",
"46" :  "(38,41, sum)",
"47" :  "(41,61, sum)",
"48" :  "(41,51, sum)",
"49" :  "(41,41, sum)",
"50" :  "(53,73, this.value)",
"51" :  "(53,64, this.value)",
"52" :  "(53,53, this.value)",
"53" :  "(54,69, derivativeIncrement)",
"54" :  "(64,73, this.value)",
"55" :  "(64,64, this.value)",
"56" :  "(64,53, this.value)",
"57" :  "(65,69, derivativeIncrement)",
"58" :  "(36,(36,37), d)",
"59" :  "(36,(36,73), d)",
"60" :  "(36,37, d)",
"61" :  "(36,(50,51), d)",
"62" :  "(36,(50,61), d)",
"63" :  "(36,36, d)"},{ "Name" : "calculateRVF" ,
"Duas" : 73,
"0" :  "(78,(81,82), this)",
"1" :  "(78,(81,112), this)",
"2" :  "(78,112, this)",
"3" :  "(78,82, this)",
"4" :  "(78,83, this)",
"5" :  "(78,(92,93), this)",
"6" :  "(78,(92,96), this)",
"7" :  "(78,(100,101), this)",
"8" :  "(78,(100,103), this)",
"9" :  "(78,103, this)",
"10" :  "(78,104, this)",
"11" :  "(78,108, this)",
"12" :  "(78,101, this)",
"13" :  "(78,112, x)",
"14" :  "(78,87, x)",
"15" :  "(78,112, this.derivative)",
"16" :  "(78,108, this.derivative)",
"17" :  "(78,(81,82), this.data)",
"18" :  "(78,(81,112), this.data)",
"19" :  "(78,82, this.data)",
"20" :  "(78,83, this.dataValues)",
"21" :  "(78,(92,93), this.labels)",
"22" :  "(78,(92,96), this.labels)",
"23" :  "(78,(100,101), this.dataweights)",
"24" :  "(78,(100,103), this.dataweights)",
"25" :  "(78,103, this.dataweights)",
"26" :  "(78,104, this.dataweights)",
"27" :  "(78,112, this.prior)",
"28" :  "(78,112, this.value)",
"29" :  "(78,103, this.value)",
"30" :  "(78,101, this.value)",
"31" :  "(81,(81,82), d)",
"32" :  "(81,(81,112), d)",
"33" :  "(81,82, d)",
"34" :  "(81,83, d)",
"35" :  "(81,(92,93), d)",
"36" :  "(81,(92,96), d)",
"37" :  "(81,103, d)",
"38" :  "(81,104, d)",
"39" :  "(81,81, d)",
"40" :  "(82,107, features)",
"41" :  "(83,108, values)",
"42" :  "(83,87, values)",
"43" :  "(84,96, sum)",
"44" :  "(84,93, sum)",
"45" :  "(84,87, sum)",
"46" :  "(87,96, sum)",
"47" :  "(87,93, sum)",
"48" :  "(87,87, sum)",
"49" :  "(93,103, expSum)",
"50" :  "(93,101, expSum)",
"51" :  "(94,104, derivativeIncrement)",
"52" :  "(94,108, derivativeIncrement)",
"53" :  "(96,103, expSum)",
"54" :  "(96,101, expSum)",
"55" :  "(97,104, derivativeIncrement)",
"56" :  "(97,108, derivativeIncrement)",
"57" :  "(101,112, this.value)",
"58" :  "(101,103, this.value)",
"59" :  "(101,101, this.value)",
"60" :  "(103,112, this.value)",
"61" :  "(103,103, this.value)",
"62" :  "(103,101, this.value)",
"63" :  "(104,108, derivativeIncrement)",
"64" :  "(81,(81,82), d)",
"65" :  "(81,(81,112), d)",
"66" :  "(81,82, d)",
"67" :  "(81,83, d)",
"68" :  "(81,(92,93), d)",
"69" :  "(81,(92,96), d)",
"70" :  "(81,103, d)",
"71" :  "(81,104, d)",
"72" :  "(81,81, d)"}]
}