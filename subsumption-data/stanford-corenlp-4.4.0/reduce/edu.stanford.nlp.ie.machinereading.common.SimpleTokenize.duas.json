{
"Class" : "edu.stanford.nlp.ie.machinereading.common.SimpleTokenize", 
"Methods" : [{ "Name" : "tokenize" ,
"Duas" : 5,
"0" :  "(17,22, tokens)",
"1" :  "(17,20, tokens)",
"2" :  "(18,(19,20), tokenizer)",
"3" :  "(18,(19,22), tokenizer)",
"4" :  "(18,20, tokenizer)"},{ "Name" : "tokenize" ,
"Duas" : 5,
"0" :  "(27,32, tokens)",
"1" :  "(27,30, tokens)",
"2" :  "(28,(29,30), tokenizer)",
"3" :  "(28,(29,32), tokenizer)",
"4" :  "(28,30, tokenizer)"},{ "Name" : "findNonWhitespace" ,
"Duas" : 10,
"0" :  "(39,(39,40), s)",
"1" :  "(39,(39,43), s)",
"2" :  "(39,(40,41), s)",
"3" :  "(39,(40,39), s)",
"4" :  "(39,(39,40), start)",
"5" :  "(39,(39,43), start)",
"6" :  "(39,(40,41), start)",
"7" :  "(39,(40,39), start)",
"8" :  "(39,39, start)",
"9" :  "(39,41, start)"},{ "Name" : "findWhitespace" ,
"Duas" : 10,
"0" :  "(47,(47,48), s)",
"1" :  "(47,(47,51), s)",
"2" :  "(47,(48,49), s)",
"3" :  "(47,(48,47), s)",
"4" :  "(47,(47,48), start)",
"5" :  "(47,(47,51), start)",
"6" :  "(47,(48,49), start)",
"7" :  "(47,(48,47), start)",
"8" :  "(47,47, start)",
"9" :  "(47,49, start)"},{ "Name" : "normalizeQuotes" ,
"Duas" : 31,
"0" :  "(58,(59,61), str)",
"1" :  "(58,(59,67), str)",
"2" :  "(58,(61,61), str)",
"3" :  "(58,(61,64), str)",
"4" :  "(58,64, str)",
"5" :  "(58,(61,61), str)",
"6" :  "(58,(61,64), str)",
"7" :  "(58,(61,62), str)",
"8" :  "(58,(61,64), str)",
"9" :  "(58,67, builder)",
"10" :  "(58,64, builder)",
"11" :  "(59,(59,61), i)",
"12" :  "(59,(59,67), i)",
"13" :  "(59,(61,61), i)",
"14" :  "(59,(61,64), i)",
"15" :  "(59,64, i)",
"16" :  "(59,59, i)",
"17" :  "(59,(61,61), i)",
"18" :  "(59,(61,64), i)",
"19" :  "(59,(61,62), i)",
"20" :  "(59,(61,64), i)",
"21" :  "(59,(59,61), i)",
"22" :  "(59,(59,67), i)",
"23" :  "(59,(61,61), i)",
"24" :  "(59,(61,64), i)",
"25" :  "(59,64, i)",
"26" :  "(59,59, i)",
"27" :  "(59,(61,61), i)",
"28" :  "(59,(61,64), i)",
"29" :  "(59,(61,62), i)",
"30" :  "(59,(61,64), i)"},{ "Name" : "tokenizeWithQuotes" ,
"Duas" : 56,
"0" :  "(75,78, line)",
"1" :  "(75,(78,79), line)",
"2" :  "(75,(78,116), line)",
"3" :  "(75,(82,82), line)",
"4" :  "(75,(82,107), line)",
"5" :  "(75,107, line)",
"6" :  "(75,(107,108), line)",
"7" :  "(75,(107,110), line)",
"8" :  "(75,110, line)",
"9" :  "(75,108, line)",
"10" :  "(75,88, line)",
"11" :  "(75,(88,89), line)",
"12" :  "(75,(88,92), line)",
"13" :  "(75,(92,93), line)",
"14" :  "(75,(92,96), line)",
"15" :  "(75,102, line)",
"16" :  "(75,89, line)",
"17" :  "(75,(82,85), line)",
"18" :  "(75,(82,107), line)",
"19" :  "(75,116, tokens)",
"20" :  "(75,110, tokens)",
"21" :  "(75,102, tokens)",
"22" :  "(76,78, position)",
"23" :  "(78,(78,79), position)",
"24" :  "(78,(78,116), position)",
"25" :  "(78,(82,82), position)",
"26" :  "(78,(82,107), position)",
"27" :  "(78,107, position)",
"28" :  "(78,(107,108), position)",
"29" :  "(78,(107,110), position)",
"30" :  "(78,110, position)",
"31" :  "(78,(82,82), position)",
"32" :  "(78,(82,85), position)",
"33" :  "(78,85, position)",
"34" :  "(78,102, position)",
"35" :  "(78,(82,85), position)",
"36" :  "(78,(82,107), position)",
"37" :  "(85,88, current)",
"38" :  "(85,(88,89), current)",
"39" :  "(85,(88,92), current)",
"40" :  "(88,(92,93), end)",
"41" :  "(88,(92,96), end)",
"42" :  "(88,96, end)",
"43" :  "(88,93, end)",
"44" :  "(89,102, end)",
"45" :  "(89,113, end)",
"46" :  "(93,102, end)",
"47" :  "(93,113, end)",
"48" :  "(96,88, current)",
"49" :  "(96,(88,89), current)",
"50" :  "(96,(88,92), current)",
"51" :  "(107,110, end)",
"52" :  "(107,113, end)",
"53" :  "(108,110, end)",
"54" :  "(108,113, end)",
"55" :  "(113,78, position)"},{ "Name" : "quotify" ,
"Duas" : 21,
"0" :  "(124,(126,127), str)",
"1" :  "(124,(126,131), str)",
"2" :  "(124,(127,128), str)",
"3" :  "(124,(127,129), str)",
"4" :  "(124,129, str)",
"5" :  "(124,131, builder)",
"6" :  "(124,132, builder)",
"7" :  "(124,129, builder)",
"8" :  "(124,128, builder)",
"9" :  "(126,(126,127), i)",
"10" :  "(126,(126,131), i)",
"11" :  "(126,(127,128), i)",
"12" :  "(126,(127,129), i)",
"13" :  "(126,129, i)",
"14" :  "(126,126, i)",
"15" :  "(126,(126,127), i)",
"16" :  "(126,(126,131), i)",
"17" :  "(126,(127,128), i)",
"18" :  "(126,(127,129), i)",
"19" :  "(126,129, i)",
"20" :  "(126,126, i)"}]
}