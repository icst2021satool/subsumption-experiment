{
"Class" : "edu.stanford.nlp.pipeline.CoreNLPProtos$DependencyEnhancerRequest$Builder", 
"Methods" : [{ "Name" : "maybeForceBuilderInitialization" ,
"Duas" : 1,
"0" :  "(-1,-1, this)"},{ "Name" : "clear" ,
"Duas" : 12,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,-1, this)",
"7" :  "(-1,-1, this)",
"8" :  "(-1,(-1,-1), this.documentBuilder_)",
"9" :  "(-1,(-1,-1), this.documentBuilder_)",
"10" :  "(-1,-1, this.documentBuilder_)",
"11" :  "(-1,-1, this.bitField0_)"},{ "Name" : "build" ,
"Duas" : 4,
"0" :  "(-1,(-1,-1), result)",
"1" :  "(-1,(-1,-1), result)",
"2" :  "(-1,-1, result)",
"3" :  "(-1,-1, result)"},{ "Name" : "buildPartial" ,
"Duas" : 35,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,(-1,-1), this)",
"3" :  "(-1,(-1,-1), this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,-1, this)",
"7" :  "(-1,-1, this)",
"8" :  "(-1,(-1,-1), this)",
"9" :  "(-1,(-1,-1), this)",
"10" :  "(-1,-1, this)",
"11" :  "(-1,-1, this)",
"12" :  "(-1,(-1,-1), this.documentBuilder_)",
"13" :  "(-1,(-1,-1), this.documentBuilder_)",
"14" :  "(-1,-1, this.documentBuilder_)",
"15" :  "(-1,-1, this.document_)",
"16" :  "(-1,(-1,-1), this.refCase_)",
"17" :  "(-1,(-1,-1), this.refCase_)",
"18" :  "(-1,(-1,-1), this.refCase_)",
"19" :  "(-1,(-1,-1), this.refCase_)",
"20" :  "(-1,-1, this.refCase_)",
"21" :  "(-1,-1, this.ref_)",
"22" :  "(-1,-1, this.ref_)",
"23" :  "(-1,-1, result)",
"24" :  "(-1,-1, result)",
"25" :  "(-1,-1, result)",
"26" :  "(-1,-1, result)",
"27" :  "(-1,-1, result)",
"28" :  "(-1,-1, result)",
"29" :  "(-1,-1, result)",
"30" :  "(-1,(-1,-1), from_bitField0_)",
"31" :  "(-1,(-1,-1), from_bitField0_)",
"32" :  "(-1,-1, to_bitField0_)",
"33" :  "(-1,-1, to_bitField0_)",
"34" :  "(-1,-1, to_bitField0_)"},{ "Name" : "mergeFrom" ,
"Duas" : 7,
"0" :  "(-1,-1, this)",
"1" :  "(-1,-1, this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,(-1,-1), other)",
"4" :  "(-1,(-1,-1), other)",
"5" :  "(-1,-1, other)",
"6" :  "(-1,-1, other)"},{ "Name" : "mergeFrom" ,
"Duas" : 23,
"0" :  "(-1,-1, this)",
"1" :  "(-1,-1, this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,-1, this)",
"7" :  "(-1,-1, this)",
"8" :  "(-1,-1, this)",
"9" :  "(-1,(-1,-1), other)",
"10" :  "(-1,(-1,-1), other)",
"11" :  "(-1,(-1,-1), other)",
"12" :  "(-1,(-1,-1), other)",
"13" :  "(-1,(-1,-1), other)",
"14" :  "(-1,(-1,-1), other)",
"15" :  "(-1,(-1,-1), other)",
"16" :  "(-1,-1, other)",
"17" :  "(-1,-1, other)",
"18" :  "(-1,-1, other)",
"19" :  "(-1,-1, other)",
"20" :  "(-1,(-1,-1), $SwitchMap$edu$stanford$nlp$pipeline$CoreNLPProtos$DependencyEnhancerRequest$RefCase)",
"21" :  "(-1,(-1,-1), $SwitchMap$edu$stanford$nlp$pipeline$CoreNLPProtos$DependencyEnhancerRequest$RefCase)",
"22" :  "(-1,(-1,-1), $SwitchMap$edu$stanford$nlp$pipeline$CoreNLPProtos$DependencyEnhancerRequest$RefCase)"},{ "Name" : "isInitialized" ,
"Duas" : 4,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,(-1,-1), this)",
"3" :  "(-1,(-1,-1), this)"},{ "Name" : "mergeFrom" ,
"Duas" : 5,
"0" :  "(-1,-1, this)",
"1" :  "(-1,-1, this)",
"2" :  "(-1,(-1,-1), parsedMessage)",
"3" :  "(-1,(-1,-1), parsedMessage)",
"4" :  "(-1,-1, parsedMessage)"},{ "Name" : "hasDocument" ,
"Duas" : 4,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,(-1,-1), this.bitField0_)",
"3" :  "(-1,(-1,-1), this.bitField0_)"},{ "Name" : "getDocument" ,
"Duas" : 12,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,(-1,-1), this)",
"4" :  "(-1,(-1,-1), this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,(-1,-1), this.documentBuilder_)",
"7" :  "(-1,(-1,-1), this.documentBuilder_)",
"8" :  "(-1,-1, this.documentBuilder_)",
"9" :  "(-1,(-1,-1), this.document_)",
"10" :  "(-1,(-1,-1), this.document_)",
"11" :  "(-1,-1, this.document_)"},{ "Name" : "setDocument" ,
"Duas" : 15,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,-1, this)",
"7" :  "(-1,-1, value)",
"8" :  "(-1,(-1,-1), value)",
"9" :  "(-1,(-1,-1), value)",
"10" :  "(-1,-1, value)",
"11" :  "(-1,(-1,-1), this.documentBuilder_)",
"12" :  "(-1,(-1,-1), this.documentBuilder_)",
"13" :  "(-1,-1, this.documentBuilder_)",
"14" :  "(-1,-1, this.bitField0_)"},{ "Name" : "setDocument" ,
"Duas" : 13,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,-1, this)",
"7" :  "(-1,-1, builderForValue)",
"8" :  "(-1,-1, builderForValue)",
"9" :  "(-1,(-1,-1), this.documentBuilder_)",
"10" :  "(-1,(-1,-1), this.documentBuilder_)",
"11" :  "(-1,-1, this.documentBuilder_)",
"12" :  "(-1,-1, this.bitField0_)"},{ "Name" : "mergeDocument" ,
"Duas" : 28,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,(-1,-1), this)",
"6" :  "(-1,(-1,-1), this)",
"7" :  "(-1,-1, this)",
"8" :  "(-1,-1, this)",
"9" :  "(-1,(-1,-1), this)",
"10" :  "(-1,(-1,-1), this)",
"11" :  "(-1,(-1,-1), this)",
"12" :  "(-1,(-1,-1), this)",
"13" :  "(-1,-1, this)",
"14" :  "(-1,-1, value)",
"15" :  "(-1,-1, value)",
"16" :  "(-1,-1, value)",
"17" :  "(-1,(-1,-1), this.documentBuilder_)",
"18" :  "(-1,(-1,-1), this.documentBuilder_)",
"19" :  "(-1,-1, this.documentBuilder_)",
"20" :  "(-1,-1, this.bitField0_)",
"21" :  "(-1,(-1,-1), this.bitField0_)",
"22" :  "(-1,(-1,-1), this.bitField0_)",
"23" :  "(-1,(-1,-1), this.document_)",
"24" :  "(-1,(-1,-1), this.document_)",
"25" :  "(-1,(-1,-1), this.document_)",
"26" :  "(-1,(-1,-1), this.document_)",
"27" :  "(-1,-1, this.document_)"},{ "Name" : "clearDocument" ,
"Duas" : 11,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,-1, this)",
"7" :  "(-1,(-1,-1), this.documentBuilder_)",
"8" :  "(-1,(-1,-1), this.documentBuilder_)",
"9" :  "(-1,-1, this.documentBuilder_)",
"10" :  "(-1,-1, this.bitField0_)"},{ "Name" : "getDocumentOrBuilder" ,
"Duas" : 12,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,(-1,-1), this)",
"3" :  "(-1,(-1,-1), this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,(-1,-1), this.documentBuilder_)",
"7" :  "(-1,(-1,-1), this.documentBuilder_)",
"8" :  "(-1,-1, this.documentBuilder_)",
"9" :  "(-1,(-1,-1), this.document_)",
"10" :  "(-1,(-1,-1), this.document_)",
"11" :  "(-1,-1, this.document_)"},{ "Name" : "getDocumentFieldBuilder" ,
"Duas" : 10,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,(-1,-1), this.documentBuilder_)",
"7" :  "(-1,(-1,-1), this.documentBuilder_)",
"8" :  "(-1,-1, this.documentBuilder_)",
"9" :  "(-1,-1, this.documentBuilder_)"},{ "Name" : "hasLanguage" ,
"Duas" : 4,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,(-1,-1), this.refCase_)",
"3" :  "(-1,(-1,-1), this.refCase_)"},{ "Name" : "getLanguage" ,
"Duas" : 11,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,(-1,-1), this.refCase_)",
"4" :  "(-1,(-1,-1), this.refCase_)",
"5" :  "(-1,-1, this.ref_)",
"6" :  "(-1,-1, Unknown)",
"7" :  "(-1,-1, Unknown)",
"8" :  "(-1,(-1,-1), result)",
"9" :  "(-1,(-1,-1), result)",
"10" :  "(-1,-1, result)"},{ "Name" : "setLanguage" ,
"Duas" : 7,
"0" :  "(-1,-1, this)",
"1" :  "(-1,-1, this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,(-1,-1), value)",
"5" :  "(-1,(-1,-1), value)",
"6" :  "(-1,-1, value)"},{ "Name" : "clearLanguage" ,
"Duas" : 8,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,(-1,-1), this.refCase_)",
"7" :  "(-1,(-1,-1), this.refCase_)"},{ "Name" : "hasRelativePronouns" ,
"Duas" : 4,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,(-1,-1), this.refCase_)",
"3" :  "(-1,(-1,-1), this.refCase_)"},{ "Name" : "getRelativePronouns" ,
"Duas" : 23,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,(-1,-1), this)",
"3" :  "(-1,(-1,-1), this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,(-1,-1), this.refCase_)",
"7" :  "(-1,(-1,-1), this.refCase_)",
"8" :  "(-1,(-1,-1), this.refCase_)",
"9" :  "(-1,(-1,-1), this.refCase_)",
"10" :  "(-1,-1, this.ref_)",
"11" :  "(-1,(-1,-1), ref)",
"12" :  "(-1,(-1,-1), ref)",
"13" :  "(-1,-1, ref)",
"14" :  "(-1,-1, ref)",
"15" :  "(-1,(-1,-1), ref)",
"16" :  "(-1,(-1,-1), ref)",
"17" :  "(-1,-1, ref)",
"18" :  "(-1,-1, ref)",
"19" :  "(-1,(-1,-1), bs)",
"20" :  "(-1,(-1,-1), bs)",
"21" :  "(-1,-1, s)",
"22" :  "(-1,-1, s)"},{ "Name" : "getRelativePronounsBytes" ,
"Duas" : 21,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,(-1,-1), this)",
"3" :  "(-1,(-1,-1), this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,(-1,-1), this.refCase_)",
"7" :  "(-1,(-1,-1), this.refCase_)",
"8" :  "(-1,(-1,-1), this.refCase_)",
"9" :  "(-1,(-1,-1), this.refCase_)",
"10" :  "(-1,-1, this.ref_)",
"11" :  "(-1,(-1,-1), ref)",
"12" :  "(-1,(-1,-1), ref)",
"13" :  "(-1,-1, ref)",
"14" :  "(-1,-1, ref)",
"15" :  "(-1,(-1,-1), ref)",
"16" :  "(-1,(-1,-1), ref)",
"17" :  "(-1,-1, ref)",
"18" :  "(-1,-1, ref)",
"19" :  "(-1,-1, b)",
"20" :  "(-1,-1, b)"},{ "Name" : "setRelativePronouns" ,
"Duas" : 7,
"0" :  "(-1,-1, this)",
"1" :  "(-1,-1, this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,(-1,-1), value)",
"5" :  "(-1,(-1,-1), value)",
"6" :  "(-1,-1, value)"},{ "Name" : "clearRelativePronouns" ,
"Duas" : 8,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,(-1,-1), this.refCase_)",
"7" :  "(-1,(-1,-1), this.refCase_)"},{ "Name" : "setRelativePronounsBytes" ,
"Duas" : 7,
"0" :  "(-1,-1, this)",
"1" :  "(-1,-1, this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,(-1,-1), value)",
"5" :  "(-1,(-1,-1), value)",
"6" :  "(-1,-1, value)"}]
}