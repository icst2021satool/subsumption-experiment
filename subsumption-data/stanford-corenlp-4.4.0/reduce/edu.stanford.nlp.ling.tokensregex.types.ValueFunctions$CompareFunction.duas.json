{
"Class" : "edu.stanford.nlp.ling.tokensregex.types.ValueFunctions$CompareFunction", 
"Methods" : [{ "Name" : "compare" ,
"Duas" : 35,
"0" :  "(756,(757,764), this)",
"1" :  "(756,(757,758), this)",
"2" :  "(756,(757,759), this)",
"3" :  "(756,(757,760), this)",
"4" :  "(756,(757,761), this)",
"5" :  "(756,(757,762), this)",
"6" :  "(756,(757,763), this)",
"7" :  "(756,764, this)",
"8" :  "(756,(757,764), $SwitchMap$edu$stanford$nlp$ling$tokensregex$types$ValueFunctions$CompareType)",
"9" :  "(756,(757,758), $SwitchMap$edu$stanford$nlp$ling$tokensregex$types$ValueFunctions$CompareType)",
"10" :  "(756,(757,759), $SwitchMap$edu$stanford$nlp$ling$tokensregex$types$ValueFunctions$CompareType)",
"11" :  "(756,(757,760), $SwitchMap$edu$stanford$nlp$ling$tokensregex$types$ValueFunctions$CompareType)",
"12" :  "(756,(757,761), $SwitchMap$edu$stanford$nlp$ling$tokensregex$types$ValueFunctions$CompareType)",
"13" :  "(756,(757,762), $SwitchMap$edu$stanford$nlp$ling$tokensregex$types$ValueFunctions$CompareType)",
"14" :  "(756,(757,763), $SwitchMap$edu$stanford$nlp$ling$tokensregex$types$ValueFunctions$CompareType)",
"15" :  "(756,(757,764), this.compType)",
"16" :  "(756,(757,758), this.compType)",
"17" :  "(756,(757,759), this.compType)",
"18" :  "(756,(757,760), this.compType)",
"19" :  "(756,(757,761), this.compType)",
"20" :  "(756,(757,762), this.compType)",
"21" :  "(756,(757,763), this.compType)",
"22" :  "(756,764, this.compType)",
"23" :  "(756,(763,763), res)",
"24" :  "(756,(763,763), res)",
"25" :  "(756,(762,762), res)",
"26" :  "(756,(762,762), res)",
"27" :  "(756,(761,761), res)",
"28" :  "(756,(761,761), res)",
"29" :  "(756,(760,760), res)",
"30" :  "(756,(760,760), res)",
"31" :  "(756,(759,759), res)",
"32" :  "(756,(759,759), res)",
"33" :  "(756,(758,758), res)",
"34" :  "(756,(758,758), res)"},{ "Name" : "checkArgs" ,
"Duas" : 26,
"0" :  "(770,(773,774), this)",
"1" :  "(770,(773,781), this)",
"2" :  "(770,(774,775), this)",
"3" :  "(770,(774,777), this)",
"4" :  "(770,(777,778), this)",
"5" :  "(770,(777,781), this)",
"6" :  "(770,(770,771), in)",
"7" :  "(770,(770,773), in)",
"8" :  "(770,(774,774), in)",
"9" :  "(770,(774,775), in)",
"10" :  "(770,(774,774), in)",
"11" :  "(770,(774,775), in)",
"12" :  "(770,(774,775), in)",
"13" :  "(770,(774,777), in)",
"14" :  "(770,(777,777), in)",
"15" :  "(770,(777,778), in)",
"16" :  "(770,(777,777), in)",
"17" :  "(770,(777,778), in)",
"18" :  "(770,(777,778), in)",
"19" :  "(770,(777,781), in)",
"20" :  "(770,(773,774), this.clazz)",
"21" :  "(770,(773,781), this.clazz)",
"22" :  "(770,(774,775), this.clazz)",
"23" :  "(770,(774,777), this.clazz)",
"24" :  "(770,(777,778), this.clazz)",
"25" :  "(770,(777,781), this.clazz)"},{ "Name" : "apply" ,
"Duas" : 17,
"0" :  "(786,792, this)",
"1" :  "(786,(786,787), in)",
"2" :  "(786,(786,789), in)",
"3" :  "(786,(789,789), in)",
"4" :  "(786,(789,790), in)",
"5" :  "(786,(789,789), in)",
"6" :  "(786,(789,790), in)",
"7" :  "(786,(789,789), in)",
"8" :  "(786,(789,790), in)",
"9" :  "(786,(789,790), in)",
"10" :  "(786,(789,792), in)",
"11" :  "(786,792, in)",
"12" :  "(786,787, in)",
"13" :  "(786,793, FALSE)",
"14" :  "(786,793, TRUE)",
"15" :  "(792,(793,793), res)",
"16" :  "(792,(793,793), res)"}]
}