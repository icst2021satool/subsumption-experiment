{
"Class" : "edu.stanford.nlp.stats.IntCounter", 
"Methods" : [{ "Name" : "totalIntCount" ,
"Duas" : 10,
"0" :  "(118,121, this)",
"1" :  "(118,(120,121), filter)",
"2" :  "(118,(120,123), filter)",
"3" :  "(118,124, total)",
"4" :  "(118,121, total)",
"5" :  "(119,(120,121), key)",
"6" :  "(119,(120,123), key)",
"7" :  "(119,121, key)",
"8" :  "(121,124, total)",
"9" :  "(121,121, total)"},{ "Name" : "getIntCount" ,
"Duas" : 5,
"0" :  "(163,165, this)",
"1" :  "(163,165, this.defaultValue)",
"2" :  "(163,(164,165), count)",
"3" :  "(163,(164,167), count)",
"4" :  "(163,167, count)"},{ "Name" : "setCount" ,
"Duas" : 24,
"0" :  "(186,(186,187), this)",
"1" :  "(186,(186,189), this)",
"2" :  "(186,189, this)",
"3" :  "(186,190, this)",
"4" :  "(186,193, this)",
"5" :  "(186,(194,195), this)",
"6" :  "(186,(194,198), this)",
"7" :  "(186,195, this)",
"8" :  "(186,187, this)",
"9" :  "(186,190, key)",
"10" :  "(186,189, count)",
"11" :  "(186,193, count)",
"12" :  "(186,(186,187), this.tempMInteger)",
"13" :  "(186,(186,189), this.tempMInteger)",
"14" :  "(186,189, this.tempMInteger)",
"15" :  "(186,190, this.tempMInteger)",
"16" :  "(186,190, this.map)",
"17" :  "(186,193, this.totalCount)",
"18" :  "(187,189, this.tempMInteger)",
"19" :  "(187,190, this.tempMInteger)",
"20" :  "(190,(194,195), this.tempMInteger)",
"21" :  "(190,(194,198), this.tempMInteger)",
"22" :  "(190,195, this.tempMInteger)",
"23" :  "(193,195, this.totalCount)"},{ "Name" : "setCounts" ,
"Duas" : 2,
"0" :  "(215,216, this)",
"1" :  "(215,216, count)"},{ "Name" : "incrementCount" ,
"Duas" : 26,
"0" :  "(233,(233,234), this)",
"1" :  "(233,(233,237), this)",
"2" :  "(233,237, this)",
"3" :  "(233,238, this)",
"4" :  "(233,242, this)",
"5" :  "(233,243, this)",
"6" :  "(233,234, this)",
"7" :  "(233,237, key)",
"8" :  "(233,238, count)",
"9" :  "(233,242, count)",
"10" :  "(233,245, count)",
"11" :  "(233,240, count)",
"12" :  "(233,(233,234), this.tempMInteger)",
"13" :  "(233,(233,237), this.tempMInteger)",
"14" :  "(233,237, this.tempMInteger)",
"15" :  "(233,242, this.tempMInteger)",
"16" :  "(233,237, this.map)",
"17" :  "(233,238, this.totalCount)",
"18" :  "(234,237, this.tempMInteger)",
"19" :  "(234,242, this.tempMInteger)",
"20" :  "(237,(239,240), oldMInteger)",
"21" :  "(237,(239,242), oldMInteger)",
"22" :  "(237,243, oldMInteger)",
"23" :  "(237,240, oldMInteger)",
"24" :  "(240,242, count)",
"25" :  "(240,245, count)"},{ "Name" : "incrementCounts" ,
"Duas" : 2,
"0" :  "(277,278, this)",
"1" :  "(277,278, count)"},{ "Name" : "addAll" ,
"Duas" : 2,
"0" :  "(366,368, this)",
"1" :  "(366,367, counter)"},{ "Name" : "subtractAll" ,
"Duas" : 2,
"0" :  "(378,379, this)",
"1" :  "(378,379, counter)"},{ "Name" : "remove" ,
"Duas" : 3,
"0" :  "(395,(396,397), val)",
"1" :  "(395,(396,399), val)",
"2" :  "(395,399, val)"},{ "Name" : "removeAll" ,
"Duas" : 1,
"0" :  "(407,408, this)"},{ "Name" : "isEmpty" ,
"Duas" : 2,
"0" :  "(425,(425,425), this)",
"1" :  "(425,(425,425), this)"},{ "Name" : "equals" ,
"Duas" : 9,
"0" :  "(485,(485,486), this)",
"1" :  "(485,(485,488), this)",
"2" :  "(485,494, this)",
"3" :  "(485,(485,486), o)",
"4" :  "(485,(485,488), o)",
"5" :  "(485,(488,489), o)",
"6" :  "(485,(488,492), o)",
"7" :  "(485,492, o)",
"8" :  "(485,494, this.map)"},{ "Name" : "toString" ,
"Duas" : 16,
"0" :  "(510,519, this)",
"1" :  "(510,521, nf)",
"2" :  "(510,526, postAppend)",
"3" :  "(510,520, keyValSeparator)",
"4" :  "(510,523, itemSeparator)",
"5" :  "(510,519, this.map)",
"6" :  "(510,526, sb)",
"7" :  "(510,527, sb)",
"8" :  "(510,520, sb)",
"9" :  "(510,521, sb)",
"10" :  "(510,523, sb)",
"11" :  "(517,(517,518), iter)",
"12" :  "(517,(517,526), iter)",
"13" :  "(517,518, iter)",
"14" :  "(517,(522,523), iter)",
"15" :  "(517,(522,525), iter)"},{ "Name" : "toString" ,
"Duas" : 13,
"0" :  "(533,542, this)",
"1" :  "(533,544, nf)",
"2" :  "(533,542, this.map)",
"3" :  "(533,549, sb)",
"4" :  "(533,550, sb)",
"5" :  "(533,543, sb)",
"6" :  "(533,544, sb)",
"7" :  "(533,546, sb)",
"8" :  "(540,(540,541), iter)",
"9" :  "(540,(540,549), iter)",
"10" :  "(540,541, iter)",
"11" :  "(540,(545,546), iter)",
"12" :  "(540,(545,548), iter)"},{ "Name" : "max" ,
"Duas" : 5,
"0" :  "(579,581, this)",
"1" :  "(579,583, max)",
"2" :  "(579,581, max)",
"3" :  "(581,583, max)",
"4" :  "(581,581, max)"},{ "Name" : "min" ,
"Duas" : 5,
"0" :  "(594,596, this)",
"1" :  "(594,598, min)",
"2" :  "(594,596, min)",
"3" :  "(596,598, min)",
"4" :  "(596,596, min)"},{ "Name" : "argmax" ,
"Duas" : 29,
"0" :  "(610,613, this)",
"1" :  "(610,(614,615), tieBreaker)",
"2" :  "(610,(614,618), tieBreaker)",
"3" :  "(610,(614,614), max)",
"4" :  "(610,(614,615), max)",
"5" :  "(610,(614,614), max)",
"6" :  "(610,(614,618), max)",
"7" :  "(611,619, argmax)",
"8" :  "(611,(614,614), argmax)",
"9" :  "(611,(614,615), argmax)",
"10" :  "(611,(614,615), argmax)",
"11" :  "(611,(614,618), argmax)",
"12" :  "(612,616, key)",
"13" :  "(612,(614,615), key)",
"14" :  "(612,(614,618), key)",
"15" :  "(613,615, count)",
"16" :  "(613,(614,614), count)",
"17" :  "(613,(614,615), count)",
"18" :  "(613,(614,614), count)",
"19" :  "(613,(614,618), count)",
"20" :  "(615,(614,614), max)",
"21" :  "(615,(614,615), max)",
"22" :  "(615,(614,614), max)",
"23" :  "(615,(614,618), max)",
"24" :  "(616,619, argmax)",
"25" :  "(616,(614,614), argmax)",
"26" :  "(616,(614,615), argmax)",
"27" :  "(616,(614,615), argmax)",
"28" :  "(616,(614,618), argmax)"},{ "Name" : "argmin" ,
"Duas" : 29,
"0" :  "(643,646, this)",
"1" :  "(643,(647,648), tieBreaker)",
"2" :  "(643,(647,651), tieBreaker)",
"3" :  "(643,(647,647), min)",
"4" :  "(643,(647,648), min)",
"5" :  "(643,(647,647), min)",
"6" :  "(643,(647,651), min)",
"7" :  "(644,652, argmin)",
"8" :  "(644,(647,647), argmin)",
"9" :  "(644,(647,648), argmin)",
"10" :  "(644,(647,648), argmin)",
"11" :  "(644,(647,651), argmin)",
"12" :  "(645,649, key)",
"13" :  "(645,(647,648), key)",
"14" :  "(645,(647,651), key)",
"15" :  "(646,648, count)",
"16" :  "(646,(647,647), count)",
"17" :  "(646,(647,648), count)",
"18" :  "(646,(647,647), count)",
"19" :  "(646,(647,651), count)",
"20" :  "(648,(647,647), min)",
"21" :  "(648,(647,648), min)",
"22" :  "(648,(647,647), min)",
"23" :  "(648,(647,651), min)",
"24" :  "(649,652, argmin)",
"25" :  "(649,(647,647), argmin)",
"26" :  "(649,(647,648), argmin)",
"27" :  "(649,(647,648), argmin)",
"28" :  "(649,(647,651), argmin)"},{ "Name" : "keysAbove" ,
"Duas" : 9,
"0" :  "(671,(673,674), this)",
"1" :  "(671,(673,676), this)",
"2" :  "(671,(673,674), countThreshold)",
"3" :  "(671,(673,676), countThreshold)",
"4" :  "(671,677, keys)",
"5" :  "(671,674, keys)",
"6" :  "(672,(673,674), key)",
"7" :  "(672,(673,676), key)",
"8" :  "(672,674, key)"},{ "Name" : "keysBelow" ,
"Duas" : 9,
"0" :  "(685,(687,688), this)",
"1" :  "(685,(687,690), this)",
"2" :  "(685,(687,688), countThreshold)",
"3" :  "(685,(687,690), countThreshold)",
"4" :  "(685,691, keys)",
"5" :  "(685,688, keys)",
"6" :  "(686,(687,688), key)",
"7" :  "(686,(687,690), key)",
"8" :  "(686,688, key)"},{ "Name" : "keysAt" ,
"Duas" : 9,
"0" :  "(699,(701,702), this)",
"1" :  "(699,(701,704), this)",
"2" :  "(699,(701,702), count)",
"3" :  "(699,(701,704), count)",
"4" :  "(699,705, keys)",
"5" :  "(699,702, keys)",
"6" :  "(700,(701,702), key)",
"7" :  "(700,(701,704), key)",
"8" :  "(700,702, key)"},{ "Name" : "lambda$removeZeroCounts$0" ,
"Duas" : 4,
"0" :  "(572,(572,572), this)",
"1" :  "(572,(572,572), this)",
"2" :  "(572,(572,572), e)",
"3" :  "(572,(572,572), e)"}]
}