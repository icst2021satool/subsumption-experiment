{
"Class" : "edu.stanford.nlp.patterns.CandidatePhrase", 
"Methods" : [{ "Name" : "createOrGet" ,
"Duas" : 9,
"0" :  "(31,(32,33), candidatePhraseMap)",
"1" :  "(31,(32,35), candidatePhraseMap)",
"2" :  "(31,36, candidatePhraseMap)",
"3" :  "(31,33, candidatePhraseMap)",
"4" :  "(31,(32,33), phrase)",
"5" :  "(31,(32,35), phrase)",
"6" :  "(31,35, phrase)",
"7" :  "(31,36, phrase)",
"8" :  "(31,33, phrase)"},{ "Name" : "createOrGet" ,
"Duas" : 11,
"0" :  "(42,48, phraseLemma)",
"1" :  "(42,45, phraseLemma)",
"2" :  "(42,(43,44), candidatePhraseMap)",
"3" :  "(42,(43,48), candidatePhraseMap)",
"4" :  "(42,49, candidatePhraseMap)",
"5" :  "(42,44, candidatePhraseMap)",
"6" :  "(42,(43,44), phrase)",
"7" :  "(42,(43,48), phrase)",
"8" :  "(42,48, phrase)",
"9" :  "(42,49, phrase)",
"10" :  "(42,44, phrase)"},{ "Name" : "createOrGet" ,
"Duas" : 26,
"0" :  "(55,71, phraseLemma)",
"1" :  "(55,58, phraseLemma)",
"2" :  "(55,71, features)",
"3" :  "(55,(61,61), features)",
"4" :  "(55,(61,68), features)",
"5" :  "(55,(61,62), features)",
"6" :  "(55,(61,68), features)",
"7" :  "(55,65, features)",
"8" :  "(55,(56,57), candidatePhraseMap)",
"9" :  "(55,(56,71), candidatePhraseMap)",
"10" :  "(55,72, candidatePhraseMap)",
"11" :  "(55,57, candidatePhraseMap)",
"12" :  "(55,(56,57), phrase)",
"13" :  "(55,(56,71), phrase)",
"14" :  "(55,71, phrase)",
"15" :  "(55,72, phrase)",
"16" :  "(55,57, phrase)",
"17" :  "(57,68, p)",
"18" :  "(57,(62,63), p)",
"19" :  "(57,(62,65), p)",
"20" :  "(57,65, p)",
"21" :  "(57,63, p)",
"22" :  "(57,(62,63), p.features)",
"23" :  "(57,(62,65), p.features)",
"24" :  "(57,65, p.features)",
"25" :  "(63,65, p.features)"},{ "Name" : "<init>" ,
"Duas" : 11,
"0" :  "(83,88, this)",
"1" :  "(83,89, this)",
"2" :  "(83,90, this)",
"3" :  "(83,91, this)",
"4" :  "(83,(85,86), phrase)",
"5" :  "(83,(85,88), phrase)",
"6" :  "(83,88, phrase)",
"7" :  "(83,91, phrase)",
"8" :  "(83,89, lemma)",
"9" :  "(83,90, features)",
"10" :  "(83,86, out)"},{ "Name" : "equals" ,
"Duas" : 8,
"0" :  "(117,(120,120), this)",
"1" :  "(117,(120,120), this)",
"2" :  "(117,(117,118), o)",
"3" :  "(117,(117,120), o)",
"4" :  "(117,(120,120), o)",
"5" :  "(117,(120,120), o)",
"6" :  "(117,(120,120), this.hashCode)",
"7" :  "(117,(120,120), this.hashCode)"},{ "Name" : "compareTo" ,
"Duas" : 4,
"0" :  "(125,128, this)",
"1" :  "(125,(125,126), o)",
"2" :  "(125,(125,128), o)",
"3" :  "(125,128, o)"},{ "Name" : "convertStringPhrases" ,
"Duas" : 2,
"0" :  "(138,142, phs)",
"1" :  "(138,140, phs)"},{ "Name" : "convertToString" ,
"Duas" : 2,
"0" :  "(146,150, phs)",
"1" :  "(146,148, phs)"},{ "Name" : "addFeature" ,
"Duas" : 10,
"0" :  "(158,(158,159), this)",
"1" :  "(158,(158,161), this)",
"2" :  "(158,161, this)",
"3" :  "(158,159, this)",
"4" :  "(158,161, s)",
"5" :  "(158,161, v)",
"6" :  "(158,(158,159), this.features)",
"7" :  "(158,(158,161), this.features)",
"8" :  "(158,161, this.features)",
"9" :  "(159,161, this.features)"},{ "Name" : "addFeatures" ,
"Duas" : 9,
"0" :  "(165,(165,166), this)",
"1" :  "(165,(165,168), this)",
"2" :  "(165,168, this)",
"3" :  "(165,166, this)",
"4" :  "(165,168, feat)",
"5" :  "(165,(165,166), this.features)",
"6" :  "(165,(165,168), this.features)",
"7" :  "(165,168, this.features)",
"8" :  "(166,168, this.features)"}]
}