{
"Class" : "edu.stanford.nlp.pipeline.CoreNLPProtos$FlattenedParseTree$Node", 
"Methods" : [{ "Name" : "<init>" ,
"Duas" : 42,
"0" :  "(-1,-1, this)",
"1" :  "(-1,-1, this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,-1, this)",
"7" :  "(-1,-1, this)",
"8" :  "(-1,-1, this)",
"9" :  "(-1,-1, this)",
"10" :  "(-1,(-1,-1), this)",
"11" :  "(-1,(-1,-1), this)",
"12" :  "(-1,-1, input)",
"13" :  "(-1,-1, input)",
"14" :  "(-1,-1, input)",
"15" :  "(-1,-1, input)",
"16" :  "(-1,-1, input)",
"17" :  "(-1,(-1,-1), input)",
"18" :  "(-1,(-1,-1), input)",
"19" :  "(-1,(-1,-1), extensionRegistry)",
"20" :  "(-1,(-1,-1), extensionRegistry)",
"21" :  "(-1,(-1,-1), extensionRegistry)",
"22" :  "(-1,(-1,-1), extensionRegistry)",
"23" :  "(-1,-1, this.bitField0_)",
"24" :  "(-1,-1, unknownFields)",
"25" :  "(-1,(-1,-1), unknownFields)",
"26" :  "(-1,(-1,-1), unknownFields)",
"27" :  "(-1,(-1,-1), done)",
"28" :  "(-1,(-1,-1), done)",
"29" :  "(-1,(-1,-1), tag)",
"30" :  "(-1,(-1,-1), tag)",
"31" :  "(-1,(-1,-1), tag)",
"32" :  "(-1,(-1,-1), tag)",
"33" :  "(-1,(-1,-1), tag)",
"34" :  "(-1,(-1,-1), tag)",
"35" :  "(-1,(-1,-1), tag)",
"36" :  "(-1,(-1,-1), tag)",
"37" :  "(-1,(-1,-1), done)",
"38" :  "(-1,(-1,-1), done)",
"39" :  "(-1,-1, this.bitField0_)",
"40" :  "(-1,(-1,-1), done)",
"41" :  "(-1,(-1,-1), done)"},{ "Name" : "hasOpenNode" ,
"Duas" : 4,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,(-1,-1), this.contentsCase_)",
"3" :  "(-1,(-1,-1), this.contentsCase_)"},{ "Name" : "getOpenNode" ,
"Duas" : 6,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,(-1,-1), this.contentsCase_)",
"4" :  "(-1,(-1,-1), this.contentsCase_)",
"5" :  "(-1,-1, this.contents_)"},{ "Name" : "hasCloseNode" ,
"Duas" : 4,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,(-1,-1), this.contentsCase_)",
"3" :  "(-1,(-1,-1), this.contentsCase_)"},{ "Name" : "getCloseNode" ,
"Duas" : 6,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,(-1,-1), this.contentsCase_)",
"4" :  "(-1,(-1,-1), this.contentsCase_)",
"5" :  "(-1,-1, this.contents_)"},{ "Name" : "hasValue" ,
"Duas" : 4,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,(-1,-1), this.contentsCase_)",
"3" :  "(-1,(-1,-1), this.contentsCase_)"},{ "Name" : "getValue" ,
"Duas" : 23,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,(-1,-1), this)",
"3" :  "(-1,(-1,-1), this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,(-1,-1), this.contentsCase_)",
"7" :  "(-1,(-1,-1), this.contentsCase_)",
"8" :  "(-1,(-1,-1), this.contentsCase_)",
"9" :  "(-1,(-1,-1), this.contentsCase_)",
"10" :  "(-1,-1, this.contents_)",
"11" :  "(-1,(-1,-1), ref)",
"12" :  "(-1,(-1,-1), ref)",
"13" :  "(-1,-1, ref)",
"14" :  "(-1,-1, ref)",
"15" :  "(-1,(-1,-1), ref)",
"16" :  "(-1,(-1,-1), ref)",
"17" :  "(-1,-1, ref)",
"18" :  "(-1,-1, ref)",
"19" :  "(-1,(-1,-1), bs)",
"20" :  "(-1,(-1,-1), bs)",
"21" :  "(-1,-1, s)",
"22" :  "(-1,-1, s)"},{ "Name" : "getValueBytes" ,
"Duas" : 21,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,(-1,-1), this)",
"3" :  "(-1,(-1,-1), this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,(-1,-1), this.contentsCase_)",
"7" :  "(-1,(-1,-1), this.contentsCase_)",
"8" :  "(-1,(-1,-1), this.contentsCase_)",
"9" :  "(-1,(-1,-1), this.contentsCase_)",
"10" :  "(-1,-1, this.contents_)",
"11" :  "(-1,(-1,-1), ref)",
"12" :  "(-1,(-1,-1), ref)",
"13" :  "(-1,-1, ref)",
"14" :  "(-1,-1, ref)",
"15" :  "(-1,(-1,-1), ref)",
"16" :  "(-1,(-1,-1), ref)",
"17" :  "(-1,-1, ref)",
"18" :  "(-1,-1, ref)",
"19" :  "(-1,-1, b)",
"20" :  "(-1,-1, b)"},{ "Name" : "hasScore" ,
"Duas" : 4,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,(-1,-1), this.bitField0_)",
"3" :  "(-1,(-1,-1), this.bitField0_)"},{ "Name" : "isInitialized" ,
"Duas" : 5,
"0" :  "(-1,-1, this)",
"1" :  "(-1,(-1,-1), isInitialized)",
"2" :  "(-1,(-1,-1), isInitialized)",
"3" :  "(-1,(-1,-1), isInitialized)",
"4" :  "(-1,(-1,-1), isInitialized)"},{ "Name" : "writeTo" ,
"Duas" : 31,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,(-1,-1), this)",
"3" :  "(-1,(-1,-1), this)",
"4" :  "(-1,(-1,-1), this)",
"5" :  "(-1,(-1,-1), this)",
"6" :  "(-1,(-1,-1), this)",
"7" :  "(-1,(-1,-1), this)",
"8" :  "(-1,-1, this)",
"9" :  "(-1,-1, this)",
"10" :  "(-1,-1, this)",
"11" :  "(-1,-1, this)",
"12" :  "(-1,-1, this)",
"13" :  "(-1,-1, output)",
"14" :  "(-1,-1, output)",
"15" :  "(-1,-1, output)",
"16" :  "(-1,-1, output)",
"17" :  "(-1,-1, output)",
"18" :  "(-1,(-1,-1), this.contentsCase_)",
"19" :  "(-1,(-1,-1), this.contentsCase_)",
"20" :  "(-1,(-1,-1), this.contentsCase_)",
"21" :  "(-1,(-1,-1), this.contentsCase_)",
"22" :  "(-1,(-1,-1), this.contentsCase_)",
"23" :  "(-1,(-1,-1), this.contentsCase_)",
"24" :  "(-1,-1, this.contents_)",
"25" :  "(-1,-1, this.contents_)",
"26" :  "(-1,-1, this.contents_)",
"27" :  "(-1,(-1,-1), this.bitField0_)",
"28" :  "(-1,(-1,-1), this.bitField0_)",
"29" :  "(-1,-1, this.score_)",
"30" :  "(-1,-1, this.unknownFields)"},{ "Name" : "getSerializedSize" ,
"Duas" : 45,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,(-1,-1), this)",
"3" :  "(-1,(-1,-1), this)",
"4" :  "(-1,(-1,-1), this)",
"5" :  "(-1,(-1,-1), this)",
"6" :  "(-1,(-1,-1), this)",
"7" :  "(-1,(-1,-1), this)",
"8" :  "(-1,-1, this)",
"9" :  "(-1,-1, this)",
"10" :  "(-1,-1, this)",
"11" :  "(-1,-1, this)",
"12" :  "(-1,-1, this)",
"13" :  "(-1,-1, this)",
"14" :  "(-1,(-1,-1), this.contentsCase_)",
"15" :  "(-1,(-1,-1), this.contentsCase_)",
"16" :  "(-1,(-1,-1), this.contentsCase_)",
"17" :  "(-1,(-1,-1), this.contentsCase_)",
"18" :  "(-1,(-1,-1), this.contentsCase_)",
"19" :  "(-1,(-1,-1), this.contentsCase_)",
"20" :  "(-1,-1, this.contents_)",
"21" :  "(-1,-1, this.contents_)",
"22" :  "(-1,-1, this.contents_)",
"23" :  "(-1,(-1,-1), this.bitField0_)",
"24" :  "(-1,(-1,-1), this.bitField0_)",
"25" :  "(-1,-1, this.score_)",
"26" :  "(-1,-1, this.unknownFields)",
"27" :  "(-1,(-1,-1), size)",
"28" :  "(-1,(-1,-1), size)",
"29" :  "(-1,-1, size)",
"30" :  "(-1,-1, size)",
"31" :  "(-1,-1, size)",
"32" :  "(-1,-1, size)",
"33" :  "(-1,-1, size)",
"34" :  "(-1,-1, size)",
"35" :  "(-1,-1, size)",
"36" :  "(-1,-1, size)",
"37" :  "(-1,-1, size)",
"38" :  "(-1,-1, size)",
"39" :  "(-1,-1, size)",
"40" :  "(-1,-1, size)",
"41" :  "(-1,-1, size)",
"42" :  "(-1,-1, size)",
"43" :  "(-1,-1, size)",
"44" :  "(-1,-1, size)"},{ "Name" : "equals" ,
"Duas" : 51,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,(-1,-1), this)",
"3" :  "(-1,(-1,-1), this)",
"4" :  "(-1,(-1,-1), this)",
"5" :  "(-1,(-1,-1), this)",
"6" :  "(-1,(-1,-1), this)",
"7" :  "(-1,(-1,-1), this)",
"8" :  "(-1,(-1,-1), this)",
"9" :  "(-1,(-1,-1), this)",
"10" :  "(-1,(-1,-1), this)",
"11" :  "(-1,(-1,-1), this)",
"12" :  "(-1,(-1,-1), this)",
"13" :  "(-1,(-1,-1), this)",
"14" :  "(-1,(-1,-1), this)",
"15" :  "(-1,(-1,-1), this)",
"16" :  "(-1,(-1,-1), this)",
"17" :  "(-1,(-1,-1), this)",
"18" :  "(-1,(-1,-1), this)",
"19" :  "(-1,(-1,-1), this)",
"20" :  "(-1,(-1,-1), this)",
"21" :  "(-1,(-1,-1), this)",
"22" :  "(-1,-1, this)",
"23" :  "(-1,(-1,-1), obj)",
"24" :  "(-1,(-1,-1), obj)",
"25" :  "(-1,(-1,-1), obj)",
"26" :  "(-1,(-1,-1), obj)",
"27" :  "(-1,-1, obj)",
"28" :  "(-1,-1, obj)",
"29" :  "(-1,(-1,-1), this.contentsCase_)",
"30" :  "(-1,(-1,-1), this.contentsCase_)",
"31" :  "(-1,(-1,-1), this.contentsCase_)",
"32" :  "(-1,(-1,-1), this.contentsCase_)",
"33" :  "(-1,(-1,-1), this.unknownFields)",
"34" :  "(-1,(-1,-1), this.unknownFields)",
"35" :  "(-1,(-1,-1), other)",
"36" :  "(-1,(-1,-1), other)",
"37" :  "(-1,(-1,-1), other)",
"38" :  "(-1,(-1,-1), other)",
"39" :  "(-1,(-1,-1), other)",
"40" :  "(-1,(-1,-1), other)",
"41" :  "(-1,(-1,-1), other)",
"42" :  "(-1,(-1,-1), other)",
"43" :  "(-1,(-1,-1), other)",
"44" :  "(-1,(-1,-1), other)",
"45" :  "(-1,(-1,-1), other)",
"46" :  "(-1,(-1,-1), other)",
"47" :  "(-1,(-1,-1), other)",
"48" :  "(-1,(-1,-1), other)",
"49" :  "(-1,(-1,-1), other.unknownFields)",
"50" :  "(-1,(-1,-1), other.unknownFields)"},{ "Name" : "hashCode" ,
"Duas" : 35,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,(-1,-1), this)",
"3" :  "(-1,(-1,-1), this)",
"4" :  "(-1,(-1,-1), this)",
"5" :  "(-1,(-1,-1), this)",
"6" :  "(-1,(-1,-1), this)",
"7" :  "(-1,(-1,-1), this)",
"8" :  "(-1,-1, this)",
"9" :  "(-1,-1, this)",
"10" :  "(-1,-1, this)",
"11" :  "(-1,-1, this)",
"12" :  "(-1,-1, this)",
"13" :  "(-1,-1, this)",
"14" :  "(-1,-1, this)",
"15" :  "(-1,(-1,-1), this.memoizedHashCode)",
"16" :  "(-1,(-1,-1), this.memoizedHashCode)",
"17" :  "(-1,-1, this.memoizedHashCode)",
"18" :  "(-1,(-1,-1), this.contentsCase_)",
"19" :  "(-1,(-1,-1), this.contentsCase_)",
"20" :  "(-1,(-1,-1), this.contentsCase_)",
"21" :  "(-1,(-1,-1), this.contentsCase_)",
"22" :  "(-1,-1, this.unknownFields)",
"23" :  "(-1,-1, hash)",
"24" :  "(-1,-1, hash)",
"25" :  "(-1,-1, hash)",
"26" :  "(-1,-1, hash)",
"27" :  "(-1,-1, hash)",
"28" :  "(-1,-1, hash)",
"29" :  "(-1,-1, hash)",
"30" :  "(-1,-1, hash)",
"31" :  "(-1,-1, hash)",
"32" :  "(-1,-1, hash)",
"33" :  "(-1,-1, hash)",
"34" :  "(-1,-1, hash)"},{ "Name" : "toBuilder" ,
"Duas" : 5,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,(-1,-1), DEFAULT_INSTANCE)",
"4" :  "(-1,(-1,-1), DEFAULT_INSTANCE)"}]
}