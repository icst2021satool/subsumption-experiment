{
"Class" : "edu.stanford.nlp.parser.dvparser.ParseAndPrintMatrices", 
"Methods" : [{ "Name" : "outputMatrix" ,
"Duas" : 13,
"0" :  "(40,43, bout)",
"1" :  "(40,41, bout)",
"2" :  "(40,(40,41), matrix)",
"3" :  "(40,(40,43), matrix)",
"4" :  "(40,41, matrix)",
"5" :  "(40,(40,41), i)",
"6" :  "(40,(40,43), i)",
"7" :  "(40,41, i)",
"8" :  "(40,40, i)",
"9" :  "(40,(40,41), i)",
"10" :  "(40,(40,43), i)",
"11" :  "(40,41, i)",
"12" :  "(40,40, i)"},{ "Name" : "outputTreeMatrices" ,
"Duas" : 19,
"0" :  "(47,53, bout)",
"1" :  "(47,51, bout)",
"2" :  "(47,(47,47), tree)",
"3" :  "(47,(47,48), tree)",
"4" :  "(47,(47,48), tree)",
"5" :  "(47,(47,50), tree)",
"6" :  "(47,50, tree)",
"7" :  "(47,53, tree)",
"8" :  "(47,51, tree)",
"9" :  "(47,53, vectors)",
"10" :  "(47,51, vectors)",
"11" :  "(50,(50,51), i)",
"12" :  "(50,(50,53), i)",
"13" :  "(50,51, i)",
"14" :  "(50,50, i)",
"15" :  "(50,(50,51), i)",
"16" :  "(50,(50,53), i)",
"17" :  "(50,51, i)",
"18" :  "(50,50, i)"},{ "Name" : "findRootTree" ,
"Duas" : 3,
"0" :  "(57,(58,59), tree)",
"1" :  "(57,(58,61), tree)",
"2" :  "(57,59, tree)"},{ "Name" : "main" ,
"Duas" : 172,
"0" :  "(67,(76,77), args)",
"1" :  "(67,(76,96), args)",
"2" :  "(67,(77,78), args)",
"3" :  "(67,(77,80), args)",
"4" :  "(67,(80,81), args)",
"5" :  "(67,(80,83), args)",
"6" :  "(67,(83,84), args)",
"7" :  "(67,(83,86), args)",
"8" :  "(67,(86,87), args)",
"9" :  "(67,(86,92), args)",
"10" :  "(67,92, args)",
"11" :  "(67,87, args)",
"12" :  "(67,88, args)",
"13" :  "(67,84, args)",
"14" :  "(67,81, args)",
"15" :  "(67,78, args)",
"16" :  "(67,126, log)",
"17" :  "(67,129, separator)",
"18" :  "(67,97, modelPath)",
"19" :  "(68,100, outputPath)",
"20" :  "(68,129, outputPath)",
"21" :  "(69,(105,106), inputPath)",
"22" :  "(69,(105,148), inputPath)",
"23" :  "(69,106, inputPath)",
"24" :  "(75,96, unusedArgs)",
"25" :  "(75,92, unusedArgs)",
"26" :  "(76,(76,77), argIndex)",
"27" :  "(76,(76,96), argIndex)",
"28" :  "(76,(77,78), argIndex)",
"29" :  "(76,(77,80), argIndex)",
"30" :  "(76,(80,81), argIndex)",
"31" :  "(76,(80,83), argIndex)",
"32" :  "(76,(83,84), argIndex)",
"33" :  "(76,(83,86), argIndex)",
"34" :  "(76,(86,87), argIndex)",
"35" :  "(76,(86,92), argIndex)",
"36" :  "(76,92, argIndex)",
"37" :  "(76,87, argIndex)",
"38" :  "(76,88, argIndex)",
"39" :  "(76,84, argIndex)",
"40" :  "(76,85, argIndex)",
"41" :  "(76,81, argIndex)",
"42" :  "(76,82, argIndex)",
"43" :  "(76,78, argIndex)",
"44" :  "(76,79, argIndex)",
"45" :  "(78,97, modelPath)",
"46" :  "(79,(76,77), argIndex)",
"47" :  "(79,(76,96), argIndex)",
"48" :  "(79,(77,78), argIndex)",
"49" :  "(79,(77,80), argIndex)",
"50" :  "(79,(80,81), argIndex)",
"51" :  "(79,(80,83), argIndex)",
"52" :  "(79,(83,84), argIndex)",
"53" :  "(79,(83,86), argIndex)",
"54" :  "(79,(86,87), argIndex)",
"55" :  "(79,(86,92), argIndex)",
"56" :  "(79,92, argIndex)",
"57" :  "(79,87, argIndex)",
"58" :  "(79,88, argIndex)",
"59" :  "(79,84, argIndex)",
"60" :  "(79,85, argIndex)",
"61" :  "(79,81, argIndex)",
"62" :  "(79,82, argIndex)",
"63" :  "(79,78, argIndex)",
"64" :  "(79,79, argIndex)",
"65" :  "(81,100, outputPath)",
"66" :  "(81,129, outputPath)",
"67" :  "(82,(76,77), argIndex)",
"68" :  "(82,(76,96), argIndex)",
"69" :  "(82,(77,78), argIndex)",
"70" :  "(82,(77,80), argIndex)",
"71" :  "(82,(80,81), argIndex)",
"72" :  "(82,(80,83), argIndex)",
"73" :  "(82,(83,84), argIndex)",
"74" :  "(82,(83,86), argIndex)",
"75" :  "(82,(86,87), argIndex)",
"76" :  "(82,(86,92), argIndex)",
"77" :  "(82,92, argIndex)",
"78" :  "(82,87, argIndex)",
"79" :  "(82,88, argIndex)",
"80" :  "(82,84, argIndex)",
"81" :  "(82,85, argIndex)",
"82" :  "(82,81, argIndex)",
"83" :  "(82,82, argIndex)",
"84" :  "(82,78, argIndex)",
"85" :  "(82,79, argIndex)",
"86" :  "(84,(105,106), inputPath)",
"87" :  "(84,(105,148), inputPath)",
"88" :  "(84,106, inputPath)",
"89" :  "(85,(76,77), argIndex)",
"90" :  "(85,(76,96), argIndex)",
"91" :  "(85,(77,78), argIndex)",
"92" :  "(85,(77,80), argIndex)",
"93" :  "(85,(80,81), argIndex)",
"94" :  "(85,(80,83), argIndex)",
"95" :  "(85,(83,84), argIndex)",
"96" :  "(85,(83,86), argIndex)",
"97" :  "(85,(86,87), argIndex)",
"98" :  "(85,(86,92), argIndex)",
"99" :  "(85,92, argIndex)",
"100" :  "(85,87, argIndex)",
"101" :  "(85,88, argIndex)",
"102" :  "(85,84, argIndex)",
"103" :  "(85,85, argIndex)",
"104" :  "(85,81, argIndex)",
"105" :  "(85,82, argIndex)",
"106" :  "(85,78, argIndex)",
"107" :  "(85,79, argIndex)",
"108" :  "(88,(76,77), argIndex)",
"109" :  "(88,(76,96), argIndex)",
"110" :  "(88,(77,78), argIndex)",
"111" :  "(88,(77,80), argIndex)",
"112" :  "(88,(80,81), argIndex)",
"113" :  "(88,(80,83), argIndex)",
"114" :  "(88,(83,84), argIndex)",
"115" :  "(88,(83,86), argIndex)",
"116" :  "(88,(86,87), argIndex)",
"117" :  "(88,(86,92), argIndex)",
"118" :  "(88,92, argIndex)",
"119" :  "(88,87, argIndex)",
"120" :  "(88,88, argIndex)",
"121" :  "(88,84, argIndex)",
"122" :  "(88,85, argIndex)",
"123" :  "(88,81, argIndex)",
"124" :  "(88,82, argIndex)",
"125" :  "(88,78, argIndex)",
"126" :  "(88,79, argIndex)",
"127" :  "(92,(76,77), argIndex)",
"128" :  "(92,(76,96), argIndex)",
"129" :  "(92,(77,78), argIndex)",
"130" :  "(92,(77,80), argIndex)",
"131" :  "(92,(80,81), argIndex)",
"132" :  "(92,(80,83), argIndex)",
"133" :  "(92,(83,84), argIndex)",
"134" :  "(92,(83,86), argIndex)",
"135" :  "(92,(86,87), argIndex)",
"136" :  "(92,(86,92), argIndex)",
"137" :  "(92,92, argIndex)",
"138" :  "(92,87, argIndex)",
"139" :  "(92,88, argIndex)",
"140" :  "(92,84, argIndex)",
"141" :  "(92,85, argIndex)",
"142" :  "(92,81, argIndex)",
"143" :  "(92,82, argIndex)",
"144" :  "(92,78, argIndex)",
"145" :  "(92,79, argIndex)",
"146" :  "(97,110, parser)",
"147" :  "(98,138, model)",
"148" :  "(104,109, count)",
"149" :  "(108,(115,116), sentence)",
"150" :  "(108,(115,118), sentence)",
"151" :  "(108,132, sentence)",
"152" :  "(108,137, sentence)",
"153" :  "(108,116, sentence)",
"154" :  "(109,129, count)",
"155" :  "(109,109, count)",
"156" :  "(110,(111,112), pq)",
"157" :  "(110,(111,114), pq)",
"158" :  "(110,114, pq)",
"159" :  "(114,(115,116), rpq)",
"160" :  "(114,(115,118), rpq)",
"161" :  "(114,118, rpq)",
"162" :  "(118,(119,120), reranker)",
"163" :  "(118,(119,122), reranker)",
"164" :  "(118,122, reranker)",
"165" :  "(122,134, deepTree)",
"166" :  "(123,141, vectors)",
"167" :  "(123,142, vectors)",
"168" :  "(129,145, fout)",
"169" :  "(130,142, bout)",
"170" :  "(130,144, bout)",
"171" :  "(130,138, bout)"}]
}