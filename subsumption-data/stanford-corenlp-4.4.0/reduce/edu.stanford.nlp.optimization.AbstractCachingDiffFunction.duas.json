{
"Class" : "edu.stanford.nlp.optimization.AbstractCachingDiffFunction", 
"Methods" : [{ "Name" : "gradientCheck" ,
"Duas" : 124,
"0" :  "(33,62, this)",
"1" :  "(33,65, this)",
"2" :  "(33,54, this)",
"3" :  "(33,(50,51), numOfChecks)",
"4" :  "(33,(50,53), numOfChecks)",
"5" :  "(33,(47,48), numOfChecks)",
"6" :  "(33,(47,50), numOfChecks)",
"7" :  "(33,(53,54), numOfRandomChecks)",
"8" :  "(33,(53,56), numOfRandomChecks)",
"9" :  "(33,59, x)",
"10" :  "(33,60, x)",
"11" :  "(33,62, x)",
"12" :  "(33,63, x)",
"13" :  "(33,65, x)",
"14" :  "(33,77, x)",
"15" :  "(33,54, this.generator)",
"16" :  "(33,80, err)",
"17" :  "(33,75, err)",
"18" :  "(33,71, err)",
"19" :  "(33,82, log)",
"20" :  "(33,89, log)",
"21" :  "(33,87, log)",
"22" :  "(33,84, log)",
"23" :  "(33,60, epsilon)",
"24" :  "(33,63, epsilon)",
"25" :  "(34,(70,70), diffThreshold)",
"26" :  "(34,(70,75), diffThreshold)",
"27" :  "(35,(70,71), diffPctThreshold)",
"28" :  "(35,(70,75), diffPctThreshold)",
"29" :  "(36,66, twoEpsilon)",
"30" :  "(37,(44,45), xLen)",
"31" :  "(37,(44,47), xLen)",
"32" :  "(37,47, xLen)",
"33" :  "(37,(50,50), xLen)",
"34" :  "(37,(50,53), xLen)",
"35" :  "(37,54, xLen)",
"36" :  "(37,(47,48), xLen)",
"37" :  "(37,(47,50), xLen)",
"38" :  "(40,67, savedDeriv)",
"39" :  "(42,44, interval)",
"40" :  "(43,58, indicesToCheck)",
"41" :  "(43,54, indicesToCheck)",
"42" :  "(43,51, indicesToCheck)",
"43" :  "(43,48, indicesToCheck)",
"44" :  "(43,45, indicesToCheck)",
"45" :  "(44,(44,45), paramIndex)",
"46" :  "(44,(44,47), paramIndex)",
"47" :  "(44,45, paramIndex)",
"48" :  "(44,44, paramIndex)",
"49" :  "(44,(44,45), paramIndex)",
"50" :  "(44,(44,47), paramIndex)",
"51" :  "(44,45, paramIndex)",
"52" :  "(44,44, paramIndex)",
"53" :  "(47,(47,47), i)",
"54" :  "(47,(47,50), i)",
"55" :  "(47,(47,48), i)",
"56" :  "(47,(47,50), i)",
"57" :  "(47,48, i)",
"58" :  "(47,47, i)",
"59" :  "(47,(47,47), i)",
"60" :  "(47,(47,50), i)",
"61" :  "(47,(47,48), i)",
"62" :  "(47,(47,50), i)",
"63" :  "(47,48, i)",
"64" :  "(47,47, i)",
"65" :  "(50,(50,50), i)",
"66" :  "(50,(50,53), i)",
"67" :  "(50,(50,51), i)",
"68" :  "(50,(50,53), i)",
"69" :  "(50,51, i)",
"70" :  "(50,50, i)",
"71" :  "(50,(50,50), i)",
"72" :  "(50,(50,53), i)",
"73" :  "(50,(50,51), i)",
"74" :  "(50,(50,53), i)",
"75" :  "(50,51, i)",
"76" :  "(50,50, i)",
"77" :  "(53,(53,54), i)",
"78" :  "(53,(53,56), i)",
"79" :  "(53,53, i)",
"80" :  "(53,(53,54), i)",
"81" :  "(53,(53,56), i)",
"82" :  "(53,53, i)",
"83" :  "(56,(79,80), returnVal)",
"84" :  "(56,(79,82), returnVal)",
"85" :  "(56,91, returnVal)",
"86" :  "(57,(83,83), badIndices)",
"87" :  "(57,(83,86), badIndices)",
"88" :  "(57,(86,87), badIndices)",
"89" :  "(57,(86,89), badIndices)",
"90" :  "(57,84, badIndices)",
"91" :  "(57,72, badIndices)",
"92" :  "(58,75, paramIndex)",
"93" :  "(58,77, paramIndex)",
"94" :  "(58,71, paramIndex)",
"95" :  "(58,72, paramIndex)",
"96" :  "(59,77, oldX)",
"97" :  "(66,75, appDeriv)",
"98" :  "(66,71, appDeriv)",
"99" :  "(67,75, calcDeriv)",
"100" :  "(67,71, calcDeriv)",
"101" :  "(68,(70,70), diff)",
"102" :  "(68,(70,75), diff)",
"103" :  "(68,75, diff)",
"104" :  "(68,71, diff)",
"105" :  "(69,75, pct)",
"106" :  "(69,(70,71), pct)",
"107" :  "(69,(70,75), pct)",
"108" :  "(69,71, pct)",
"109" :  "(73,(79,80), returnVal)",
"110" :  "(73,(79,82), returnVal)",
"111" :  "(73,91, returnVal)",
"112" :  "(83,(83,83), i)",
"113" :  "(83,(83,86), i)",
"114" :  "(83,(83,84), i)",
"115" :  "(83,(83,86), i)",
"116" :  "(83,84, i)",
"117" :  "(83,83, i)",
"118" :  "(83,(83,83), i)",
"119" :  "(83,(83,86), i)",
"120" :  "(83,(83,84), i)",
"121" :  "(83,(83,86), i)",
"122" :  "(83,84, i)",
"123" :  "(83,83, i)"},{ "Name" : "clearCache" ,
"Duas" : 6,
"0" :  "(106,(106,106), this)",
"1" :  "(106,(106,107), this)",
"2" :  "(106,106, this)",
"3" :  "(106,(106,106), this.lastX)",
"4" :  "(106,(106,107), this.lastX)",
"5" :  "(106,106, this.lastX)"},{ "Name" : "randomInitial" ,
"Duas" : 14,
"0" :  "(115,117, this)",
"1" :  "(115,117, this.generator)",
"2" :  "(115,(116,117), initial)",
"3" :  "(115,(116,119), initial)",
"4" :  "(115,119, initial)",
"5" :  "(115,117, initial)",
"6" :  "(116,(116,117), i)",
"7" :  "(116,(116,119), i)",
"8" :  "(116,117, i)",
"9" :  "(116,116, i)",
"10" :  "(116,(116,117), i)",
"11" :  "(116,(116,119), i)",
"12" :  "(116,117, i)",
"13" :  "(116,116, i)"},{ "Name" : "ensure" ,
"Duas" : 24,
"0" :  "(127,(127,128), this)",
"1" :  "(127,(127,130), this)",
"2" :  "(127,(130,131), this)",
"3" :  "(127,(130,133), this)",
"4" :  "(127,(133,134), this)",
"5" :  "(127,(133,136), this)",
"6" :  "(127,136, this)",
"7" :  "(127,137, this)",
"8" :  "(127,138, this)",
"9" :  "(127,134, this)",
"10" :  "(127,131, this)",
"11" :  "(127,(127,128), x)",
"12" :  "(127,(127,130), x)",
"13" :  "(127,136, x)",
"14" :  "(127,138, x)",
"15" :  "(127,(127,128), this.lastX)",
"16" :  "(127,(127,130), this.lastX)",
"17" :  "(127,(130,131), this.lastX)",
"18" :  "(127,(130,133), this.lastX)",
"19" :  "(127,136, this.lastX)",
"20" :  "(127,(133,134), this.derivative)",
"21" :  "(127,(133,136), this.derivative)",
"22" :  "(127,137, this.fEvaluations)",
"23" :  "(131,136, this.lastX)"}]
}