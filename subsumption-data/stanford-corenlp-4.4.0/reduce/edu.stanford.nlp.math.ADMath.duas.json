{
"Class" : "edu.stanford.nlp.math.ADMath", 
"Methods" : [{ "Name" : "logSum" ,
"Duas" : 106,
"0" :  "(101,(101,102), logInputs)",
"1" :  "(101,(101,103), logInputs)",
"2" :  "(101,106, logInputs)",
"3" :  "(101,107, logInputs)",
"4" :  "(101,(124,125), logInputs)",
"5" :  "(101,(124,123), logInputs)",
"6" :  "(101,126, logInputs)",
"7" :  "(101,128, logInputs)",
"8" :  "(101,(110,111), logInputs)",
"9" :  "(101,(110,109), logInputs)",
"10" :  "(101,112, logInputs)",
"11" :  "(101,113, logInputs)",
"12" :  "(101,(103,103), logInputs)",
"13" :  "(101,(103,105), logInputs)",
"14" :  "(101,(103,103), fromIndex)",
"15" :  "(101,(103,105), fromIndex)",
"16" :  "(101,105, fromIndex)",
"17" :  "(101,106, fromIndex)",
"18" :  "(101,107, fromIndex)",
"19" :  "(101,109, fromIndex)",
"20" :  "(101,123, fromIndex)",
"21" :  "(101,(103,104), fromIndex)",
"22" :  "(101,(103,105), fromIndex)",
"23" :  "(101,(109,110), toIndex)",
"24" :  "(101,(109,117), toIndex)",
"25" :  "(101,(123,124), toIndex)",
"26" :  "(101,(123,131), toIndex)",
"27" :  "(101,(103,103), toIndex)",
"28" :  "(101,(103,105), toIndex)",
"29" :  "(101,(103,104), toIndex)",
"30" :  "(101,(103,105), toIndex)",
"31" :  "(105,(124,124), maxIdx)",
"32" :  "(105,(124,123), maxIdx)",
"33" :  "(106,121, max)",
"34" :  "(106,135, max)",
"35" :  "(106,132, max)",
"36" :  "(106,126, max)",
"37" :  "(106,(110,111), max)",
"38" :  "(106,(110,109), max)",
"39" :  "(107,136, maxdot)",
"40" :  "(107,133, maxdot)",
"41" :  "(109,(109,110), i)",
"42" :  "(109,(109,117), i)",
"43" :  "(109,(110,111), i)",
"44" :  "(109,(110,109), i)",
"45" :  "(109,109, i)",
"46" :  "(109,111, i)",
"47" :  "(109,112, i)",
"48" :  "(109,113, i)",
"49" :  "(111,(124,124), maxIdx)",
"50" :  "(111,(124,123), maxIdx)",
"51" :  "(112,136, maxdot)",
"52" :  "(112,133, maxdot)",
"53" :  "(113,121, max)",
"54" :  "(113,135, max)",
"55" :  "(113,132, max)",
"56" :  "(113,126, max)",
"57" :  "(113,(110,111), max)",
"58" :  "(113,(110,109), max)",
"59" :  "(109,(109,110), i)",
"60" :  "(109,(109,117), i)",
"61" :  "(109,(110,111), i)",
"62" :  "(109,(110,109), i)",
"63" :  "(109,109, i)",
"64" :  "(109,111, i)",
"65" :  "(109,112, i)",
"66" :  "(109,113, i)",
"67" :  "(117,135, ret)",
"68" :  "(117,136, ret)",
"69" :  "(117,138, ret)",
"70" :  "(117,132, ret)",
"71" :  "(117,133, ret)",
"72" :  "(118,(131,132), haveTerms)",
"73" :  "(118,(131,135), haveTerms)",
"74" :  "(119,132, intermediate)",
"75" :  "(119,133, intermediate)",
"76" :  "(119,127, intermediate)",
"77" :  "(120,133, intermediateDot)",
"78" :  "(120,128, intermediateDot)",
"79" :  "(121,(124,125), cutoff)",
"80" :  "(121,(124,123), cutoff)",
"81" :  "(123,(123,124), i)",
"82" :  "(123,(123,131), i)",
"83" :  "(123,(124,124), i)",
"84" :  "(123,(124,123), i)",
"85" :  "(123,123, i)",
"86" :  "(123,(124,125), i)",
"87" :  "(123,(124,123), i)",
"88" :  "(123,126, i)",
"89" :  "(123,128, i)",
"90" :  "(125,(131,132), haveTerms)",
"91" :  "(125,(131,135), haveTerms)",
"92" :  "(127,132, intermediate)",
"93" :  "(127,133, intermediate)",
"94" :  "(127,127, intermediate)",
"95" :  "(128,133, intermediateDot)",
"96" :  "(128,128, intermediateDot)",
"97" :  "(123,(123,124), i)",
"98" :  "(123,(123,131), i)",
"99" :  "(123,(124,124), i)",
"100" :  "(123,(124,123), i)",
"101" :  "(123,123, i)",
"102" :  "(123,(124,125), i)",
"103" :  "(123,(124,123), i)",
"104" :  "(123,126, i)",
"105" :  "(123,128, i)"}]
}