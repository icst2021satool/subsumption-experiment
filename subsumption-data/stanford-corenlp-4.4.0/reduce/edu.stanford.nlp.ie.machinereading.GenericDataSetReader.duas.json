{
"Class" : "edu.stanford.nlp.ie.machinereading.GenericDataSetReader", 
"Methods" : [{ "Name" : "<init>" ,
"Duas" : 11,
"0" :  "(77,82, this)",
"1" :  "(77,91, this)",
"2" :  "(77,92, this)",
"3" :  "(77,93, this)",
"4" :  "(77,81, this)",
"5" :  "(77,(81,81), processor)",
"6" :  "(77,(81,82), processor)",
"7" :  "(77,81, processor)",
"8" :  "(77,91, preProcessSentences)",
"9" :  "(77,92, calculateHeadSpan)",
"10" :  "(77,93, forceGenerationOfIndexSpans)"},{ "Name" : "getParser" ,
"Duas" : 14,
"0" :  "(108,(108,109), this)",
"1" :  "(108,(108,112), this)",
"2" :  "(108,112, this)",
"3" :  "(108,109, this)",
"4" :  "(108,(110,110), this)",
"5" :  "(108,(110,112), this)",
"6" :  "(108,(108,109), this.parserProcessor)",
"7" :  "(108,(108,112), this.parserProcessor)",
"8" :  "(108,112, this.parserProcessor)",
"9" :  "(108,(110,110), $assertionsDisabled)",
"10" :  "(108,(110,112), $assertionsDisabled)",
"11" :  "(109,112, this.parserProcessor)",
"12" :  "(109,(110,110), this.parserProcessor)",
"13" :  "(109,(110,112), this.parserProcessor)"},{ "Name" : "parse" ,
"Duas" : 12,
"0" :  "(139,(145,146), this)",
"1" :  "(139,(145,152), this)",
"2" :  "(139,146, this)",
"3" :  "(139,148, this)",
"4" :  "(139,(145,146), this.preProcessSentences)",
"5" :  "(139,(145,152), this.preProcessSentences)",
"6" :  "(139,(147,148), trainUsePipelineNER)",
"7" :  "(139,(147,152), trainUsePipelineNER)",
"8" :  "(139,148, this.logger)",
"9" :  "(139,152, retVal)",
"10" :  "(139,146, retVal)",
"11" :  "(139,149, retVal)"},{ "Name" : "modifyUsingCoreNLPNER" ,
"Duas" : 18,
"0" :  "(160,163, sentence)",
"1" :  "(161,(162,163), entities)",
"2" :  "(161,(162,177), entities)",
"3" :  "(161,164, entities)",
"4" :  "(163,169, tokens)",
"5" :  "(164,172, en)",
"6" :  "(166,(168,169), s)",
"7" :  "(166,(168,171), s)",
"8" :  "(167,171, allNertagforSpan)",
"9" :  "(167,169, allNertagforSpan)",
"10" :  "(168,(168,169), i)",
"11" :  "(168,(168,171), i)",
"12" :  "(168,169, i)",
"13" :  "(168,168, i)",
"14" :  "(168,(168,169), i)",
"15" :  "(168,(168,171), i)",
"16" :  "(168,169, i)",
"17" :  "(168,168, i)"},{ "Name" : "sentenceToString" ,
"Duas" : 11,
"0" :  "(185,(190,191), tokens)",
"1" :  "(185,(190,199), tokens)",
"2" :  "(185,192, tokens)",
"3" :  "(185,199, os)",
"4" :  "(185,194, os)",
"5" :  "(185,193, os)",
"6" :  "(191,(193,193), first)",
"7" :  "(191,(193,194), first)",
"8" :  "(192,194, token)",
"9" :  "(195,(193,193), first)",
"10" :  "(195,(193,194), first)"},{ "Name" : "assignSyntacticHead" ,
"Duas" : 36,
"0" :  "(213,217, this)",
"1" :  "(213,218, this)",
"2" :  "(213,221, this)",
"3" :  "(213,232, this)",
"4" :  "(213,233, this)",
"5" :  "(213,(213,214), ent)",
"6" :  "(213,(213,217), ent)",
"7" :  "(213,217, ent)",
"8" :  "(213,221, ent)",
"9" :  "(213,227, ent)",
"10" :  "(213,232, ent)",
"11" :  "(213,235, ent)",
"12" :  "(213,240, ent)",
"13" :  "(213,214, ent)",
"14" :  "(213,217, tree)",
"15" :  "(213,221, tree)",
"16" :  "(213,232, tree)",
"17" :  "(213,218, tokens)",
"18" :  "(213,221, tokens)",
"19" :  "(213,233, tokens)",
"20" :  "(213,(237,240), setHeadSpan)",
"21" :  "(213,(237,243), setHeadSpan)",
"22" :  "(213,217, this.logger)",
"23" :  "(213,218, this.logger)",
"24" :  "(213,232, this.logger)",
"25" :  "(213,233, this.logger)",
"26" :  "(221,(228,229), sh)",
"27" :  "(221,(228,232), sh)",
"28" :  "(221,229, sh)",
"29" :  "(227,233, headPos)",
"30" :  "(227,235, headPos)",
"31" :  "(227,243, headPos)",
"32" :  "(227,240, headPos)",
"33" :  "(230,235, headPos)",
"34" :  "(230,243, headPos)",
"35" :  "(230,240, headPos)"},{ "Name" : "preProcessSentences" ,
"Duas" : 68,
"0" :  "(250,(252,254), this)",
"1" :  "(250,(252,272), this)",
"2" :  "(250,273, this)",
"3" :  "(250,309, this)",
"4" :  "(250,276, this)",
"5" :  "(250,(286,286), this)",
"6" :  "(250,(286,287), this)",
"7" :  "(250,288, this)",
"8" :  "(250,292, this)",
"9" :  "(250,299, this)",
"10" :  "(250,300, this)",
"11" :  "(250,301, this)",
"12" :  "(250,290, this)",
"13" :  "(250,259, this)",
"14" :  "(250,256, this)",
"15" :  "(250,257, this)",
"16" :  "(250,272, dataset)",
"17" :  "(250,254, dataset)",
"18" :  "(250,257, dataset)",
"19" :  "(250,273, this.logger)",
"20" :  "(250,309, this.logger)",
"21" :  "(250,276, this.logger)",
"22" :  "(250,288, this.logger)",
"23" :  "(250,292, this.logger)",
"24" :  "(250,299, this.logger)",
"25" :  "(250,301, this.logger)",
"26" :  "(250,290, this.logger)",
"27" :  "(250,259, this.logger)",
"28" :  "(250,256, this.logger)",
"29" :  "(250,(252,254), this.processor)",
"30" :  "(250,(252,272), this.processor)",
"31" :  "(250,256, this.processor)",
"32" :  "(250,257, this.processor)",
"33" :  "(250,(286,286), this.forceGenerationOfIndexSpans)",
"34" :  "(250,(286,287), this.forceGenerationOfIndexSpans)",
"35" :  "(250,300, this.calculateHeadSpan)",
"36" :  "(250,(303,303), $assertionsDisabled)",
"37" :  "(250,(303,304), $assertionsDisabled)",
"38" :  "(250,(304,304), $assertionsDisabled)",
"39" :  "(250,(304,305), $assertionsDisabled)",
"40" :  "(250,(305,305), $assertionsDisabled)",
"41" :  "(250,(305,306), $assertionsDisabled)",
"42" :  "(254,(255,255), sentences)",
"43" :  "(254,(255,259), sentences)",
"44" :  "(254,(255,256), sentences)",
"45" :  "(254,(255,259), sentences)",
"46" :  "(274,(297,298), sentence)",
"47" :  "(274,(297,308), sentence)",
"48" :  "(274,298, sentence)",
"49" :  "(275,300, tokens)",
"50" :  "(275,301, tokens)",
"51" :  "(277,(278,278), tree)",
"52" :  "(277,(278,282), tree)",
"53" :  "(277,282, tree)",
"54" :  "(277,285, tree)",
"55" :  "(277,287, tree)",
"56" :  "(277,292, tree)",
"57" :  "(277,300, tree)",
"58" :  "(285,(286,286), l)",
"59" :  "(285,(286,290), l)",
"60" :  "(285,(286,287), l)",
"61" :  "(285,(286,290), l)",
"62" :  "(298,(305,305), ent)",
"63" :  "(298,(305,306), ent)",
"64" :  "(298,(304,304), ent)",
"65" :  "(298,(304,305), ent)",
"66" :  "(298,(303,303), ent)",
"67" :  "(298,(303,304), ent)"},{ "Name" : "convertToCoreLabels" ,
"Duas" : 5,
"0" :  "(318,325, tree)",
"1" :  "(318,322, tree)",
"2" :  "(318,(319,320), l)",
"3" :  "(318,(319,325), l)",
"4" :  "(318,321, l)"},{ "Name" : "safeHead" ,
"Duas" : 8,
"0" :  "(336,339, top)",
"1" :  "(336,344, top)",
"2" :  "(336,(337,337), head)",
"3" :  "(336,(337,339), head)",
"4" :  "(336,337, head)",
"5" :  "(339,(340,341), leaves)",
"6" :  "(339,(340,344), leaves)",
"7" :  "(339,341, leaves)"},{ "Name" : "findSyntacticHead" ,
"Duas" : 68,
"0" :  "(357,(357,358), this)",
"1" :  "(357,(357,361), this)",
"2" :  "(357,361, this)",
"3" :  "(357,400, this)",
"4" :  "(357,401, this)",
"5" :  "(357,404, this)",
"6" :  "(357,405, this)",
"7" :  "(357,406, this)",
"8" :  "(357,412, this)",
"9" :  "(357,413, this)",
"10" :  "(357,368, this)",
"11" :  "(357,369, this)",
"12" :  "(357,358, this)",
"13" :  "(357,361, ent)",
"14" :  "(357,362, ent)",
"15" :  "(357,382, ent)",
"16" :  "(357,(382,384), ent)",
"17" :  "(357,(382,391), ent)",
"18" :  "(357,403, ent)",
"19" :  "(357,404, ent)",
"20" :  "(357,368, ent)",
"21" :  "(357,358, ent)",
"22" :  "(357,362, root)",
"23" :  "(357,412, root)",
"24" :  "(357,358, root)",
"25" :  "(357,384, tokens)",
"26" :  "(357,386, tokens)",
"27" :  "(357,358, tokens)",
"28" :  "(357,(357,358), this.useNewHeadFinder)",
"29" :  "(357,(357,361), this.useNewHeadFinder)",
"30" :  "(357,361, this.logger)",
"31" :  "(357,401, this.logger)",
"32" :  "(357,406, this.logger)",
"33" :  "(357,413, this.logger)",
"34" :  "(357,368, this.logger)",
"35" :  "(357,(407,407), $assertionsDisabled)",
"36" :  "(357,(407,410), $assertionsDisabled)",
"37" :  "(362,(367,368), exactMatch)",
"38" :  "(362,(367,376), exactMatch)",
"39" :  "(362,368, exactMatch)",
"40" :  "(362,369, exactMatch)",
"41" :  "(376,412, approximateness)",
"42" :  "(376,388, approximateness)",
"43" :  "(377,391, extentTokens)",
"44" :  "(377,398, extentTokens)",
"45" :  "(377,400, extentTokens)",
"46" :  "(377,386, extentTokens)",
"47" :  "(382,(382,384), i)",
"48" :  "(382,(382,391), i)",
"49" :  "(382,384, i)",
"50" :  "(382,382, i)",
"51" :  "(382,386, i)",
"52" :  "(384,(385,386), label)",
"53" :  "(384,(385,388), label)",
"54" :  "(388,412, approximateness)",
"55" :  "(388,388, approximateness)",
"56" :  "(382,(382,384), i)",
"57" :  "(382,(382,391), i)",
"58" :  "(382,384, i)",
"59" :  "(382,382, i)",
"60" :  "(382,386, i)",
"61" :  "(405,410, extentHead)",
"62" :  "(405,(407,407), extentHead)",
"63" :  "(405,(407,410), extentHead)",
"64" :  "(412,(413,413), realHead)",
"65" :  "(412,(413,414), realHead)",
"66" :  "(412,414, realHead)",
"67" :  "(412,413, realHead)"},{ "Name" : "findPartialSpan" ,
"Duas" : 22,
"0" :  "(418,430, this)",
"1" :  "(418,421, this)",
"2" :  "(418,424, current)",
"3" :  "(418,433, current)",
"4" :  "(418,421, current)",
"5" :  "(418,422, current)",
"6" :  "(418,(420,421), start)",
"7" :  "(418,(420,424), start)",
"8" :  "(418,433, start)",
"9" :  "(418,(429,429), start)",
"10" :  "(418,(429,424), start)",
"11" :  "(418,(429,430), start)",
"12" :  "(418,(429,424), start)",
"13" :  "(418,430, start)",
"14" :  "(418,421, this.logger)",
"15" :  "(419,(420,421), startIndex)",
"16" :  "(419,(420,424), startIndex)",
"17" :  "(424,430, kid)",
"18" :  "(426,(429,429), kidStart)",
"19" :  "(426,(429,424), kidStart)",
"20" :  "(427,(429,430), kidEnd)",
"21" :  "(427,(429,424), kidEnd)"},{ "Name" : "funkyFindLeafWithApproximateSpan" ,
"Duas" : 23,
"0" :  "(437,450, this)",
"1" :  "(437,451, this)",
"2" :  "(437,451, root)",
"3" :  "(437,451, token)",
"4" :  "(437,(443,443), token)",
"5" :  "(437,(443,446), token)",
"6" :  "(437,451, index)",
"7" :  "(437,(443,443), index)",
"8" :  "(437,(443,446), index)",
"9" :  "(437,(443,444), index)",
"10" :  "(437,(443,446), index)",
"11" :  "(437,451, approximateness)",
"12" :  "(437,(443,444), approximateness)",
"13" :  "(437,(443,446), approximateness)",
"14" :  "(437,450, this.logger)",
"15" :  "(437,451, this.logger)",
"16" :  "(439,(443,443), leaf)",
"17" :  "(439,(443,446), leaf)",
"18" :  "(439,444, leaf)",
"19" :  "(441,(443,443), ind)",
"20" :  "(441,(443,446), ind)",
"21" :  "(441,(443,444), ind)",
"22" :  "(441,(443,446), ind)"},{ "Name" : "originalFindSyntacticHead" ,
"Duas" : 38,
"0" :  "(467,486, this)",
"1" :  "(467,487, this)",
"2" :  "(467,490, this)",
"3" :  "(467,474, this)",
"4" :  "(467,475, this)",
"5" :  "(467,483, ent)",
"6" :  "(467,(483,484), ent)",
"7" :  "(467,(483,486), ent)",
"8" :  "(467,489, ent)",
"9" :  "(467,474, ent)",
"10" :  "(467,495, root)",
"11" :  "(467,484, tokens)",
"12" :  "(467,487, this.logger)",
"13" :  "(467,474, this.logger)",
"14" :  "(467,(491,491), $assertionsDisabled)",
"15" :  "(467,(491,494), $assertionsDisabled)",
"16" :  "(467,(496,496), $assertionsDisabled)",
"17" :  "(467,(496,498), $assertionsDisabled)",
"18" :  "(468,(473,474), exactMatch)",
"19" :  "(468,(473,482), exactMatch)",
"20" :  "(468,474, exactMatch)",
"21" :  "(468,475, exactMatch)",
"22" :  "(482,486, extentTokens)",
"23" :  "(482,484, extentTokens)",
"24" :  "(483,(483,484), i)",
"25" :  "(483,(483,486), i)",
"26" :  "(483,484, i)",
"27" :  "(483,483, i)",
"28" :  "(483,(483,484), i)",
"29" :  "(483,(483,486), i)",
"30" :  "(483,484, i)",
"31" :  "(483,483, i)",
"32" :  "(490,494, extentHead)",
"33" :  "(490,(491,491), extentHead)",
"34" :  "(490,(491,494), extentHead)",
"35" :  "(495,498, realHead)",
"36" :  "(495,(496,496), realHead)",
"37" :  "(495,(496,498), realHead)"},{ "Name" : "parseStrings" ,
"Duas" : 3,
"0" :  "(524,529, this)",
"1" :  "(524,529, labels)",
"2" :  "(524,527, labels)"},{ "Name" : "findTreeWithSpan" ,
"Duas" : 34,
"0" :  "(560,575, tree)",
"1" :  "(560,566, tree)",
"2" :  "(560,577, start)",
"3" :  "(560,(564,564), start)",
"4" :  "(560,(564,567), start)",
"5" :  "(560,(569,570), start)",
"6" :  "(560,(569,575), start)",
"7" :  "(560,577, end)",
"8" :  "(560,(567,568), end)",
"9" :  "(560,(567,569), end)",
"10" :  "(560,(564,566), end)",
"11" :  "(560,(564,567), end)",
"12" :  "(560,(561,561), l)",
"13" :  "(560,(561,575), l)",
"14" :  "(560,(561,561), l)",
"15" :  "(560,(561,575), l)",
"16" :  "(560,(561,562), l)",
"17" :  "(560,(561,575), l)",
"18" :  "(560,562, l)",
"19" :  "(560,563, l)",
"20" :  "(562,(564,564), myStart)",
"21" :  "(562,(564,567), myStart)",
"22" :  "(562,(567,568), myStart)",
"23" :  "(562,(567,569), myStart)",
"24" :  "(563,(569,570), myEnd)",
"25" :  "(563,(569,575), myEnd)",
"26" :  "(563,(564,566), myEnd)",
"27" :  "(563,(564,567), myEnd)",
"28" :  "(575,(576,576), kid)",
"29" :  "(575,(576,577), kid)",
"30" :  "(575,577, kid)",
"31" :  "(577,(579,579), ret)",
"32" :  "(577,(579,575), ret)",
"33" :  "(577,579, ret)"}]
}