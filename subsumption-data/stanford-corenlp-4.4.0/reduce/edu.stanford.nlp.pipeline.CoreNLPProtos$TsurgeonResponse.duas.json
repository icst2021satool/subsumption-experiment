{
"Class" : "edu.stanford.nlp.pipeline.CoreNLPProtos$TsurgeonResponse", 
"Methods" : [{ "Name" : "<init>" ,
"Duas" : 45,
"0" :  "(-1,-1, this)",
"1" :  "(-1,-1, this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,(-1,-1), this)",
"6" :  "(-1,(-1,-1), this)",
"7" :  "(-1,-1, input)",
"8" :  "(-1,-1, input)",
"9" :  "(-1,(-1,-1), input)",
"10" :  "(-1,(-1,-1), input)",
"11" :  "(-1,(-1,-1), extensionRegistry)",
"12" :  "(-1,(-1,-1), extensionRegistry)",
"13" :  "(-1,-1, extensionRegistry)",
"14" :  "(-1,(-1,-1), extensionRegistry)",
"15" :  "(-1,(-1,-1), extensionRegistry)",
"16" :  "(-1,-1, this.trees_)",
"17" :  "(-1,-1, this.trees_)",
"18" :  "(-1,-1, PARSER)",
"19" :  "(-1,(-1,-1), mutable_bitField0_)",
"20" :  "(-1,(-1,-1), mutable_bitField0_)",
"21" :  "(-1,(-1,-1), mutable_bitField0_)",
"22" :  "(-1,(-1,-1), mutable_bitField0_)",
"23" :  "(-1,-1, mutable_bitField0_)",
"24" :  "(-1,-1, unknownFields)",
"25" :  "(-1,(-1,-1), unknownFields)",
"26" :  "(-1,(-1,-1), unknownFields)",
"27" :  "(-1,(-1,-1), done)",
"28" :  "(-1,(-1,-1), done)",
"29" :  "(-1,(-1,-1), tag)",
"30" :  "(-1,(-1,-1), tag)",
"31" :  "(-1,(-1,-1), tag)",
"32" :  "(-1,(-1,-1), tag)",
"33" :  "(-1,(-1,-1), tag)",
"34" :  "(-1,(-1,-1), done)",
"35" :  "(-1,(-1,-1), done)",
"36" :  "(-1,-1, this.trees_)",
"37" :  "(-1,-1, this.trees_)",
"38" :  "(-1,(-1,-1), mutable_bitField0_)",
"39" :  "(-1,(-1,-1), mutable_bitField0_)",
"40" :  "(-1,(-1,-1), mutable_bitField0_)",
"41" :  "(-1,(-1,-1), mutable_bitField0_)",
"42" :  "(-1,-1, mutable_bitField0_)",
"43" :  "(-1,(-1,-1), done)",
"44" :  "(-1,(-1,-1), done)"},{ "Name" : "isInitialized" ,
"Duas" : 5,
"0" :  "(-1,-1, this)",
"1" :  "(-1,(-1,-1), isInitialized)",
"2" :  "(-1,(-1,-1), isInitialized)",
"3" :  "(-1,(-1,-1), isInitialized)",
"4" :  "(-1,(-1,-1), isInitialized)"},{ "Name" : "writeTo" ,
"Duas" : 18,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, output)",
"5" :  "(-1,-1, output)",
"6" :  "(-1,(-1,-1), this.trees_)",
"7" :  "(-1,(-1,-1), this.trees_)",
"8" :  "(-1,-1, this.trees_)",
"9" :  "(-1,-1, this.unknownFields)",
"10" :  "(-1,(-1,-1), i)",
"11" :  "(-1,(-1,-1), i)",
"12" :  "(-1,-1, i)",
"13" :  "(-1,-1, i)",
"14" :  "(-1,(-1,-1), i)",
"15" :  "(-1,(-1,-1), i)",
"16" :  "(-1,-1, i)",
"17" :  "(-1,-1, i)"},{ "Name" : "getSerializedSize" ,
"Duas" : 24,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,-1, this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,(-1,-1), this.trees_)",
"6" :  "(-1,(-1,-1), this.trees_)",
"7" :  "(-1,-1, this.trees_)",
"8" :  "(-1,-1, this.unknownFields)",
"9" :  "(-1,(-1,-1), size)",
"10" :  "(-1,(-1,-1), size)",
"11" :  "(-1,-1, size)",
"12" :  "(-1,-1, size)",
"13" :  "(-1,-1, size)",
"14" :  "(-1,(-1,-1), i)",
"15" :  "(-1,(-1,-1), i)",
"16" :  "(-1,-1, i)",
"17" :  "(-1,-1, i)",
"18" :  "(-1,-1, size)",
"19" :  "(-1,-1, size)",
"20" :  "(-1,(-1,-1), i)",
"21" :  "(-1,(-1,-1), i)",
"22" :  "(-1,-1, i)",
"23" :  "(-1,-1, i)"},{ "Name" : "equals" ,
"Duas" : 21,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,(-1,-1), this)",
"3" :  "(-1,(-1,-1), this)",
"4" :  "(-1,(-1,-1), this)",
"5" :  "(-1,(-1,-1), this)",
"6" :  "(-1,-1, this)",
"7" :  "(-1,(-1,-1), obj)",
"8" :  "(-1,(-1,-1), obj)",
"9" :  "(-1,(-1,-1), obj)",
"10" :  "(-1,(-1,-1), obj)",
"11" :  "(-1,-1, obj)",
"12" :  "(-1,-1, obj)",
"13" :  "(-1,(-1,-1), this.unknownFields)",
"14" :  "(-1,(-1,-1), this.unknownFields)",
"15" :  "(-1,(-1,-1), other)",
"16" :  "(-1,(-1,-1), other)",
"17" :  "(-1,(-1,-1), other)",
"18" :  "(-1,(-1,-1), other)",
"19" :  "(-1,(-1,-1), other.unknownFields)",
"20" :  "(-1,(-1,-1), other.unknownFields)"},{ "Name" : "hashCode" ,
"Duas" : 15,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,(-1,-1), this)",
"3" :  "(-1,(-1,-1), this)",
"4" :  "(-1,-1, this)",
"5" :  "(-1,-1, this)",
"6" :  "(-1,-1, this)",
"7" :  "(-1,-1, this)",
"8" :  "(-1,(-1,-1), this.memoizedHashCode)",
"9" :  "(-1,(-1,-1), this.memoizedHashCode)",
"10" :  "(-1,-1, this.memoizedHashCode)",
"11" :  "(-1,-1, this.unknownFields)",
"12" :  "(-1,-1, hash)",
"13" :  "(-1,-1, hash)",
"14" :  "(-1,-1, hash)"},{ "Name" : "toBuilder" ,
"Duas" : 5,
"0" :  "(-1,(-1,-1), this)",
"1" :  "(-1,(-1,-1), this)",
"2" :  "(-1,-1, this)",
"3" :  "(-1,(-1,-1), DEFAULT_INSTANCE)",
"4" :  "(-1,(-1,-1), DEFAULT_INSTANCE)"}]
}