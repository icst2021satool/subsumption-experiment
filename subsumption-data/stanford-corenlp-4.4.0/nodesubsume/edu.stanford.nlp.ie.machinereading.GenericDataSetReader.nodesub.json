{
"Class" : "edu.stanford.nlp.ie.machinereading.GenericDataSetReader", 
"Methods" : [{ "Name" : "<init>" ,
"Nodes" : 4,
"0" : [ ],
"2" : [ 4, 5, 7],
"1" : [ 0, 1, 2, 3, 8, 9, 10],
"3" : [ 0, 1, 2, 3, 8, 9, 10],
"CoveredDUAsByNodes" : 10,
"Duas" : 11
},{ "Name" : "getParser" ,
"Nodes" : 6,
"0" : [ ],
"2" : [ 0, 3, 6],
"3" : [ 0, 3, 6, 9],
"1" : [ 2],
"4" : [ 0, 3, 4, 6, 9, 12],
"5" : [ ],
"CoveredDUAsByNodes" : 7,
"Duas" : 14
},{ "Name" : "parse" ,
"Nodes" : 5,
"0" : [ ],
"2" : [ 0, 2, 4, 10],
"3" : [ 0, 2, 3, 4, 6, 8, 10, 11],
"1" : [ 9],
"4" : [ 9],
"CoveredDUAsByNodes" : 9,
"Duas" : 12
},{ "Name" : "modifyUsingCoreNLPNER" ,
"Nodes" : 12,
"0" : [ ],
"1" : [ ],
"2" : [ ],
"11" : [ ],
"3" : [ ],
"5" : [ 0, 1, 3],
"6" : [ 0, 1, 3],
"4" : [ ],
"7" : [ 0, 1, 3],
"8" : [ 0, 1, 3],
"9" : [ 0, 1, 3, 5, 7, 8],
"10" : [ 0, 1, 3, 4, 6, 9, 10, 12, 13],
"CoveredDUAsByNodes" : 12,
"Duas" : 18
},{ "Name" : "sentenceToString" ,
"Nodes" : 8,
"0" : [ ],
"2" : [ 0, 2],
"3" : [ 0, 2],
"1" : [ 3],
"7" : [ 3],
"4" : [ 0, 2],
"6" : [ 0, 2, 5],
"5" : [ 0, 2, 4, 8],
"CoveredDUAsByNodes" : 6,
"Duas" : 11
},{ "Name" : "assignSyntacticHead" ,
"Nodes" : 9,
"0" : [ ],
"1" : [ 0, 1, 2, 6, 7, 8, 9, 14, 15, 17, 18, 22, 23],
"2" : [ 0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 27, 29],
"6" : [ 0, 1, 2, 6, 7, 8, 9, 14, 15, 17, 18, 22, 23, 26, 28],
"3" : [ 0, 1, 2, 6, 7, 8, 9, 11, 14, 15, 17, 18, 22, 23],
"5" : [ 0, 1, 2, 6, 7, 8, 9, 11, 12, 14, 15, 17, 18, 20, 22, 23],
"4" : [ 0, 1, 2, 6, 7, 8, 9, 11, 14, 15, 17, 18, 22, 23],
"7" : [ 5, 13],
"8" : [ ],
"CoveredDUAsByNodes" : 29,
"Duas" : 36
},{ "Name" : "preProcessSentences" ,
"Nodes" : 30,
"0" : [ ],
"25" : [ 0, 17, 29],
"27" : [ 0, 17, 42, 29],
"26" : [ 0, 17, 27, 13, 29],
"28" : [ 0, 32, 17, 18, 42, 28, 44, 29, 14, 15, 31],
"1" : [ 16, 2, 19],
"2" : [ 16, 2, 19],
"3" : [ 16, 2, 3, 19, 20],
"4" : [ 16, 2, 19, 4, 21],
"5" : [ 16, 2, 19, 4, 52, 21, 53, 54],
"21" : [ 16, 33, 2, 19, 4, 52, 5, 21, 53, 54],
"23" : [ 16, 33, 2, 19, 4, 52, 5, 21, 53, 54, 58],
"22" : [ 16, 33, 2, 19, 4, 52, 5, 21, 53, 54, 26, 12],
"6" : [ 16, 2, 19, 4, 52, 21, 53, 22, 54, 7, 55],
"7" : [ 16, 2, 19, 4, 52, 21, 53, 54, 23, 8, 56],
"9" : [ 2, 4, 8, 46, 16, 48, 19, 52, 21, 53, 54, 23, 56],
"10" : [ 2, 4, 8, 46, 16, 48, 19, 52, 21, 53, 54, 23, 56],
"8" : [ 2, 4, 8, 16, 19, 52, 21, 53, 54, 23, 56],
"11" : [ 2, 35, 4, 8, 9, 10, 11, 46, 16, 48, 49, 50, 19, 52, 21, 53, 54, 23, 24, 56, 25, 57],
"19" : [ 2, 35, 4, 36, 8, 9, 10, 11, 46, 16, 48, 49, 50, 19, 52, 21, 53, 54, 23, 24, 56, 25, 57],
"12" : [ 2, 35, 4, 8, 9, 10, 11, 46, 16, 48, 49, 50, 19, 52, 21, 53, 54, 23, 24, 56, 25, 57],
"17" : [ 2, 35, 4, 38, 8, 9, 10, 11, 46, 16, 48, 49, 50, 19, 52, 21, 53, 54, 23, 24, 56, 25, 57],
"13" : [ 2, 35, 4, 8, 9, 10, 11, 46, 16, 48, 49, 50, 19, 52, 21, 53, 54, 23, 24, 56, 25, 57],
"15" : [ 2, 35, 4, 8, 40, 9, 10, 11, 46, 16, 48, 49, 50, 19, 52, 21, 53, 54, 23, 24, 56, 25, 57],
"14" : [ 2, 35, 4, 8, 9, 10, 11, 46, 16, 48, 49, 50, 19, 52, 21, 53, 54, 23, 24, 56, 25, 57],
"16" : [ 2, 35, 4, 8, 40, 9, 10, 11, 46, 16, 48, 49, 50, 19, 52, 21, 53, 54, 23, 24, 56, 25, 57, 62],
"18" : [ 64, 2, 35, 4, 38, 8, 9, 10, 11, 46, 16, 48, 49, 50, 19, 52, 21, 53, 54, 23, 24, 56, 25, 57],
"20" : [ 2, 66, 35, 4, 36, 8, 9, 10, 11, 46, 16, 48, 49, 50, 19, 52, 21, 53, 54, 23, 24, 56, 25, 57],
"24" : [ 2, 4, 16, 19, 51, 21],
"29" : [ 2, 16, 19],
"CoveredDUAsByNodes" : 52,
"Duas" : 68
},{ "Name" : "convertToCoreLabels" ,
"Nodes" : 7,
"0" : [ ],
"5" : [ 1, 2, 4],
"1" : [ 0],
"2" : [ 0],
"3" : [ 0],
"6" : [ 0],
"4" : [ 0],
"CoveredDUAsByNodes" : 4,
"Duas" : 5
},{ "Name" : "safeHead" ,
"Nodes" : 6,
"0" : [ ],
"1" : [ 0, 3],
"2" : [ 0, 1, 3, 6],
"3" : [ 0, 3, 5, 7],
"4" : [ 2, 4],
"5" : [ ],
"CoveredDUAsByNodes" : 8,
"Duas" : 8
},{ "Name" : "findSyntacticHead" ,
"Nodes" : 17,
"0" : [ ],
"1" : [ 1, 2, 22, 13, 29, 14, 30],
"2" : [ 1, 2, 22, 38, 13, 29, 14, 30, 15],
"3" : [ 1, 2, 22, 38, 13, 29, 14, 30, 15],
"4" : [ 32, 1, 2, 3, 4, 5, 6, 38, 7, 43, 44, 13, 45, 14, 15, 17, 18, 19, 22, 29, 30, 31],
"8" : [ 32, 1, 2, 3, 35, 4, 5, 6, 38, 7, 43, 44, 13, 45, 14, 15, 17, 18, 19, 22, 29, 30, 31],
"5" : [ 1, 2, 3, 4, 5, 6, 7, 8, 13, 14, 15, 17, 18, 19, 22, 23, 29, 30, 31, 32, 38, 43, 44, 45, 61],
"7" : [ 64, 1, 2, 3, 67, 4, 5, 6, 7, 8, 9, 13, 14, 15, 17, 18, 19, 22, 23, 29, 30, 31, 32, 33, 38, 43, 44, 45, 61],
"6" : [ 1, 2, 66, 3, 4, 5, 6, 7, 8, 13, 14, 15, 17, 18, 19, 22, 23, 29, 30, 31, 32, 38, 43, 44, 45, 61],
"9" : [ 1, 2, 3, 4, 5, 6, 7, 13, 14, 15, 17, 18, 19, 22, 29, 30, 31, 32, 35, 38, 43, 44, 45, 62],
"10" : [ 1, 2, 13, 14, 15, 16, 22, 25, 29, 30, 38, 47, 49],
"11" : [ 1, 2, 13, 14, 15, 16, 22, 25, 29, 30, 38, 42, 47, 49, 53],
"13" : [ 1, 2, 13, 14, 15, 16, 22, 25, 26, 29, 30, 38, 46, 47, 49, 52],
"12" : [ 1, 2, 13, 14, 15, 16, 22, 25, 29, 30, 38, 47, 49, 50],
"14" : [ 1, 2, 10, 11, 13, 14, 20, 22, 29, 30, 34, 37, 39, 40],
"15" : [ 0, 12, 21, 24, 27, 28],
"16" : [ ],
"CoveredDUAsByNodes" : 55,
"Duas" : 68
},{ "Name" : "findPartialSpan" ,
"Nodes" : 10,
"0" : [ ],
"1" : [ 16, 2, 7],
"2" : [ 16, 2, 7],
"3" : [ 16, 2, 3, 7, 8],
"4" : [ 16, 2, 7],
"6" : [ 16, 2, 18, 7, 9],
"5" : [ 16, 2, 7],
"7" : [ 0, 16, 17, 2, 18, 20, 7, 9, 11, 13],
"8" : [ 1, 4, 5, 6, 14, 15],
"9" : [ ],
"CoveredDUAsByNodes" : 18,
"Duas" : 22
},{ "Name" : "funkyFindLeafWithApproximateSpan" ,
"Nodes" : 9,
"0" : [ ],
"1" : [ ],
"2" : [ 0, 1, 2, 3, 6, 11, 14, 15],
"3" : [ ],
"5" : [ 16, 4],
"6" : [ 16, 19, 4, 7],
"4" : [ ],
"7" : [ 16, 18, 19, 4, 21, 7, 9, 12],
"8" : [ ],
"CoveredDUAsByNodes" : 16,
"Duas" : 23
},{ "Name" : "originalFindSyntacticHead" ,
"Nodes" : 13,
"0" : [ ],
"1" : [ 19, 5],
"2" : [ 19, 5],
"3" : [ 0, 1, 2, 19, 5, 22, 7, 8, 12],
"8" : [ 0, 1, 2, 19, 5, 22, 7, 8, 12, 14],
"4" : [ 0, 32, 1, 2, 19, 5, 22, 7, 8, 10, 12],
"6" : [ 0, 16, 32, 1, 2, 19, 5, 22, 7, 8, 10, 12],
"5" : [ 0, 32, 1, 2, 19, 35, 5, 22, 7, 8, 10, 12],
"7" : [ 0, 32, 1, 2, 36, 5, 7, 8, 10, 12, 16, 19, 22],
"9" : [ 0, 1, 33, 2, 5, 7, 8, 12, 14, 19, 22],
"10" : [ 5, 6, 11, 19, 23, 24, 26, 27],
"11" : [ 3, 4, 9, 13, 18, 20, 21],
"12" : [ ],
"CoveredDUAsByNodes" : 29,
"Duas" : 38
},{ "Name" : "parseStrings" ,
"Nodes" : 5,
"0" : [ ],
"1" : [ ],
"2" : [ 0, 1],
"4" : [ 0, 1],
"3" : [ 2],
"CoveredDUAsByNodes" : 3,
"Duas" : 3
},{ "Name" : "findTreeWithSpan" ,
"Nodes" : 19,
"0" : [ ],
"9" : [ 12],
"10" : [ 12, 14],
"11" : [ 16, 18, 19, 12, 14],
"16" : [ 16, 18, 3, 19, 20, 12, 14],
"12" : [ 16, 18, 19, 12, 14],
"13" : [ 16, 18, 19, 23, 9, 12, 14],
"1" : [ 0],
"2" : [ 0],
"3" : [ 0],
"4" : [ 0],
"5" : [ 0, 2, 7, 29, 30],
"7" : [ 0, 33, 2, 7, 29, 30, 31],
"8" : [ 0, 28],
"6" : [ 0],
"14" : [ 16, 18, 19, 5, 23, 24, 9, 12, 14],
"15" : [ 16, 18, 19, 22, 8, 12, 14],
"17" : [ 16, 1, 18, 3, 19, 20, 10, 26, 12, 14],
"18" : [ ],
"CoveredDUAsByNodes" : 24,
"Duas" : 34
}]
}