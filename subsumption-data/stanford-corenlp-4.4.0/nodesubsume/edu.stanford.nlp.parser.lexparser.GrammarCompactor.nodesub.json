{
"Class" : "edu.stanford.nlp.parser.lexparser.GrammarCompactor", 
"Methods" : [{ "Name" : "compactGrammar" ,
"Nodes" : 15,
"0" : [ ],
"13" : [ 0, 20, 25, 12],
"1" : [ 24],
"2" : [ 24],
"3" : [ 2, 3, 21, 22, 23, 24, 26, 30],
"14" : [ 2, 3, 21, 22, 23, 24, 26, 30],
"4" : [ 24, 29, 31],
"12" : [ 19, 4, 36, 39, 24, 29, 14, 31],
"5" : [ 33, 24, 10, 29, 31],
"11" : [ 33, 24, 40, 10, 29, 31],
"6" : [ 33, 34, 24, 10, 11, 29, 31],
"10" : [ 33, 34, 24, 10, 11, 44, 29, 31],
"7" : [ 33, 34, 37, 6, 24, 10, 11, 28, 29, 31],
"9" : [ 33, 34, 35, 37, 6, 38, 7, 10, 11, 16, 49, 18, 51, 24, 28, 29, 31],
"8" : [ 32, 33, 34, 37, 6, 9, 10, 11, 48, 24, 27, 28, 29, 31],
"CoveredDUAsByNodes" : 39,
"Duas" : 52
},{ "Name" : "computeInputPrior" ,
"Nodes" : 11,
"0" : [ ],
"1" : [ ],
"2" : [ 0],
"10" : [ 0],
"3" : [ ],
"4" : [ ],
"5" : [ ],
"6" : [ ],
"7" : [ ],
"8" : [ ],
"9" : [ 1],
"CoveredDUAsByNodes" : 2,
"Duas" : 2
},{ "Name" : "smartNegate" ,
"Nodes" : 4,
"0" : [ ],
"1" : [ 1, 2, 5, 7],
"2" : [ 0, 3, 4, 6],
"3" : [ ],
"CoveredDUAsByNodes" : 8,
"Duas" : 8
},{ "Name" : "writeFile" ,
"Nodes" : 7,
"0" : [ ],
"1" : [ 3],
"3" : [ 3, 4],
"4" : [ 2],
"2" : [ 0, 1, 6],
"5" : [ 2, 7],
"6" : [ ],
"CoveredDUAsByNodes" : 7,
"Duas" : 9
},{ "Name" : "convertGrammarToGraphs" ,
"Nodes" : 14,
"0" : [ ],
"1" : [ ],
"2" : [ 15],
"3" : [ 15],
"4" : [ 15],
"6" : [ 0, 2, 7, 9, 10, 11, 15],
"5" : [ 16, 15],
"13" : [ 16, 15],
"7" : [ 17, 3, 15],
"9" : [ 17, 3, 5, 25, 28, 15],
"8" : [ 17, 3, 15],
"10" : [ 18, 4, 14],
"12" : [ 18, 19, 4, 6, 23, 14],
"11" : [ 18, 4, 14],
"CoveredDUAsByNodes" : 19,
"Duas" : 30
},{ "Name" : "getGraphFromMap" ,
"Nodes" : 4,
"0" : [ ],
"2" : [ 0, 1, 2, 3],
"1" : [ ],
"3" : [ ],
"CoveredDUAsByNodes" : 4,
"Duas" : 7
},{ "Name" : "getTopCategoryOfSyntheticState" ,
"Nodes" : 6,
"0" : [ ],
"1" : [ 1, 2],
"2" : [ 1, 2, 3, 6, 7],
"3" : [ 1, 2, 4, 5],
"4" : [ 0],
"5" : [ ],
"CoveredDUAsByNodes" : 8,
"Duas" : 8
},{ "Name" : "addOneUnaryRule" ,
"Nodes" : 6,
"0" : [ ],
"1" : [ 7],
"2" : [ 7, 14],
"3" : [ 0, 2, 4, 7, 8, 9, 10, 13, 15],
"4" : [ 16, 1, 3, 5, 6, 11, 12],
"5" : [ ],
"CoveredDUAsByNodes" : 17,
"Duas" : 17
},{ "Name" : "addOneBinaryRule" ,
"Nodes" : 17,
"0" : [ ],
"15" : [ 0, 5, 7, 9, 12],
"1" : [ ],
"2" : [ 14],
"3" : [ 18, 14],
"4" : [ 17, 19, 14],
"5" : [ 17, 19, 14],
"10" : [ 17, 19, 14],
"6" : [ 17, 19, 14, 15],
"11" : [ 16, 13],
"12" : [ 16, 13],
"14" : [ 16, 13],
"13" : [ 16, 20, 13],
"7" : [ 2, 3, 11],
"8" : [ 2, 3, 4, 39, 40, 42, 11, 43],
"9" : [ 2, 3, 41, 11],
"16" : [ ],
"CoveredDUAsByNodes" : 22,
"Duas" : 44
},{ "Name" : "isSyntheticState" ,
"Nodes" : 5,
"0" : [ ],
"1" : [ 1],
"3" : [ 0],
"2" : [ ],
"4" : [ ],
"CoveredDUAsByNodes" : 2,
"Duas" : 2
},{ "Name" : "convertGraphsToGrammar" ,
"Nodes" : 46,
"0" : [ ],
"1" : [ ],
"2" : [ 36],
"3" : [ 36],
"4" : [ 36, 31],
"5" : [ 36, 31],
"6" : [ 36, 31],
"20" : [ 0, 33, 51, 36, 45, 31],
"21" : [ 0, 33, 51, 36, 45, 31],
"22" : [ 0, 33, 51, 36, 38, 45, 31],
"23" : [ 0, 33, 51, 36, 38, 45, 31],
"7" : [ 32, 64, 65, 2, 66, 3, 4, 36, 31],
"8" : [ 32, 64, 65, 2, 66, 3, 4, 36, 31],
"9" : [ 32, 64, 65, 2, 66, 3, 4, 36, 37, 31],
"10" : [ 32, 64, 65, 2, 66, 3, 4, 36, 37, 31],
"11" : [ 32, 64, 65, 2, 66, 3, 4, 36, 37, 31],
"13" : [ 32, 64, 65, 2, 66, 3, 67, 4, 36, 5, 37, 7, 60, 62, 31, 63],
"12" : [ 32, 64, 128, 65, 2, 66, 3, 4, 36, 37, 124, 125, 31, 127],
"14" : [ 32, 64, 65, 2, 66, 3, 4, 36, 37, 31],
"16" : [ 32, 64, 65, 2, 66, 3, 4, 36, 68, 37, 8, 10, 11, 139, 140, 141, 142, 47, 53, 117, 57, 58, 59, 31],
"15" : [ 32, 64, 65, 129, 2, 66, 3, 4, 36, 37, 138, 31],
"17" : [ 32, 64, 65, 2, 66, 3, 4, 36, 31],
"19" : [ 32, 64, 65, 2, 66, 3, 131, 4, 36, 132, 69, 133, 134, 12, 14, 49, 118, 55, 31],
"18" : [ 32, 64, 65, 2, 66, 130, 3, 4, 36, 123, 126, 31],
"24" : [ 0, 33, 36, 38, 70, 45, 15, 51, 119, 31],
"25" : [ 0, 33, 36, 71, 45, 16, 51, 120, 31],
"26" : [ 36, 31],
"27" : [ 36, 31],
"28" : [ 36, 31],
"29" : [ 36, 31],
"30" : [ 36, 82, 85, 31],
"33" : [ 36, 82, 85, 93, 31],
"34" : [ 96, 97, 98, 99, 36, 82, 85, 93, 31],
"37" : [ 96, 97, 98, 99, 36, 105, 82, 85, 93, 31],
"38" : [ 96, 97, 98, 99, 36, 105, 108, 82, 85, 93, 31],
"40" : [ 96, 97, 98, 99, 36, 105, 108, 109, 82, 85, 93, 31],
"41" : [ 96, 97, 98, 99, 36, 105, 108, 109, 112, 82, 83, 85, 93, 31],
"45" : [ 36, 31],
"39" : [ 96, 97, 98, 99, 36, 103, 105, 74, 108, 82, 114, 19, 85, 88, 91, 93, 31],
"35" : [ 96, 97, 98, 99, 36, 102, 73, 113, 18, 82, 85, 87, 90, 93, 31],
"36" : [ 96, 97, 98, 99, 36, 39, 82, 85, 93, 31],
"31" : [ 34, 36, 101, 72, 17, 82, 85, 86, 89, 31],
"42" : [ 35, 36, 100, 104, 75, 81, 20, 84, 92, 31],
"32" : [ 36, 31],
"43" : [ 36, 40, 41, 42, 76, 77, 78, 21, 22, 23, 24, 25, 26],
"44" : [ 43, 44, 79, 80, 27, 28, 29, 30],
"CoveredDUAsByNodes" : 119,
"Duas" : 145
}]
}