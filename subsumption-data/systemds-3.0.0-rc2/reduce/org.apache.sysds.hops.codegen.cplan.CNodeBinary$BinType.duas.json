{
"Class" : "org.apache.sysds.hops.codegen.cplan.CNodeBinary$BinType", 
"Methods" : [{ "Name" : "isCommutative" ,
"Duas" : 110,
"0" :  "(68,(68,68), this)",
"1" :  "(68,(68,68), this)",
"2" :  "(68,(71,71), this)",
"3" :  "(68,(71,71), this)",
"4" :  "(68,(75,75), this)",
"5" :  "(68,(75,75), this)",
"6" :  "(68,(75,75), this)",
"7" :  "(68,(75,75), this)",
"8" :  "(68,(75,75), this)",
"9" :  "(68,(75,75), this)",
"10" :  "(68,(75,75), this)",
"11" :  "(68,(75,75), this)",
"12" :  "(68,(75,75), this)",
"13" :  "(68,(75,75), this)",
"14" :  "(68,(75,75), this)",
"15" :  "(68,(75,75), this)",
"16" :  "(68,(75,75), this)",
"17" :  "(68,(75,75), this)",
"18" :  "(68,(75,75), this)",
"19" :  "(68,(75,75), this)",
"20" :  "(68,(71,71), this)",
"21" :  "(68,(71,71), this)",
"22" :  "(68,(71,71), this)",
"23" :  "(68,(71,71), this)",
"24" :  "(68,(71,71), this)",
"25" :  "(68,(71,71), this)",
"26" :  "(68,(71,71), this)",
"27" :  "(68,(71,71), this)",
"28" :  "(68,(71,71), this)",
"29" :  "(68,(71,71), this)",
"30" :  "(68,(71,71), this)",
"31" :  "(68,(71,71), this)",
"32" :  "(68,(71,71), this)",
"33" :  "(68,(71,71), this)",
"34" :  "(68,(68,68), this)",
"35" :  "(68,(68,68), this)",
"36" :  "(68,(68,68), this)",
"37" :  "(68,(68,68), this)",
"38" :  "(68,(68,68), this)",
"39" :  "(68,(68,68), this)",
"40" :  "(68,(68,68), this)",
"41" :  "(68,(68,68), this)",
"42" :  "(68,(68,68), this)",
"43" :  "(68,(68,68), this)",
"44" :  "(68,(68,68), this)",
"45" :  "(68,(68,68), this)",
"46" :  "(68,(68,68), this)",
"47" :  "(68,(68,68), this)",
"48" :  "(68,(68,68), this)",
"49" :  "(68,(68,68), this)",
"50" :  "(68,(68,68), this)",
"51" :  "(68,(68,68), this)",
"52" :  "(68,(68,68), EQUAL)",
"53" :  "(68,(68,68), EQUAL)",
"54" :  "(68,(68,68), NOTEQUAL)",
"55" :  "(68,(68,68), NOTEQUAL)",
"56" :  "(68,(68,68), PLUS)",
"57" :  "(68,(68,68), PLUS)",
"58" :  "(68,(68,68), MULT)",
"59" :  "(68,(68,68), MULT)",
"60" :  "(68,(68,68), MIN)",
"61" :  "(68,(68,68), MIN)",
"62" :  "(68,(68,68), MAX)",
"63" :  "(68,(68,68), MAX)",
"64" :  "(68,(68,68), OR)",
"65" :  "(68,(68,68), OR)",
"66" :  "(68,(68,68), AND)",
"67" :  "(68,(68,68), AND)",
"68" :  "(68,(68,68), XOR)",
"69" :  "(68,(68,68), XOR)",
"70" :  "(68,(68,68), BITWAND)",
"71" :  "(68,(68,68), BITWAND)",
"72" :  "(68,(71,71), VECT_EQUAL_SCALAR)",
"73" :  "(68,(71,71), VECT_EQUAL_SCALAR)",
"74" :  "(68,(71,71), VECT_NOTEQUAL_SCALAR)",
"75" :  "(68,(71,71), VECT_NOTEQUAL_SCALAR)",
"76" :  "(68,(71,71), VECT_PLUS_SCALAR)",
"77" :  "(68,(71,71), VECT_PLUS_SCALAR)",
"78" :  "(68,(71,71), VECT_MULT_SCALAR)",
"79" :  "(68,(71,71), VECT_MULT_SCALAR)",
"80" :  "(68,(71,71), VECT_MIN_SCALAR)",
"81" :  "(68,(71,71), VECT_MIN_SCALAR)",
"82" :  "(68,(71,71), VECT_MAX_SCALAR)",
"83" :  "(68,(71,71), VECT_MAX_SCALAR)",
"84" :  "(68,(71,71), VECT_XOR_SCALAR)",
"85" :  "(68,(71,71), VECT_XOR_SCALAR)",
"86" :  "(68,(71,71), VECT_BITWAND_SCALAR)",
"87" :  "(68,(71,71), VECT_BITWAND_SCALAR)",
"88" :  "(68,(75,75), VECT_EQUAL)",
"89" :  "(68,(75,75), VECT_EQUAL)",
"90" :  "(68,(75,75), VECT_NOTEQUAL)",
"91" :  "(68,(75,75), VECT_NOTEQUAL)",
"92" :  "(68,(75,75), VECT_PLUS)",
"93" :  "(68,(75,75), VECT_PLUS)",
"94" :  "(68,(75,75), VECT_MULT)",
"95" :  "(68,(75,75), VECT_MULT)",
"96" :  "(68,(75,75), VECT_MIN)",
"97" :  "(68,(75,75), VECT_MIN)",
"98" :  "(68,(75,75), VECT_MAX)",
"99" :  "(68,(75,75), VECT_MAX)",
"100" :  "(68,(75,75), VECT_XOR)",
"101" :  "(68,(75,75), VECT_XOR)",
"102" :  "(68,(75,75), VECT_BITWAND)",
"103" :  "(68,(75,75), VECT_BITWAND)",
"104" :  "(68,(78,78), ssComm)",
"105" :  "(68,(78,78), ssComm)",
"106" :  "(71,(78,78), vsComm)",
"107" :  "(71,(78,78), vsComm)",
"108" :  "(75,(78,78), vvComm)",
"109" :  "(75,(78,78), vvComm)"},{ "Name" : "isElementwise" ,
"Duas" : 12,
"0" :  "(82,(82,82), this)",
"1" :  "(82,(82,82), this)",
"2" :  "(82,(82,82), this)",
"3" :  "(82,(82,82), this)",
"4" :  "(82,(82,82), this)",
"5" :  "(82,(82,82), this)",
"6" :  "(82,(82,82), DOT_PRODUCT)",
"7" :  "(82,(82,82), DOT_PRODUCT)",
"8" :  "(82,(82,82), VECT_MATRIXMULT)",
"9" :  "(82,(82,82), VECT_MATRIXMULT)",
"10" :  "(82,(82,82), VECT_OUTERMULT_ADD)",
"11" :  "(82,(82,82), VECT_OUTERMULT_ADD)"},{ "Name" : "isVectorPrimitive" ,
"Duas" : 6,
"0" :  "(86,(86,86), this)",
"1" :  "(86,(86,88), this)",
"2" :  "(86,(87,87), this)",
"3" :  "(86,(87,88), this)",
"4" :  "(86,(88,88), this)",
"5" :  "(86,(88,88), this)"},{ "Name" : "isVectorScalarPrimitive" ,
"Duas" : 64,
"0" :  "(91,(91,91), this)",
"1" :  "(91,(91,91), this)",
"2" :  "(91,(91,91), this)",
"3" :  "(91,(91,91), this)",
"4" :  "(91,(91,91), this)",
"5" :  "(91,(91,91), this)",
"6" :  "(91,(91,91), this)",
"7" :  "(91,(91,91), this)",
"8" :  "(91,(91,91), this)",
"9" :  "(91,(91,91), this)",
"10" :  "(91,(91,91), this)",
"11" :  "(91,(91,91), this)",
"12" :  "(91,(91,91), this)",
"13" :  "(91,(91,91), this)",
"14" :  "(91,(91,91), this)",
"15" :  "(91,(91,91), this)",
"16" :  "(91,(91,91), this)",
"17" :  "(91,(91,91), this)",
"18" :  "(91,(91,91), this)",
"19" :  "(91,(91,91), this)",
"20" :  "(91,(91,91), this)",
"21" :  "(91,(91,91), this)",
"22" :  "(91,(91,91), this)",
"23" :  "(91,(91,91), this)",
"24" :  "(91,(91,91), this)",
"25" :  "(91,(91,91), this)",
"26" :  "(91,(91,91), this)",
"27" :  "(91,(91,91), this)",
"28" :  "(91,(91,91), this)",
"29" :  "(91,(91,91), this)",
"30" :  "(91,(91,91), this)",
"31" :  "(91,(91,91), this)",
"32" :  "(91,(91,91), VECT_DIV_SCALAR)",
"33" :  "(91,(91,91), VECT_DIV_SCALAR)",
"34" :  "(91,(91,91), VECT_MULT_SCALAR)",
"35" :  "(91,(91,91), VECT_MULT_SCALAR)",
"36" :  "(91,(91,91), VECT_MINUS_SCALAR)",
"37" :  "(91,(91,91), VECT_MINUS_SCALAR)",
"38" :  "(91,(91,91), VECT_PLUS_SCALAR)",
"39" :  "(91,(91,91), VECT_PLUS_SCALAR)",
"40" :  "(91,(91,91), VECT_POW_SCALAR)",
"41" :  "(91,(91,91), VECT_POW_SCALAR)",
"42" :  "(91,(91,91), VECT_MIN_SCALAR)",
"43" :  "(91,(91,91), VECT_MIN_SCALAR)",
"44" :  "(91,(91,91), VECT_MAX_SCALAR)",
"45" :  "(91,(91,91), VECT_MAX_SCALAR)",
"46" :  "(91,(91,91), VECT_EQUAL_SCALAR)",
"47" :  "(91,(91,91), VECT_EQUAL_SCALAR)",
"48" :  "(91,(91,91), VECT_NOTEQUAL_SCALAR)",
"49" :  "(91,(91,91), VECT_NOTEQUAL_SCALAR)",
"50" :  "(91,(91,91), VECT_LESS_SCALAR)",
"51" :  "(91,(91,91), VECT_LESS_SCALAR)",
"52" :  "(91,(91,91), VECT_LESSEQUAL_SCALAR)",
"53" :  "(91,(91,91), VECT_LESSEQUAL_SCALAR)",
"54" :  "(91,(91,91), VECT_GREATER_SCALAR)",
"55" :  "(91,(91,91), VECT_GREATER_SCALAR)",
"56" :  "(91,(91,91), VECT_GREATEREQUAL_SCALAR)",
"57" :  "(91,(91,91), VECT_GREATEREQUAL_SCALAR)",
"58" :  "(91,(91,91), VECT_CBIND)",
"59" :  "(91,(91,91), VECT_CBIND)",
"60" :  "(91,(91,91), VECT_XOR_SCALAR)",
"61" :  "(91,(91,91), VECT_XOR_SCALAR)",
"62" :  "(91,(91,91), VECT_BITWAND_SCALAR)",
"63" :  "(91,(91,91), VECT_BITWAND_SCALAR)"},{ "Name" : "isVectorVectorPrimitive" ,
"Duas" : 64,
"0" :  "(102,(102,102), this)",
"1" :  "(102,(102,102), this)",
"2" :  "(102,(102,102), this)",
"3" :  "(102,(102,102), this)",
"4" :  "(102,(102,102), this)",
"5" :  "(102,(102,102), this)",
"6" :  "(102,(102,102), this)",
"7" :  "(102,(102,102), this)",
"8" :  "(102,(102,102), this)",
"9" :  "(102,(102,102), this)",
"10" :  "(102,(102,102), this)",
"11" :  "(102,(102,102), this)",
"12" :  "(102,(102,102), this)",
"13" :  "(102,(102,102), this)",
"14" :  "(102,(102,102), this)",
"15" :  "(102,(102,102), this)",
"16" :  "(102,(102,102), this)",
"17" :  "(102,(102,102), this)",
"18" :  "(102,(102,102), this)",
"19" :  "(102,(102,102), this)",
"20" :  "(102,(102,102), this)",
"21" :  "(102,(102,102), this)",
"22" :  "(102,(102,102), this)",
"23" :  "(102,(102,102), this)",
"24" :  "(102,(102,102), this)",
"25" :  "(102,(102,102), this)",
"26" :  "(102,(102,102), this)",
"27" :  "(102,(102,102), this)",
"28" :  "(102,(102,102), this)",
"29" :  "(102,(102,102), this)",
"30" :  "(102,(102,102), this)",
"31" :  "(102,(102,102), this)",
"32" :  "(102,(102,102), VECT_DIV)",
"33" :  "(102,(102,102), VECT_DIV)",
"34" :  "(102,(102,102), VECT_MULT)",
"35" :  "(102,(102,102), VECT_MULT)",
"36" :  "(102,(102,102), VECT_MINUS)",
"37" :  "(102,(102,102), VECT_MINUS)",
"38" :  "(102,(102,102), VECT_PLUS)",
"39" :  "(102,(102,102), VECT_PLUS)",
"40" :  "(102,(102,102), VECT_MIN)",
"41" :  "(102,(102,102), VECT_MIN)",
"42" :  "(102,(102,102), VECT_MAX)",
"43" :  "(102,(102,102), VECT_MAX)",
"44" :  "(102,(102,102), VECT_EQUAL)",
"45" :  "(102,(102,102), VECT_EQUAL)",
"46" :  "(102,(102,102), VECT_NOTEQUAL)",
"47" :  "(102,(102,102), VECT_NOTEQUAL)",
"48" :  "(102,(102,102), VECT_LESS)",
"49" :  "(102,(102,102), VECT_LESS)",
"50" :  "(102,(102,102), VECT_LESSEQUAL)",
"51" :  "(102,(102,102), VECT_LESSEQUAL)",
"52" :  "(102,(102,102), VECT_GREATER)",
"53" :  "(102,(102,102), VECT_GREATER)",
"54" :  "(102,(102,102), VECT_GREATEREQUAL)",
"55" :  "(102,(102,102), VECT_GREATEREQUAL)",
"56" :  "(102,(102,102), VECT_XOR)",
"57" :  "(102,(102,102), VECT_XOR)",
"58" :  "(102,(102,102), VECT_BITWAND)",
"59" :  "(102,(102,102), VECT_BITWAND)",
"60" :  "(102,(102,102), VECT_BIASADD)",
"61" :  "(102,(102,102), VECT_BIASADD)",
"62" :  "(102,(102,102), VECT_BIASMULT)",
"63" :  "(102,(102,102), VECT_BIASMULT)"},{ "Name" : "isVectorMatrixPrimitive" ,
"Duas" : 8,
"0" :  "(112,(112,112), this)",
"1" :  "(112,(112,112), this)",
"2" :  "(112,(112,112), this)",
"3" :  "(112,(112,112), this)",
"4" :  "(112,(112,112), VECT_MATRIXMULT)",
"5" :  "(112,(112,112), VECT_MATRIXMULT)",
"6" :  "(112,(112,112), VECT_OUTERMULT_ADD)",
"7" :  "(112,(112,112), VECT_OUTERMULT_ADD)"},{ "Name" : "isNotSupportedBySpoofCUDA" ,
"Duas" : 8,
"0" :  "(124,(124,124), this)",
"1" :  "(124,(124,124), this)",
"2" :  "(124,(124,124), this)",
"3" :  "(124,(124,124), this)",
"4" :  "(124,(124,124), VECT_BIASADD)",
"5" :  "(124,(124,124), VECT_BIASADD)",
"6" :  "(124,(124,124), VECT_BIASMULT)",
"7" :  "(124,(124,124), VECT_BIASMULT)"}]
}