{
"Class" : "org.apache.sysds.runtime.instructions.fed.BinaryFEDInstruction", 
"Methods" : [{ "Name" : "parseInstruction" ,
"Duas" : 56,
"0" :  "(49,(49,51), str)",
"1" :  "(49,(49,54), str)",
"2" :  "(49,54, str)",
"3" :  "(49,74, str)",
"4" :  "(49,70, str)",
"5" :  "(49,51, str)",
"6" :  "(49,(49,51), SPARK)",
"7" :  "(49,(49,54), SPARK)",
"8" :  "(49,(67,67), SCALAR)",
"9" :  "(49,(67,69), SCALAR)",
"10" :  "(49,(67,68), SCALAR)",
"11" :  "(49,(67,69), SCALAR)",
"12" :  "(49,(69,69), MATRIX)",
"13" :  "(49,(69,71), MATRIX)",
"14" :  "(49,(69,70), MATRIX)",
"15" :  "(49,(69,71), MATRIX)",
"16" :  "(49,(71,71), TENSOR)",
"17" :  "(49,(71,73), TENSOR)",
"18" :  "(49,(71,72), TENSOR)",
"19" :  "(49,(71,73), TENSOR)",
"20" :  "(51,54, str)",
"21" :  "(51,74, str)",
"22" :  "(51,70, str)",
"23" :  "(56,76, opcode)",
"24" :  "(56,74, opcode)",
"25" :  "(56,70, opcode)",
"26" :  "(57,(67,67), in1)",
"27" :  "(57,(67,69), in1)",
"28" :  "(57,(69,69), in1)",
"29" :  "(57,(69,71), in1)",
"30" :  "(57,(71,71), in1)",
"31" :  "(57,(71,73), in1)",
"32" :  "(57,(73,73), in1)",
"33" :  "(57,(73,73), in1)",
"34" :  "(57,(73,74), in1)",
"35" :  "(57,(73,76), in1)",
"36" :  "(57,74, in1)",
"37" :  "(57,70, in1)",
"38" :  "(58,(73,73), in2)",
"39" :  "(58,(73,76), in2)",
"40" :  "(58,74, in2)",
"41" :  "(58,(73,73), in2)",
"42" :  "(58,(73,74), in2)",
"43" :  "(58,(71,72), in2)",
"44" :  "(58,(71,73), in2)",
"45" :  "(58,(69,70), in2)",
"46" :  "(58,(69,71), in2)",
"47" :  "(58,70, in2)",
"48" :  "(58,(67,68), in2)",
"49" :  "(58,(67,69), in2)",
"50" :  "(59,74, out)",
"51" :  "(59,70, out)",
"52" :  "(60,74, fedOut)",
"53" :  "(60,70, fedOut)",
"54" :  "(63,74, operator)",
"55" :  "(63,70, operator)"},{ "Name" : "checkOutputDataType" ,
"Duas" : 15,
"0" :  "(102,(102,102), in1)",
"1" :  "(102,(102,102), in1)",
"2" :  "(102,104, in1)",
"3" :  "(102,104, in2)",
"4" :  "(102,(102,102), in2)",
"5" :  "(102,(102,105), in2)",
"6" :  "(102,(102,103), out)",
"7" :  "(102,(102,105), out)",
"8" :  "(102,104, out)",
"9" :  "(102,(102,102), MATRIX)",
"10" :  "(102,(102,102), MATRIX)",
"11" :  "(102,(102,103), MATRIX)",
"12" :  "(102,(102,105), MATRIX)",
"13" :  "(102,(102,102), MATRIX)",
"14" :  "(102,(102,105), MATRIX)"}]
}