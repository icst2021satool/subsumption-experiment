{
"Class" : "org.apache.sysds.runtime.instructions.spark.functions.ExtractBlockForBinaryReblock", 
"Methods" : [{ "Name" : "<init>" ,
"Duas" : 11,
"0" :  "(41,(48,48), this)",
"1" :  "(41,(48,49), this)",
"2" :  "(41,49, this)",
"3" :  "(41,(48,49), this)",
"4" :  "(41,(48,50), this)",
"5" :  "(44,(48,48), this.in_blen)",
"6" :  "(44,(48,49), this.in_blen)",
"7" :  "(44,49, this.in_blen)",
"8" :  "(45,49, this.out_blen)",
"9" :  "(45,(48,49), this.out_blen)",
"10" :  "(45,(48,50), this.out_blen)"},{ "Name" : "call" ,
"Duas" : 114,
"0" :  "(56,(68,68), this)",
"1" :  "(56,(68,68), this)",
"2" :  "(56,74, this)",
"3" :  "(56,75, this)",
"4" :  "(56,79, this)",
"5" :  "(56,80, this)",
"6" :  "(56,81, this)",
"7" :  "(56,82, this)",
"8" :  "(56,83, this)",
"9" :  "(56,84, this)",
"10" :  "(56,85, this)",
"11" :  "(56,86, this)",
"12" :  "(56,(68,68), this)",
"13" :  "(56,(68,68), this)",
"14" :  "(56,(68,68), this.in_blen)",
"15" :  "(56,(68,68), this.in_blen)",
"16" :  "(56,83, this.in_blen)",
"17" :  "(56,84, this.in_blen)",
"18" :  "(56,(68,68), this.in_blen)",
"19" :  "(56,(68,68), this.in_blen)",
"20" :  "(56,(68,68), this.out_blen)",
"21" :  "(56,(68,68), this.out_blen)",
"22" :  "(56,74, this.out_blen)",
"23" :  "(56,75, this.out_blen)",
"24" :  "(56,79, this.out_blen)",
"25" :  "(56,81, this.out_blen)",
"26" :  "(56,85, this.out_blen)",
"27" :  "(56,86, this.out_blen)",
"28" :  "(56,(68,68), this.out_blen)",
"29" :  "(56,(68,68), this.out_blen)",
"30" :  "(56,74, this.rlen)",
"31" :  "(56,75, this.clen)",
"32" :  "(57,(77,77), in)",
"33" :  "(57,(77,79), in)",
"34" :  "(57,95, in)",
"35" :  "(57,89, in)",
"36" :  "(57,90, in)",
"37" :  "(59,79, startRowGlobalCellIndex)",
"38" :  "(60,80, endRowGlobalCellIndex)",
"39" :  "(61,81, startColGlobalCellIndex)",
"40" :  "(62,82, endColGlobalCellIndex)",
"41" :  "(64,71, out_startRowBlockIndex)",
"42" :  "(65,(71,72), out_endRowBlockIndex)",
"43" :  "(65,(71,101), out_endRowBlockIndex)",
"44" :  "(66,72, out_startColBlockIndex)",
"45" :  "(67,(72,73), out_endColBlockIndex)",
"46" :  "(67,(72,71), out_endColBlockIndex)",
"47" :  "(68,(88,89), aligned)",
"48" :  "(68,(88,93), aligned)",
"49" :  "(70,101, retVal)",
"50" :  "(70,97, retVal)",
"51" :  "(71,(71,72), i)",
"52" :  "(71,(71,101), i)",
"53" :  "(71,71, i)",
"54" :  "(71,73, i)",
"55" :  "(71,74, i)",
"56" :  "(71,79, i)",
"57" :  "(71,80, i)",
"58" :  "(72,(72,73), j)",
"59" :  "(72,(72,71), j)",
"60" :  "(72,73, j)",
"61" :  "(72,75, j)",
"62" :  "(72,81, j)",
"63" :  "(72,82, j)",
"64" :  "(72,72, j)",
"65" :  "(73,97, indx)",
"66" :  "(76,97, blk)",
"67" :  "(76,95, blk)",
"68" :  "(76,89, blk)",
"69" :  "(76,90, blk)",
"70" :  "(79,(93,94), rowLower)",
"71" :  "(79,(93,97), rowLower)",
"72" :  "(80,(93,94), rowUpper)",
"73" :  "(80,(93,97), rowUpper)",
"74" :  "(81,(94,95), colLower)",
"75" :  "(81,(94,93), colLower)",
"76" :  "(82,(94,95), colUpper)",
"77" :  "(82,(94,93), colUpper)",
"78" :  "(83,95, aixi)",
"79" :  "(84,95, aixj)",
"80" :  "(85,95, cixi)",
"81" :  "(85,89, cixi)",
"82" :  "(86,95, cixj)",
"83" :  "(86,89, cixj)",
"84" :  "(93,(93,94), i2)",
"85" :  "(93,(93,97), i2)",
"86" :  "(93,93, i2)",
"87" :  "(93,95, i2)",
"88" :  "(94,(94,95), j2)",
"89" :  "(94,(94,93), j2)",
"90" :  "(94,95, j2)",
"91" :  "(94,94, j2)",
"92" :  "(94,(94,95), j2)",
"93" :  "(94,(94,93), j2)",
"94" :  "(94,95, j2)",
"95" :  "(94,94, j2)",
"96" :  "(93,(93,94), i2)",
"97" :  "(93,(93,97), i2)",
"98" :  "(93,93, i2)",
"99" :  "(93,95, i2)",
"100" :  "(72,(72,73), j)",
"101" :  "(72,(72,71), j)",
"102" :  "(72,73, j)",
"103" :  "(72,75, j)",
"104" :  "(72,81, j)",
"105" :  "(72,82, j)",
"106" :  "(72,72, j)",
"107" :  "(71,(71,72), i)",
"108" :  "(71,(71,101), i)",
"109" :  "(71,71, i)",
"110" :  "(71,73, i)",
"111" :  "(71,74, i)",
"112" :  "(71,79, i)",
"113" :  "(71,80, i)"},{ "Name" : "getEndGlobalIndex" ,
"Duas" : 17,
"0" :  "(106,106, this)",
"1" :  "(106,107, this)",
"2" :  "(106,110, blockIndex)",
"3" :  "(106,111, blockIndex)",
"4" :  "(106,(107,107), isIn)",
"5" :  "(106,(107,107), isIn)",
"6" :  "(106,(106,106), isRow)",
"7" :  "(106,(106,106), isRow)",
"8" :  "(106,(107,107), isRow)",
"9" :  "(106,(107,107), isRow)",
"10" :  "(106,(107,107), isRow)",
"11" :  "(106,(107,107), isRow)",
"12" :  "(106,106, this.clen)",
"13" :  "(106,106, this.rlen)",
"14" :  "(106,107, this.out_blen)",
"15" :  "(106,107, this.in_blen)",
"16" :  "(106,110, len)"}]
}