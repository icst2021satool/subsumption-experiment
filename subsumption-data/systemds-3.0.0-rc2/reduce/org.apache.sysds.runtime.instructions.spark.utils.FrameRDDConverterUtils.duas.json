{
"Class" : "org.apache.sysds.runtime.instructions.spark.utils.FrameRDDConverterUtils", 
"Methods" : [{ "Name" : "csvToBinaryBlock" ,
"Duas" : 33,
"0" :  "(88,102, input)",
"1" :  "(88,90, input)",
"2" :  "(88,(88,89), mc)",
"3" :  "(88,(88,101), mc)",
"4" :  "(88,106, mc)",
"5" :  "(88,109, mc)",
"6" :  "(88,97, mc)",
"7" :  "(88,(105,105), schema)",
"8" :  "(88,(105,106), schema)",
"9" :  "(88,(105,106), schema)",
"10" :  "(88,(105,109), schema)",
"11" :  "(88,109, schema)",
"12" :  "(88,109, hasHeader)",
"13" :  "(88,(95,95), hasHeader)",
"14" :  "(88,(95,95), hasHeader)",
"15" :  "(88,109, delim)",
"16" :  "(88,94, delim)",
"17" :  "(88,96, delim)",
"18" :  "(88,109, naStrings)",
"19" :  "(88,106, STRING)",
"20" :  "(90,95, tmp)",
"21" :  "(91,(92,92), tmpStr)",
"22" :  "(91,(92,93), tmpStr)",
"23" :  "(91,94, tmpStr)",
"24" :  "(91,(93,93), tmpStr)",
"25" :  "(91,(93,93), tmpStr)",
"26" :  "(93,(94,94), metaHeader)",
"27" :  "(93,(94,94), metaHeader)",
"28" :  "(93,(95,95), metaHeader)",
"29" :  "(93,(95,95), metaHeader)",
"30" :  "(94,96, tmpStr)",
"31" :  "(102,109, prepinput)",
"32" :  "(106,109, schema)"},{ "Name" : "binaryBlockToCsv" ,
"Duas" : 8,
"0" :  "(130,138, props)",
"1" :  "(130,(133,133), strict)",
"2" :  "(130,(133,138), strict)",
"3" :  "(130,138, input)",
"4" :  "(130,(133,134), input)",
"5" :  "(130,(133,138), input)",
"6" :  "(130,134, input)",
"7" :  "(134,138, input)"},{ "Name" : "textCellToBinaryBlockLongIndex" ,
"Duas" : 12,
"0" :  "(160,167, input)",
"1" :  "(160,161, mc)",
"2" :  "(160,166, mc)",
"3" :  "(160,(160,160), schema)",
"4" :  "(160,(160,161), schema)",
"5" :  "(160,(162,162), schema)",
"6" :  "(160,(162,162), schema)",
"7" :  "(160,(160,161), schema)",
"8" :  "(160,(160,166), schema)",
"9" :  "(160,166, schema)",
"10" :  "(160,161, STRING)",
"11" :  "(161,166, schema)"},{ "Name" : "matrixBlockToBinaryBlockLongIndex" ,
"Duas" : 8,
"0" :  "(190,(194,196), dcIn)",
"1" :  "(190,(194,205), dcIn)",
"2" :  "(190,196, dcIn)",
"3" :  "(190,205, in)",
"4" :  "(190,196, in)",
"5" :  "(191,205, mc)",
"6" :  "(191,197, mc)",
"7" :  "(201,205, in)"},{ "Name" : "dataFrameToBinaryBlock" ,
"Duas" : 24,
"0" :  "(231,244, df)",
"1" :  "(231,249, df)",
"2" :  "(231,243, df)",
"3" :  "(231,232, df)",
"4" :  "(231,234, df)",
"5" :  "(231,236, df)",
"6" :  "(231,(231,232), mc)",
"7" :  "(231,(231,241), mc)",
"8" :  "(231,247, mc)",
"9" :  "(231,248, mc)",
"10" :  "(231,253, mc)",
"11" :  "(231,237, mc)",
"12" :  "(231,(241,242), containsID)",
"13" :  "(231,(241,244), containsID)",
"14" :  "(231,249, containsID)",
"15" :  "(231,253, containsID)",
"16" :  "(231,232, containsID)",
"17" :  "(231,(233,233), containsID)",
"18" :  "(231,(233,233), containsID)",
"19" :  "(231,250, out)",
"20" :  "(232,(235,236), colVect)",
"21" :  "(232,(235,236), colVect)",
"22" :  "(233,236, off)",
"23" :  "(234,237, rlen)"},{ "Name" : "binaryBlockToDataFrame" ,
"Duas" : 11,
"0" :  "(260,273, sparkSession)",
"1" :  "(260,264, in)",
"2" :  "(260,(260,261), mc)",
"3" :  "(260,(260,264), mc)",
"4" :  "(260,269, mc)",
"5" :  "(260,(268,269), schema)",
"6" :  "(260,(268,270), schema)",
"7" :  "(260,270, schema)",
"8" :  "(260,269, STRING)",
"9" :  "(264,273, rowRDD)",
"10" :  "(269,270, schema)"},{ "Name" : "convertFrameSchemaToDFSchema" ,
"Duas" : 31,
"0" :  "(294,303, fschema)",
"1" :  "(294,(297,298), containsID)",
"2" :  "(294,(297,302), containsID)",
"3" :  "(294,307, DoubleType)",
"4" :  "(294,298, DoubleType)",
"5" :  "(294,(305,310), $SwitchMap$org$apache$sysds$common$Types$ValueType)",
"6" :  "(294,(305,306), $SwitchMap$org$apache$sysds$common$Types$ValueType)",
"7" :  "(294,(305,307), $SwitchMap$org$apache$sysds$common$Types$ValueType)",
"8" :  "(294,(305,308), $SwitchMap$org$apache$sysds$common$Types$ValueType)",
"9" :  "(294,(305,309), $SwitchMap$org$apache$sysds$common$Types$ValueType)",
"10" :  "(294,306, StringType)",
"11" :  "(294,310, StringType)",
"12" :  "(294,308, LongType)",
"13" :  "(294,309, BooleanType)",
"14" :  "(294,311, LOG)",
"15" :  "(294,316, fields)",
"16" :  "(294,313, fields)",
"17" :  "(294,298, fields)",
"18" :  "(302,313, col)",
"19" :  "(303,(305,310), schema)",
"20" :  "(303,(305,306), schema)",
"21" :  "(303,(305,307), schema)",
"22" :  "(303,(305,308), schema)",
"23" :  "(303,(305,309), schema)",
"24" :  "(303,311, schema)",
"25" :  "(306,313, dt)",
"26" :  "(307,313, dt)",
"27" :  "(308,313, dt)",
"28" :  "(309,313, dt)",
"29" :  "(310,313, dt)",
"30" :  "(313,313, col)"},{ "Name" : "convertDFSchemaToFrameSchema" ,
"Duas" : 121,
"0" :  "(334,336, dfschema)",
"1" :  "(334,(340,341), dfschema)",
"2" :  "(334,(340,366), dfschema)",
"3" :  "(334,341, dfschema)",
"4" :  "(334,342, colnames)",
"5" :  "(334,354, colnames)",
"6" :  "(334,357, colnames)",
"7" :  "(334,336, fschema)",
"8" :  "(334,345, fschema)",
"9" :  "(334,348, fschema)",
"10" :  "(334,363, fschema)",
"11" :  "(334,358, fschema)",
"12" :  "(334,350, fschema)",
"13" :  "(334,(334,334), containsID)",
"14" :  "(334,(334,334), containsID)",
"15" :  "(334,(343,343), DoubleType)",
"16" :  "(334,(343,345), DoubleType)",
"17" :  "(334,(344,345), FloatType)",
"18" :  "(334,(344,346), FloatType)",
"19" :  "(334,345, FP64)",
"20" :  "(334,358, FP64)",
"21" :  "(334,(346,346), LongType)",
"22" :  "(334,(346,348), LongType)",
"23" :  "(334,(347,348), IntegerType)",
"24" :  "(334,(347,349), IntegerType)",
"25" :  "(334,348, INT64)",
"26" :  "(334,(349,350), BooleanType)",
"27" :  "(334,(349,351), BooleanType)",
"28" :  "(334,350, BOOLEAN)",
"29" :  "(334,363, STRING)",
"30" :  "(335,(352,353), containsVect)",
"31" :  "(335,(352,354), containsVect)",
"32" :  "(336,(356,357), lenVect)",
"33" :  "(336,(356,360), lenVect)",
"34" :  "(337,366, colVect)",
"35" :  "(340,(340,341), i)",
"36" :  "(340,(340,366), i)",
"37" :  "(340,341, i)",
"38" :  "(340,340, i)",
"39" :  "(340,342, pos)",
"40" :  "(340,345, pos)",
"41" :  "(340,348, pos)",
"42" :  "(340,363, pos)",
"43" :  "(340,354, pos)",
"44" :  "(340,355, pos)",
"45" :  "(340,357, pos)",
"46" :  "(340,358, pos)",
"47" :  "(340,350, pos)",
"48" :  "(341,(343,343), structType)",
"49" :  "(341,(343,345), structType)",
"50" :  "(341,(344,345), structType)",
"51" :  "(341,(344,346), structType)",
"52" :  "(341,(346,346), structType)",
"53" :  "(341,(346,348), structType)",
"54" :  "(341,(347,348), structType)",
"55" :  "(341,(347,349), structType)",
"56" :  "(341,(349,350), structType)",
"57" :  "(341,(349,351), structType)",
"58" :  "(341,(351,352), structType)",
"59" :  "(341,(351,363), structType)",
"60" :  "(345,342, pos)",
"61" :  "(345,345, pos)",
"62" :  "(345,348, pos)",
"63" :  "(345,363, pos)",
"64" :  "(345,354, pos)",
"65" :  "(345,355, pos)",
"66" :  "(345,357, pos)",
"67" :  "(345,358, pos)",
"68" :  "(345,350, pos)",
"69" :  "(348,342, pos)",
"70" :  "(348,345, pos)",
"71" :  "(348,348, pos)",
"72" :  "(348,363, pos)",
"73" :  "(348,354, pos)",
"74" :  "(348,355, pos)",
"75" :  "(348,357, pos)",
"76" :  "(348,358, pos)",
"77" :  "(348,350, pos)",
"78" :  "(350,342, pos)",
"79" :  "(350,345, pos)",
"80" :  "(350,348, pos)",
"81" :  "(350,363, pos)",
"82" :  "(350,354, pos)",
"83" :  "(350,355, pos)",
"84" :  "(350,357, pos)",
"85" :  "(350,358, pos)",
"86" :  "(350,350, pos)",
"87" :  "(354,357, name)",
"88" :  "(355,366, colVect)",
"89" :  "(356,(356,357), j)",
"90" :  "(356,(356,360), j)",
"91" :  "(356,357, j)",
"92" :  "(356,356, j)",
"93" :  "(358,342, pos)",
"94" :  "(358,345, pos)",
"95" :  "(358,348, pos)",
"96" :  "(358,363, pos)",
"97" :  "(358,354, pos)",
"98" :  "(358,355, pos)",
"99" :  "(358,350, pos)",
"100" :  "(358,357, pos)",
"101" :  "(358,358, pos)",
"102" :  "(356,(356,357), j)",
"103" :  "(356,(356,360), j)",
"104" :  "(356,357, j)",
"105" :  "(356,356, j)",
"106" :  "(360,(352,353), containsVect)",
"107" :  "(360,(352,354), containsVect)",
"108" :  "(363,342, pos)",
"109" :  "(363,345, pos)",
"110" :  "(363,348, pos)",
"111" :  "(363,363, pos)",
"112" :  "(363,354, pos)",
"113" :  "(363,355, pos)",
"114" :  "(363,357, pos)",
"115" :  "(363,358, pos)",
"116" :  "(363,350, pos)",
"117" :  "(340,(340,341), i)",
"118" :  "(340,(340,366), i)",
"119" :  "(340,341, i)",
"120" :  "(340,340, i)"},{ "Name" : "getColVectFromDFSchema" ,
"Duas" : 18,
"0" :  "(377,(378,379), dfschema)",
"1" :  "(377,(378,384), dfschema)",
"2" :  "(377,379, dfschema)",
"3" :  "(377,(377,377), containsID)",
"4" :  "(377,(377,377), containsID)",
"5" :  "(377,381, off)",
"6" :  "(378,(378,379), i)",
"7" :  "(378,(378,384), i)",
"8" :  "(378,379, i)",
"9" :  "(378,378, i)",
"10" :  "(378,381, i)",
"11" :  "(379,(380,381), structType)",
"12" :  "(379,(380,378), structType)",
"13" :  "(378,(378,379), i)",
"14" :  "(378,(378,384), i)",
"15" :  "(378,379, i)",
"16" :  "(378,378, i)",
"17" :  "(378,381, i)"},{ "Name" : "isSorted" ,
"Duas" : 7,
"0" :  "(443,(445,446), max)",
"1" :  "(443,(445,447), max)",
"2" :  "(444,(445,446), val)",
"3" :  "(444,(445,447), val)",
"4" :  "(444,447, val)",
"5" :  "(447,(445,446), max)",
"6" :  "(447,(445,447), max)"}]
}