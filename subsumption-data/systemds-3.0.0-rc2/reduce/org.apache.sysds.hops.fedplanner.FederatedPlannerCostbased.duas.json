{
"Class" : "org.apache.sysds.hops.fedplanner.FederatedPlannerCostbased", 
"Methods" : [{ "Name" : "rewriteStatementBlocks" ,
"Duas" : 5,
"0" :  "(96,98, this)",
"1" :  "(96,98, prog)",
"2" :  "(96,98, paramMap)",
"3" :  "(96,99, rewrittenStmBlocks)",
"4" :  "(96,98, rewrittenStmBlocks)"},{ "Name" : "rewriteStatementBlock" ,
"Duas" : 28,
"0" :  "(112,124, this)",
"1" :  "(112,121, this)",
"2" :  "(112,118, this)",
"3" :  "(112,115, this)",
"4" :  "(112,113, this)",
"5" :  "(112,124, prog)",
"6" :  "(112,121, prog)",
"7" :  "(112,118, prog)",
"8" :  "(112,115, prog)",
"9" :  "(112,113, prog)",
"10" :  "(112,(112,113), sb)",
"11" :  "(112,(112,114), sb)",
"12" :  "(112,(114,115), sb)",
"13" :  "(112,(114,116), sb)",
"14" :  "(112,(116,118), sb)",
"15" :  "(112,(116,120), sb)",
"16" :  "(112,(120,121), sb)",
"17" :  "(112,(120,124), sb)",
"18" :  "(112,124, sb)",
"19" :  "(112,121, sb)",
"20" :  "(112,118, sb)",
"21" :  "(112,115, sb)",
"22" :  "(112,113, sb)",
"23" :  "(112,124, paramMap)",
"24" :  "(112,121, paramMap)",
"25" :  "(112,118, paramMap)",
"26" :  "(112,115, paramMap)",
"27" :  "(112,113, paramMap)"},{ "Name" : "rewriteWhileStatementBlock" ,
"Duas" : 4,
"0" :  "(129,133, this)",
"1" :  "(129,133, prog)",
"2" :  "(129,135, whileSB)",
"3" :  "(129,133, paramMap)"},{ "Name" : "rewriteIfStatementBlock" ,
"Duas" : 7,
"0" :  "(139,142, this)",
"1" :  "(139,143, this)",
"2" :  "(139,142, prog)",
"3" :  "(139,143, prog)",
"4" :  "(139,145, ifSB)",
"5" :  "(139,142, paramMap)",
"6" :  "(139,143, paramMap)"},{ "Name" : "rewriteForStatementBlock" ,
"Duas" : 4,
"0" :  "(149,154, this)",
"1" :  "(149,154, prog)",
"2" :  "(149,156, forSB)",
"3" :  "(149,154, paramMap)"},{ "Name" : "rewriteFunctionStatementBlock" ,
"Duas" : 4,
"0" :  "(160,162, this)",
"1" :  "(160,162, prog)",
"2" :  "(160,164, funcSB)",
"3" :  "(160,162, paramMap)"},{ "Name" : "rewriteDefaultStatementBlock" ,
"Duas" : 26,
"0" :  "(168,170, this)",
"1" :  "(168,173, this)",
"2" :  "(168,178, this)",
"3" :  "(168,177, prog)",
"4" :  "(168,178, prog)",
"5" :  "(168,(168,169), sb)",
"6" :  "(168,(168,182), sb)",
"7" :  "(168,182, sb)",
"8" :  "(168,169, sb)",
"9" :  "(168,170, paramMap)",
"10" :  "(168,(174,174), paramMap)",
"11" :  "(168,(174,176), paramMap)",
"12" :  "(168,175, paramMap)",
"13" :  "(169,(171,172), sbHop)",
"14" :  "(169,(171,180), sbHop)",
"15" :  "(169,172, sbHop)",
"16" :  "(169,173, sbHop)",
"17" :  "(172,177, funcName)",
"18" :  "(173,176, funcParamMap)",
"19" :  "(173,(174,175), funcParamMap)",
"20" :  "(173,(174,176), funcParamMap)",
"21" :  "(173,175, funcParamMap)",
"22" :  "(176,170, paramMap)",
"23" :  "(176,(174,174), paramMap)",
"24" :  "(176,(174,176), paramMap)",
"25" :  "(176,175, paramMap)"},{ "Name" : "getParamMap" ,
"Duas" : 16,
"0" :  "(192,(195,196), funcOp)",
"1" :  "(192,(195,198), funcOp)",
"2" :  "(192,196, funcOp)",
"3" :  "(192,(194,195), inputNames)",
"4" :  "(192,(194,198), inputNames)",
"5" :  "(192,196, inputNames)",
"6" :  "(193,198, paramMap)",
"7" :  "(193,196, paramMap)",
"8" :  "(195,(195,196), i)",
"9" :  "(195,(195,198), i)",
"10" :  "(195,196, i)",
"11" :  "(195,195, i)",
"12" :  "(195,(195,196), i)",
"13" :  "(195,(195,198), i)",
"14" :  "(195,196, i)",
"15" :  "(195,195, i)"},{ "Name" : "setFinalFedouts" ,
"Duas" : 1,
"0" :  "(205,206, this)"},{ "Name" : "setFinalFedout" ,
"Duas" : 24,
"0" :  "(228,240, this)",
"1" :  "(228,241, this)",
"2" :  "(228,236, this)",
"3" :  "(228,231, this)",
"4" :  "(228,(228,229), root)",
"5" :  "(228,(228,240), root)",
"6" :  "(228,240, root)",
"7" :  "(228,(229,229), root)",
"8" :  "(228,(229,236), root)",
"9" :  "(228,236, root)",
"10" :  "(228,(229,231), root)",
"11" :  "(228,(229,236), root)",
"12" :  "(228,231, root)",
"13" :  "(228,232, root)",
"14" :  "(228,240, rootHopRel)",
"15" :  "(228,241, rootHopRel)",
"16" :  "(228,(229,229), rootHopRel)",
"17" :  "(228,(229,236), rootHopRel)",
"18" :  "(228,236, rootHopRel)",
"19" :  "(228,(228,229), hopRelUpdatedFinal)",
"20" :  "(228,(228,240), hopRelUpdatedFinal)",
"21" :  "(228,(229,231), hopRelMemo)",
"22" :  "(228,(229,236), hopRelMemo)",
"23" :  "(228,231, hopRelMemo)"},{ "Name" : "visitInputDependency" ,
"Duas" : 1,
"0" :  "(251,253, this)"},{ "Name" : "forceFixedFedOut" ,
"Duas" : 10,
"0" :  "(277,(277,278), root)",
"1" :  "(277,(277,283), root)",
"2" :  "(277,278, root)",
"3" :  "(277,279, root)",
"4" :  "(277,281, root)",
"5" :  "(277,(277,278), FEDERATED_SPECS)",
"6" :  "(277,(277,283), FEDERATED_SPECS)",
"7" :  "(277,278, FEDERATED_SPECS)",
"8" :  "(278,(280,281), fedOutSpec)",
"9" :  "(278,(280,283), fedOutSpec)"},{ "Name" : "selectFederatedExecutionPlan" ,
"Duas" : 2,
"0" :  "(294,295, this)",
"1" :  "(294,295, paramMap)"},{ "Name" : "selectFederatedExecutionPlan" ,
"Duas" : 9,
"0" :  "(305,306, this)",
"1" :  "(305,(305,306), root)",
"2" :  "(305,(305,310), root)",
"3" :  "(305,306, root)",
"4" :  "(305,(307,308), root)",
"5" :  "(305,(307,310), root)",
"6" :  "(305,308, root)",
"7" :  "(305,306, paramMap)",
"8" :  "(305,308, terminalHops)"},{ "Name" : "visitFedPlanHop" ,
"Duas" : 22,
"0" :  "(320,322, this)",
"1" :  "(320,327, this)",
"2" :  "(320,331, this)",
"3" :  "(320,330, this)",
"4" :  "(320,325, this)",
"5" :  "(320,(320,321), currentHop)",
"6" :  "(320,(320,322), currentHop)",
"7" :  "(320,322, currentHop)",
"8" :  "(320,324, currentHop)",
"9" :  "(320,327, currentHop)",
"10" :  "(320,332, currentHop)",
"11" :  "(320,330, currentHop)",
"12" :  "(320,327, paramMap)",
"13" :  "(320,325, paramMap)",
"14" :  "(320,(320,321), hopRelMemo)",
"15" :  "(320,(320,322), hopRelMemo)",
"16" :  "(320,332, hopRelMemo)",
"17" :  "(327,(329,330), hopRels)",
"18" :  "(327,(329,331), hopRels)",
"19" :  "(327,331, hopRels)",
"20" :  "(327,332, hopRels)",
"21" :  "(327,330, hopRels)"},{ "Name" : "getFedPlans" ,
"Duas" : 40,
"0" :  "(350,359, this)",
"1" :  "(350,(360,361), this)",
"2" :  "(350,(360,362), this)",
"3" :  "(350,357, this)",
"4" :  "(350,353, this)",
"5" :  "(350,(352,353), currentHop)",
"6" :  "(350,(352,354), currentHop)",
"7" :  "(350,(354,355), currentHop)",
"8" :  "(350,(354,356), currentHop)",
"9" :  "(350,(356,357), currentHop)",
"10" :  "(350,(356,359), currentHop)",
"11" :  "(350,359, currentHop)",
"12" :  "(350,(360,361), currentHop)",
"13" :  "(350,(360,362), currentHop)",
"14" :  "(350,361, currentHop)",
"15" :  "(350,357, currentHop)",
"16" :  "(350,355, currentHop)",
"17" :  "(350,353, currentHop)",
"18" :  "(350,353, paramMap)",
"19" :  "(350,(352,353), TRANSIENTREAD)",
"20" :  "(350,(352,354), TRANSIENTREAD)",
"21" :  "(350,(354,355), TRANSIENTWRITE)",
"22" :  "(350,(354,356), TRANSIENTWRITE)",
"23" :  "(350,355, transientWrites)",
"24" :  "(350,(356,357), FEDERATED)",
"25" :  "(350,(356,359), FEDERATED)",
"26" :  "(350,357, FOUT)",
"27" :  "(350,361, hopRelMemo)",
"28" :  "(350,357, hopRelMemo)",
"29" :  "(350,361, LOUT)",
"30" :  "(350,359, hopRels)",
"31" :  "(350,362, hopRels)",
"32" :  "(350,361, hopRels)",
"33" :  "(350,357, hopRels)",
"34" :  "(351,359, inputHops)",
"35" :  "(351,361, inputHops)",
"36" :  "(351,357, inputHops)",
"37" :  "(353,359, inputHops)",
"38" :  "(353,361, inputHops)",
"39" :  "(353,357, inputHops)"},{ "Name" : "getTransientInputs" ,
"Duas" : 20,
"0" :  "(373,379, currentHop)",
"1" :  "(373,377, currentHop)",
"2" :  "(373,375, currentHop)",
"3" :  "(373,(374,375), paramMap)",
"4" :  "(373,(374,376), paramMap)",
"5" :  "(373,375, paramMap)",
"6" :  "(373,377, transientWrites)",
"7" :  "(373,(376,377), tWriteHop)",
"8" :  "(373,(376,378), tWriteHop)",
"9" :  "(373,(378,379), tWriteHop)",
"10" :  "(373,(378,381), tWriteHop)",
"11" :  "(373,381, tWriteHop)",
"12" :  "(375,(376,377), tWriteHop)",
"13" :  "(375,(376,378), tWriteHop)",
"14" :  "(375,(378,379), tWriteHop)",
"15" :  "(375,(378,381), tWriteHop)",
"16" :  "(375,381, tWriteHop)",
"17" :  "(377,(378,379), tWriteHop)",
"18" :  "(377,(378,381), tWriteHop)",
"19" :  "(377,381, tWriteHop)"},{ "Name" : "generateHopRels" ,
"Duas" : 33,
"0" :  "(392,(396,397), this)",
"1" :  "(392,(396,410), this)",
"2" :  "(392,397, this)",
"3" :  "(392,(396,397), currentHop)",
"4" :  "(392,(396,410), currentHop)",
"5" :  "(392,410, currentHop)",
"6" :  "(392,397, currentHop)",
"7" :  "(392,407, currentHop)",
"8" :  "(392,399, currentHop)",
"9" :  "(392,399, inputHops)",
"10" :  "(392,399, FOUT)",
"11" :  "(392,399, hopRelMemo)",
"12" :  "(392,410, LOG)",
"13" :  "(392,407, LOG)",
"14" :  "(394,413, foutHopRelMap)",
"15" :  "(394,(400,401), foutHopRelMap)",
"16" :  "(394,(400,404), foutHopRelMap)",
"17" :  "(394,404, foutHopRelMap)",
"18" :  "(394,401, foutHopRelMap)",
"19" :  "(395,(396,397), inputCombination)",
"20" :  "(395,(396,410), inputCombination)",
"21" :  "(395,410, inputCombination)",
"22" :  "(395,397, inputCombination)",
"23" :  "(395,407, inputCombination)",
"24" :  "(395,399, inputCombination)",
"25" :  "(397,(398,399), outputFType)",
"26" :  "(397,(398,407), outputFType)",
"27" :  "(397,399, outputFType)",
"28" :  "(397,404, outputFType)",
"29" :  "(399,(400,401), alt)",
"30" :  "(399,(400,404), alt)",
"31" :  "(399,404, alt)",
"32" :  "(399,401, alt)"},{ "Name" : "getValidFTypes" ,
"Duas" : 3,
"0" :  "(417,419, hopRelMemo)",
"1" :  "(417,420, validFTypes)",
"2" :  "(417,419, validFTypes)"},{ "Name" : "buildCombinations" ,
"Duas" : 13,
"0" :  "(430,436, this)",
"1" :  "(430,(430,431), validFTypes)",
"2" :  "(430,(430,433), validFTypes)",
"3" :  "(430,433, validFTypes)",
"4" :  "(430,436, validFTypes)",
"5" :  "(430,436, result)",
"6" :  "(430,431, result)",
"7" :  "(430,(430,431), currentIndex)",
"8" :  "(430,(430,433), currentIndex)",
"9" :  "(430,433, currentIndex)",
"10" :  "(430,436, currentIndex)",
"11" :  "(430,434, currentResult)",
"12" :  "(430,431, currentResult)"},{ "Name" : "updateExplain" ,
"Duas" : 5,
"0" :  "(445,(445,446), HOPS)",
"1" :  "(445,(445,447), HOPS)",
"2" :  "(445,(445,446), EXPLAIN)",
"3" :  "(445,(445,447), EXPLAIN)",
"4" :  "(445,446, hopRelMemo)"},{ "Name" : "debugLog" ,
"Duas" : 17,
"0" :  "(454,455, currentHop)",
"1" :  "(454,457, currentHop)",
"2" :  "(454,461, currentHop)",
"3" :  "(454,(454,455), LOG)",
"4" :  "(454,(454,465), LOG)",
"5" :  "(454,455, LOG)",
"6" :  "(454,461, LOG)",
"7" :  "(454,459, LOG)",
"8" :  "(456,461, index)",
"9" :  "(456,462, index)",
"10" :  "(456,459, index)",
"11" :  "(457,(458,459), hop)",
"12" :  "(457,(458,461), hop)",
"13" :  "(457,461, hop)",
"14" :  "(462,461, index)",
"15" :  "(462,462, index)",
"16" :  "(462,459, index)"},{ "Name" : "addTrace" ,
"Duas" : 4,
"0" :  "(468,469, hopRels)",
"1" :  "(468,(468,469), LOG)",
"2" :  "(468,(468,473), LOG)",
"3" :  "(468,470, LOG)"},{ "Name" : "isLOUTSupported" ,
"Duas" : 4,
"0" :  "(483,(483,483), associatedHop)",
"1" :  "(483,(483,483), associatedHop)",
"2" :  "(483,(483,483), associatedHop)",
"3" :  "(483,(483,483), associatedHop)"},{ "Name" : "lambda$generateHopRels$2" ,
"Duas" : 6,
"0" :  "(402,(402,402), alt)",
"1" :  "(402,(402,402), alt)",
"2" :  "(402,402, alt)",
"3" :  "(402,(402,402), currentVal)",
"4" :  "(402,(402,402), currentVal)",
"5" :  "(402,402, currentVal)"}]
}