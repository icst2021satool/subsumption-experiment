{
"Class" : "org.apache.sysds.runtime.controlprogram.parfor.ResultMergeLocalMemory", 
"Methods" : [{ "Name" : "executeSerialMerge" ,
"Duas" : 68,
"0" :  "(56,65, this)",
"1" :  "(56,69, this)",
"2" :  "(56,75, this)",
"3" :  "(56,(76,77), this)",
"4" :  "(56,(76,80), this)",
"5" :  "(56,81, this)",
"6" :  "(56,126, this)",
"7" :  "(56,130, this)",
"8" :  "(56,123, this)",
"9" :  "(56,(112,113), this)",
"10" :  "(56,(112,116), this)",
"11" :  "(56,(84,86), this)",
"12" :  "(56,(84,81), this)",
"13" :  "(56,93, this)",
"14" :  "(56,59, this)",
"15" :  "(56,(58,59), LOG)",
"16" :  "(56,(58,65), LOG)",
"17" :  "(56,(86,87), LOG)",
"18" :  "(56,(86,90), LOG)",
"19" :  "(56,87, LOG)",
"20" :  "(56,59, LOG)",
"21" :  "(56,65, this._output)",
"22" :  "(56,126, this._output)",
"23" :  "(56,130, this._output)",
"24" :  "(56,(84,86), this._output)",
"25" :  "(56,(84,81), this._output)",
"26" :  "(56,59, this._output)",
"27" :  "(56,81, this._inputs)",
"28" :  "(56,(112,113), this._isAccum)",
"29" :  "(56,(112,116), this._isAccum)",
"30" :  "(65,77, outMB)",
"31" :  "(71,116, outMBNew)",
"32" :  "(71,123, outMBNew)",
"33" :  "(71,113, outMBNew)",
"34" :  "(71,93, outMBNew)",
"35" :  "(71,104, outMBNew)",
"36" :  "(71,105, outMBNew)",
"37" :  "(71,(101,101), outMBNew)",
"38" :  "(71,(101,101), outMBNew)",
"39" :  "(71,77, outMBNew)",
"40" :  "(72,(112,112), appendOnly)",
"41" :  "(72,(112,116), appendOnly)",
"42" :  "(72,93, appendOnly)",
"43" :  "(72,(101,101), appendOnly)",
"44" :  "(72,(101,101), appendOnly)",
"45" :  "(75,(76,77), this._compare)",
"46" :  "(75,(76,80), this._compare)",
"47" :  "(80,(119,123), flagMerged)",
"48" :  "(80,(119,126), flagMerged)",
"49" :  "(81,(84,84), in)",
"50" :  "(81,(84,81), in)",
"51" :  "(81,(84,86), in)",
"52" :  "(81,(84,81), in)",
"53" :  "(81,90, in)",
"54" :  "(81,96, in)",
"55" :  "(81,97, in)",
"56" :  "(81,87, in)",
"57" :  "(98,(119,123), flagMerged)",
"58" :  "(98,(119,126), flagMerged)",
"59" :  "(101,(103,104), sparseToDense)",
"60" :  "(101,(103,81), sparseToDense)",
"61" :  "(106,(112,112), appendOnly)",
"62" :  "(106,(112,116), appendOnly)",
"63" :  "(106,93, appendOnly)",
"64" :  "(106,(101,101), appendOnly)",
"65" :  "(106,(101,101), appendOnly)",
"66" :  "(123,138, moNew)",
"67" :  "(126,138, moNew)"},{ "Name" : "executeParallelMerge" ,
"Duas" : 86,
"0" :  "(144,153, this)",
"1" :  "(144,155, this)",
"2" :  "(144,203, this)",
"3" :  "(144,207, this)",
"4" :  "(144,171, this)",
"5" :  "(144,(172,173), this)",
"6" :  "(144,(172,177), this)",
"7" :  "(144,200, this)",
"8" :  "(144,185, this)",
"9" :  "(144,(157,158), this)",
"10" :  "(144,(157,155), this)",
"11" :  "(144,147, this)",
"12" :  "(144,177, par)",
"13" :  "(144,147, par)",
"14" :  "(144,(146,147), LOG)",
"15" :  "(144,(146,153), LOG)",
"16" :  "(144,147, LOG)",
"17" :  "(144,153, this._output)",
"18" :  "(144,203, this._output)",
"19" :  "(144,207, this._output)",
"20" :  "(144,(157,158), this._output)",
"21" :  "(144,(157,155), this._output)",
"22" :  "(144,147, this._output)",
"23" :  "(144,155, this._inputs)",
"24" :  "(153,165, outMB)",
"25" :  "(153,166, outMB)",
"26" :  "(153,171, outMB)",
"27" :  "(153,173, outMB)",
"28" :  "(154,(161,165), inMO)",
"29" :  "(154,(161,203), inMO)",
"30" :  "(154,177, inMO)",
"31" :  "(154,(180,183), inMO)",
"32" :  "(154,(180,200), inMO)",
"33" :  "(154,185, inMO)",
"34" :  "(154,158, inMO)",
"35" :  "(155,(157,157), in)",
"36" :  "(155,(157,155), in)",
"37" :  "(155,(157,158), in)",
"38" :  "(155,(157,155), in)",
"39" :  "(155,158, in)",
"40" :  "(167,200, outMBNew)",
"41" :  "(167,185, outMBNew)",
"42" :  "(167,173, outMBNew)",
"43" :  "(171,(172,173), this._compare)",
"44" :  "(171,(172,177), this._compare)",
"45" :  "(178,180, numThreads)",
"46" :  "(179,(183,185), threads)",
"47" :  "(179,(183,191), threads)",
"48" :  "(179,(191,193), threads)",
"49" :  "(179,(191,180), threads)",
"50" :  "(179,193, threads)",
"51" :  "(179,186, threads)",
"52" :  "(179,187, threads)",
"53" :  "(179,188, threads)",
"54" :  "(180,(180,183), k)",
"55" :  "(180,(180,200), k)",
"56" :  "(180,180, k)",
"57" :  "(180,185, k)",
"58" :  "(183,(183,185), i)",
"59" :  "(183,(183,191), i)",
"60" :  "(183,185, i)",
"61" :  "(183,186, i)",
"62" :  "(183,187, i)",
"63" :  "(183,188, i)",
"64" :  "(183,183, i)",
"65" :  "(183,(183,185), i)",
"66" :  "(183,(183,191), i)",
"67" :  "(183,185, i)",
"68" :  "(183,186, i)",
"69" :  "(183,187, i)",
"70" :  "(183,188, i)",
"71" :  "(183,183, i)",
"72" :  "(191,(191,193), i)",
"73" :  "(191,(191,180), i)",
"74" :  "(191,193, i)",
"75" :  "(191,191, i)",
"76" :  "(191,(191,193), i)",
"77" :  "(191,(191,180), i)",
"78" :  "(191,193, i)",
"79" :  "(191,191, i)",
"80" :  "(180,(180,183), k)",
"81" :  "(180,(180,200), k)",
"82" :  "(180,180, k)",
"83" :  "(180,185, k)",
"84" :  "(200,215, moNew)",
"85" :  "(203,215, moNew)"},{ "Name" : "getCompareMatrix" ,
"Duas" : 3,
"0" :  "(220,(220,221), output)",
"1" :  "(220,(220,222), output)",
"2" :  "(220,221, output)"},{ "Name" : "merge" ,
"Duas" : 12,
"0" :  "(259,(259,260), this)",
"1" :  "(259,(259,262), this)",
"2" :  "(259,262, this)",
"3" :  "(259,260, this)",
"4" :  "(259,262, out)",
"5" :  "(259,260, out)",
"6" :  "(259,262, in)",
"7" :  "(259,260, in)",
"8" :  "(259,260, appendOnly)",
"9" :  "(259,(259,260), this._compare)",
"10" :  "(259,(259,262), this._compare)",
"11" :  "(259,262, this._compare)"},{ "Name" : "getOutputNnzEstimate" ,
"Duas" : 13,
"0" :  "(273,277, this)",
"1" :  "(273,278, this)",
"2" :  "(273,279, this)",
"3" :  "(273,277, this._output)",
"4" :  "(273,278, this._output)",
"5" :  "(273,279, this._output)",
"6" :  "(273,279, nnzInputs)",
"7" :  "(273,276, nnzInputs)",
"8" :  "(274,(275,276), input)",
"9" :  "(274,(275,274), input)",
"10" :  "(274,276, input)",
"11" :  "(276,279, nnzInputs)",
"12" :  "(276,276, nnzInputs)"}]
}