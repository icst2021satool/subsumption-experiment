{
"Class" : "org.apache.sysds.runtime.instructions.fed.MultiReturnParameterizedBuiltinFEDInstruction", 
"Methods" : [{ "Name" : "parseInstruction" ,
"Duas" : 16,
"0" :  "(80,90, str)",
"1" :  "(80,88, FP64)",
"2" :  "(80,88, MATRIX)",
"3" :  "(80,89, STRING)",
"4" :  "(80,89, FRAME)",
"5" :  "(80,86, parts)",
"6" :  "(80,87, parts)",
"7" :  "(80,88, parts)",
"8" :  "(80,89, parts)",
"9" :  "(81,88, outputs)",
"10" :  "(81,89, outputs)",
"11" :  "(81,90, outputs)",
"12" :  "(82,(84,86), opcode)",
"13" :  "(82,(84,93), opcode)",
"14" :  "(82,93, opcode)",
"15" :  "(82,90, opcode)"},{ "Name" : "processInstruction" ,
"Duas" : 35,
"0" :  "(101,161, this)",
"1" :  "(101,164, this)",
"2" :  "(101,113, this)",
"3" :  "(101,161, ec)",
"4" :  "(101,164, ec)",
"5" :  "(101,113, ec)",
"6" :  "(101,(111,111), ROW)",
"7" :  "(101,(111,111), ROW)",
"8" :  "(101,(152,153), SORT_RECODE_MAP)",
"9" :  "(101,(152,156), SORT_RECODE_MAP)",
"10" :  "(101,156, STRING)",
"11" :  "(101,(111,111), fin)",
"12" :  "(101,(111,111), fin)",
"13" :  "(101,156, fin)",
"14" :  "(101,113, fin)",
"15" :  "(102,121, spec)",
"16" :  "(102,113, spec)",
"17" :  "(102,(111,111), spec)",
"18" :  "(102,(111,111), spec)",
"19" :  "(104,120, colNames)",
"20" :  "(108,119, globalEncoder)",
"21" :  "(109,121, fedMapping)",
"22" :  "(109,161, fedMapping)",
"23" :  "(111,(112,113), containsEquiWidthEncoder)",
"24" :  "(111,(112,119), containsEquiWidthEncoder)",
"25" :  "(114,158, globalEncoder)",
"26" :  "(114,159, globalEncoder)",
"27" :  "(114,161, globalEncoder)",
"28" :  "(114,153, globalEncoder)",
"29" :  "(115,157, colNames)",
"30" :  "(147,158, globalEncoder)",
"31" :  "(147,159, globalEncoder)",
"32" :  "(147,161, globalEncoder)",
"33" :  "(147,153, globalEncoder)",
"34" :  "(148,157, colNames)"},{ "Name" : "createGlobalEncoderWithEquiHeight" ,
"Duas" : 22,
"0" :  "(179,247, this)",
"1" :  "(179,230, this)",
"2" :  "(179,232, ec)",
"3" :  "(179,230, this.input1)",
"4" :  "(179,230, this.output)",
"5" :  "(179,230, VALUEPICK)",
"6" :  "(179,(241,242), EQUI_HEIGHT)",
"7" :  "(179,(241,240), EQUI_HEIGHT)",
"8" :  "(179,237, globalEncoder)",
"9" :  "(179,247, globalEncoder)",
"10" :  "(180,247, colNames)",
"11" :  "(228,242, equiHeightBinsPerColumn)",
"12" :  "(228,233, equiHeightBinsPerColumn)",
"13" :  "(237,(238,239), enc)",
"14" :  "(237,(238,246), enc)",
"15" :  "(237,239, enc)",
"16" :  "(237,244, enc)",
"17" :  "(239,(240,240), compositeEncoder)",
"18" :  "(239,(240,240), compositeEncoder)",
"19" :  "(239,(241,242), compositeEncoder)",
"20" :  "(239,(241,240), compositeEncoder)",
"21" :  "(239,242, compositeEncoder)"},{ "Name" : "lambda$encodeFederatedFrames$2" ,
"Duas" : 3,
"0" :  "(268,(269,270), response)",
"1" :  "(268,(269,274), response)",
"2" :  "(268,270, response)"},{ "Name" : "lambda$createGlobalEncoderWithEquiHeight$1" ,
"Duas" : 37,
"0" :  "(185,202, fin)",
"1" :  "(185,207, quantilesPerColumn)",
"2" :  "(185,214, globalEncoder)",
"3" :  "(185,214, globalEncoder)",
"4" :  "(185,215, globalEncoder)",
"5" :  "(185,219, colNames)",
"6" :  "(185,215, range)",
"7" :  "(185,219, range)",
"8" :  "(185,(201,202), EQUI_HEIGHT)",
"9" :  "(185,(201,209), EQUI_HEIGHT)",
"10" :  "(185,215, columnOffset)",
"11" :  "(185,207, columnOffset)",
"12" :  "(194,218, response)",
"13" :  "(195,215, encoder)",
"14" :  "(198,(199,200), enc)",
"15" :  "(198,(199,211), enc)",
"16" :  "(198,200, enc)",
"17" :  "(200,(201,201), compositeEncoder)",
"18" :  "(200,(201,209), compositeEncoder)",
"19" :  "(200,(201,202), compositeEncoder)",
"20" :  "(200,(201,209), compositeEncoder)",
"21" :  "(200,202, compositeEncoder)",
"22" :  "(200,203, compositeEncoder)",
"23" :  "(200,207, compositeEncoder)",
"24" :  "(202,205, quantilrRange)",
"25" :  "(203,(204,205), quantiles)",
"26" :  "(203,(204,207), quantiles)",
"27" :  "(203,207, quantiles)",
"28" :  "(203,205, quantiles)",
"29" :  "(204,(204,205), i)",
"30" :  "(204,(204,207), i)",
"31" :  "(204,205, i)",
"32" :  "(204,204, i)",
"33" :  "(204,(204,205), i)",
"34" :  "(204,(204,207), i)",
"35" :  "(204,205, i)",
"36" :  "(204,204, i)"}]
}