{
"Class" : "org.apache.sysds.runtime.instructions.spark.utils.RDDConverterUtils", 
"Methods" : [{ "Name" : "textCellToBinaryBlock" ,
"Duas" : 9,
"0" :  "(86,91, sc)",
"1" :  "(86,(90,91), mcOut)",
"2" :  "(86,(90,96), mcOut)",
"3" :  "(86,91, mcOut)",
"4" :  "(86,(90,90), outputEmptyBlocks)",
"5" :  "(86,(90,96), outputEmptyBlocks)",
"6" :  "(87,96, out)",
"7" :  "(87,91, out)",
"8" :  "(91,96, out)"},{ "Name" : "binaryCellToBinaryBlock" ,
"Duas" : 9,
"0" :  "(105,110, sc)",
"1" :  "(105,(109,110), mcOut)",
"2" :  "(105,(109,115), mcOut)",
"3" :  "(105,110, mcOut)",
"4" :  "(105,(109,109), outputEmptyBlocks)",
"5" :  "(105,(109,115), outputEmptyBlocks)",
"6" :  "(106,115, out)",
"7" :  "(106,110, out)",
"8" :  "(110,115, out)"},{ "Name" : "binaryBlockToCsv" ,
"Duas" : 13,
"0" :  "(143,(146,148), mcIn)",
"1" :  "(143,(146,155), mcIn)",
"2" :  "(143,149, mcIn)",
"3" :  "(143,151, mcIn)",
"4" :  "(143,160, props)",
"5" :  "(143,(155,156), strict)",
"6" :  "(143,(155,160), strict)",
"7" :  "(143,160, input)",
"8" :  "(143,156, input)",
"9" :  "(143,151, input)",
"10" :  "(151,160, input)",
"11" :  "(151,156, input)",
"12" :  "(156,160, input)"},{ "Name" : "binaryBlockToLibsvm" ,
"Duas" : 13,
"0" :  "(167,(170,172), mcIn)",
"1" :  "(167,(170,177), mcIn)",
"2" :  "(167,172, mcIn)",
"3" :  "(167,173, mcIn)",
"4" :  "(167,182, props)",
"5" :  "(167,(177,178), strict)",
"6" :  "(167,(177,182), strict)",
"7" :  "(167,182, input)",
"8" :  "(167,178, input)",
"9" :  "(167,173, input)",
"10" :  "(173,182, input)",
"11" :  "(173,178, input)",
"12" :  "(178,182, input)"},{ "Name" : "binaryBlockToBinaryBlock" ,
"Duas" : 24,
"0" :  "(190,195, in)",
"1" :  "(190,(190,190), mcIn)",
"2" :  "(190,(190,192), mcIn)",
"3" :  "(190,194, mcIn)",
"4" :  "(190,(191,191), mcIn)",
"5" :  "(190,(191,191), mcIn)",
"6" :  "(190,(192,192), mcIn)",
"7" :  "(190,(192,192), mcIn)",
"8" :  "(190,(192,192), mcIn)",
"9" :  "(190,(192,192), mcIn)",
"10" :  "(190,(191,191), mcIn)",
"11" :  "(190,(191,192), mcIn)",
"12" :  "(190,194, mcOut)",
"13" :  "(190,(190,190), mcOut)",
"14" :  "(190,(190,192), mcOut)",
"15" :  "(190,(192,192), mcOut)",
"16" :  "(190,(192,192), mcOut)",
"17" :  "(190,(191,191), mcOut)",
"18" :  "(190,(191,192), mcOut)",
"19" :  "(192,(196,197), shuffleFreeReblock)",
"20" :  "(192,(196,198), shuffleFreeReblock)",
"21" :  "(195,198, out)",
"22" :  "(195,197, out)",
"23" :  "(197,198, out)"},{ "Name" : "csvToBinaryBlock" ,
"Duas" : 21,
"0" :  "(207,208, sc)",
"1" :  "(207,219, input)",
"2" :  "(207,210, input)",
"3" :  "(207,(207,208), mc)",
"4" :  "(207,(207,218), mc)",
"5" :  "(207,222, mc)",
"6" :  "(207,223, mc)",
"7" :  "(207,230, mc)",
"8" :  "(207,214, mc)",
"9" :  "(207,223, hasHeader)",
"10" :  "(207,(211,211), hasHeader)",
"11" :  "(207,(211,211), hasHeader)",
"12" :  "(207,223, delim)",
"13" :  "(207,209, delim)",
"14" :  "(207,212, delim)",
"15" :  "(207,223, fill)",
"16" :  "(207,223, fillValue)",
"17" :  "(207,223, naStrings)",
"18" :  "(208,213, aNnz)",
"19" :  "(210,211, tmp)",
"20" :  "(210,212, tmp)"},{ "Name" : "dataFrameToBinaryBlock" ,
"Duas" : 29,
"0" :  "(250,251, sc)",
"1" :  "(250,268, df)",
"2" :  "(250,267, df)",
"3" :  "(250,252, df)",
"4" :  "(250,255, df)",
"5" :  "(250,(250,251), mc)",
"6" :  "(250,(250,261), mc)",
"7" :  "(250,(261,262), mc)",
"8" :  "(250,(261,265), mc)",
"9" :  "(250,271, mc)",
"10" :  "(250,272, mc)",
"11" :  "(250,279, mc)",
"12" :  "(250,262, mc)",
"13" :  "(250,257, mc)",
"14" :  "(250,(265,266), containsID)",
"15" :  "(250,(265,268), containsID)",
"16" :  "(250,272, containsID)",
"17" :  "(250,252, containsID)",
"18" :  "(250,(255,255), containsID)",
"19" :  "(250,(255,255), containsID)",
"20" :  "(250,(254,254), containsID)",
"21" :  "(250,(254,254), containsID)",
"22" :  "(250,272, isVector)",
"23" :  "(250,252, isVector)",
"24" :  "(250,(254,254), isVector)",
"25" :  "(250,(254,255), isVector)",
"26" :  "(251,256, aNnz)",
"27" :  "(252,255, tmp)",
"28" :  "(253,257, rlen)"},{ "Name" : "binaryBlockToDataFrame" ,
"Duas" : 25,
"0" :  "(286,305, sparkSession)",
"1" :  "(286,292, in)",
"2" :  "(286,(286,287), mc)",
"3" :  "(286,(286,290), mc)",
"4" :  "(286,291, mc)",
"5" :  "(286,292, mc)",
"6" :  "(286,(300,301), mc)",
"7" :  "(286,(300,305), mc)",
"8" :  "(286,292, toVector)",
"9" :  "(286,(297,298), toVector)",
"10" :  "(286,(297,300), toVector)",
"11" :  "(286,296, DoubleType)",
"12" :  "(286,301, DoubleType)",
"13" :  "(292,305, rowsRDD)",
"14" :  "(295,305, fields)",
"15" :  "(295,301, fields)",
"16" :  "(295,298, fields)",
"17" :  "(300,(300,301), i)",
"18" :  "(300,(300,305), i)",
"19" :  "(300,301, i)",
"20" :  "(300,300, i)",
"21" :  "(300,(300,301), i)",
"22" :  "(300,(300,305), i)",
"23" :  "(300,301, i)",
"24" :  "(300,300, i)"},{ "Name" : "libsvmToBinaryBlock" ,
"Duas" : 20,
"0" :  "(333,345, sc)",
"1" :  "(333,353, sc)",
"2" :  "(333,364, sc)",
"3" :  "(333,345, pathIn)",
"4" :  "(333,338, pathX)",
"5" :  "(333,368, pathX)",
"6" :  "(333,370, pathX)",
"7" :  "(333,339, pathY)",
"8" :  "(333,358, pathY)",
"9" :  "(333,360, pathY)",
"10" :  "(333,(333,334), mcOutX)",
"11" :  "(333,(333,338), mcOutX)",
"12" :  "(333,342, mcOutX)",
"13" :  "(333,343, mcOutX)",
"14" :  "(333,352, mcOutX)",
"15" :  "(333,363, mcOutX)",
"16" :  "(333,360, FP64)",
"17" :  "(333,370, FP64)",
"18" :  "(333,360, BINARY)",
"19" :  "(333,370, BINARY)"},{ "Name" : "requiresSparseAllocation" ,
"Duas" : 16,
"0" :  "(387,397, in)",
"1" :  "(387,(387,387), mc)",
"2" :  "(387,(387,389), mc)",
"3" :  "(387,(387,387), mc)",
"4" :  "(387,(387,394), mc)",
"5" :  "(387,394, mc)",
"6" :  "(387,395, mc)",
"7" :  "(387,398, mc)",
"8" :  "(387,(387,389), mc)",
"9" :  "(387,(387,394), mc)",
"10" :  "(395,(399,399), rowsize)",
"11" :  "(395,(399,399), rowsize)",
"12" :  "(397,(399,399), partsize)",
"13" :  "(397,(399,399), partsize)",
"14" :  "(398,(399,399), blksz)",
"15" :  "(398,(399,399), blksz)"},{ "Name" : "countNnz" ,
"Duas" : 6,
"0" :  "(403,406, vect)",
"1" :  "(403,404, vect)",
"2" :  "(403,(403,404), isVector)",
"3" :  "(403,(403,406), isVector)",
"4" :  "(403,406, isVector)",
"5" :  "(403,406, off)"},{ "Name" : "countNnz" ,
"Duas" : 72,
"0" :  "(419,436, vect)",
"1" :  "(419,(421,422), vect)",
"2" :  "(419,(421,426), vect)",
"3" :  "(419,(426,427), vect)",
"4" :  "(419,(426,440), vect)",
"5" :  "(419,427, vect)",
"6" :  "(419,422, vect)",
"7" :  "(419,(420,421), isVector)",
"8" :  "(419,(420,436), isVector)",
"9" :  "(419,437, pos)",
"10" :  "(419,431, pos)",
"11" :  "(419,423, pos)",
"12" :  "(419,(437,438), cu)",
"13" :  "(419,(437,440), cu)",
"14" :  "(419,(431,432), cu)",
"15" :  "(419,(431,433), cu)",
"16" :  "(419,(423,424), cu)",
"17" :  "(419,(423,425), cu)",
"18" :  "(419,440, lnnz)",
"19" :  "(419,438, lnnz)",
"20" :  "(419,432, lnnz)",
"21" :  "(419,424, lnnz)",
"22" :  "(422,(424,424), vec)",
"23" :  "(422,(424,424), vec)",
"24" :  "(423,(423,424), i)",
"25" :  "(423,(423,425), i)",
"26" :  "(423,(424,424), i)",
"27" :  "(423,(424,424), i)",
"28" :  "(423,423, i)",
"29" :  "(424,440, lnnz)",
"30" :  "(424,424, lnnz)",
"31" :  "(423,(423,424), i)",
"32" :  "(423,(423,425), i)",
"33" :  "(423,(424,424), i)",
"34" :  "(423,(424,424), i)",
"35" :  "(423,423, i)",
"36" :  "(428,(431,431), alen)",
"37" :  "(428,(431,433), alen)",
"38" :  "(429,(431,432), aix)",
"39" :  "(429,(431,433), aix)",
"40" :  "(430,(432,432), avals)",
"41" :  "(430,(432,432), avals)",
"42" :  "(431,(431,431), i)",
"43" :  "(431,(431,433), i)",
"44" :  "(431,(431,432), i)",
"45" :  "(431,(431,433), i)",
"46" :  "(431,(432,432), i)",
"47" :  "(431,(432,432), i)",
"48" :  "(431,431, i)",
"49" :  "(432,440, lnnz)",
"50" :  "(432,432, lnnz)",
"51" :  "(431,(431,431), i)",
"52" :  "(431,(431,433), i)",
"53" :  "(431,(431,432), i)",
"54" :  "(431,(431,433), i)",
"55" :  "(431,(432,432), i)",
"56" :  "(431,(432,432), i)",
"57" :  "(431,431, i)",
"58" :  "(436,(438,438), row)",
"59" :  "(436,(438,438), row)",
"60" :  "(437,(437,438), i)",
"61" :  "(437,(437,440), i)",
"62" :  "(437,(438,438), i)",
"63" :  "(437,(438,438), i)",
"64" :  "(437,437, i)",
"65" :  "(438,440, lnnz)",
"66" :  "(438,438, lnnz)",
"67" :  "(437,(437,438), i)",
"68" :  "(437,(437,440), i)",
"69" :  "(437,(438,438), i)",
"70" :  "(437,(438,438), i)",
"71" :  "(437,437, i)"},{ "Name" : "createVector" ,
"Duas" : 7,
"0" :  "(444,(444,445), row)",
"1" :  "(444,(444,446), row)",
"2" :  "(444,(446,447), row)",
"3" :  "(444,(446,450), row)",
"4" :  "(444,450, row)",
"5" :  "(444,447, row)",
"6" :  "(444,445, row)"},{ "Name" : "libsvmToBinaryBlock" ,
"Duas" : 12,
"0" :  "(1413,1414, sc)",
"1" :  "(1413,1422, input)",
"2" :  "(1413,1415, input)",
"3" :  "(1413,(1413,1414), mc)",
"4" :  "(1413,(1413,1422), mc)",
"5" :  "(1413,1425, mc)",
"6" :  "(1413,1431, mc)",
"7" :  "(1413,1418, mc)",
"8" :  "(1413,1425, delim)",
"9" :  "(1413,1415, delim)",
"10" :  "(1413,1425, indexDelim)",
"11" :  "(1413,1415, indexDelim)"}]
}