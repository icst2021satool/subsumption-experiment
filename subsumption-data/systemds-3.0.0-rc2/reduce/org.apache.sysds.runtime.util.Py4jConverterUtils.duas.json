{
"Class" : "org.apache.sysds.runtime.util.Py4jConverterUtils", 
"Methods" : [{ "Name" : "convertSciPyCOOToMB" ,
"Duas" : 15,
"0" :  "(42,(50,51), nnz)",
"1" :  "(42,(50,56), nnz)",
"2" :  "(42,56, mb)",
"3" :  "(42,57, mb)",
"4" :  "(42,58, mb)",
"5" :  "(42,54, mb)",
"6" :  "(44,51, buf1)",
"7" :  "(46,52, buf2)",
"8" :  "(48,53, buf3)",
"9" :  "(50,(50,51), i)",
"10" :  "(50,(50,56), i)",
"11" :  "(50,50, i)",
"12" :  "(50,(50,51), i)",
"13" :  "(50,(50,56), i)",
"14" :  "(50,50, i)"},{ "Name" : "allocateDenseOrSparse" ,
"Duas" : 9,
"0" :  "(68,(68,68), rlen)",
"1" :  "(68,(68,69), rlen)",
"2" :  "(68,69, rlen)",
"3" :  "(68,72, rlen)",
"4" :  "(68,69, clen)",
"5" :  "(68,(68,69), clen)",
"6" :  "(68,(68,72), clen)",
"7" :  "(68,72, clen)",
"8" :  "(68,72, isSparse)"},{ "Name" : "convertPy4JArrayToMB" ,
"Duas" : 75,
"0" :  "(77,87, data)",
"1" :  "(77,82, rlen)",
"2" :  "(77,110, rlen)",
"3" :  "(77,82, clen)",
"4" :  "(77,110, clen)",
"5" :  "(77,(78,79), isSparse)",
"6" :  "(77,(78,82), isSparse)",
"7" :  "(77,(90,108), valueType)",
"8" :  "(77,(90,92), valueType)",
"9" :  "(77,(90,96), valueType)",
"10" :  "(77,(90,100), valueType)",
"11" :  "(77,(90,104), valueType)",
"12" :  "(77,108, valueType)",
"13" :  "(77,(90,108), $SwitchMap$org$apache$sysds$common$Types$ValueType)",
"14" :  "(77,(90,92), $SwitchMap$org$apache$sysds$common$Types$ValueType)",
"15" :  "(77,(90,96), $SwitchMap$org$apache$sysds$common$Types$ValueType)",
"16" :  "(77,(90,100), $SwitchMap$org$apache$sysds$common$Types$ValueType)",
"17" :  "(77,(90,104), $SwitchMap$org$apache$sysds$common$Types$ValueType)",
"18" :  "(77,110, mb)",
"19" :  "(77,112, mb)",
"20" :  "(77,113, mb)",
"21" :  "(77,114, mb)",
"22" :  "(82,(83,84), limit)",
"23" :  "(82,(83,86), limit)",
"24" :  "(82,86, limit)",
"25" :  "(82,(104,105), limit)",
"26" :  "(82,(104,106), limit)",
"27" :  "(82,(100,101), limit)",
"28" :  "(82,(100,102), limit)",
"29" :  "(82,(96,97), limit)",
"30" :  "(82,(96,98), limit)",
"31" :  "(82,(92,93), limit)",
"32" :  "(82,(92,94), limit)",
"33" :  "(82,84, limit)",
"34" :  "(86,110, denseBlock)",
"35" :  "(86,105, denseBlock)",
"36" :  "(86,101, denseBlock)",
"37" :  "(86,97, denseBlock)",
"38" :  "(86,93, denseBlock)",
"39" :  "(87,105, buf)",
"40" :  "(87,101, buf)",
"41" :  "(87,97, buf)",
"42" :  "(87,93, buf)",
"43" :  "(92,(92,93), i)",
"44" :  "(92,(92,94), i)",
"45" :  "(92,93, i)",
"46" :  "(92,92, i)",
"47" :  "(92,(92,93), i)",
"48" :  "(92,(92,94), i)",
"49" :  "(92,93, i)",
"50" :  "(92,92, i)",
"51" :  "(96,(96,97), i)",
"52" :  "(96,(96,98), i)",
"53" :  "(96,97, i)",
"54" :  "(96,96, i)",
"55" :  "(96,(96,97), i)",
"56" :  "(96,(96,98), i)",
"57" :  "(96,97, i)",
"58" :  "(96,96, i)",
"59" :  "(100,(100,101), i)",
"60" :  "(100,(100,102), i)",
"61" :  "(100,101, i)",
"62" :  "(100,100, i)",
"63" :  "(100,(100,101), i)",
"64" :  "(100,(100,102), i)",
"65" :  "(100,101, i)",
"66" :  "(100,100, i)",
"67" :  "(104,(104,105), i)",
"68" :  "(104,(104,106), i)",
"69" :  "(104,105, i)",
"70" :  "(104,104, i)",
"71" :  "(104,(104,105), i)",
"72" :  "(104,(104,106), i)",
"73" :  "(104,105, i)",
"74" :  "(104,104, i)"},{ "Name" : "convertMBtoPy4JDenseArr" ,
"Duas" : 42,
"0" :  "(118,(119,120), mb)",
"1" :  "(118,(119,123), mb)",
"2" :  "(118,123, mb)",
"3" :  "(118,129, mb)",
"4" :  "(118,(130,131), mb)",
"5" :  "(118,(130,135), mb)",
"6" :  "(118,120, mb)",
"7" :  "(123,(125,126), limit)",
"8" :  "(123,(125,127), limit)",
"9" :  "(123,127, limit)",
"10" :  "(123,(131,132), limit)",
"11" :  "(123,(131,131), limit)",
"12" :  "(123,126, limit)",
"13" :  "(124,(125,126), times)",
"14" :  "(124,(125,127), times)",
"15" :  "(124,127, times)",
"16" :  "(124,140, times)",
"17" :  "(124,132, times)",
"18" :  "(127,144, ret)",
"19" :  "(127,140, ret)",
"20" :  "(127,132, ret)",
"21" :  "(129,(135,136), denseBlock)",
"22" :  "(129,(135,139), denseBlock)",
"23" :  "(129,(139,140), denseBlock)",
"24" :  "(129,(139,144), denseBlock)",
"25" :  "(129,140, denseBlock)",
"26" :  "(131,(131,132), i)",
"27" :  "(131,(131,131), i)",
"28" :  "(131,132, i)",
"29" :  "(131,131, i)",
"30" :  "(131,(131,132), i)",
"31" :  "(131,(131,131), i)",
"32" :  "(131,132, i)",
"33" :  "(131,131, i)",
"34" :  "(139,(139,140), i)",
"35" :  "(139,(139,144), i)",
"36" :  "(139,140, i)",
"37" :  "(139,139, i)",
"38" :  "(139,(139,140), i)",
"39" :  "(139,(139,144), i)",
"40" :  "(139,140, i)",
"41" :  "(139,139, i)"}]
}