{
"Class" : "org.apache.sysds.hops.ipa.IPAPassEliminateDeadCode", 
"Methods" : [{ "Name" : "rewriteProgram" ,
"Duas" : 1,
"0" :  "(57,67, fgraph)"},{ "Name" : "findAndRemoveDeadCode" ,
"Duas" : 56,
"0" :  "(73,(75,76), sbs)",
"1" :  "(73,(75,95), sbs)",
"2" :  "(73,95, sbs)",
"3" :  "(73,76, sbs)",
"4" :  "(73,84, sbs)",
"5" :  "(73,95, usedVars)",
"6" :  "(73,80, usedVars)",
"7" :  "(73,(81,81), usedVars)",
"8" :  "(73,(81,82), usedVars)",
"9" :  "(73,80, fgraph)",
"10" :  "(73,84, fgraph)",
"11" :  "(73,79, TRANSIENTWRITE)",
"12" :  "(73,(73,75), i)",
"13" :  "(73,(73,97), i)",
"14" :  "(73,(75,76), i)",
"15" :  "(73,(75,95), i)",
"16" :  "(73,95, i)",
"17" :  "(73,73, i)",
"18" :  "(73,76, i)",
"19" :  "(73,84, i)",
"20" :  "(76,(77,78), roots)",
"21" :  "(76,(77,95), roots)",
"22" :  "(76,78, roots)",
"23" :  "(76,86, roots)",
"24" :  "(77,(77,78), j)",
"25" :  "(77,(77,95), j)",
"26" :  "(77,78, j)",
"27" :  "(77,77, j)",
"28" :  "(77,86, j)",
"29" :  "(77,86, j)",
"30" :  "(78,87, root)",
"31" :  "(78,83, root)",
"32" :  "(78,84, root)",
"33" :  "(78,(81,81), root)",
"34" :  "(78,(81,82), root)",
"35" :  "(79,(81,81), isTWrite)",
"36" :  "(79,(81,81), isTWrite)",
"37" :  "(80,(81,82), isFCall)",
"38" :  "(80,(81,77), isFCall)",
"39" :  "(80,(82,83), isFCall)",
"40" :  "(80,(82,86), isFCall)",
"41" :  "(86,77, j)",
"42" :  "(77,(77,78), j)",
"43" :  "(77,(77,95), j)",
"44" :  "(77,78, j)",
"45" :  "(77,77, j)",
"46" :  "(77,86, j)",
"47" :  "(77,86, j)",
"48" :  "(73,(73,75), i)",
"49" :  "(73,(73,97), i)",
"50" :  "(73,(75,76), i)",
"51" :  "(73,(75,95), i)",
"52" :  "(73,95, i)",
"53" :  "(73,73, i)",
"54" :  "(73,76, i)",
"55" :  "(73,84, i)"},{ "Name" : "isFunctionCallWithUnusedOutputs" ,
"Duas" : 10,
"0" :  "(100,(100,100), hop)",
"1" :  "(100,(100,103), hop)",
"2" :  "(100,(101,101), hop)",
"3" :  "(100,(101,103), hop)",
"4" :  "(100,(103,103), hop)",
"5" :  "(100,(103,103), hop)",
"6" :  "(100,(103,103), varNames)",
"7" :  "(100,(103,103), varNames)",
"8" :  "(100,(101,101), fgraph)",
"9" :  "(100,(101,103), fgraph)"},{ "Name" : "rRemoveOpFromDAG" ,
"Duas" : 5,
"0" :  "(109,115, current)",
"1" :  "(109,110, current)",
"2" :  "(109,(111,112), input)",
"3" :  "(109,(111,113), input)",
"4" :  "(109,112, input)"},{ "Name" : "rCollectReadVariableNames" ,
"Duas" : 30,
"0" :  "(119,(119,120), sb)",
"1" :  "(119,(119,126), sb)",
"2" :  "(119,(126,127), sb)",
"3" :  "(119,(126,135), sb)",
"4" :  "(119,(135,136), sb)",
"5" :  "(119,(135,145), sb)",
"6" :  "(119,(145,146), sb)",
"7" :  "(119,(145,150), sb)",
"8" :  "(119,146, sb)",
"9" :  "(119,147, sb)",
"10" :  "(119,136, sb)",
"11" :  "(119,137, sb)",
"12" :  "(119,127, sb)",
"13" :  "(119,128, sb)",
"14" :  "(119,120, sb)",
"15" :  "(119,121, sb)",
"16" :  "(119,150, varNames)",
"17" :  "(119,148, varNames)",
"18" :  "(119,138, varNames)",
"19" :  "(119,143, varNames)",
"20" :  "(119,140, varNames)",
"21" :  "(119,129, varNames)",
"22" :  "(119,130, varNames)",
"23" :  "(119,131, varNames)",
"24" :  "(119,133, varNames)",
"25" :  "(119,122, varNames)",
"26" :  "(119,124, varNames)",
"27" :  "(137,(141,142), istmt)",
"28" :  "(137,(141,144), istmt)",
"29" :  "(137,142, istmt)"},{ "Name" : "collectReadVariableNames" ,
"Duas" : 6,
"0" :  "(154,(154,155), hop)",
"1" :  "(154,(154,156), hop)",
"2" :  "(154,156, hop)",
"3" :  "(154,157, hop)",
"4" :  "(154,157, varNames)",
"5" :  "(154,155, varNames)"},{ "Name" : "rCollectReadVariableNames" ,
"Duas" : 13,
"0" :  "(161,(161,162), hop)",
"1" :  "(161,(161,163), hop)",
"2" :  "(161,163, hop)",
"3" :  "(161,(165,166), hop)",
"4" :  "(161,(165,167), hop)",
"5" :  "(161,167, hop)",
"6" :  "(161,166, hop)",
"7" :  "(161,168, varNames)",
"8" :  "(161,166, varNames)",
"9" :  "(161,164, varNames)",
"10" :  "(161,162, varNames)",
"11" :  "(161,(165,166), TRANSIENTREAD)",
"12" :  "(161,(165,167), TRANSIENTREAD)"},{ "Name" : "lambda$isFunctionCallWithUnusedOutputs$1" ,
"Duas" : 4,
"0" :  "(103,(103,103), varNames)",
"1" :  "(103,(103,103), varNames)",
"2" :  "(103,(103,103), var)",
"3" :  "(103,(103,103), var)"}]
}