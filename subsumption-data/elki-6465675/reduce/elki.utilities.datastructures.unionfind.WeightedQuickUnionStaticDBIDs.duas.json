{
"Class" : "elki.utilities.datastructures.unionfind.WeightedQuickUnionStaticDBIDs", 
"Methods" : [{ "Name" : "<init>" ,
"Duas" : 27,
"0" :  "(84,91, this)",
"1" :  "(84,92, this)",
"2" :  "(84,93, this)",
"3" :  "(84,(94,95), this)",
"4" :  "(84,(94,97), this)",
"5" :  "(84,95, this)",
"6" :  "(84,89, this)",
"7" :  "(84,91, ids)",
"8" :  "(84,93, ids)",
"9" :  "(86,89, this.index)",
"10" :  "(87,89, j)",
"11" :  "(88,(88,89), iter)",
"12" :  "(88,(88,91), iter)",
"13" :  "(88,89, iter)",
"14" :  "(88,88, iter)",
"15" :  "(89,89, j)",
"16" :  "(93,(94,95), this.parent)",
"17" :  "(93,(94,97), this.parent)",
"18" :  "(93,95, this.parent)",
"19" :  "(94,(94,95), i)",
"20" :  "(94,(94,97), i)",
"21" :  "(94,95, i)",
"22" :  "(94,94, i)",
"23" :  "(94,(94,95), i)",
"24" :  "(94,(94,97), i)",
"25" :  "(94,95, i)",
"26" :  "(94,94, i)"},{ "Name" : "find" ,
"Duas" : 35,
"0" :  "(101,103, this)",
"1" :  "(101,106, this)",
"2" :  "(101,106, this)",
"3" :  "(101,(102,102), this)",
"4" :  "(101,(102,103), this)",
"5" :  "(101,(102,102), $assertionsDisabled)",
"6" :  "(101,(102,103), $assertionsDisabled)",
"7" :  "(101,(102,102), this.ids)",
"8" :  "(101,(102,103), this.ids)",
"9" :  "(101,103, this.parent)",
"10" :  "(101,106, this.parent)",
"11" :  "(101,106, this.parent)",
"12" :  "(101,103, cur)",
"13" :  "(101,(104,105), cur)",
"14" :  "(101,(104,109), cur)",
"15" :  "(101,109, cur)",
"16" :  "(101,106, cur)",
"17" :  "(101,(102,102), cur)",
"18" :  "(101,(102,102), cur)",
"19" :  "(101,(102,102), cur)",
"20" :  "(101,(102,103), cur)",
"21" :  "(103,(104,105), p)",
"22" :  "(103,(104,109), p)",
"23" :  "(103,105, p)",
"24" :  "(103,106, p)",
"25" :  "(103,106, p)",
"26" :  "(106,(104,105), p)",
"27" :  "(106,(104,109), p)",
"28" :  "(106,105, p)",
"29" :  "(106,106, p)",
"30" :  "(106,106, p)",
"31" :  "(107,(104,105), cur)",
"32" :  "(107,(104,109), cur)",
"33" :  "(107,109, cur)",
"34" :  "(107,106, cur)"},{ "Name" : "union" ,
"Duas" : 33,
"0" :  "(114,118, this)",
"1" :  "(114,118, this)",
"2" :  "(114,125, this)",
"3" :  "(114,126, this)",
"4" :  "(114,120, this)",
"5" :  "(114,121, this)",
"6" :  "(114,118, this.weight)",
"7" :  "(114,118, this.weight)",
"8" :  "(114,126, this.weight)",
"9" :  "(114,121, this.weight)",
"10" :  "(114,125, this.parent)",
"11" :  "(114,120, this.parent)",
"12" :  "(114,(115,116), firstComponent)",
"13" :  "(114,(115,118), firstComponent)",
"14" :  "(114,118, firstComponent)",
"15" :  "(114,125, firstComponent)",
"16" :  "(114,120, firstComponent)",
"17" :  "(114,121, firstComponent)",
"18" :  "(114,122, firstComponent)",
"19" :  "(114,116, firstComponent)",
"20" :  "(114,(115,116), secondComponent)",
"21" :  "(114,(115,118), secondComponent)",
"22" :  "(114,118, secondComponent)",
"23" :  "(114,125, secondComponent)",
"24" :  "(114,126, secondComponent)",
"25" :  "(114,127, secondComponent)",
"26" :  "(114,120, secondComponent)",
"27" :  "(118,(119,120), w1)",
"28" :  "(118,(119,125), w1)",
"29" :  "(118,126, w1)",
"30" :  "(118,(119,120), w2)",
"31" :  "(118,(119,125), w2)",
"32" :  "(118,121, w2)"},{ "Name" : "isConnected" ,
"Duas" : 6,
"0" :  "(133,(133,133), this)",
"1" :  "(133,(133,133), this)",
"2" :  "(133,(133,133), first)",
"3" :  "(133,(133,133), first)",
"4" :  "(133,(133,133), second)",
"5" :  "(133,(133,133), second)"},{ "Name" : "getRoots" ,
"Duas" : 12,
"0" :  "(138,(141,142), this)",
"1" :  "(138,(141,139), this)",
"2" :  "(138,(141,142), this.parent)",
"3" :  "(138,(141,139), this.parent)",
"4" :  "(138,145, roots)",
"5" :  "(138,142, roots)",
"6" :  "(139,(139,141), iter)",
"7" :  "(139,(139,145), iter)",
"8" :  "(139,(141,142), iter)",
"9" :  "(139,(141,139), iter)",
"10" :  "(139,139, iter)",
"11" :  "(139,142, iter)"}]
}