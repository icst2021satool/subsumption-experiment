{
"Class" : "elki.utilities.datastructures.unionfind.WeightedQuickUnionRangeDBIDs", 
"Methods" : [{ "Name" : "<init>" ,
"Duas" : 14,
"0" :  "(72,(77,78), this)",
"1" :  "(72,(77,80), this)",
"2" :  "(72,78, this)",
"3" :  "(76,(77,78), this.parent)",
"4" :  "(76,(77,80), this.parent)",
"5" :  "(76,78, this.parent)",
"6" :  "(77,(77,78), i)",
"7" :  "(77,(77,80), i)",
"8" :  "(77,78, i)",
"9" :  "(77,77, i)",
"10" :  "(77,(77,78), i)",
"11" :  "(77,(77,80), i)",
"12" :  "(77,78, i)",
"13" :  "(77,77, i)"},{ "Name" : "find" ,
"Duas" : 35,
"0" :  "(84,86, this)",
"1" :  "(84,89, this)",
"2" :  "(84,89, this)",
"3" :  "(84,(85,85), this)",
"4" :  "(84,(85,86), this)",
"5" :  "(84,(85,85), this.ids)",
"6" :  "(84,(85,86), this.ids)",
"7" :  "(84,(85,85), $assertionsDisabled)",
"8" :  "(84,(85,86), $assertionsDisabled)",
"9" :  "(84,86, this.parent)",
"10" :  "(84,89, this.parent)",
"11" :  "(84,89, this.parent)",
"12" :  "(84,86, cur)",
"13" :  "(84,(87,88), cur)",
"14" :  "(84,(87,92), cur)",
"15" :  "(84,92, cur)",
"16" :  "(84,89, cur)",
"17" :  "(84,(85,85), cur)",
"18" :  "(84,(85,85), cur)",
"19" :  "(84,(85,85), cur)",
"20" :  "(84,(85,86), cur)",
"21" :  "(86,(87,88), p)",
"22" :  "(86,(87,92), p)",
"23" :  "(86,88, p)",
"24" :  "(86,89, p)",
"25" :  "(86,89, p)",
"26" :  "(89,(87,88), p)",
"27" :  "(89,(87,92), p)",
"28" :  "(89,88, p)",
"29" :  "(89,89, p)",
"30" :  "(89,89, p)",
"31" :  "(90,(87,88), cur)",
"32" :  "(90,(87,92), cur)",
"33" :  "(90,92, cur)",
"34" :  "(90,89, cur)"},{ "Name" : "union" ,
"Duas" : 33,
"0" :  "(97,101, this)",
"1" :  "(97,101, this)",
"2" :  "(97,108, this)",
"3" :  "(97,109, this)",
"4" :  "(97,103, this)",
"5" :  "(97,104, this)",
"6" :  "(97,101, this.weight)",
"7" :  "(97,101, this.weight)",
"8" :  "(97,109, this.weight)",
"9" :  "(97,104, this.weight)",
"10" :  "(97,108, this.parent)",
"11" :  "(97,103, this.parent)",
"12" :  "(97,(98,99), firstComponent)",
"13" :  "(97,(98,101), firstComponent)",
"14" :  "(97,101, firstComponent)",
"15" :  "(97,108, firstComponent)",
"16" :  "(97,103, firstComponent)",
"17" :  "(97,104, firstComponent)",
"18" :  "(97,105, firstComponent)",
"19" :  "(97,99, firstComponent)",
"20" :  "(97,(98,99), secondComponent)",
"21" :  "(97,(98,101), secondComponent)",
"22" :  "(97,101, secondComponent)",
"23" :  "(97,108, secondComponent)",
"24" :  "(97,109, secondComponent)",
"25" :  "(97,110, secondComponent)",
"26" :  "(97,103, secondComponent)",
"27" :  "(101,(102,103), w1)",
"28" :  "(101,(102,108), w1)",
"29" :  "(101,109, w1)",
"30" :  "(101,(102,103), w2)",
"31" :  "(101,(102,108), w2)",
"32" :  "(101,104, w2)"},{ "Name" : "isConnected" ,
"Duas" : 6,
"0" :  "(116,(116,116), this)",
"1" :  "(116,(116,116), this)",
"2" :  "(116,(116,116), first)",
"3" :  "(116,(116,116), first)",
"4" :  "(116,(116,116), second)",
"5" :  "(116,(116,116), second)"},{ "Name" : "getRoots" ,
"Duas" : 12,
"0" :  "(121,(124,125), this)",
"1" :  "(121,(124,122), this)",
"2" :  "(121,(124,125), this.parent)",
"3" :  "(121,(124,122), this.parent)",
"4" :  "(121,128, roots)",
"5" :  "(121,125, roots)",
"6" :  "(122,(122,124), iter)",
"7" :  "(122,(122,128), iter)",
"8" :  "(122,(124,125), iter)",
"9" :  "(122,(124,122), iter)",
"10" :  "(122,122, iter)",
"11" :  "(122,125, iter)"}]
}