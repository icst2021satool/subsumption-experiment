{
"Class" : "elki.index.tree.metrical.mtreevariants.strategies.split.distribution.FarthestBalancedDistribution", 
"Methods" : [{ "Name" : "distribute" ,
"Duas" : 113,
"0" :  "(37,49, node)",
"1" :  "(37,49, node)",
"2" :  "(37,59, node)",
"3" :  "(37,63, node)",
"4" :  "(37,49, routing1)",
"5" :  "(37,(41,41), routing1)",
"6" :  "(37,(41,40), routing1)",
"7" :  "(37,47, dis1)",
"8" :  "(37,57, dis1)",
"9" :  "(37,(38,38), dis1)",
"10" :  "(37,(38,38), dis1)",
"11" :  "(37,49, routing2)",
"12" :  "(37,(41,42), routing2)",
"13" :  "(37,(41,40), routing2)",
"14" :  "(37,47, dis2)",
"15" :  "(37,57, dis2)",
"16" :  "(37,(38,38), dis2)",
"17" :  "(37,(38,39), dis2)",
"18" :  "(37,(38,38), $assertionsDisabled)",
"19" :  "(37,(38,39), $assertionsDisabled)",
"20" :  "(37,(67,67), $assertionsDisabled)",
"21" :  "(37,(67,68), $assertionsDisabled)",
"22" :  "(37,(68,68), $assertionsDisabled)",
"23" :  "(37,(68,69), $assertionsDisabled)",
"24" :  "(37,(40,41), n)",
"25" :  "(37,(40,47), n)",
"26" :  "(37,50, n)",
"27" :  "(37,54, n)",
"28" :  "(37,(67,67), n)",
"29" :  "(37,(67,68), n)",
"30" :  "(37,67, n)",
"31" :  "(37,(38,38), n)",
"32" :  "(37,(38,38), n)",
"33" :  "(37,(38,38), n)",
"34" :  "(37,(38,39), n)",
"35" :  "(37,39, l)",
"36" :  "(37,47, l)",
"37" :  "(37,(55,56), l)",
"38" :  "(37,(55,67), l)",
"39" :  "(39,47, idx1)",
"40" :  "(39,56, idx1)",
"41" :  "(39,42, idx1)",
"42" :  "(40,(40,41), i)",
"43" :  "(40,(40,47), i)",
"44" :  "(40,(41,41), i)",
"45" :  "(40,(41,40), i)",
"46" :  "(40,40, i)",
"47" :  "(40,(41,42), i)",
"48" :  "(40,(41,40), i)",
"49" :  "(40,42, i)",
"50" :  "(40,42, j)",
"51" :  "(42,42, j)",
"52" :  "(40,(40,41), i)",
"53" :  "(40,(40,47), i)",
"54" :  "(40,(41,41), i)",
"55" :  "(40,(41,40), i)",
"56" :  "(40,40, i)",
"57" :  "(40,(41,42), i)",
"58" :  "(40,(41,40), i)",
"59" :  "(40,42, i)",
"60" :  "(50,69, assign)",
"61" :  "(50,(68,68), assign)",
"62" :  "(50,(68,69), assign)",
"63" :  "(50,68, assign)",
"64" :  "(50,(67,67), assign)",
"65" :  "(50,(67,68), assign)",
"66" :  "(50,67, assign)",
"67" :  "(50,59, assign)",
"68" :  "(50,63, assign)",
"69" :  "(54,(58,58), h)",
"70" :  "(54,(58,59), h)",
"71" :  "(54,(58,58), h)",
"72" :  "(54,(58,63), h)",
"73" :  "(55,(55,56), p)",
"74" :  "(55,(55,67), p)",
"75" :  "(55,56, p)",
"76" :  "(55,55, p)",
"77" :  "(55,60, s1)",
"78" :  "(55,(58,58), s1)",
"79" :  "(55,(58,63), s1)",
"80" :  "(55,(58,59), s1)",
"81" :  "(55,(58,63), s1)",
"82" :  "(55,(58,58), s2)",
"83" :  "(55,(58,59), s2)",
"84" :  "(55,64, s2)",
"85" :  "(55,(58,59), s2)",
"86" :  "(55,(58,63), s2)",
"87" :  "(56,59, i)",
"88" :  "(56,63, i)",
"89" :  "(57,59, d1)",
"90" :  "(57,(58,58), d1)",
"91" :  "(57,(58,59), d1)",
"92" :  "(57,(58,58), d1)",
"93" :  "(57,(58,63), d1)",
"94" :  "(57,63, d2)",
"95" :  "(57,(58,58), d2)",
"96" :  "(57,(58,59), d2)",
"97" :  "(57,(58,58), d2)",
"98" :  "(57,(58,63), d2)",
"99" :  "(60,60, s1)",
"100" :  "(60,(58,58), s1)",
"101" :  "(60,(58,63), s1)",
"102" :  "(60,(58,59), s1)",
"103" :  "(60,(58,63), s1)",
"104" :  "(64,(58,58), s2)",
"105" :  "(64,(58,59), s2)",
"106" :  "(64,64, s2)",
"107" :  "(64,(58,59), s2)",
"108" :  "(64,(58,63), s2)",
"109" :  "(55,(55,56), p)",
"110" :  "(55,(55,67), p)",
"111" :  "(55,56, p)",
"112" :  "(55,55, p)"}]
}