{
"Class" : "elki.index.tree.metrical.covertree.SimplifiedCoverTree$CoverTreePrioritySearcher", 
"Methods" : [{ "Name" : "decreaseCutoff" ,
"Duas" : "11" ,
"Subsumers" : 3,
"0" : [ 10, 6, 3], "S0" : [0, 1, 3, 4, 6, 7, 10 ],
"1" : [ 8], "S1" : [0, 1, 4, 8 ],
"2" : [ 9, 5, 2], "S2" : [2, 5, 7, 9 ]
},{ "Name" : "advance" ,
"Duas" : "14" ,
"Subsumers" : 5,
"0" : [ 13, 9, 8, 0], "S0" : [0, 8, 9, 13 ],
"1" : [ 10, 1], "S1" : [1, 10 ],
"2" : [ 11, 7, 2], "S2" : [2, 7, 11 ],
"3" : [ 6, 4], "S3" : [3, 4, 6, 12 ],
"4" : [ 5], "S4" : [3, 5, 12 ]
},{ "Name" : "advanceQueue" ,
"Duas" : "69" ,
"Subsumers" : 10,
"0" : [ 21, 0], "S0" : [0, 21 ],
"1" : [ 38, 28, 27, 20, 3], "S1" : [1, 2, 3, 20, 22, 23, 27, 28, 38 ],
"2" : [ 40, 32, 6], "S2" : [1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 22, 23, 24, 25, 29, 32, 34, 39, 40, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53 ],
"3" : [ 41, 33, 7], "S3" : [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 22, 23, 24, 25, 29, 33, 34, 39, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53 ],
"4" : [ 56, 54, 48, 13], "S4" : [1, 2, 4, 5, 8, 9, 10, 11, 12, 13, 22, 23, 24, 25, 29, 34, 39, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 56 ],
"5" : [ 63, 59, 57, 35, 14], "S5" : [1, 2, 4, 5, 8, 9, 10, 11, 12, 14, 16, 22, 23, 24, 25, 29, 34, 35, 37, 39, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 57, 59, 61, 63, 65 ],
"6" : [ 64, 60, 58, 36, 15], "S6" : [1, 2, 4, 5, 8, 9, 10, 11, 12, 15, 16, 22, 23, 24, 25, 29, 34, 36, 37, 39, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 58, 60, 61, 64, 65 ],
"7" : [ 68, 66, 62, 30, 26, 19, 17], "S7" : [1, 2, 4, 5, 8, 9, 10, 11, 12, 16, 17, 19, 22, 23, 24, 25, 26, 29, 30, 34, 37, 39, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 61, 62, 65, 66, 68 ],
"8" : [ 67, 31, 18], "S8" : [1, 2, 4, 5, 8, 9, 10, 11, 12, 16, 18, 22, 23, 24, 25, 29, 31, 34, 37, 39, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 61, 65, 67 ],
"9" : [ 55, 49], "S9" : [1, 2, 4, 5, 8, 9, 10, 11, 12, 22, 23, 24, 25, 29, 34, 39, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 55 ]
},{ "Name" : "getApproximateAccuracy" ,
"Duas" : "6" ,
"Subsumers" : 2,
"0" : [ 3, 0], "S0" : [0, 2, 3, 5 ],
"1" : [ 4, 1], "S1" : [1, 2, 4, 5 ]
},{ "Name" : "getLowerBound" ,
"Duas" : "13" ,
"Subsumers" : 3,
"0" : [ 5, 0], "S0" : [0, 4, 5, 9, 12 ],
"1" : [ 10, 7, 2], "S1" : [1, 2, 4, 6, 7, 9, 10, 12 ],
"2" : [ 11, 8, 3], "S2" : [1, 3, 4, 6, 8, 9, 11, 12 ]
},{ "Name" : "getUpperBound" ,
"Duas" : "7" ,
"Subsumers" : 2,
"0" : [ 3, 0], "S0" : [0, 2, 3, 5, 6 ],
"1" : [ 4, 1], "S1" : [1, 2, 4, 5, 6 ]
},{ "Name" : "computeExactDistance" ,
"Duas" : "7" ,
"Subsumers" : 2,
"0" : [ 3, 0], "S0" : [0, 2, 3, 5, 6 ],
"1" : [ 4, 1], "S1" : [1, 2, 4, 5, 6 ]
}]
}