{
"Class" : "elki.database.ids.integer.DoubleIntegerDBIDSubList", 
"Methods" : [{ "Name" : "<init>" ,
"Duas" : 18,
"0" :  "(57,61, this)",
"1" :  "(57,62, this)",
"2" :  "(57,(59,59), inner)",
"3" :  "(57,(59,60), inner)",
"4" :  "(57,61, begin)",
"5" :  "(57,(60,60), begin)",
"6" :  "(57,(60,60), begin)",
"7" :  "(57,(60,60), begin)",
"8" :  "(57,(60,61), begin)",
"9" :  "(57,62, end)",
"10" :  "(57,(60,60), end)",
"11" :  "(57,(60,61), end)",
"12" :  "(57,(59,59), end)",
"13" :  "(57,(59,60), end)",
"14" :  "(57,(59,59), $assertionsDisabled)",
"15" :  "(57,(59,60), $assertionsDisabled)",
"16" :  "(57,(60,60), $assertionsDisabled)",
"17" :  "(57,(60,61), $assertionsDisabled)"},{ "Name" : "assignVar" ,
"Duas" : 12,
"0" :  "(67,69, this)",
"1" :  "(67,(68,68), this)",
"2" :  "(67,(68,69), this)",
"3" :  "(67,69, var)",
"4" :  "(67,(68,68), $assertionsDisabled)",
"5" :  "(67,(68,69), $assertionsDisabled)",
"6" :  "(67,(68,68), this.end)",
"7" :  "(67,(68,69), this.end)",
"8" :  "(67,69, this.inner)",
"9" :  "(67,69, index)",
"10" :  "(67,(68,68), index)",
"11" :  "(67,(68,69), index)"},{ "Name" : "doubleValue" ,
"Duas" : 11,
"0" :  "(74,75, this)",
"1" :  "(74,(74,74), this)",
"2" :  "(74,(74,75), this)",
"3" :  "(74,75, index)",
"4" :  "(74,(74,74), index)",
"5" :  "(74,(74,75), index)",
"6" :  "(74,(74,74), $assertionsDisabled)",
"7" :  "(74,(74,75), $assertionsDisabled)",
"8" :  "(74,(74,74), this.end)",
"9" :  "(74,(74,75), this.end)",
"10" :  "(74,75, this.inner)"},{ "Name" : "contains" ,
"Duas" : 7,
"0" :  "(85,(86,87), o)",
"1" :  "(85,(86,85), o)",
"2" :  "(85,(85,86), iter)",
"3" :  "(85,(85,90), iter)",
"4" :  "(85,(86,87), iter)",
"5" :  "(85,(86,85), iter)",
"6" :  "(85,85, iter)"},{ "Name" : "isEmpty" ,
"Duas" : 6,
"0" :  "(95,(95,95), this)",
"1" :  "(95,(95,95), this)",
"2" :  "(95,(95,95), this.end)",
"3" :  "(95,(95,95), this.end)",
"4" :  "(95,(95,95), this.begin)",
"5" :  "(95,(95,95), this.begin)"},{ "Name" : "slice" ,
"Duas" : 12,
"0" :  "(105,108, this)",
"1" :  "(105,(107,107), this)",
"2" :  "(105,(107,108), this)",
"3" :  "(105,(107,107), $assertionsDisabled)",
"4" :  "(105,(107,108), $assertionsDisabled)",
"5" :  "(105,(107,107), this.end)",
"6" :  "(105,(107,108), this.end)",
"7" :  "(105,108, this.inner)",
"8" :  "(105,108, begin)",
"9" :  "(106,108, end)",
"10" :  "(106,(107,107), end)",
"11" :  "(106,(107,108), end)"}]
}