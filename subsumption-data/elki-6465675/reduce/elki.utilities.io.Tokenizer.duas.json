{
"Class" : "elki.utilities.io.Tokenizer", 
"Methods" : [{ "Name" : "<init>" ,
"Duas" : 10,
"0" :  "(58,60, this)",
"1" :  "(58,61, this)",
"2" :  "(58,60, colSep)",
"3" :  "(58,(59,59), colSep)",
"4" :  "(58,(59,60), colSep)",
"5" :  "(58,(61,61), quoteChars)",
"6" :  "(58,(61,61), quoteChars)",
"7" :  "(58,61, quoteChars)",
"8" :  "(58,(59,59), $assertionsDisabled)",
"9" :  "(58,(59,60), $assertionsDisabled)"},{ "Name" : "valid" ,
"Duas" : 6,
"0" :  "(106,(106,106), this)",
"1" :  "(106,(106,106), this)",
"2" :  "(106,(106,106), this.send)",
"3" :  "(106,(106,106), this.send)",
"4" :  "(106,(106,106), this.start)",
"5" :  "(106,(106,106), this.start)"},{ "Name" : "advance" ,
"Duas" : 63,
"0" :  "(111,(112,114), this)",
"1" :  "(111,(112,133), this)",
"2" :  "(111,133, this)",
"3" :  "(111,134, this)",
"4" :  "(111,135, this)",
"5" :  "(111,136, this)",
"6" :  "(111,148, this)",
"7" :  "(111,138, this)",
"8" :  "(111,(139,140), this)",
"9" :  "(111,(139,145), this)",
"10" :  "(111,145, this)",
"11" :  "(111,140, this)",
"12" :  "(111,141, this)",
"13" :  "(111,142, this)",
"14" :  "(111,125, this)",
"15" :  "(111,126, this)",
"16" :  "(111,127, this)",
"17" :  "(111,128, this)",
"18" :  "(111,129, this)",
"19" :  "(111,(116,116), this)",
"20" :  "(111,(116,112), this)",
"21" :  "(111,(116,117), this)",
"22" :  "(111,(116,112), this)",
"23" :  "(111,117, this)",
"24" :  "(111,118, this)",
"25" :  "(111,119, this)",
"26" :  "(111,120, this)",
"27" :  "(111,121, this)",
"28" :  "(111,133, this.index)",
"29" :  "(111,125, this.index)",
"30" :  "(111,(116,116), this.index)",
"31" :  "(111,(116,112), this.index)",
"32" :  "(111,117, this.index)",
"33" :  "(111,(112,114), this.matcher)",
"34" :  "(111,(112,133), this.matcher)",
"35" :  "(111,126, this.matcher)",
"36" :  "(111,127, this.matcher)",
"37" :  "(111,(116,116), this.matcher)",
"38" :  "(111,(116,112), this.matcher)",
"39" :  "(111,(116,117), this.matcher)",
"40" :  "(111,(116,112), this.matcher)",
"41" :  "(111,118, this.matcher)",
"42" :  "(111,119, this.matcher)",
"43" :  "(111,(139,140), this.input)",
"44" :  "(111,(139,145), this.input)",
"45" :  "(111,145, this.input)",
"46" :  "(111,(116,117), this.input)",
"47" :  "(111,(116,112), this.input)",
"48" :  "(111,134, this.send)",
"49" :  "(111,138, this.send)",
"50" :  "(111,145, LOG)",
"51" :  "(111,(137,138), inquote)",
"52" :  "(111,(137,148), inquote)",
"53" :  "(111,(139,140), inquote)",
"54" :  "(111,(139,145), inquote)",
"55" :  "(111,(114,116), inquote)",
"56" :  "(111,(114,125), inquote)",
"57" :  "(111,(116,117), inquote)",
"58" :  "(111,(116,112), inquote)",
"59" :  "(133,140, this.start)",
"60" :  "(134,141, this.end)",
"61" :  "(138,(139,140), last)",
"62" :  "(138,(139,145), last)"},{ "Name" : "getStrippedSubstring" ,
"Duas" : 51,
"0" :  "(166,181, this)",
"1" :  "(166,175, this)",
"2" :  "(166,168, this)",
"3" :  "(166,181, this.input)",
"4" :  "(166,175, this.input)",
"5" :  "(166,168, this.input)",
"6" :  "(166,(167,168), sstart)",
"7" :  "(166,(167,174), sstart)",
"8" :  "(166,(174,175), sstart)",
"9" :  "(166,(174,180), sstart)",
"10" :  "(166,(181,181), sstart)",
"11" :  "(166,(181,181), sstart)",
"12" :  "(166,181, sstart)",
"13" :  "(166,168, sstart)",
"14" :  "(166,172, sstart)",
"15" :  "(166,(167,168), ssend)",
"16" :  "(166,(167,174), ssend)",
"17" :  "(166,174, ssend)",
"18" :  "(168,(169,169), c)",
"19" :  "(168,(169,172), c)",
"20" :  "(168,(169,169), c)",
"21" :  "(168,(169,172), c)",
"22" :  "(168,(169,169), c)",
"23" :  "(168,(169,172), c)",
"24" :  "(168,(169,170), c)",
"25" :  "(168,(169,172), c)",
"26" :  "(172,(167,168), sstart)",
"27" :  "(172,(167,174), sstart)",
"28" :  "(172,(174,175), sstart)",
"29" :  "(172,(174,180), sstart)",
"30" :  "(172,(181,181), sstart)",
"31" :  "(172,(181,181), sstart)",
"32" :  "(172,181, sstart)",
"33" :  "(172,168, sstart)",
"34" :  "(172,172, sstart)",
"35" :  "(174,(174,175), ssend)",
"36" :  "(174,(174,180), ssend)",
"37" :  "(174,180, ssend)",
"38" :  "(174,175, ssend)",
"39" :  "(174,174, ssend)",
"40" :  "(175,(176,176), c)",
"41" :  "(175,(176,179), c)",
"42" :  "(175,(176,176), c)",
"43" :  "(175,(176,179), c)",
"44" :  "(175,(176,176), c)",
"45" :  "(175,(176,179), c)",
"46" :  "(175,(176,177), c)",
"47" :  "(175,(176,179), c)",
"48" :  "(180,(181,181), ssend)",
"49" :  "(180,(181,181), ssend)",
"50" :  "(180,181, ssend)"},{ "Name" : "isEmpty" ,
"Duas" : 6,
"0" :  "(220,(220,220), this)",
"1" :  "(220,(220,220), this)",
"2" :  "(220,(220,220), this.start)",
"3" :  "(220,(220,220), this.start)",
"4" :  "(220,(220,220), this.end)",
"5" :  "(220,(220,220), this.end)"},{ "Name" : "isQuote" ,
"Duas" : 30,
"0" :  "(233,(233,234), this)",
"1" :  "(233,(233,236), this)",
"2" :  "(233,236, this)",
"3" :  "(233,(237,238), this)",
"4" :  "(233,(237,242), this)",
"5" :  "(233,(238,239), this)",
"6" :  "(233,(238,237), this)",
"7" :  "(233,(233,234), index)",
"8" :  "(233,(233,236), index)",
"9" :  "(233,236, index)",
"10" :  "(233,(233,234), this.input)",
"11" :  "(233,(233,236), this.input)",
"12" :  "(233,236, this.input)",
"13" :  "(233,(237,238), this.quoteChars)",
"14" :  "(233,(237,242), this.quoteChars)",
"15" :  "(233,(238,239), this.quoteChars)",
"16" :  "(233,(238,237), this.quoteChars)",
"17" :  "(236,(238,239), c)",
"18" :  "(236,(238,237), c)",
"19" :  "(236,239, c)",
"20" :  "(237,(237,238), i)",
"21" :  "(237,(237,242), i)",
"22" :  "(237,(238,239), i)",
"23" :  "(237,(238,237), i)",
"24" :  "(237,237, i)",
"25" :  "(237,(237,238), i)",
"26" :  "(237,(237,242), i)",
"27" :  "(237,(238,239), i)",
"28" :  "(237,(238,237), i)",
"29" :  "(237,237, i)"}]
}