{
"Class" : "elki.index.tree.metrical.mtreevariants.mktrees.mkmax.MkMaxTree", 
"Methods" : [{ "Name" : "reverseKNNQuery" ,
"Duas" : 39,
"0" :  "(82,(82,83), this)",
"1" :  "(82,(82,87), this)",
"2" :  "(82,88, this)",
"3" :  "(82,(90,94), this)",
"4" :  "(82,(90,98), this)",
"5" :  "(82,102, this)",
"6" :  "(82,88, id)",
"7" :  "(82,(109,110), id)",
"8" :  "(82,(109,108), id)",
"9" :  "(82,(82,83), k)",
"10" :  "(82,(82,87), k)",
"11" :  "(82,(90,94), k)",
"12" :  "(82,(90,98), k)",
"13" :  "(82,102, k)",
"14" :  "(87,98, candidates)",
"15" :  "(87,99, candidates)",
"16" :  "(87,94, candidates)",
"17" :  "(98,102, candidateIDs)",
"18" :  "(98,105, candidateIDs)",
"19" :  "(98,100, candidateIDs)",
"20" :  "(99,(99,100), candidate)",
"21" :  "(99,(99,102), candidate)",
"22" :  "(99,100, candidate)",
"23" :  "(99,99, candidate)",
"24" :  "(102,107, knnLists)",
"25" :  "(104,119, result)",
"26" :  "(104,120, result)",
"27" :  "(104,110, result)",
"28" :  "(105,(105,106), iter)",
"29" :  "(105,(105,119), iter)",
"30" :  "(105,106, iter)",
"31" :  "(105,105, iter)",
"32" :  "(106,110, cid)",
"33" :  "(108,(108,109), iter2)",
"34" :  "(108,(108,105), iter2)",
"35" :  "(108,(109,110), iter2)",
"36" :  "(108,(109,108), iter2)",
"37" :  "(108,108, iter2)",
"38" :  "(108,110, iter2)"},{ "Name" : "kNNdistanceAdjustment" ,
"Duas" : 35,
"0" :  "(138,149, this)",
"1" :  "(138,153, entry)",
"2" :  "(138,149, knnLists)",
"3" :  "(138,143, knnLists)",
"4" :  "(138,(140,141), node)",
"5" :  "(138,(140,147), node)",
"6" :  "(138,(147,148), node)",
"7" :  "(138,(147,153), node)",
"8" :  "(138,148, node)",
"9" :  "(138,(141,142), node)",
"10" :  "(138,(141,141), node)",
"11" :  "(138,142, node)",
"12" :  "(139,153, knnDist_node)",
"13" :  "(139,150, knnDist_node)",
"14" :  "(139,144, knnDist_node)",
"15" :  "(141,(141,142), i)",
"16" :  "(141,(141,141), i)",
"17" :  "(141,142, i)",
"18" :  "(141,141, i)",
"19" :  "(144,153, knnDist_node)",
"20" :  "(144,144, knnDist_node)",
"21" :  "(141,(141,142), i)",
"22" :  "(141,(141,141), i)",
"23" :  "(141,142, i)",
"24" :  "(141,141, i)",
"25" :  "(147,(147,148), i)",
"26" :  "(147,(147,153), i)",
"27" :  "(147,148, i)",
"28" :  "(147,147, i)",
"29" :  "(150,153, knnDist_node)",
"30" :  "(150,150, knnDist_node)",
"31" :  "(147,(147,148), i)",
"32" :  "(147,(147,153), i)",
"33" :  "(147,148, i)",
"34" :  "(147,147, i)"},{ "Name" : "doReverseKNNQuery" ,
"Duas" : 55,
"0" :  "(169,185, this)",
"1" :  "(169,189, this)",
"2" :  "(169,190, this)",
"3" :  "(169,172, this)",
"4" :  "(169,185, q)",
"5" :  "(169,190, q)",
"6" :  "(169,172, q)",
"7" :  "(169,(169,170), node)",
"8" :  "(169,(169,181), node)",
"9" :  "(169,(181,182), node)",
"10" :  "(169,(181,194), node)",
"11" :  "(169,182, node)",
"12" :  "(169,(170,171), node)",
"13" :  "(169,(170,170), node)",
"14" :  "(169,171, node)",
"15" :  "(169,(183,183), node_entry)",
"16" :  "(169,(183,183), node_entry)",
"17" :  "(169,183, node_entry)",
"18" :  "(169,190, result)",
"19" :  "(169,174, result)",
"20" :  "(170,(170,171), i)",
"21" :  "(170,(170,170), i)",
"22" :  "(170,171, i)",
"23" :  "(170,170, i)",
"24" :  "(171,(173,174), entry)",
"25" :  "(171,(173,170), entry)",
"26" :  "(171,174, entry)",
"27" :  "(172,(173,174), distance)",
"28" :  "(172,(173,170), distance)",
"29" :  "(172,174, distance)",
"30" :  "(170,(170,171), i)",
"31" :  "(170,(170,170), i)",
"32" :  "(170,171, i)",
"33" :  "(170,170, i)",
"34" :  "(181,(181,182), i)",
"35" :  "(181,(181,194), i)",
"36" :  "(181,182, i)",
"37" :  "(181,181, i)",
"38" :  "(182,185, entry)",
"39" :  "(182,(186,186), entry)",
"40" :  "(182,(186,186), entry)",
"41" :  "(182,186, entry)",
"42" :  "(182,189, entry)",
"43" :  "(182,190, entry)",
"44" :  "(183,(188,189), node_knnDist)",
"45" :  "(183,(188,181), node_knnDist)",
"46" :  "(185,(186,186), distance)",
"47" :  "(185,(186,186), distance)",
"48" :  "(185,186, distance)",
"49" :  "(186,(188,189), minDist)",
"50" :  "(186,(188,181), minDist)",
"51" :  "(181,(181,182), i)",
"52" :  "(181,(181,194), i)",
"53" :  "(181,182, i)",
"54" :  "(181,181, i)"},{ "Name" : "preInsert" ,
"Duas" : 93,
"0" :  "(204,209, this)",
"1" :  "(204,244, this)",
"2" :  "(204,250, this)",
"3" :  "(204,216, this)",
"4" :  "(204,230, this)",
"5" :  "(204,(232,233), this)",
"6" :  "(204,(232,235), this)",
"7" :  "(204,(222,223), this)",
"8" :  "(204,(222,229), this)",
"9" :  "(204,244, q)",
"10" :  "(204,250, q)",
"11" :  "(204,216, q)",
"12" :  "(204,224, q)",
"13" :  "(204,205, q)",
"14" :  "(204,209, nodeEntry)",
"15" :  "(204,259, nodeEntry)",
"16" :  "(204,257, nodeEntry)",
"17" :  "(204,205, nodeEntry)",
"18" :  "(204,208, knns_q)",
"19" :  "(204,250, knns_q)",
"20" :  "(204,251, knns_q)",
"21" :  "(204,221, knns_q)",
"22" :  "(204,(222,223), knns_q)",
"23" :  "(204,(222,229), knns_q)",
"24" :  "(204,223, knns_q)",
"25" :  "(204,(204,205), LOG)",
"26" :  "(204,(204,208), LOG)",
"27" :  "(204,(256,257), LOG)",
"28" :  "(204,(256,259), LOG)",
"29" :  "(204,257, LOG)",
"30" :  "(204,205, LOG)",
"31" :  "(204,230, this.knnq)",
"32" :  "(208,(249,250), knnDist_q)",
"33" :  "(208,(249,253), knnDist_q)",
"34" :  "(208,(220,221), knnDist_q)",
"35" :  "(208,(220,229), knnDist_q)",
"36" :  "(209,(213,214), node)",
"37" :  "(209,(213,244), node)",
"38" :  "(209,244, node)",
"39" :  "(209,246, node)",
"40" :  "(209,(214,215), node)",
"41" :  "(209,(214,214), node)",
"42" :  "(209,215, node)",
"43" :  "(210,259, knnDist_node)",
"44" :  "(210,257, knnDist_node)",
"45" :  "(210,253, knnDist_node)",
"46" :  "(210,239, knnDist_node)",
"47" :  "(214,(214,215), i)",
"48" :  "(214,(214,214), i)",
"49" :  "(214,215, i)",
"50" :  "(214,214, i)",
"51" :  "(215,(229,230), p)",
"52" :  "(215,(229,239), p)",
"53" :  "(215,239, p)",
"54" :  "(215,230, p)",
"55" :  "(215,236, p)",
"56" :  "(215,233, p)",
"57" :  "(215,221, p)",
"58" :  "(216,(220,221), dist_pq)",
"59" :  "(216,(220,229), dist_pq)",
"60" :  "(216,(229,230), dist_pq)",
"61" :  "(216,(229,239), dist_pq)",
"62" :  "(216,235, dist_pq)",
"63" :  "(216,221, dist_pq)",
"64" :  "(223,(220,221), knnDist_q)",
"65" :  "(223,(220,229), knnDist_q)",
"66" :  "(230,(232,233), knns_p)",
"67" :  "(230,(232,235), knns_p)",
"68" :  "(230,235, knns_p)",
"69" :  "(239,259, knnDist_node)",
"70" :  "(239,257, knnDist_node)",
"71" :  "(239,239, knnDist_node)",
"72" :  "(214,(214,215), i)",
"73" :  "(214,(214,214), i)",
"74" :  "(214,215, i)",
"75" :  "(214,214, i)",
"76" :  "(245,(249,249), distEntry)",
"77" :  "(245,(249,250), distEntry)",
"78" :  "(245,(249,250), distEntry)",
"79" :  "(245,(249,253), distEntry)",
"80" :  "(245,(249,249), distEntry.second)",
"81" :  "(245,(249,250), distEntry.second)",
"82" :  "(245,(249,250), distEntry.second)",
"83" :  "(245,(249,253), distEntry.second)",
"84" :  "(246,250, dirEntry)",
"85" :  "(246,253, dirEntry)",
"86" :  "(247,(249,249), entry_knnDist)",
"87" :  "(247,(249,250), entry_knnDist)",
"88" :  "(251,(249,250), knnDist_q)",
"89" :  "(251,(249,253), knnDist_q)",
"90" :  "(253,259, knnDist_node)",
"91" :  "(253,257, knnDist_node)",
"92" :  "(253,253, knnDist_node)"},{ "Name" : "initializeCapacities" ,
"Duas" : 35,
"0" :  "(264,(268,269), this)",
"1" :  "(264,(268,274), this)",
"2" :  "(264,274, this)",
"3" :  "(264,(276,277), this)",
"4" :  "(264,(276,280), this)",
"5" :  "(264,(280,281), this)",
"6" :  "(264,(280,287), this)",
"7" :  "(264,287, this)",
"8" :  "(264,(289,290), this)",
"9" :  "(264,(289,293), this)",
"10" :  "(264,(293,294), this)",
"11" :  "(264,(293,296), this)",
"12" :  "(264,294, this)",
"13" :  "(264,290, this)",
"14" :  "(264,281, this)",
"15" :  "(264,277, this)",
"16" :  "(264,269, this)",
"17" :  "(264,294, LOG)",
"18" :  "(264,281, LOG)",
"19" :  "(264,274, distanceSize)",
"20" :  "(264,287, distanceSize)",
"21" :  "(267,(268,269), overhead)",
"22" :  "(267,(268,274), overhead)",
"23" :  "(267,274, overhead)",
"24" :  "(267,287, overhead)",
"25" :  "(274,(276,277), this.dirCapacity)",
"26" :  "(274,(276,280), this.dirCapacity)",
"27" :  "(274,(280,281), this.dirCapacity)",
"28" :  "(274,(280,287), this.dirCapacity)",
"29" :  "(274,281, this.dirCapacity)",
"30" :  "(287,(289,290), this.leafCapacity)",
"31" :  "(287,(289,293), this.leafCapacity)",
"32" :  "(287,(293,294), this.leafCapacity)",
"33" :  "(287,(293,296), this.leafCapacity)",
"34" :  "(287,294, this.leafCapacity)"}]
}