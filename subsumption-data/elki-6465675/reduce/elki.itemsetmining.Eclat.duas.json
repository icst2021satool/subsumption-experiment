{
"Class" : "elki.itemsetmining.Eclat", 
"Methods" : [{ "Name" : "run" ,
"Duas" : 33,
"0" :  "(115,130, this)",
"1" :  "(115,137, relation)",
"2" :  "(115,(125,125), LOG)",
"3" :  "(115,(125,125), LOG)",
"4" :  "(115,126, LOG)",
"5" :  "(115,132, LOG)",
"6" :  "(115,134, LOG)",
"7" :  "(115,136, LOG)",
"8" :  "(115,129, LOG)",
"9" :  "(115,125, LOG)",
"10" :  "(115,126, STAT)",
"11" :  "(115,136, STAT)",
"12" :  "(116,137, meta)",
"13" :  "(118,130, minsupp)",
"14" :  "(122,(128,129), idx)",
"15" :  "(122,(128,132), idx)",
"16" :  "(122,130, idx)",
"17" :  "(122,125, idx)",
"18" :  "(125,132, prog)",
"19" :  "(125,129, prog)",
"20" :  "(126,134, etime)",
"21" :  "(127,133, solution)",
"22" :  "(127,136, solution)",
"23" :  "(127,137, solution)",
"24" :  "(127,130, solution)",
"25" :  "(128,(128,129), i)",
"26" :  "(128,(128,132), i)",
"27" :  "(128,130, i)",
"28" :  "(128,128, i)",
"29" :  "(128,(128,129), i)",
"30" :  "(128,(128,132), i)",
"31" :  "(128,130, i)",
"32" :  "(128,128, i)"},{ "Name" : "extractItemsets" ,
"Duas" : 26,
"0" :  "(144,(149,150), this)",
"1" :  "(144,(149,152), this)",
"2" :  "(144,(152,153), this)",
"3" :  "(144,(152,156), this)",
"4" :  "(144,154, this)",
"5" :  "(144,154, idx)",
"6" :  "(144,153, start)",
"7" :  "(144,154, start)",
"8" :  "(144,150, start)",
"9" :  "(144,(146,147), minsupp)",
"10" :  "(144,(146,149), minsupp)",
"11" :  "(144,154, minsupp)",
"12" :  "(144,154, solution)",
"13" :  "(144,150, solution)",
"14" :  "(144,(149,150), this.minlength)",
"15" :  "(144,(149,152), this.minlength)",
"16" :  "(144,(152,153), this.maxlength)",
"17" :  "(144,(152,156), this.maxlength)",
"18" :  "(144,153, buf)",
"19" :  "(144,154, buf)",
"20" :  "(145,(146,146), iset)",
"21" :  "(145,(146,147), iset)",
"22" :  "(145,(146,147), iset)",
"23" :  "(145,(146,149), iset)",
"24" :  "(145,154, iset)",
"25" :  "(145,150, iset)"},{ "Name" : "extractItemsets" ,
"Duas" : 53,
"0" :  "(160,165, this)",
"1" :  "(160,(171,172), this)",
"2" :  "(160,(171,174), this)",
"3" :  "(160,(174,175), this)",
"4" :  "(160,(174,161), this)",
"5" :  "(160,175, this)",
"6" :  "(160,165, iset)",
"7" :  "(160,(161,162), idx)",
"8" :  "(160,(161,178), idx)",
"9" :  "(160,(162,163), idx)",
"10" :  "(160,(162,165), idx)",
"11" :  "(160,165, idx)",
"12" :  "(160,175, idx)",
"13" :  "(160,169, buf)",
"14" :  "(160,170, buf)",
"15" :  "(160,175, buf)",
"16" :  "(160,169, depth)",
"17" :  "(160,(166,167), minsupp)",
"18" :  "(160,(166,169), minsupp)",
"19" :  "(160,175, minsupp)",
"20" :  "(160,175, solution)",
"21" :  "(160,172, solution)",
"22" :  "(160,(171,172), this.minlength)",
"23" :  "(160,(171,174), this.minlength)",
"24" :  "(160,(174,175), this.maxlength)",
"25" :  "(160,(174,161), this.maxlength)",
"26" :  "(160,170, depth1)",
"27" :  "(160,(171,172), depth1)",
"28" :  "(160,(171,174), depth1)",
"29" :  "(160,(174,175), depth1)",
"30" :  "(160,(174,161), depth1)",
"31" :  "(160,175, depth1)",
"32" :  "(161,(161,162), i)",
"33" :  "(161,(161,178), i)",
"34" :  "(161,(162,163), i)",
"35" :  "(161,(162,165), i)",
"36" :  "(161,165, i)",
"37" :  "(161,169, i)",
"38" :  "(161,161, i)",
"39" :  "(161,175, i)",
"40" :  "(165,(166,167), ids)",
"41" :  "(165,(166,169), ids)",
"42" :  "(165,175, ids)",
"43" :  "(165,172, ids)",
"44" :  "(170,172, items)",
"45" :  "(161,(161,162), i)",
"46" :  "(161,(161,178), i)",
"47" :  "(161,(162,163), i)",
"48" :  "(161,(162,165), i)",
"49" :  "(161,165, i)",
"50" :  "(161,169, i)",
"51" :  "(161,161, i)",
"52" :  "(161,175, i)"},{ "Name" : "mergeJoin" ,
"Duas" : 27,
"0" :  "(181,185, first)",
"1" :  "(181,(181,181), first)",
"2" :  "(181,(181,182), first)",
"3" :  "(181,185, second)",
"4" :  "(181,(182,182), second)",
"5" :  "(181,(182,183), second)",
"6" :  "(181,(181,181), $assertionsDisabled)",
"7" :  "(181,(181,182), $assertionsDisabled)",
"8" :  "(181,(182,182), $assertionsDisabled)",
"9" :  "(181,(182,183), $assertionsDisabled)",
"10" :  "(183,200, ids)",
"11" :  "(183,195, ids)",
"12" :  "(185,(186,186), i1)",
"13" :  "(185,(186,200), i1)",
"14" :  "(185,187, i1)",
"15" :  "(185,195, i1)",
"16" :  "(185,196, i1)",
"17" :  "(185,189, i1)",
"18" :  "(185,(186,187), i2)",
"19" :  "(185,(186,200), i2)",
"20" :  "(185,187, i2)",
"21" :  "(185,197, i2)",
"22" :  "(185,192, i2)",
"23" :  "(187,(188,189), c)",
"24" :  "(187,(188,191), c)",
"25" :  "(187,(191,192), c)",
"26" :  "(187,(191,195), c)"},{ "Name" : "buildIndex" ,
"Duas" : 54,
"0" :  "(204,208, relation)",
"1" :  "(204,209, relation)",
"2" :  "(204,(205,206), dim)",
"3" :  "(204,(205,208), dim)",
"4" :  "(204,(216,217), dim)",
"5" :  "(204,(216,224), dim)",
"6" :  "(204,(217,218), minsupp)",
"7" :  "(204,(217,221), minsupp)",
"8" :  "(204,224, idx)",
"9" :  "(204,(217,218), idx)",
"10" :  "(204,(217,221), idx)",
"11" :  "(204,221, idx)",
"12" :  "(204,218, idx)",
"13" :  "(204,212, idx)",
"14" :  "(204,206, idx)",
"15" :  "(205,(205,206), i)",
"16" :  "(205,(205,208), i)",
"17" :  "(205,206, i)",
"18" :  "(205,205, i)",
"19" :  "(205,(205,206), i)",
"20" :  "(205,(205,208), i)",
"21" :  "(205,206, i)",
"22" :  "(205,205, i)",
"23" :  "(208,(208,209), iter)",
"24" :  "(208,(208,216), iter)",
"25" :  "(208,209, iter)",
"26" :  "(208,208, iter)",
"27" :  "(208,212, iter)",
"28" :  "(209,(211,212), bv)",
"29" :  "(209,(211,208), bv)",
"30" :  "(209,212, bv)",
"31" :  "(209,211, bv)",
"32" :  "(211,(211,212), it)",
"33" :  "(211,(211,208), it)",
"34" :  "(211,212, it)",
"35" :  "(211,211, it)",
"36" :  "(211,(211,212), it)",
"37" :  "(211,(211,208), it)",
"38" :  "(211,212, it)",
"39" :  "(211,211, it)",
"40" :  "(216,(216,217), i)",
"41" :  "(216,(216,224), i)",
"42" :  "(216,(217,218), i)",
"43" :  "(216,(217,221), i)",
"44" :  "(216,221, i)",
"45" :  "(216,216, i)",
"46" :  "(216,218, i)",
"47" :  "(216,(216,217), i)",
"48" :  "(216,(216,224), i)",
"49" :  "(216,(217,218), i)",
"50" :  "(216,(217,221), i)",
"51" :  "(216,221, i)",
"52" :  "(216,216, i)",
"53" :  "(216,218, i)"}]
}