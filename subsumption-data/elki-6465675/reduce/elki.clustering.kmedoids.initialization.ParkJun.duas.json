{
"Class" : "elki.clustering.kmedoids.initialization.ParkJun", 
"Methods" : [{ "Name" : "chooseInitialMeans" ,
"Duas" : 24,
"0" :  "(81,91, this)",
"1" :  "(81,(81,82), relation)",
"2" :  "(81,(81,86), relation)",
"3" :  "(81,86, relation)",
"4" :  "(81,95, relation)",
"5" :  "(81,(81,82), k)",
"6" :  "(81,(81,86), k)",
"7" :  "(81,91, k)",
"8" :  "(81,92, k)",
"9" :  "(81,(94,95), k)",
"10" :  "(81,(94,97), k)",
"11" :  "(81,89, distance)",
"12" :  "(92,97, medoids)",
"13" :  "(92,95, medoids)",
"14" :  "(93,95, iter)",
"15" :  "(93,94, iter)",
"16" :  "(94,(94,95), i)",
"17" :  "(94,(94,97), i)",
"18" :  "(94,95, i)",
"19" :  "(94,94, i)",
"20" :  "(94,(94,95), i)",
"21" :  "(94,(94,97), i)",
"22" :  "(94,95, i)",
"23" :  "(94,94, i)"},{ "Name" : "chooseInitialMedoids" ,
"Duas" : 56,
"0" :  "(103,118, k)",
"1" :  "(103,131, k)",
"2" :  "(103,125, k)",
"3" :  "(103,107, ids)",
"4" :  "(103,120, ids)",
"5" :  "(103,122, ids)",
"6" :  "(103,119, ids)",
"7" :  "(103,109, ids)",
"8" :  "(103,106, ids)",
"9" :  "(103,123, distQ)",
"10" :  "(103,110, distQ)",
"11" :  "(103,(106,106), LOG)",
"12" :  "(103,(106,106), LOG)",
"13" :  "(103,115, LOG)",
"14" :  "(103,(119,119), LOG)",
"15" :  "(103,(119,119), LOG)",
"16" :  "(103,128, LOG)",
"17" :  "(103,126, LOG)",
"18" :  "(103,119, LOG)",
"19" :  "(103,113, LOG)",
"20" :  "(103,106, LOG)",
"21" :  "(103,129, distsum)",
"22" :  "(103,123, distsum)",
"23" :  "(103,112, distsum)",
"24" :  "(106,115, prog)",
"25" :  "(106,113, prog)",
"26" :  "(107,(107,108), iter)",
"27" :  "(107,(107,115), iter)",
"28" :  "(107,112, iter)",
"29" :  "(107,107, iter)",
"30" :  "(107,110, iter)",
"31" :  "(108,112, sum)",
"32" :  "(108,110, sum)",
"33" :  "(109,(109,110), iter2)",
"34" :  "(109,(109,112), iter2)",
"35" :  "(109,110, iter2)",
"36" :  "(109,109, iter2)",
"37" :  "(110,112, sum)",
"38" :  "(110,110, sum)",
"39" :  "(118,131, knn)",
"40" :  "(118,125, knn)",
"41" :  "(119,128, prog)",
"42" :  "(119,126, prog)",
"43" :  "(120,(120,121), iter)",
"44" :  "(120,(120,128), iter)",
"45" :  "(120,125, iter)",
"46" :  "(120,120, iter)",
"47" :  "(120,123, iter)",
"48" :  "(121,125, sum)",
"49" :  "(121,123, sum)",
"50" :  "(122,(122,123), iter2)",
"51" :  "(122,(122,125), iter2)",
"52" :  "(122,123, iter2)",
"53" :  "(122,122, iter2)",
"54" :  "(123,125, sum)",
"55" :  "(123,123, sum)"}]
}