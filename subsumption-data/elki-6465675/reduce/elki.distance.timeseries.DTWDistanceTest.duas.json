{
"Class" : "elki.distance.timeseries.DTWDistanceTest", 
"Methods" : [{ "Name" : "testDynamicTimeWarping" ,
"Duas" : 65,
"0" :  "(84,(85,86), this)",
"1" :  "(84,(85,88), this)",
"2" :  "(84,92, this)",
"3" :  "(84,86, this)",
"4" :  "(84,(85,86), this.DATA)",
"5" :  "(84,(85,88), this.DATA)",
"6" :  "(84,86, this.DATA)",
"7" :  "(84,92, this.FULLWIDTH_SCORES)",
"8" :  "(84,(89,90), vecs)",
"9" :  "(84,(89,96), vecs)",
"10" :  "(84,(90,91), vecs)",
"11" :  "(84,(90,89), vecs)",
"12" :  "(84,91, vecs)",
"13" :  "(84,93, vecs)",
"14" :  "(84,86, vecs)",
"15" :  "(85,(85,86), i)",
"16" :  "(85,(85,88), i)",
"17" :  "(85,86, i)",
"18" :  "(85,85, i)",
"19" :  "(85,(85,86), i)",
"20" :  "(85,(85,88), i)",
"21" :  "(85,86, i)",
"22" :  "(85,85, i)",
"23" :  "(88,91, f)",
"24" :  "(89,(89,90), i)",
"25" :  "(89,(89,96), i)",
"26" :  "(89,89, i)",
"27" :  "(89,91, i)",
"28" :  "(89,(92,92), i)",
"29" :  "(89,(92,92), i)",
"30" :  "(89,(92,92), i)",
"31" :  "(89,(92,92), i)",
"32" :  "(89,92, i)",
"33" :  "(89,93, i)",
"34" :  "(90,(90,91), j)",
"35" :  "(90,(90,89), j)",
"36" :  "(90,91, j)",
"37" :  "(90,(92,92), j)",
"38" :  "(90,(92,92), j)",
"39" :  "(90,(92,92), j)",
"40" :  "(90,(92,92), j)",
"41" :  "(90,92, j)",
"42" :  "(90,93, j)",
"43" :  "(90,90, j)",
"44" :  "(91,93, dist)",
"45" :  "(90,(90,91), j)",
"46" :  "(90,(90,89), j)",
"47" :  "(90,91, j)",
"48" :  "(90,(92,92), j)",
"49" :  "(90,(92,92), j)",
"50" :  "(90,(92,92), j)",
"51" :  "(90,(92,92), j)",
"52" :  "(90,92, j)",
"53" :  "(90,93, j)",
"54" :  "(90,90, j)",
"55" :  "(89,(89,90), i)",
"56" :  "(89,(89,96), i)",
"57" :  "(89,89, i)",
"58" :  "(89,91, i)",
"59" :  "(89,(92,92), i)",
"60" :  "(89,(92,92), i)",
"61" :  "(89,(92,92), i)",
"62" :  "(89,(92,92), i)",
"63" :  "(89,92, i)",
"64" :  "(89,93, i)"},{ "Name" : "testConstrainedDynamicTimeWarping" ,
"Duas" : 79,
"0" :  "(100,(101,102), this)",
"1" :  "(100,(101,105), this)",
"2" :  "(100,(109,110), this)",
"3" :  "(100,(109,112), this)",
"4" :  "(100,112, this)",
"5" :  "(100,102, this)",
"6" :  "(100,(101,102), this.DATA)",
"7" :  "(100,(101,105), this.DATA)",
"8" :  "(100,102, this.DATA)",
"9" :  "(100,(109,110), this.CONSTRAINED_SCORES)",
"10" :  "(100,(109,112), this.CONSTRAINED_SCORES)",
"11" :  "(100,112, this.CONSTRAINED_SCORES)",
"12" :  "(100,110, err)",
"13" :  "(100,(106,107), vecs)",
"14" :  "(100,(106,116), vecs)",
"15" :  "(100,(107,108), vecs)",
"16" :  "(100,(107,106), vecs)",
"17" :  "(100,108, vecs)",
"18" :  "(100,113, vecs)",
"19" :  "(100,102, vecs)",
"20" :  "(101,(101,102), i)",
"21" :  "(101,(101,105), i)",
"22" :  "(101,102, i)",
"23" :  "(101,101, i)",
"24" :  "(101,(101,102), i)",
"25" :  "(101,(101,105), i)",
"26" :  "(101,102, i)",
"27" :  "(101,101, i)",
"28" :  "(105,108, f)",
"29" :  "(106,(106,107), i)",
"30" :  "(106,(106,116), i)",
"31" :  "(106,106, i)",
"32" :  "(106,108, i)",
"33" :  "(106,(109,110), i)",
"34" :  "(106,(109,112), i)",
"35" :  "(106,(112,112), i)",
"36" :  "(106,(112,112), i)",
"37" :  "(106,(112,112), i)",
"38" :  "(106,(112,112), i)",
"39" :  "(106,112, i)",
"40" :  "(106,113, i)",
"41" :  "(107,(107,108), j)",
"42" :  "(107,(107,106), j)",
"43" :  "(107,108, j)",
"44" :  "(107,(109,110), j)",
"45" :  "(107,(109,112), j)",
"46" :  "(107,(112,112), j)",
"47" :  "(107,(112,112), j)",
"48" :  "(107,(112,112), j)",
"49" :  "(107,(112,112), j)",
"50" :  "(107,112, j)",
"51" :  "(107,113, j)",
"52" :  "(107,107, j)",
"53" :  "(108,113, dist)",
"54" :  "(108,110, dist)",
"55" :  "(107,(107,108), j)",
"56" :  "(107,(107,106), j)",
"57" :  "(107,108, j)",
"58" :  "(107,(109,110), j)",
"59" :  "(107,(109,112), j)",
"60" :  "(107,(112,112), j)",
"61" :  "(107,(112,112), j)",
"62" :  "(107,(112,112), j)",
"63" :  "(107,(112,112), j)",
"64" :  "(107,112, j)",
"65" :  "(107,113, j)",
"66" :  "(107,107, j)",
"67" :  "(106,(106,107), i)",
"68" :  "(106,(106,116), i)",
"69" :  "(106,106, i)",
"70" :  "(106,108, i)",
"71" :  "(106,(109,110), i)",
"72" :  "(106,(109,112), i)",
"73" :  "(106,(112,112), i)",
"74" :  "(106,(112,112), i)",
"75" :  "(106,(112,112), i)",
"76" :  "(106,(112,112), i)",
"77" :  "(106,112, i)",
"78" :  "(106,113, i)"}]
}