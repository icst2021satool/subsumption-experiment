{
"Class" : "elki.database.ids.integer.IntegerDBIDVar", 
"Methods" : [{ "Name" : "get" ,
"Duas" : 3,
"0" :  "(82,(82,83), i)",
"1" :  "(82,(82,85), i)",
"2" :  "(82,85, i)"},{ "Name" : "size" ,
"Duas" : 4,
"0" :  "(90,(90,90), this)",
"1" :  "(90,(90,90), this)",
"2" :  "(90,(90,90), this.id)",
"3" :  "(90,(90,90), this.id)"},{ "Name" : "isEmpty" ,
"Duas" : 4,
"0" :  "(95,(95,95), this)",
"1" :  "(95,(95,95), this)",
"2" :  "(95,(95,95), this.id)",
"3" :  "(95,(95,95), this.id)"},{ "Name" : "isSet" ,
"Duas" : 4,
"0" :  "(105,(105,105), this)",
"1" :  "(105,(105,105), this)",
"2" :  "(105,(105,105), this.id)",
"3" :  "(105,(105,105), this.id)"},{ "Name" : "binarySearch" ,
"Duas" : 12,
"0" :  "(110,(111,111), this)",
"1" :  "(110,(111,111), this)",
"2" :  "(110,(111,111), this)",
"3" :  "(110,(111,111), this)",
"4" :  "(110,(111,111), this.id)",
"5" :  "(110,(111,111), this.id)",
"6" :  "(110,(111,111), this.id)",
"7" :  "(110,(111,111), this.id)",
"8" :  "(110,(111,111), other)",
"9" :  "(110,(111,111), other)",
"10" :  "(110,(111,111), other)",
"11" :  "(110,(111,111), other)"},{ "Name" : "contains" ,
"Duas" : 6,
"0" :  "(116,(116,116), this)",
"1" :  "(116,(116,116), this)",
"2" :  "(116,(116,116), o)",
"3" :  "(116,(116,116), o)",
"4" :  "(116,(116,116), this.id)",
"5" :  "(116,(116,116), this.id)"},{ "Name" : "assignVar" ,
"Duas" : 7,
"0" :  "(121,122, i)",
"1" :  "(121,122, var)",
"2" :  "(121,123, var)",
"3" :  "(121,(121,121), var)",
"4" :  "(121,(121,122), var)",
"5" :  "(121,(121,121), $assertionsDisabled)",
"6" :  "(121,(121,122), $assertionsDisabled)"},{ "Name" : "slice" ,
"Duas" : 6,
"0" :  "(133,133, this)",
"1" :  "(133,(133,133), begin)",
"2" :  "(133,(133,133), begin)",
"3" :  "(133,(133,133), end)",
"4" :  "(133,(133,133), end)",
"5" :  "(133,133, EMPTYDBIDS)"},{ "Name" : "toString" ,
"Duas" : 6,
"0" :  "(138,(138,138), this)",
"1" :  "(138,(138,138), this)",
"2" :  "(138,138, this)",
"3" :  "(138,(138,138), this.id)",
"4" :  "(138,(138,138), this.id)",
"5" :  "(138,138, this.id)"}]
}