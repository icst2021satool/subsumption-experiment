{
"Class" : "elki.utilities.datastructures.range.ExponentialIntGenerator", 
"Methods" : [{ "Name" : "<init>" ,
"Duas" : 20,
"0" :  "(54,64, this)",
"1" :  "(54,65, this)",
"2" :  "(54,66, this)",
"3" :  "(54,(58,59), start)",
"4" :  "(54,(58,61), start)",
"5" :  "(54,(61,61), start)",
"6" :  "(54,(61,61), start)",
"7" :  "(54,(61,62), start)",
"8" :  "(54,(61,64), start)",
"9" :  "(54,64, start)",
"10" :  "(54,(61,61), start)",
"11" :  "(54,(61,64), start)",
"12" :  "(54,(55,56), factor)",
"13" :  "(54,(55,58), factor)",
"14" :  "(54,65, factor)",
"15" :  "(54,(61,62), stop)",
"16" :  "(54,(61,64), stop)",
"17" :  "(54,66, stop)",
"18" :  "(54,(61,61), stop)",
"19" :  "(54,(61,64), stop)"},{ "Name" : "getMin" ,
"Duas" : 7,
"0" :  "(71,(71,71), this)",
"1" :  "(71,(71,71), this)",
"2" :  "(71,71, this)",
"3" :  "(71,(71,71), this.start)",
"4" :  "(71,(71,71), this.start)",
"5" :  "(71,71, this.start)",
"6" :  "(71,71, this.end)"},{ "Name" : "getMax" ,
"Duas" : 7,
"0" :  "(76,(76,76), this)",
"1" :  "(76,(76,76), this)",
"2" :  "(76,76, this)",
"3" :  "(76,(76,76), this.start)",
"4" :  "(76,(76,76), this.start)",
"5" :  "(76,76, this.start)",
"6" :  "(76,76, this.end)"},{ "Name" : "forEach" ,
"Duas" : 38,
"0" :  "(81,(81,82), this)",
"1" :  "(81,(81,87), this)",
"2" :  "(81,87, this)",
"3" :  "(81,(87,88), this)",
"4" :  "(81,(87,91), this)",
"5" :  "(81,87, this)",
"6" :  "(81,82, this)",
"7" :  "(81,(82,83), this)",
"8" :  "(81,(82,82), this)",
"9" :  "(81,82, this)",
"10" :  "(81,88, c)",
"11" :  "(81,83, c)",
"12" :  "(81,(81,82), this.start)",
"13" :  "(81,(81,87), this.start)",
"14" :  "(81,87, this.start)",
"15" :  "(81,82, this.start)",
"16" :  "(81,(87,88), this.end)",
"17" :  "(81,(87,91), this.end)",
"18" :  "(81,(82,83), this.end)",
"19" :  "(81,(82,82), this.end)",
"20" :  "(81,87, this.factor)",
"21" :  "(81,82, this.factor)",
"22" :  "(82,(82,83), i)",
"23" :  "(82,(82,82), i)",
"24" :  "(82,83, i)",
"25" :  "(82,82, i)",
"26" :  "(82,(82,83), i)",
"27" :  "(82,(82,82), i)",
"28" :  "(82,83, i)",
"29" :  "(82,82, i)",
"30" :  "(87,(87,88), i)",
"31" :  "(87,(87,91), i)",
"32" :  "(87,88, i)",
"33" :  "(87,87, i)",
"34" :  "(87,(87,88), i)",
"35" :  "(87,(87,91), i)",
"36" :  "(87,88, i)",
"37" :  "(87,87, i)"}]
}