{
"Class" : "elki.datasource.filter.normalization.columnwise.AttributeWiseCDFNormalization", 
"Methods" : [{ "Name" : "filter" ,
"Duas" : 93,
"0" :  "(100,114, this)",
"1" :  "(100,118, this)",
"2" :  "(100,(120,120), this)",
"3" :  "(100,(120,120), this)",
"4" :  "(100,143, this)",
"5" :  "(100,141, this)",
"6" :  "(100,127, this)",
"7" :  "(100,133, this)",
"8" :  "(100,(131,131), this)",
"9" :  "(100,(131,131), this)",
"10" :  "(100,(100,101), objects)",
"11" :  "(100,(100,103), objects)",
"12" :  "(100,(103,104), objects)",
"13" :  "(100,(103,146), objects)",
"14" :  "(100,146, objects)",
"15" :  "(100,104, objects)",
"16" :  "(100,105, objects)",
"17" :  "(100,(138,139), objects)",
"18" :  "(100,(138,103), objects)",
"19" :  "(100,101, objects)",
"20" :  "(100,(106,107), NUMBER_VECTOR_FIELD)",
"21" :  "(100,(106,110), NUMBER_VECTOR_FIELD)",
"22" :  "(100,(120,120), this.estimators)",
"23" :  "(100,(120,120), this.estimators)",
"24" :  "(103,(103,104), r)",
"25" :  "(103,(103,146), r)",
"26" :  "(103,104, r)",
"27" :  "(103,105, r)",
"28" :  "(103,103, r)",
"29" :  "(104,(106,107), type)",
"30" :  "(104,(106,110), type)",
"31" :  "(104,113, type)",
"32" :  "(105,110, column)",
"33" :  "(110,120, castColumn)",
"34" :  "(110,139, castColumn)",
"35" :  "(110,143, castColumn)",
"36" :  "(110,127, castColumn)",
"37" :  "(110,(131,131), castColumn)",
"38" :  "(110,(131,131), castColumn)",
"39" :  "(114,143, this.factory)",
"40" :  "(117,(125,126), dim)",
"41" :  "(117,(125,137), dim)",
"42" :  "(117,137, dim)",
"43" :  "(117,(140,141), dim)",
"44" :  "(117,(140,143), dim)",
"45" :  "(118,141, this.dists)",
"46" :  "(118,133, this.dists)",
"47" :  "(120,127, test)",
"48" :  "(124,126, adapter)",
"49" :  "(124,127, adapter)",
"50" :  "(124,(131,131), adapter)",
"51" :  "(124,(131,131), adapter)",
"52" :  "(125,(125,126), d)",
"53" :  "(125,(125,137), d)",
"54" :  "(125,126, d)",
"55" :  "(125,127, d)",
"56" :  "(125,125, d)",
"57" :  "(127,(130,131), dist)",
"58" :  "(127,(130,133), dist)",
"59" :  "(127,133, dist)",
"60" :  "(127,131, dist)",
"61" :  "(131,133, dist)",
"62" :  "(125,(125,126), d)",
"63" :  "(125,(125,137), d)",
"64" :  "(125,126, d)",
"65" :  "(125,127, d)",
"66" :  "(125,125, d)",
"67" :  "(137,143, buf)",
"68" :  "(137,141, buf)",
"69" :  "(138,(138,139), i)",
"70" :  "(138,(138,103), i)",
"71" :  "(138,139, i)",
"72" :  "(138,143, i)",
"73" :  "(138,138, i)",
"74" :  "(139,141, obj)",
"75" :  "(140,(140,141), d)",
"76" :  "(140,(140,143), d)",
"77" :  "(140,141, d)",
"78" :  "(140,140, d)",
"79" :  "(140,(140,141), d)",
"80" :  "(140,(140,143), d)",
"81" :  "(140,141, d)",
"82" :  "(140,140, d)",
"83" :  "(138,(138,139), i)",
"84" :  "(138,(138,103), i)",
"85" :  "(138,139, i)",
"86" :  "(138,143, i)",
"87" :  "(138,138, i)",
"88" :  "(103,(103,104), r)",
"89" :  "(103,(103,146), r)",
"90" :  "(103,104, r)",
"91" :  "(103,105, r)",
"92" :  "(103,103, r)"},{ "Name" : "findBestFit" ,
"Duas" : 73,
"0" :  "(159,(159,160), this)",
"1" :  "(159,(159,162), this)",
"2" :  "(159,164, this)",
"3" :  "(159,160, this)",
"4" :  "(159,166, col)",
"5" :  "(159,168, col)",
"6" :  "(159,160, col)",
"7" :  "(159,166, adapter)",
"8" :  "(159,160, adapter)",
"9" :  "(159,196, d)",
"10" :  "(159,181, d)",
"11" :  "(159,168, d)",
"12" :  "(159,(167,168), test)",
"13" :  "(159,(167,178), test)",
"14" :  "(159,178, test)",
"15" :  "(159,179, test)",
"16" :  "(159,168, test)",
"17" :  "(159,(169,170), test)",
"18" :  "(159,(169,173), test)",
"19" :  "(159,(173,174), test)",
"20" :  "(159,(173,167), test)",
"21" :  "(159,(159,160), this.estimators)",
"22" :  "(159,(159,162), this.estimators)",
"23" :  "(159,164, this.estimators)",
"24" :  "(159,160, this.estimators)",
"25" :  "(159,(195,196), LOG)",
"26" :  "(159,(195,198), LOG)",
"27" :  "(159,196, LOG)",
"28" :  "(159,(180,181), LOG)",
"29" :  "(159,(180,183), LOG)",
"30" :  "(159,181, LOG)",
"31" :  "(159,174, LOG)",
"32" :  "(159,170, LOG)",
"33" :  "(162,198, best)",
"34" :  "(162,196, best)",
"35" :  "(162,(183,183), best)",
"36" :  "(162,(183,184), best)",
"37" :  "(163,(183,184), bestq)",
"38" :  "(163,(183,193), bestq)",
"39" :  "(164,181, est)",
"40" :  "(164,174, est)",
"41" :  "(164,170, est)",
"42" :  "(166,184, dist)",
"43" :  "(166,181, dist)",
"44" :  "(166,168, dist)",
"45" :  "(166,174, dist)",
"46" :  "(166,170, dist)",
"47" :  "(167,(167,168), i)",
"48" :  "(167,(167,178), i)",
"49" :  "(167,168, i)",
"50" :  "(167,(169,170), i)",
"51" :  "(167,(169,173), i)",
"52" :  "(167,(173,174), i)",
"53" :  "(167,(173,167), i)",
"54" :  "(167,167, i)",
"55" :  "(167,(167,168), i)",
"56" :  "(167,(167,178), i)",
"57" :  "(167,168, i)",
"58" :  "(167,(169,170), i)",
"59" :  "(167,(169,173), i)",
"60" :  "(167,(173,174), i)",
"61" :  "(167,(173,167), i)",
"62" :  "(167,167, i)",
"63" :  "(179,185, q)",
"64" :  "(179,(183,184), q)",
"65" :  "(179,(183,193), q)",
"66" :  "(179,181, q)",
"67" :  "(184,198, best)",
"68" :  "(184,196, best)",
"69" :  "(184,(183,183), best)",
"70" :  "(184,(183,184), best)",
"71" :  "(185,(183,184), bestq)",
"72" :  "(185,(183,193), bestq)"},{ "Name" : "constantZero" ,
"Duas" : 16,
"0" :  "(209,(210,211), column)",
"1" :  "(209,(210,209), column)",
"2" :  "(209,(210,211), adapter)",
"3" :  "(209,(210,209), adapter)",
"4" :  "(209,(209,210), i)",
"5" :  "(209,(209,214), i)",
"6" :  "(209,(210,211), i)",
"7" :  "(209,(210,209), i)",
"8" :  "(209,209, i)",
"9" :  "(209,(209,210), s)",
"10" :  "(209,(209,214), s)",
"11" :  "(209,(209,210), i)",
"12" :  "(209,(209,214), i)",
"13" :  "(209,(210,211), i)",
"14" :  "(209,(210,209), i)",
"15" :  "(209,209, i)"},{ "Name" : "toString" ,
"Duas" : 7,
"0" :  "(219,(225,226), this)",
"1" :  "(219,(225,228), this)",
"2" :  "(219,(225,226), this.estimators)",
"3" :  "(219,(225,228), this.estimators)",
"4" :  "(221,228, result)",
"5" :  "(221,226, result)",
"6" :  "(221,223, result)"}]
}