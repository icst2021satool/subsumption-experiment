{
"Class" : "elki.outlier.lof.KDEOS", 
"Methods" : [{ "Name" : "getInputTypeRestriction" ,
"Duas" : 7,
"0" :  "(173,(174,174), this)",
"1" :  "(173,(174,174), this)",
"2" :  "(173,(174,174), this.idim)",
"3" :  "(173,(174,174), this.idim)",
"4" :  "(173,174, NUMBER_VECTOR_FIELD)",
"5" :  "(173,174, res)",
"6" :  "(173,174, res)"},{ "Name" : "estimateDensities" ,
"Duas" : 85,
"0" :  "(211,(219,219), this)",
"1" :  "(211,(219,219), this)",
"2" :  "(211,219, this)",
"3" :  "(211,221, this)",
"4" :  "(211,(224,224), this)",
"5" :  "(211,(224,246), this)",
"6" :  "(211,(226,227), this)",
"7" :  "(211,(226,229), this)",
"8" :  "(211,229, this)",
"9" :  "(211,234, this)",
"10" :  "(211,221, knnq)",
"11" :  "(211,220, ids)",
"12" :  "(211,218, ids)",
"13" :  "(211,239, densities)",
"14" :  "(211,215, densities)",
"15" :  "(211,221, this.kmax)",
"16" :  "(211,(224,224), this.kmax)",
"17" :  "(211,(224,246), this.kmax)",
"18" :  "(211,(226,227), this.kmin)",
"19" :  "(211,(226,229), this.kmin)",
"20" :  "(211,(218,218), LOG)",
"21" :  "(211,(218,218), LOG)",
"22" :  "(211,248, LOG)",
"23" :  "(211,246, LOG)",
"24" :  "(211,218, LOG)",
"25" :  "(211,(219,219), this.minBandwidth)",
"26" :  "(211,(219,219), this.minBandwidth)",
"27" :  "(211,219, this.minBandwidth)",
"28" :  "(211,219, this.scale)",
"29" :  "(211,229, this.scale)",
"30" :  "(211,234, this.kernel)",
"31" :  "(211,230, dim)",
"32" :  "(212,215, knum)",
"33" :  "(214,(214,215), iter)",
"34" :  "(214,(214,218), iter)",
"35" :  "(214,215, iter)",
"36" :  "(214,214, iter)",
"37" :  "(218,248, prog)",
"38" :  "(218,246, prog)",
"39" :  "(219,229, iminbw)",
"40" :  "(220,(220,221), iter)",
"41" :  "(220,(220,248), iter)",
"42" :  "(220,221, iter)",
"43" :  "(220,220, iter)",
"44" :  "(221,231, neighbors)",
"45" :  "(222,(224,224), k)",
"46" :  "(222,(224,246), k)",
"47" :  "(222,(226,227), k)",
"48" :  "(222,(226,229), k)",
"49" :  "(222,229, k)",
"50" :  "(222,224, k)",
"51" :  "(222,244, idx)",
"52" :  "(222,239, idx)",
"53" :  "(223,225, sum)",
"54" :  "(224,(224,225), kneighbor)",
"55" :  "(224,(224,246), kneighbor)",
"56" :  "(224,225, kneighbor)",
"57" :  "(224,224, kneighbor)",
"58" :  "(225,229, sum)",
"59" :  "(225,225, sum)",
"60" :  "(229,234, ibw)",
"61" :  "(230,(233,234), sca)",
"62" :  "(230,(233,237), sca)",
"63" :  "(230,234, sca)",
"64" :  "(231,(231,233), neighbor)",
"65" :  "(231,(231,244), neighbor)",
"66" :  "(231,(237,237), neighbor)",
"67" :  "(231,(237,237), neighbor)",
"68" :  "(231,239, neighbor)",
"69" :  "(231,231, neighbor)",
"70" :  "(231,234, neighbor)",
"71" :  "(234,239, dens)",
"72" :  "(234,(240,241), dens)",
"73" :  "(234,(240,231), dens)",
"74" :  "(237,239, dens)",
"75" :  "(237,(240,241), dens)",
"76" :  "(237,(240,231), dens)",
"77" :  "(244,244, idx)",
"78" :  "(244,239, idx)",
"79" :  "(224,(224,224), k)",
"80" :  "(224,(224,246), k)",
"81" :  "(224,(226,227), k)",
"82" :  "(224,(226,229), k)",
"83" :  "(224,229, k)",
"84" :  "(224,224, k)"},{ "Name" : "dimensionality" ,
"Duas" : 10,
"0" :  "(260,(260,261), this)",
"1" :  "(260,(260,265), this)",
"2" :  "(260,261, this)",
"3" :  "(260,265, rel)",
"4" :  "(260,(260,261), this.idim)",
"5" :  "(260,(260,265), this.idim)",
"6" :  "(260,261, this.idim)",
"7" :  "(266,(267,268), dim)",
"8" :  "(266,(267,270), dim)",
"9" :  "(266,270, dim)"},{ "Name" : "computeOutlierScores" ,
"Duas" : 101,
"0" :  "(283,286, this)",
"1" :  "(283,291, this)",
"2" :  "(283,291, knnq)",
"3" :  "(283,289, ids)",
"4" :  "(283,284, ids)",
"5" :  "(283,290, densities)",
"6" :  "(283,299, densities)",
"7" :  "(283,321, kdeos)",
"8" :  "(283,320, minmax)",
"9" :  "(283,286, this.kmax)",
"10" :  "(283,291, this.kmax)",
"11" :  "(283,(284,284), LOG)",
"12" :  "(283,(284,284), LOG)",
"13" :  "(283,324, LOG)",
"14" :  "(283,322, LOG)",
"15" :  "(283,284, LOG)",
"16" :  "(283,(304,304), $assertionsDisabled)",
"17" :  "(283,(304,307), $assertionsDisabled)",
"18" :  "(283,286, knum)",
"19" :  "(283,(308,309), knum)",
"20" :  "(283,(308,318), knum)",
"21" :  "(283,318, knum)",
"22" :  "(283,(300,301), knum)",
"23" :  "(283,(300,298), knum)",
"24" :  "(283,294, knum)",
"25" :  "(284,324, prog)",
"26" :  "(284,322, prog)",
"27" :  "(286,(292,294), scratch)",
"28" :  "(286,(292,297), scratch)",
"29" :  "(286,311, scratch)",
"30" :  "(286,301, scratch)",
"31" :  "(287,309, mv)",
"32" :  "(287,313, mv)",
"33" :  "(287,313, mv)",
"34" :  "(287,311, mv)",
"35" :  "(289,(289,290), iter)",
"36" :  "(289,(289,324), iter)",
"37" :  "(289,290, iter)",
"38" :  "(289,291, iter)",
"39" :  "(289,321, iter)",
"40" :  "(289,289, iter)",
"41" :  "(290,315, dens)",
"42" :  "(291,(292,294), neighbors)",
"43" :  "(291,(292,297), neighbors)",
"44" :  "(291,298, neighbors)",
"45" :  "(291,(310,311), neighbors)",
"46" :  "(291,(310,313), neighbors)",
"47" :  "(291,(304,304), neighbors)",
"48" :  "(291,(304,307), neighbors)",
"49" :  "(291,294, neighbors)",
"50" :  "(294,(292,294), scratch)",
"51" :  "(294,(292,297), scratch)",
"52" :  "(294,311, scratch)",
"53" :  "(294,301, scratch)",
"54" :  "(297,(304,304), i)",
"55" :  "(297,(304,307), i)",
"56" :  "(297,298, i)",
"57" :  "(297,301, i)",
"58" :  "(298,(298,299), neighbor)",
"59" :  "(298,(298,304), neighbor)",
"60" :  "(298,299, neighbor)",
"61" :  "(298,298, neighbor)",
"62" :  "(299,301, ndens)",
"63" :  "(300,(300,301), k)",
"64" :  "(300,(300,298), k)",
"65" :  "(300,301, k)",
"66" :  "(300,300, k)",
"67" :  "(300,(300,301), k)",
"68" :  "(300,(300,298), k)",
"69" :  "(300,301, k)",
"70" :  "(300,300, k)",
"71" :  "(298,(304,304), i)",
"72" :  "(298,(304,307), i)",
"73" :  "(298,298, i)",
"74" :  "(298,301, i)",
"75" :  "(307,318, score)",
"76" :  "(307,315, score)",
"77" :  "(308,(308,309), i)",
"78" :  "(308,(308,318), i)",
"79" :  "(308,308, i)",
"80" :  "(308,315, i)",
"81" :  "(308,311, i)",
"82" :  "(310,(310,311), j)",
"83" :  "(310,(310,313), j)",
"84" :  "(310,311, j)",
"85" :  "(310,310, j)",
"86" :  "(310,(310,311), j)",
"87" :  "(310,(310,313), j)",
"88" :  "(310,311, j)",
"89" :  "(310,310, j)",
"90" :  "(313,315, mean)",
"91" :  "(313,(314,315), stddev)",
"92" :  "(313,(314,308), stddev)",
"93" :  "(313,315, stddev)",
"94" :  "(315,318, score)",
"95" :  "(315,315, score)",
"96" :  "(308,(308,309), i)",
"97" :  "(308,(308,318), i)",
"98" :  "(308,308, i)",
"99" :  "(308,315, i)",
"100" :  "(308,311, i)"}]
}