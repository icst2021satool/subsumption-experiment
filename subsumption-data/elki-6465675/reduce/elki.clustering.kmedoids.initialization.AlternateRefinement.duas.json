{
"Class" : "elki.clustering.kmedoids.initialization.AlternateRefinement", 
"Methods" : [{ "Name" : "chooseInitialMedoids" ,
"Duas" : 71,
"0" :  "(103,(115,115), this)",
"1" :  "(103,(115,116), this)",
"2" :  "(103,135, this)",
"3" :  "(103,(122,123), this)",
"4" :  "(103,(122,125), this)",
"5" :  "(103,128, this)",
"6" :  "(103,129, this)",
"7" :  "(103,(115,116), this)",
"8" :  "(103,(115,135), this)",
"9" :  "(103,111, this)",
"10" :  "(103,126, ids)",
"11" :  "(103,120, ids)",
"12" :  "(103,126, distQ)",
"13" :  "(103,120, distQ)",
"14" :  "(103,(110,111), LOG)",
"15" :  "(103,(110,114), LOG)",
"16" :  "(103,135, LOG)",
"17" :  "(103,(127,128), LOG)",
"18" :  "(103,(127,131), LOG)",
"19" :  "(103,128, LOG)",
"20" :  "(103,129, LOG)",
"21" :  "(103,111, LOG)",
"22" :  "(103,(115,115), this.maxiter)",
"23" :  "(103,(115,116), this.maxiter)",
"24" :  "(103,(122,123), this.maxiter)",
"25" :  "(103,(122,125), this.maxiter)",
"26" :  "(103,(115,116), this.maxiter)",
"27" :  "(103,(115,135), this.maxiter)",
"28" :  "(103,136, medoids)",
"29" :  "(104,126, miter)",
"30" :  "(104,120, miter)",
"31" :  "(105,(119,120), k)",
"32" :  "(105,(119,122), k)",
"33" :  "(106,126, assignment)",
"34" :  "(106,120, assignment)",
"35" :  "(108,125, cost)",
"36" :  "(108,126, cost)",
"37" :  "(108,120, cost)",
"38" :  "(109,135, tc)",
"39" :  "(109,111, tc)",
"40" :  "(114,(115,115), iteration)",
"41" :  "(114,(115,116), iteration)",
"42" :  "(114,116, iteration)",
"43" :  "(116,(122,123), iteration)",
"44" :  "(116,(122,125), iteration)",
"45" :  "(116,(115,115), iteration)",
"46" :  "(116,(115,116), iteration)",
"47" :  "(116,116, iteration)",
"48" :  "(116,128, iteration)",
"49" :  "(116,129, iteration)",
"50" :  "(117,(122,122), changed)",
"51" :  "(117,(122,135), changed)",
"52" :  "(117,120, changed)",
"53" :  "(119,(119,120), i)",
"54" :  "(119,(119,122), i)",
"55" :  "(119,120, i)",
"56" :  "(119,119, i)",
"57" :  "(120,(122,122), changed)",
"58" :  "(120,(122,135), changed)",
"59" :  "(120,120, changed)",
"60" :  "(119,(119,120), i)",
"61" :  "(119,(119,122), i)",
"62" :  "(119,120, i)",
"63" :  "(119,119, i)",
"64" :  "(125,(131,132), nc)",
"65" :  "(125,(131,134), nc)",
"66" :  "(125,128, nc)",
"67" :  "(126,(131,132), tc)",
"68" :  "(126,(131,134), tc)",
"69" :  "(126,135, tc)",
"70" :  "(126,129, tc)"},{ "Name" : "findMedoid" ,
"Duas" : 58,
"0" :  "(151,158, ids)",
"1" :  "(151,162, distQ)",
"2" :  "(151,(154,155), assignment)",
"3" :  "(151,(154,157), assignment)",
"4" :  "(151,(159,160), assignment)",
"5" :  "(151,(159,162), assignment)",
"6" :  "(151,170, j)",
"7" :  "(151,(154,155), j)",
"8" :  "(151,(154,157), j)",
"9" :  "(151,(159,160), j)",
"10" :  "(151,(159,162), j)",
"11" :  "(151,(154,154), miter)",
"12" :  "(151,(154,153), miter)",
"13" :  "(151,165, miter)",
"14" :  "(151,170, cost)",
"15" :  "(151,171, changed)",
"16" :  "(152,170, bestm)",
"17" :  "(152,(164,165), bestm)",
"18" :  "(152,(164,153), bestm)",
"19" :  "(152,(158,159), bestm)",
"20" :  "(152,(158,164), bestm)",
"21" :  "(153,(153,154), iter)",
"22" :  "(153,(153,170), iter)",
"23" :  "(153,(154,154), iter)",
"24" :  "(153,(154,153), iter)",
"25" :  "(153,153, iter)",
"26" :  "(153,(154,155), iter)",
"27" :  "(153,(154,157), iter)",
"28" :  "(153,165, iter)",
"29" :  "(153,(159,159), iter)",
"30" :  "(153,(159,158), iter)",
"31" :  "(153,162, iter)",
"32" :  "(157,(164,165), sum)",
"33" :  "(157,(164,153), sum)",
"34" :  "(157,166, sum)",
"35" :  "(157,(158,159), sum)",
"36" :  "(157,(158,164), sum)",
"37" :  "(157,162, sum)",
"38" :  "(158,(158,158), iter2)",
"39" :  "(158,(158,164), iter2)",
"40" :  "(158,(159,159), iter2)",
"41" :  "(158,(159,158), iter2)",
"42" :  "(158,158, iter2)",
"43" :  "(158,(159,160), iter2)",
"44" :  "(158,(159,162), iter2)",
"45" :  "(158,162, iter2)",
"46" :  "(162,(164,165), sum)",
"47" :  "(162,(164,153), sum)",
"48" :  "(162,166, sum)",
"49" :  "(162,(158,159), sum)",
"50" :  "(162,(158,164), sum)",
"51" :  "(162,162, sum)",
"52" :  "(166,170, bestm)",
"53" :  "(166,(164,165), bestm)",
"54" :  "(166,(164,153), bestm)",
"55" :  "(166,(158,159), bestm)",
"56" :  "(166,(158,164), bestm)",
"57" :  "(167,171, changed)"},{ "Name" : "assignToNearestCluster" ,
"Duas" : 37,
"0" :  "(185,188, miter)",
"1" :  "(185,189, miter)",
"2" :  "(185,(189,190), miter)",
"3" :  "(185,(189,199), miter)",
"4" :  "(185,(190,191), miter)",
"5" :  "(185,(190,193), miter)",
"6" :  "(185,193, miter)",
"7" :  "(185,189, miter)",
"8" :  "(185,195, miter)",
"9" :  "(185,188, distQ)",
"10" :  "(185,193, distQ)",
"11" :  "(185,187, assignment)",
"12" :  "(185,199, assignment)",
"13" :  "(185,202, cost)",
"14" :  "(185,200, cost)",
"15" :  "(186,(186,187), iditer)",
"16" :  "(186,(186,202), iditer)",
"17" :  "(186,187, iditer)",
"18" :  "(186,188, iditer)",
"19" :  "(186,199, iditer)",
"20" :  "(186,186, iditer)",
"21" :  "(186,193, iditer)",
"22" :  "(187,(190,191), curindx)",
"23" :  "(187,(190,193), curindx)",
"24" :  "(187,199, minindx)",
"25" :  "(187,200, minindx)",
"26" :  "(188,200, mindist)",
"27" :  "(188,(194,195), mindist)",
"28" :  "(188,(194,189), mindist)",
"29" :  "(193,(194,195), dist)",
"30" :  "(193,(194,189), dist)",
"31" :  "(193,196, dist)",
"32" :  "(195,199, minindx)",
"33" :  "(195,200, minindx)",
"34" :  "(196,200, mindist)",
"35" :  "(196,(194,195), mindist)",
"36" :  "(196,(194,189), mindist)"}]
}