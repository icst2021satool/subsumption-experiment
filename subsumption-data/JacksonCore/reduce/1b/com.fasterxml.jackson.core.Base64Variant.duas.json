{
"Class" : "com.fasterxml.jackson.core.Base64Variant", 
"Methods" : [{ "Name" : "<init>" ,
"Duas" : 34,
"0" :  "(110,125, this)",
"1" :  "(110,126, this)",
"2" :  "(110,135, this)",
"3" :  "(110,128, this)",
"4" :  "(110,129, this)",
"5" :  "(110,130, this)",
"6" :  "(110,125, base64Alphabet)",
"7" :  "(110,(134,135), usesPadding)",
"8" :  "(110,(134,137), usesPadding)",
"9" :  "(110,135, paddingChar)",
"10" :  "(55,126, this._asciiToBase64)",
"11" :  "(55,135, this._asciiToBase64)",
"12" :  "(55,130, this._asciiToBase64)",
"13" :  "(61,125, this._base64ToAsciiC)",
"14" :  "(61,128, this._base64ToAsciiC)",
"15" :  "(67,129, this._base64ToAsciiB)",
"16" :  "(119,(120,121), alphaLen)",
"17" :  "(119,(120,125), alphaLen)",
"18" :  "(119,125, alphaLen)",
"19" :  "(119,(127,128), alphaLen)",
"20" :  "(119,(127,134), alphaLen)",
"21" :  "(119,121, alphaLen)",
"22" :  "(127,(127,128), i)",
"23" :  "(127,(127,134), i)",
"24" :  "(127,128, i)",
"25" :  "(127,129, i)",
"26" :  "(127,130, i)",
"27" :  "(127,127, i)",
"28" :  "(127,(127,128), i)",
"29" :  "(127,(127,134), i)",
"30" :  "(127,128, i)",
"31" :  "(127,129, i)",
"32" :  "(127,130, i)",
"33" :  "(127,127, i)"},{ "Name" : "usesPaddingChar" ,
"Duas" : 6,
"0" :  "(192,(192,192), this)",
"1" :  "(192,(192,192), this)",
"2" :  "(192,(192,192), c)",
"3" :  "(192,(192,192), c)",
"4" :  "(192,(192,192), this._paddingChar)",
"5" :  "(192,(192,192), this._paddingChar)"},{ "Name" : "usesPaddingChar" ,
"Duas" : 6,
"0" :  "(193,(193,193), this)",
"1" :  "(193,(193,193), this)",
"2" :  "(193,(193,193), ch)",
"3" :  "(193,(193,193), ch)",
"4" :  "(193,(193,193), this._paddingChar)",
"5" :  "(193,(193,193), this._paddingChar)"},{ "Name" : "decodeBase64Char" ,
"Duas" : 5,
"0" :  "(210,211, this)",
"1" :  "(210,211, this._asciiToBase64)",
"2" :  "(210,(211,211), ch)",
"3" :  "(210,(211,211), ch)",
"4" :  "(210,211, ch)"},{ "Name" : "decodeBase64Char" ,
"Duas" : 5,
"0" :  "(216,216, this)",
"1" :  "(216,(216,216), ch)",
"2" :  "(216,(216,216), ch)",
"3" :  "(216,216, ch)",
"4" :  "(216,216, this._asciiToBase64)"},{ "Name" : "decodeBase64Byte" ,
"Duas" : 5,
"0" :  "(221,222, this)",
"1" :  "(221,222, this._asciiToBase64)",
"2" :  "(221,(222,222), ch)",
"3" :  "(221,(222,222), ch)",
"4" :  "(221,222, ch)"},{ "Name" : "encodeBase64Partial" ,
"Duas" : 27,
"0" :  "(270,(272,273), this)",
"1" :  "(270,(272,277), this)",
"2" :  "(270,278, this)",
"3" :  "(270,273, this)",
"4" :  "(270,275, this)",
"5" :  "(270,278, bits)",
"6" :  "(270,273, bits)",
"7" :  "(270,(277,278), outputBytes)",
"8" :  "(270,(277,281), outputBytes)",
"9" :  "(270,(273,273), outputBytes)",
"10" :  "(270,(273,273), outputBytes)",
"11" :  "(270,278, buffer)",
"12" :  "(270,273, buffer)",
"13" :  "(270,275, buffer)",
"14" :  "(270,278, this._base64ToAsciiC)",
"15" :  "(270,273, this._base64ToAsciiC)",
"16" :  "(270,(272,273), this._usesPadding)",
"17" :  "(270,(272,277), this._usesPadding)",
"18" :  "(270,273, this._paddingChar)",
"19" :  "(270,275, this._paddingChar)",
"20" :  "(271,281, outPtr)",
"21" :  "(271,278, outPtr)",
"22" :  "(271,273, outPtr)",
"23" :  "(273,273, outPtr)",
"24" :  "(273,275, outPtr)",
"25" :  "(275,281, outPtr)",
"26" :  "(278,281, outPtr)"},{ "Name" : "encodeBase64Partial" ,
"Duas" : 18,
"0" :  "(286,(288,289), this)",
"1" :  "(286,(288,293), this)",
"2" :  "(286,294, this)",
"3" :  "(286,289, this)",
"4" :  "(286,291, this)",
"5" :  "(286,294, sb)",
"6" :  "(286,289, sb)",
"7" :  "(286,291, sb)",
"8" :  "(286,294, bits)",
"9" :  "(286,(293,294), outputBytes)",
"10" :  "(286,(293,297), outputBytes)",
"11" :  "(286,(289,289), outputBytes)",
"12" :  "(286,(289,289), outputBytes)",
"13" :  "(286,294, this._base64ToAsciiC)",
"14" :  "(286,(288,289), this._usesPadding)",
"15" :  "(286,(288,293), this._usesPadding)",
"16" :  "(286,289, this._paddingChar)",
"17" :  "(286,291, this._paddingChar)"},{ "Name" : "encodeBase64Partial" ,
"Duas" : 28,
"0" :  "(328,(330,331), this)",
"1" :  "(328,(330,336), this)",
"2" :  "(328,337, this)",
"3" :  "(328,331, this)",
"4" :  "(328,332, this)",
"5" :  "(328,337, bits)",
"6" :  "(328,332, bits)",
"7" :  "(328,(336,337), outputBytes)",
"8" :  "(328,(336,340), outputBytes)",
"9" :  "(328,(332,332), outputBytes)",
"10" :  "(328,(332,332), outputBytes)",
"11" :  "(328,337, buffer)",
"12" :  "(328,332, buffer)",
"13" :  "(328,334, buffer)",
"14" :  "(328,337, this._base64ToAsciiB)",
"15" :  "(328,332, this._base64ToAsciiB)",
"16" :  "(328,(330,331), this._usesPadding)",
"17" :  "(328,(330,336), this._usesPadding)",
"18" :  "(328,331, this._paddingChar)",
"19" :  "(329,340, outPtr)",
"20" :  "(329,337, outPtr)",
"21" :  "(329,332, outPtr)",
"22" :  "(331,332, pb)",
"23" :  "(331,334, pb)",
"24" :  "(332,332, outPtr)",
"25" :  "(332,334, outPtr)",
"26" :  "(334,340, outPtr)",
"27" :  "(337,340, outPtr)"},{ "Name" : "encode" ,
"Duas" : 48,
"0" :  "(372,383, this)",
"1" :  "(372,410, this)",
"2" :  "(372,394, this)",
"3" :  "(372,399, this)",
"4" :  "(372,406, input)",
"5" :  "(372,408, input)",
"6" :  "(372,391, input)",
"7" :  "(372,392, input)",
"8" :  "(372,393, input)",
"9" :  "(372,(379,380), addQuotes)",
"10" :  "(372,(379,383), addQuotes)",
"11" :  "(372,(413,414), addQuotes)",
"12" :  "(372,(413,416), addQuotes)",
"13" :  "(372,387, inputEnd)",
"14" :  "(372,404, inputEnd)",
"15" :  "(377,416, sb)",
"16" :  "(377,414, sb)",
"17" :  "(377,410, sb)",
"18" :  "(377,394, sb)",
"19" :  "(377,397, sb)",
"20" :  "(377,398, sb)",
"21" :  "(377,380, sb)",
"22" :  "(383,395, chunksBeforeLF)",
"23" :  "(386,(389,391), inputPtr)",
"24" :  "(386,(389,404), inputPtr)",
"25" :  "(386,404, inputPtr)",
"26" :  "(386,406, inputPtr)",
"27" :  "(386,391, inputPtr)",
"28" :  "(387,(389,391), safeInputEnd)",
"29" :  "(387,(389,404), safeInputEnd)",
"30" :  "(393,(389,391), inputPtr)",
"31" :  "(393,(389,404), inputPtr)",
"32" :  "(393,404, inputPtr)",
"33" :  "(393,406, inputPtr)",
"34" :  "(393,391, inputPtr)",
"35" :  "(395,(395,397), chunksBeforeLF)",
"36" :  "(395,(395,401), chunksBeforeLF)",
"37" :  "(395,395, chunksBeforeLF)",
"38" :  "(399,395, chunksBeforeLF)",
"39" :  "(404,(405,406), inputLeft)",
"40" :  "(404,(405,413), inputLeft)",
"41" :  "(404,(407,408), inputLeft)",
"42" :  "(404,(407,410), inputLeft)",
"43" :  "(404,410, inputLeft)",
"44" :  "(406,408, inputPtr)",
"45" :  "(406,410, b24)",
"46" :  "(406,408, b24)",
"47" :  "(408,410, b24)"},{ "Name" : "decode" ,
"Duas" : 98,
"0" :  "(452,465, this)",
"1" :  "(452,475, this)",
"2" :  "(452,491, this)",
"3" :  "(452,524, this)",
"4" :  "(452,527, this)",
"5" :  "(452,(516,517), this)",
"6" :  "(452,(516,521), this)",
"7" :  "(452,521, this)",
"8" :  "(452,(503,504), this)",
"9" :  "(452,(503,507), this)",
"10" :  "(452,504, this)",
"11" :  "(452,500, this)",
"12" :  "(452,496, this)",
"13" :  "(452,(483,484), this)",
"14" :  "(452,(483,488), this)",
"15" :  "(452,488, this)",
"16" :  "(452,477, this)",
"17" :  "(452,472, this)",
"18" :  "(452,467, this)",
"19" :  "(452,460, str)",
"20" :  "(452,474, str)",
"21" :  "(452,490, str)",
"22" :  "(452,523, str)",
"23" :  "(452,502, str)",
"24" :  "(452,534, builder)",
"25" :  "(452,530, builder)",
"26" :  "(452,518, builder)",
"27" :  "(452,508, builder)",
"28" :  "(452,485, builder)",
"29" :  "(452,(456,460), ptr)",
"30" :  "(452,(456,537), ptr)",
"31" :  "(452,460, ptr)",
"32" :  "(453,(456,460), len)",
"33" :  "(453,(456,537), len)",
"34" :  "(453,(461,462), len)",
"35" :  "(453,(461,464), len)",
"36" :  "(453,(471,472), len)",
"37" :  "(453,(471,474), len)",
"38" :  "(453,(481,483), len)",
"39" :  "(453,(481,490), len)",
"40" :  "(453,(514,516), len)",
"41" :  "(453,(514,523), len)",
"42" :  "(453,(499,500), len)",
"43" :  "(453,(499,502), len)",
"44" :  "(460,(461,462), ptr)",
"45" :  "(460,(461,464), ptr)",
"46" :  "(460,460, ptr)",
"47" :  "(460,(471,472), ptr)",
"48" :  "(460,(471,474), ptr)",
"49" :  "(460,474, ptr)",
"50" :  "(460,(464,465), ch)",
"51" :  "(460,(464,460), ch)",
"52" :  "(460,465, ch)",
"53" :  "(460,467, ch)",
"54" :  "(465,(466,467), bits)",
"55" :  "(465,(466,469), bits)",
"56" :  "(465,469, bits)",
"57" :  "(469,479, decodedData)",
"58" :  "(474,(481,483), ptr)",
"59" :  "(474,(481,490), ptr)",
"60" :  "(474,490, ptr)",
"61" :  "(474,477, ch)",
"62" :  "(475,(476,477), bits)",
"63" :  "(475,(476,479), bits)",
"64" :  "(475,479, bits)",
"65" :  "(479,512, decodedData)",
"66" :  "(479,507, decodedData)",
"67" :  "(479,484, decodedData)",
"68" :  "(490,(514,516), ptr)",
"69" :  "(490,(514,523), ptr)",
"70" :  "(490,523, ptr)",
"71" :  "(490,(499,500), ptr)",
"72" :  "(490,(499,502), ptr)",
"73" :  "(490,502, ptr)",
"74" :  "(490,496, ch)",
"75" :  "(491,(494,495), bits)",
"76" :  "(491,(494,512), bits)",
"77" :  "(491,512, bits)",
"78" :  "(491,(495,496), bits)",
"79" :  "(491,(495,499), bits)",
"80" :  "(502,(456,460), ptr)",
"81" :  "(502,(456,537), ptr)",
"82" :  "(502,460, ptr)",
"83" :  "(502,(503,504), ch)",
"84" :  "(502,(503,507), ch)",
"85" :  "(502,504, ch)",
"86" :  "(512,533, decodedData)",
"87" :  "(512,529, decodedData)",
"88" :  "(512,517, decodedData)",
"89" :  "(523,(456,460), ptr)",
"90" :  "(523,(456,537), ptr)",
"91" :  "(523,460, ptr)",
"92" :  "(523,527, ch)",
"93" :  "(524,(525,526), bits)",
"94" :  "(524,(525,533), bits)",
"95" :  "(524,533, bits)",
"96" :  "(524,(526,527), bits)",
"97" :  "(524,(526,529), bits)"},{ "Name" : "equals" ,
"Duas" : 4,
"0" :  "(551,(551,551), this)",
"1" :  "(551,(551,551), this)",
"2" :  "(551,(551,551), o)",
"3" :  "(551,(551,551), o)"},{ "Name" : "_reportInvalidBase64" ,
"Duas" : 28,
"0" :  "(573,(575,576), this)",
"1" :  "(573,(575,577), this)",
"2" :  "(573,576, this)",
"3" :  "(573,(573,574), ch)",
"4" :  "(573,(573,575), ch)",
"5" :  "(573,(575,576), ch)",
"6" :  "(573,(575,577), ch)",
"7" :  "(573,(577,577), ch)",
"8" :  "(573,(577,579), ch)",
"9" :  "(573,579, ch)",
"10" :  "(573,(577,579), ch)",
"11" :  "(573,(577,581), ch)",
"12" :  "(573,581, ch)",
"13" :  "(573,574, ch)",
"14" :  "(573,576, bindex)",
"15" :  "(573,574, bindex)",
"16" :  "(573,(583,584), msg)",
"17" :  "(573,(583,586), msg)",
"18" :  "(573,584, msg)",
"19" :  "(574,586, base)",
"20" :  "(574,584, base)",
"21" :  "(576,586, base)",
"22" :  "(576,584, base)",
"23" :  "(579,586, base)",
"24" :  "(579,584, base)",
"25" :  "(581,586, base)",
"26" :  "(581,584, base)",
"27" :  "(584,586, base)"}]
}